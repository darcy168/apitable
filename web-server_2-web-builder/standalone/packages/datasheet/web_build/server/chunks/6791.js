"use strict";
exports.id = 6791;
exports.ids = [6791];
exports.modules = {

/***/ 89859:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutomationRobotRunner = void 0;
const automation_robot_runner_interface_1 = __webpack_require__(5560);
const input_parser_1 = __webpack_require__(34939);
const magic_variable_parser_1 = __webpack_require__(62618);
const sys_functions_1 = __webpack_require__(40381);
const lodash_1 = __webpack_require__(46517);
/**
 * handle workflow execution
 */
class AutomationRobotRunner extends automation_robot_runner_interface_1.IAutomationRobotRunner {
    constructor(reqMethods) {
        super();
        // the reqMethods is used to call api of other service, implement by the host of runner(room-server)
        this.reqMethods = reqMethods;
        this.inputParser = this.initInputParser();
    }
    initInputParser() {
        // functions below are used to parse input of action, you can add any function you want at `./magic_variable/sys_functions`
        // then add it into sysFunctions array. just like standard lib for programming language
        const sysFunctions = [sys_functions_1.length, sys_functions_1.flatten, sys_functions_1.getNodeOutput, sys_functions_1.getObjectProperty, sys_functions_1.concatString, sys_functions_1.concatParagraph, sys_functions_1.newArray, sys_functions_1.newObject, sys_functions_1.JSONStringify];
        const parser = new magic_variable_parser_1.MagicVariableParser(sysFunctions);
        return new input_parser_1.InputParser(parser);
    }
    run(robotTask) {
        return __awaiter(this, void 0, void 0, function* () {
            const robot = yield this.reqMethods.getRobotById(robotTask.robotId);
            const globalContext = this.initRuntimeContext(robotTask, robot);
            const entryActionId = globalContext.robot.entryActionId;
            yield this.executeAction(entryActionId, globalContext);
        });
    }
    validateActionInput(_actionType, _input) {
        // TODO: implement json schema validation
        return true;
    }
    validateActionOutput(_actionType, _output) {
        // TODO: implement json schema validation
        return true;
    }
    initRuntimeContext(robotTask, robot) {
        return {
            robot: robot,
            taskId: robotTask.taskId,
            executedNodeIds: [robot.triggerId],
            currentNodeId: robot.triggerId,
            context: {
                [robot.triggerId]: {
                    typeId: robot.triggerTypeId,
                    input: robotTask.triggerInput,
                    output: robotTask.triggerOutput,
                },
            },
            isDone: false,
            success: true,
        };
    }
    executeAction(actionId, globalContext) {
        return __awaiter(this, void 0, void 0, function* () {
            // console.log('globalContext', globalContext, JSON.stringify(globalContext.context));
            globalContext.currentNodeId = actionId;
            const start = new Date().getTime();
            // get instance of the action by id
            const actionInstance = globalContext.robot.actionsById[actionId];
            // get type of the action
            const actionType = globalContext.robot.actionTypesById[actionInstance.typeId];
            // TODO: validate input
            // if (this.validateActionInput(actionType, actionRuntimeInput)) {}
            let output;
            const errorStacks = [];
            let nextActionId;
            // the input of action may have dynamic value, so we need to parse it
            let actionRuntimeInput;
            try {
                try {
                    actionRuntimeInput = this.getRuntimeActionInput(actionId, globalContext);
                }
                catch (error) {
                    console.log(`actionId:${actionId} actionType:${JSON.stringify((0, lodash_1.omit)(actionType, 'inputJSONSchema', 'outputJSONSchema'))} AutomationRobotRunner:executeAction:getRuntimeActionInput error`, error);
                    throw new Error('action input is invalid');
                }
                if (!this.validateActionInput(actionType, actionRuntimeInput)) {
                    console.log(`actionId:${actionId} actionType:${JSON.stringify((0, lodash_1.omit)(actionType, 'inputJSONSchema', 'outputJSONSchema'))} AutomationRobotRunner:executeAction:validateActionInput failed`);
                    throw new Error('action input is invalid');
                }
                // TODO: push task to queue, to ensure the order of execution
                try {
                    output = yield this.reqMethods.requestActionOutput(actionRuntimeInput, actionType);
                }
                catch (error) {
                    // execute action failed, most likely because of network error
                    console.log(`actionId:${actionId} actionType:${JSON.stringify((0, lodash_1.omit)(actionType, 'inputJSONSchema', 'outputJSONSchema'))} AutomationRobotRunner:executeAction:requestActionOutput error`, error);
                    throw new Error(`action execute failed. error message: ${error.message}`);
                }
                nextActionId = actionInstance.nextActionId;
                if (output && !output.success) {
                    errorStacks.push(...output.data.errors);
                    // when some output of action is failed, we should stop the execution, done but failed
                    globalContext.isDone = true;
                    globalContext.success = false;
                }
            }
            catch (error) {
                errorStacks.push({
                    message: error.message,
                });
                // unexpected error, we should stop the execution, done but failed
                globalContext.isDone = true;
                globalContext.success = false;
            }
            finally {
                const end = new Date().getTime();
                globalContext.executedNodeIds.push(globalContext.currentNodeId);
                globalContext.context[actionId] = {
                    typeId: actionType.id,
                    input: actionRuntimeInput,
                    output: output === null || output === void 0 ? void 0 : output.data,
                    startAt: start,
                    endAt: end,
                    errorStacks,
                };
            }
            if (globalContext.isDone) {
                yield this.reportResult(globalContext.taskId, globalContext);
            }
            else if (nextActionId) {
                yield this.executeAction(nextActionId, globalContext);
            }
            else {
                yield this.reportResult(globalContext.taskId, globalContext);
            }
            // }
        });
    }
    getRuntimeActionInput(actionId, globalContext) {
        return this.inputParser.render(globalContext.robot.actionsById[actionId].input, globalContext);
    }
    reportResult(taskId, globalContext) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.reqMethods.reportResult(taskId, globalContext.success, {
                executedNodeIds: globalContext.executedNodeIds,
                nodeByIds: globalContext.context,
            });
        });
    }
}
exports.AutomationRobotRunner = AutomationRobotRunner;


/***/ }),

/***/ 94237:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmptyNullOperand = exports.EmptyArrayOperand = exports.EmptyObjectOperand = void 0;
exports.EmptyObjectOperand = {
    type: 'Expression',
    value: {
        operator: 'newObject',
        operands: []
    }
};
exports.EmptyArrayOperand = {
    type: 'Expression',
    value: {
        operator: 'newArray',
        operands: []
    }
};
exports.EmptyNullOperand = {
    type: 'Literal',
    value: null,
};


/***/ }),

/***/ 97093:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ACTION_INPUT_PARSER_PASS_THROUGH_FUNCTIONS = exports.ACTION_INPUT_PARSER_BASE_FUNCTIONS = exports.TRIGGER_INPUT_PARSER_FUNCTIONS = exports.TRIGGER_INPUT_FILTER_FUNCTIONS = void 0;
__exportStar(__webpack_require__(89859), exports);
__exportStar(__webpack_require__(36736), exports);
__exportStar(__webpack_require__(34939), exports);
__exportStar(__webpack_require__(62618), exports);
__exportStar(__webpack_require__(94237), exports);
__exportStar(__webpack_require__(51082), exports);
__exportStar(__webpack_require__(19641), exports);
var sys_functions_1 = __webpack_require__(40381);
Object.defineProperty(exports, "TRIGGER_INPUT_FILTER_FUNCTIONS", ({ enumerable: true, get: function () { return sys_functions_1.TRIGGER_INPUT_FILTER_FUNCTIONS; } }));
Object.defineProperty(exports, "TRIGGER_INPUT_PARSER_FUNCTIONS", ({ enumerable: true, get: function () { return sys_functions_1.TRIGGER_INPUT_PARSER_FUNCTIONS; } }));
Object.defineProperty(exports, "ACTION_INPUT_PARSER_BASE_FUNCTIONS", ({ enumerable: true, get: function () { return sys_functions_1.ACTION_INPUT_PARSER_BASE_FUNCTIONS; } }));
Object.defineProperty(exports, "ACTION_INPUT_PARSER_PASS_THROUGH_FUNCTIONS", ({ enumerable: true, get: function () { return sys_functions_1.ACTION_INPUT_PARSER_PASS_THROUGH_FUNCTIONS; } }));


/***/ }),

/***/ 34939:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.InputParser = void 0;
class InputParser {
    constructor(expressionParser) {
        // match `${{ xxxx }}`
        this.inputJSONPathRe = /\$\{\{([\w [\].]+)\}\}/g;
        this.expressionParser = expressionParser;
    }
    render(input, context) {
        return this.expressionParser.exec(input.value, context);
        // return Object.keys(input).reduce((acc, key) => {
        //   const value = input[key];
        //   if (typeof value !== 'object' || ![OperandTypeEnums.Literal, OperandTypeEnums.Expression].includes(value?.type)) {
        //     throw Error('Object Value Must Be A IOperand Object!');
        //   }
        //   switch (value.type) {
        //     case OperandTypeEnums.Literal:
        //       acc[key] = value.value;
        //       break;
        //     case OperandTypeEnums.Expression:
        //       acc[key] = this.expressionParser.exec(value.value, context);
        //       break;
        //     default:
        //       throw Error('Object Value Must Be A IOperand Object!');
        //   }
        //   return acc;
        // }, {});
    }
}
exports.InputParser = InputParser;


/***/ }),

/***/ 4609:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 5560:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IAutomationRobotRunner = void 0;
class IAutomationRobotRunner {
}
exports.IAutomationRobotRunner = IAutomationRobotRunner;


/***/ }),

/***/ 13131:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OperandTypeEnums = exports.OperatorEnums = void 0;
// basic support operators
var OperatorEnums;
(function (OperatorEnums) {
    // logic
    OperatorEnums["And"] = "and";
    OperatorEnums["Or"] = "or";
    // compare
    OperatorEnums["Equal"] = "equal";
    OperatorEnums["NotEqual"] = "notEqual";
    OperatorEnums["Includes"] = "includes";
    OperatorEnums["NotIncludes"] = "notIncludes";
    OperatorEnums["IsNull"] = "isNull";
    OperatorEnums["IsNotNull"] = "isNotNull";
    OperatorEnums["LessThan"] = "lessThan";
    OperatorEnums["LessThanOrEqual"] = "lessThanOrEqual";
    OperatorEnums["GreaterThan"] = "greaterThan";
    OperatorEnums["GreaterThanOrEqual"] = "greaterThanOrEqual";
    // built-in functions
    OperatorEnums["GetNodeOutput"] = "getNodeOutput";
    OperatorEnums["GetObjectProperty"] = "getObjectProperty";
    OperatorEnums["GetArrayObjectProperty"] = "getArrayObjectProperty";
    OperatorEnums["JSONStringify"] = "JSONStringify";
    OperatorEnums["Flatten"] = "flatten";
    OperatorEnums["Length"] = "length";
    OperatorEnums["NewObject"] = "newObject";
})(OperatorEnums = exports.OperatorEnums || (exports.OperatorEnums = {}));
// operand type, can be literal or expression
var OperandTypeEnums;
(function (OperandTypeEnums) {
    OperandTypeEnums["Literal"] = "Literal";
    OperandTypeEnums["Expression"] = "Expression";
})(OperandTypeEnums = exports.OperandTypeEnums || (exports.OperandTypeEnums = {}));


/***/ }),

/***/ 36736:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(5560), exports);
__exportStar(__webpack_require__(4609), exports);
__exportStar(__webpack_require__(13131), exports);


/***/ }),

/***/ 43943:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MagicVariableParserABC = void 0;
class MagicVariableParserABC {
}
exports.MagicVariableParserABC = MagicVariableParserABC;


/***/ }),

/***/ 62618:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MagicVariableParser = void 0;
const interface_1 = __webpack_require__(36736);
const magic_variable_interface_1 = __webpack_require__(43943);
class MagicVariableParser extends magic_variable_interface_1.MagicVariableParserABC {
    constructor(sysFunctions, passFunctions = []) {
        super();
        this.sysFunctions = sysFunctions;
        this.passFunctions = passFunctions;
        this.sysFunctionMap = sysFunctions.reduce((map, func) => {
            map[func.name] = func;
            return map;
        }, {});
    }
    // clone and freeze globalContext to avoid mutation
    exec(expression, _globalContext) {
        const globalContext = Object.freeze(JSON.parse(JSON.stringify(_globalContext)));
        return this._exec(expression, globalContext);
    }
    // parse expression and return value
    _exec(expression, globalContext) {
        const operatorFunc = this.sysFunctionMap[expression.operator];
        if (this.passFunctions.length && this.passFunctions.includes(operatorFunc)) {
            return null;
        }
        if (!operatorFunc) {
            throw Error(`${expression.operator} not implemented.`);
        }
        const { operands } = expression;
        const args = operands.map(operand => {
            if (typeof operand === 'string') {
                return operand;
            }
            if (operand.type === interface_1.OperandTypeEnums.Literal) {
                return operand.value;
            }
            return this._exec(operand.value, globalContext);
        });
        // global context always pass as first argument
        return operatorFunc(globalContext, ...args);
    }
}
exports.MagicVariableParser = MagicVariableParser;


/***/ }),

/***/ 52155:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.length = exports.JSONStringify = exports.or = exports.and = exports.newArray = exports.newObject = exports.concatString = exports.concatParagraph = exports.getObjectProperty = exports.flatten = exports.getArrayLength = void 0;
// built-in functions which are not related to runtime context, just pure functions
const getArrayLength = (_context, array) => {
    // if (!array) return 0;
    return array === null || array === void 0 ? void 0 : array.length;
};
exports.getArrayLength = getArrayLength;
/**
 * reduce dimension of array
 * @param context
 * @param array
 * @returns
 */
const flatten = (_context, array) => {
    return array === null || array === void 0 ? void 0 : array.flat();
};
exports.flatten = flatten;
/**
 * get value by json path
 * ({a:{b:1}},['a','b']) => 1
 * if the obj is an array, ([{a:1},{a:2}] ,['a']) => "1,2"
 */
const getObjectProperty = (_context, obj, paths) => {
    const getValue = (obj, paths) => {
        let value = obj;
        for (const path of paths) {
            if (value == null) {
                return null;
            }
            value = value[path];
        }
        return value;
    };
    // [{color: {name:1}},{color: {name:2}}] ,['color'] = > [{name:1},{name:2}]
    if (Array.isArray(obj)) {
        const items = obj.map((item) => getValue(item, paths));
        if (items.every((item) => item == null || ['string', 'number', 'boolean'].includes(typeof item))) {
            return items.join(', ');
        }
        return items;
    }
    return getValue(obj, paths);
};
exports.getObjectProperty = getObjectProperty;
/**
 * concat paragraph with '\n'
 * @param args
 * @returns
 */
const concatParagraph = (...args) => {
    const [, ...paragraphs] = args;
    return paragraphs.join('\n');
};
exports.concatParagraph = concatParagraph;
/**
 * concat string with ''
 */
const concatString = (...args) => {
    const [, ...strings] = args;
    return strings.join('');
};
exports.concatString = concatString;
/**
 * the factory function of object to make a new object
 * [key1,value1,key2,value2,...] => {key1:value1,key2:value2,...}
 */
const newObject = (...args) => {
    const [, ...restArgs] = args;
    // [key1,value1,key2,value2,...] => [[key1,value1],[key2,value2]]
    const keyValuePairs = restArgs.reduce((acc, cur, index) => {
        if (index % 2 === 0) {
            acc.push([cur, restArgs[index + 1]]);
        }
        return acc;
    }, []);
    return Object.fromEntries(keyValuePairs);
};
exports.newObject = newObject;
/**
 * the factory function of array to make a new array
 */
const newArray = (...args) => {
    const [, ...restArgs] = args;
    return new Array(...restArgs);
};
exports.newArray = newArray;
/**
 * logical and
 */
const and = (...args) => {
    const [, ...restArgs] = args;
    // console.log('and', args);
    return restArgs.every(Boolean);
};
exports.and = and;
/**
 * logical or
 */
const or = (...args) => {
    const [, ...restArgs] = args;
    // console.log('or', args);
    return restArgs.some(Boolean);
};
exports.or = or;
/**
 * just json stringify
 * @param args
 * @returns
 */
const JSONStringify = (_context, obj) => {
    // console.log('JSONStringify', obj);
    return JSON.stringify(obj);
};
exports.JSONStringify = JSONStringify;
/**
 * get length of iterable object
 * @param _context
 * @param obj
 */
const length = (_context, obj) => {
    return obj === null || obj === void 0 ? void 0 : obj.length;
};
exports.length = length;


/***/ }),

/***/ 3590:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.notIncludes = exports.includes = exports.isNotNull = exports.isNull = exports.notEqual = exports.equal = exports.lessThanOrEqual = exports.lessThan = exports.greaterThanOrEqual = exports.greaterThan = exports.getNodeOutput = void 0;
const interface_1 = __webpack_require__(36736);
const model_1 = __webpack_require__(61116);
const view_types_1 = __webpack_require__(88471);
/**
 * all functions under this file are context-based which means they will use something from context
 */
function getNodeOutput(_context, nodeId) {
    if (!_context.executedNodeIds.includes(nodeId)) {
        throw Error(`${nodeId} Does Not Executed!`);
    }
    return _context.context[nodeId].output;
}
exports.getNodeOutput = getNodeOutput;
const getFieldValue = (context, fieldId) => {
    return context.fields[fieldId];
};
/**
 *  we already implement the interface of FOperator which can compare 2 cellValues, so we can use it directly.
 */
const IMagicOperatorMap = {
    [interface_1.OperatorEnums.Equal]: view_types_1.FOperator.Is,
    [interface_1.OperatorEnums.NotEqual]: view_types_1.FOperator.IsNot,
    [interface_1.OperatorEnums.GreaterThan]: view_types_1.FOperator.IsGreater,
    [interface_1.OperatorEnums.GreaterThanOrEqual]: view_types_1.FOperator.IsGreaterEqual,
    [interface_1.OperatorEnums.LessThan]: view_types_1.FOperator.IsLess,
    [interface_1.OperatorEnums.LessThanOrEqual]: view_types_1.FOperator.IsLessEqual,
    [interface_1.OperatorEnums.IsNull]: view_types_1.FOperator.IsEmpty,
    [interface_1.OperatorEnums.IsNotNull]: view_types_1.FOperator.IsNotEmpty,
    [interface_1.OperatorEnums.Includes]: view_types_1.FOperator.Contains,
    [interface_1.OperatorEnums.NotIncludes]: view_types_1.FOperator.DoesNotContain,
};
const makeFunction = (operator, funcName) => {
    const func = (...args) => {
        var _a;
        const [ctx, fieldId, b] = args;
        const fieldMap = (_a = ctx.state.datasheetMap[ctx.datasheetId].datasheet) === null || _a === void 0 ? void 0 : _a.snapshot.meta.fieldMap;
        const field = fieldMap[fieldId];
        // if the field is deleted, the filter should be invalid. return false
        if (!field)
            return false;
        return model_1.Field.bindContext(field, ctx.state).isMeetFilter(IMagicOperatorMap[operator], getFieldValue(ctx, fieldId), b);
    };
    Object.defineProperty(func, 'name', { writable: false, value: funcName });
    return func;
};
exports.greaterThan = makeFunction(interface_1.OperatorEnums.GreaterThan, 'greaterThan');
exports.greaterThanOrEqual = makeFunction(interface_1.OperatorEnums.GreaterThanOrEqual, 'greaterThanOrEqual');
exports.lessThan = makeFunction(interface_1.OperatorEnums.LessThan, 'lessThan');
exports.lessThanOrEqual = makeFunction(interface_1.OperatorEnums.LessThanOrEqual, 'lessThanOrEqual');
exports.equal = makeFunction(interface_1.OperatorEnums.Equal, 'equal');
exports.notEqual = makeFunction(interface_1.OperatorEnums.NotEqual, 'notEqual');
exports.isNull = makeFunction(interface_1.OperatorEnums.IsNull, 'isNull');
exports.isNotNull = makeFunction(interface_1.OperatorEnums.IsNotNull, 'isNotNull');
exports.includes = makeFunction(interface_1.OperatorEnums.Includes, 'includes');
exports.notIncludes = makeFunction(interface_1.OperatorEnums.NotIncludes, 'notIncludes');


/***/ }),

/***/ 40381:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ACTION_INPUT_PARSER_PASS_THROUGH_FUNCTIONS = exports.ACTION_INPUT_PARSER_BASE_FUNCTIONS = exports.TRIGGER_INPUT_PARSER_FUNCTIONS = exports.TRIGGER_INPUT_FILTER_FUNCTIONS = void 0;
const base_1 = __webpack_require__(52155);
const context_base_1 = __webpack_require__(3590);
__exportStar(__webpack_require__(52155), exports);
__exportStar(__webpack_require__(3590), exports);
exports.TRIGGER_INPUT_FILTER_FUNCTIONS = [
    context_base_1.greaterThan,
    context_base_1.greaterThanOrEqual,
    context_base_1.lessThan,
    context_base_1.lessThanOrEqual,
    context_base_1.equal,
    context_base_1.notEqual,
    context_base_1.isNull,
    context_base_1.isNotNull,
    context_base_1.includes,
    context_base_1.notIncludes,
    base_1.and,
    base_1.or,
];
const makeFunction = (func, funcName) => {
    Object.defineProperty(func, 'name', { writable: false, value: funcName });
    return func;
};
// we must redefine the name of function, otherwise the name will be random after building
// this will be fine in local development, but will cause some strange bugs in production
exports.TRIGGER_INPUT_PARSER_FUNCTIONS = [
    makeFunction(base_1.newObject, 'newObject'),
    makeFunction(base_1.newArray, 'newArray'),
];
// This is for front-end validation
exports.ACTION_INPUT_PARSER_BASE_FUNCTIONS = [
    makeFunction(base_1.and, 'and'),
    makeFunction(base_1.or, 'or'),
    makeFunction(base_1.concatString, 'concatString'),
    makeFunction(base_1.concatParagraph, 'concatParagraph'),
    makeFunction(base_1.newObject, 'newObject'),
    makeFunction(base_1.newArray, 'newArray'),
    makeFunction(base_1.getObjectProperty, 'getObjectProperty'),
    makeFunction(context_base_1.getNodeOutput, 'getNodeOutput'),
];
// It is also used for the front end, without parsing dynamic parameters without knowing the context
exports.ACTION_INPUT_PARSER_PASS_THROUGH_FUNCTIONS = [
    makeFunction(context_base_1.getNodeOutput, 'getNodeOutput')
];


/***/ }),

/***/ 51082:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLiteralOperandValue = exports.mergeOperand = exports.data2Operand = exports.removeArrayOperandItemByIndex = exports.objectCombOperand = exports.isOperandNullValue = exports.getOperandValueType = exports.getObjectOperandProperty = exports.isObjectOperand = exports.isArrayOperand = exports.isLiteralOperand = exports.isOperand = void 0;
/**
 * utils for operand
 */
const immer_1 = __importDefault(__webpack_require__(7133));
const lodash_1 = __webpack_require__(46517);
const const_1 = __webpack_require__(94237);
// is input value an operand
const isOperand = (value) => {
    if (value == null)
        return false;
    return typeof value === 'object' && value.type === 'Literal' || value.type === 'Expression';
};
exports.isOperand = isOperand;
// is input value an expression
const isLiteralOperand = (value) => {
    return (0, exports.isOperand)(value) && value.type === 'Literal';
};
exports.isLiteralOperand = isLiteralOperand;
// is input value an array operand
const isArrayOperand = (operand) => {
    return (0, exports.isOperand)(operand) && !(0, exports.isLiteralOperand)(operand) && operand.value.operator === 'newArray';
};
exports.isArrayOperand = isArrayOperand;
// is input value an object operand
const isObjectOperand = (operand) => {
    return (0, exports.isOperand)(operand) && !(0, exports.isLiteralOperand)(operand) && operand.value.operator === 'newObject';
};
exports.isObjectOperand = isObjectOperand;
/**
 * get value of operand-object by key
 * @param objectOperand
 * @param key
 * @param propertySchema
 */
const getObjectOperandProperty = (objectOperand, key, propertySchema) => {
    if ((0, exports.isObjectOperand)(objectOperand)) {
        const keyIndex = objectOperand.value.operands.findIndex((operand, index) => {
            return index % 2 === 0 && typeof operand === 'string' ? key === operand : (0, lodash_1.isEqual)(operand, key);
        });
        if (keyIndex > -1) {
            return objectOperand.value.operands[keyIndex + 1];
        }
        return JSON.parse(JSON.stringify(const_1.EmptyNullOperand));
    }
    // when formData is empty, return default null value
    if (objectOperand == null || Object.keys(objectOperand).length === 0) {
        return JSON.parse(JSON.stringify(const_1.EmptyNullOperand));
    }
    switch (propertySchema.type) {
        case 'object':
            return JSON.parse(JSON.stringify(const_1.EmptyObjectOperand));
        case 'array':
            return JSON.parse(JSON.stringify(const_1.EmptyArrayOperand));
        default:
            return JSON.parse(JSON.stringify(const_1.EmptyNullOperand));
    }
};
exports.getObjectOperandProperty = getObjectOperandProperty;
const getExpressionOperatorReturnType = (operator) => {
    const OperatorReturnTypeMap = {
        newArray: 'array',
        newObject: 'object',
        concatString: 'string',
        getArrayLength: 'number',
        concatParagraph: 'string',
        and: 'boolean',
        or: 'boolean',
        JSONStringify: 'string',
        length: 'number',
    };
    return OperatorReturnTypeMap[operator] || 'null';
};
// get return type of operand
const getOperandValueType = (operand) => {
    if (!(0, exports.isOperand)(operand)) {
        throw Error('must be operand');
    }
    if (operand.type === 'Literal') {
        return typeof operand.value;
    }
    if (operand.type === 'Expression') {
        return getExpressionOperatorReturnType(operand.value.operator);
    }
    throw Error('must be operand');
};
exports.getOperandValueType = getOperandValueType;
const isOperandNullValue = (operand, schema) => {
    // if null 
    if (operand.type === 'Literal' && operand.value === null) {
        return true;
    }
    switch (schema.type) {
        case 'object':
            return (0, lodash_1.isEqual)(operand, const_1.EmptyObjectOperand);
        case 'array':
            return (0, lodash_1.isEqual)(operand, const_1.EmptyArrayOperand);
        case 'string':
            break;
        case 'boolean':
            break;
        case 'number':
            break;
    }
    return;
};
exports.isOperandNullValue = isOperandNullValue;
/**
 * merge to the array of operands into one object operand
 * - ['key1',{k11:v11,k12:v12},'key1',{k11:v12,k22:v22},'key2','value22'] =>
 * {
 *   key1: {
 *      k11: v12, // params[0].key1.k11 is overrided by params[2].key1.k11
 *      k12: v12, // params[0].key1 has 'k12' and params[2].key1 has no 'k12', so keep params[0].key1.k12
 *      k22: v22  // params[2].key1 has 'k22' and params[0].key1 has no 'k22', so keep params[2].key1.k22
 *   }
 *   key2: 'value22'
 * }
 * @param operands
 */
const objectCombOperand = (operands) => {
    const newItems = [];
    for (let idx = 0; idx < operands.length; idx += 2) {
        // idx 0 2 4 6 8 
        const itemKey = operands[idx]; // 0
        const itemValue = operands[idx + 1]; //1
        // even numbers is key & odd numbers is value
        const newItemKeys = newItems.filter((_item, index) => {
            return index % 2 === 0;
        });
        const itemKeyIndex = newItemKeys.findIndex(key => (0, lodash_1.isEqual)(key, itemKey));
        if (itemKeyIndex > -1) {
            const itemValueIndex = itemKeyIndex * 2 + 1;
            const oldItemValue = newItems[itemValueIndex];
            if ((0, exports.isObjectOperand)(oldItemValue) && (0, exports.isObjectOperand)(itemValue)) {
                newItems[itemValueIndex] = (0, exports.mergeOperand)(oldItemValue, itemValue);
            }
            else {
                newItems[itemValueIndex] = itemValue;
            }
        }
        else {
            newItems.push(itemKey);
            newItems.push(itemValue);
        }
    }
    return newItems;
};
exports.objectCombOperand = objectCombOperand;
const removeArrayOperandItemByIndex = (arrayOperand, index) => {
    return (0, immer_1.default)(arrayOperand, (draft) => {
        if ((0, exports.isOperand)(draft)) {
            draft.value.operands.splice(index, 1);
        }
        return draft;
    });
};
exports.removeArrayOperandItemByIndex = removeArrayOperandItemByIndex;
/**
 * transform an object to an operand
 */
const data2Operand = (data) => {
    if (data == null) {
        return JSON.parse(JSON.stringify(const_1.EmptyNullOperand));
    }
    switch (typeof data) {
        case 'object':
            // array
            if (Array.isArray(data)) {
                return {
                    type: 'Expression',
                    value: {
                        operator: 'newArray',
                        operands: data.map(item => (0, exports.data2Operand)(item))
                    }
                };
            }
            return {
                type: 'Expression',
                value: {
                    operator: 'newObject',
                    operands: Object.keys(data).map(key => [key, (0, exports.data2Operand)(data[key])]).flat()
                }
            };
        case 'string':
        case 'number':
        case 'boolean':
            return {
                type: 'Literal',
                value: data
            };
    }
};
exports.data2Operand = data2Operand;
/**
 * merge two operands into one
 * @param operand1
 * @param operand2
 */
const mergeOperand = (operand1, operand2) => {
    if ((0, exports.isObjectOperand)(operand1) && (0, exports.isObjectOperand)(operand2)) {
        return {
            type: 'Expression',
            value: {
                operator: 'newObject',
                operands: (0, exports.objectCombOperand)([...operand1.value.operands, ...operand2.value.operands])
            }
        };
    }
    return operand1;
};
exports.mergeOperand = mergeOperand;
const getLiteralOperandValue = (operand) => {
    if ((0, exports.isLiteralOperand)(operand)) {
        return operand.value;
    }
    throw Error('must be literal operand');
};
exports.getLiteralOperandValue = getLiteralOperandValue;


/***/ }),

/***/ 19641:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.validateMagicForm = void 0;
const utils_1 = __webpack_require__(51082);
const i18n_1 = __webpack_require__(47511);
/**
 * override the validate method of rjsf to support expression.
 */
const validateMagicForm = (rootSchema, formData) => {
    let validationError = null;
    const propertyErrors = [];
    try {
        if (rootSchema.type === 'object') {
            // console.log(Object.keys(rootSchema.properties!));
            if (typeof formData !== 'object') {
                propertyErrors.push({
                    instancePath: '',
                    schemaPath: '#/type',
                    keyword: 'type',
                    params: { type: 'object' },
                    message: 'must be object'
                });
            }
            else {
                Object.keys(rootSchema.properties).forEach(propertyKey => {
                    const propertySchema = rootSchema.properties[propertyKey];
                    const isRequired = rootSchema.required && rootSchema.required.indexOf(propertyKey) !== -1;
                    const propertyValue = (0, utils_1.getObjectOperandProperty)(formData, propertyKey, propertySchema);
                    // console.log('validateFormData', {
                    //   propertyKey, propertySchema, propertyValue, isRequired,
                    //   rootSchema, formData,
                    // });
                    if (isRequired) {
                        if ((0, utils_1.isOperandNullValue)(propertyValue, propertySchema)) {
                            propertyErrors.push({
                                dataPath: `.${propertyKey}`,
                                keyword: 'required',
                                message: (0, i18n_1.t)(i18n_1.Strings.robot_config_empty_warning),
                                params: { missingProperty: propertyKey },
                                schemaPath: '#/required',
                            });
                        }
                        else {
                            if (propertySchema.enum) {
                                if ((0, utils_1.isLiteralOperand)(propertyValue) && !propertySchema.enum.includes((0, utils_1.getLiteralOperandValue)(propertyValue))) {
                                    propertyErrors.push({
                                        dataPath: `.${propertyKey}`,
                                        keyword: 'enum',
                                        message: (0, i18n_1.t)(i18n_1.Strings.robot_config_empty_warning),
                                        params: { enum: propertySchema.enum },
                                        schemaPath: '#/enum',
                                    });
                                }
                            }
                        }
                    }
                    else {
                        if (propertySchema.enum) {
                            if ((0, utils_1.isLiteralOperand)(propertyValue) && !propertySchema.enum.includes((0, utils_1.getLiteralOperandValue)(propertyValue))) {
                                propertyErrors.push({
                                    dataPath: `.${propertyKey}`,
                                    keyword: 'enum',
                                    message: 'The specified option does not exist',
                                    params: { enum: propertySchema.enum },
                                    schemaPath: '#/enum',
                                });
                            }
                        }
                        if ((0, utils_1.isOperandNullValue)(propertyValue, propertySchema)) {
                            return;
                        }
                        // check type
                        switch (propertySchema.type) {
                            case 'object':
                                if ((0, utils_1.getOperandValueType)(propertyValue) !== 'object') {
                                    propertyErrors.push(new Error(`${propertyKey} is not a object`));
                                }
                                break;
                            case 'array':
                                if ((0, utils_1.getOperandValueType)(propertyValue) !== 'array') {
                                    propertyErrors.push(new Error(`${propertyKey} is not a array`));
                                }
                                break;
                            case 'string':
                                if ((0, utils_1.getOperandValueType)(propertyValue) !== 'string') {
                                    // propertyErrors.push(new Error(`${propertyKey} is not a string`));
                                }
                                break;
                            case 'number':
                            case 'integer':
                                if ((0, utils_1.getOperandValueType)(propertyValue) !== 'number') {
                                    propertyErrors.push(new Error(`${propertyKey} is not a number`));
                                }
                                break;
                            case 'boolean':
                                if ((0, utils_1.getOperandValueType)(propertyValue) !== 'boolean') {
                                    propertyErrors.push(new Error(`${propertyKey} is not a boolean`));
                                }
                                break;
                            case 'null':
                                break;
                        }
                        // then we can check the extra validation logic, but now we don't support it.
                    }
                    // if (propertySchema.type === 'object') {
                    //   console.log('object', propertyKey, propertySchema);
                    // }
                });
            }
        }
        else {
            throw new Error('rootSchema type must be object');
        }
    }
    catch (err) {
        // some unknown error happened in the validation process
        validationError = err;
    }
    return {
        hasError: validationError != null || propertyErrors.length > 0,
        validationError,
        errors: propertyErrors,
    };
};
exports.validateMagicForm = validateMagicForm;


/***/ }),

/***/ 50822:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cache = exports.NO_CACHE = void 0;
const lru_cache_1 = __importDefault(__webpack_require__(77105));
exports.NO_CACHE = Symbol('NO_CACHE');
class Cache {
    constructor() {
        this.dsMap = new lru_cache_1.default(50);
    }
    // private stringifyKey(options: ICellValueKeyOptions) {
    //   const { dsId, fieldId, recordId } = options;
    //   return `${dsId}-${fieldId}-${recordId}`;
    // }
    // private parseKey(key: string) {
    //   const ids = key.split('-');
    //   return {
    //     dsId: ids[0],
    //     fieldId: ids[1],
    //     recordId: ids[2]
    //   };
    // }
    getDsCache(dsId) {
        return this.dsMap.get(dsId);
    }
    getDsFields(dsId) {
        const ds = this.getDsCache(dsId);
        if (!ds) {
            return null;
        }
        const fields = [];
        for (const [key] of ds.cellValues) {
            fields.push(key);
        }
        return fields;
    }
    addCellCache(dsId, fieldId, recordId, value) {
        // Check if the table cache exists
        let dsCache = this.getDsCache(dsId);
        if (!dsCache) {
            dsCache = {
                cellValues: new Map(),
            };
            this.dsMap.set(dsId, dsCache);
        }
        // Check if the column cache exists
        let fieldCache = dsCache.cellValues.get(fieldId);
        if (!fieldCache) {
            fieldCache = new Map();
            dsCache.cellValues.set(fieldId, fieldCache);
        }
        fieldCache.set(recordId, value);
    }
    removeCellCache(dsId, fieldId, recordId) {
        const ds = this.getDsCache(dsId);
        if (!ds) {
            return false;
        }
        if (!recordId) {
            ds.cellValues.delete(fieldId);
            return true;
        }
        const field = ds.cellValues.get(fieldId);
        if (!field) {
            return false;
        }
        return field.delete(recordId);
    }
    removeCellCacheByRecord(dsId, recordId) {
        const fields = this.getDsFields(dsId);
        if (!fields) {
            return false;
        }
        return fields.every((fieldId) => {
            return this.removeCellCache(dsId, fieldId, recordId);
        });
    }
    removeDsCache(dsId) {
        this.dsMap.set(dsId, null);
    }
    getCellCache(dsId, fieldId, recordId) {
        const ds = this.getDsCache(dsId);
        if (!ds) {
            return exports.NO_CACHE;
        }
        const field = ds.cellValues.get(fieldId);
        if (!field) {
            return exports.NO_CACHE;
        }
        return field.get(recordId) || exports.NO_CACHE;
    }
    clearCache() {
        this.dsMap.reset();
    }
}
exports.cache = new Cache();


/***/ }),

/***/ 94204:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.clearCachedSelectors = exports.clearComputeCache = exports.CacheManager = exports.NO_CACHE = void 0;
const compute_cache_manager_1 = __webpack_require__(44182);
const formula_parser_1 = __webpack_require__(51067);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const cache_1 = __webpack_require__(50822);
var cache_2 = __webpack_require__(50822);
Object.defineProperty(exports, "NO_CACHE", ({ enumerable: true, get: function () { return cache_2.NO_CACHE; } }));
exports.CacheManager = {
    calcDsCache: (state, snapshot) => {
        const { datasheetId, recordMap, meta: { fieldMap } } = snapshot;
        if (!datasheetId) {
            return;
        }
        for (const fieldId in fieldMap) {
            for (const recordId in recordMap) {
                const cellCache = store_1.Selectors.calcCellValueAndString({
                    state,
                    snapshot,
                    fieldId,
                    recordId,
                    datasheetId,
                    withError: false,
                    ignoreFieldPermission: true
                });
                exports.CacheManager.setCellCache(datasheetId, fieldId, recordId, cellCache);
            }
        }
    },
    clearDsCache: (dsId) => {
        return cache_1.cache.removeDsCache(dsId);
    },
    removeCellCache: (dsId, fieldId, recordId) => {
        return cache_1.cache.removeCellCache(dsId, fieldId, recordId);
    },
    removeCellCacheByRecord: (dsId, recordId) => {
        return cache_1.cache.removeCellCacheByRecord(dsId, recordId);
    },
    getCellCache: (dsId, fieldId, recordId) => {
        return cache_1.cache.getCellCache(dsId, fieldId, recordId);
    },
    setCellCache: (dsId, fieldId, recordId, cellCache) => {
        return cache_1.cache.addCellCache(dsId, fieldId, recordId, cellCache);
    },
    clear: () => {
        cache_1.cache.clearCache();
    }
};
if (!global.process) {
    global.__cache__ = cache_1.cache;
}
const clearComputeCache = (dstId) => {
    formula_parser_1.ExpCache.clearAll();
    if (dstId) {
        exports.CacheManager.clearDsCache(dstId);
    }
    else {
        exports.CacheManager.clear();
    }
    if (compute_cache_manager_1.computeCache) {
        compute_cache_manager_1.computeCache.clear();
    }
};
exports.clearComputeCache = clearComputeCache;
/**
 * clear cached selectors
 */
const clearCachedSelectors = () => {
    selectors_1.getCurrentView.clearCache();
    selectors_1.getFilterInfo.clearCache();
    selectors_1.getFieldMap.clearCache();
    selectors_1.getFieldMapIgnorePermission.clearCache();
    selectors_1.getVisibleColumns.clearCache();
    selectors_1.getCalendarVisibleColumns.clearCache();
    selectors_1.getOrgChartVisibleColumns.clearCache();
    selectors_1.getGanttVisibleColumns.clearCache();
};
exports.clearCachedSelectors = clearCachedSelectors;


/***/ }),

/***/ 78576:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CellFormatChecker = void 0;
const store_1 = __webpack_require__(56791);
const model_1 = __webpack_require__(61116);
const immer_1 = __importDefault(__webpack_require__(7133));
const types_1 = __webpack_require__(73578);
class CellFormatChecker {
    constructor(store) {
        this.store = store;
    }
    static checkValueValid(cellValue, field, state) {
        if (model_1.Field.bindContext(field, state).validate(cellValue)) {
            return cellValue;
        }
        return null;
    }
    convertValue(fieldId, recordId, cellValue, fieldMapSnapshot, datasheetId) {
        const state = this.store.getState();
        const currentField = store_1.Selectors.getField(state, fieldId, datasheetId);
        const previousField = fieldMapSnapshot[fieldId];
        if (fieldMapSnapshot[currentField.id].type === currentField.type) {
            return CellFormatChecker.checkValueValid(cellValue, currentField, state);
        }
        const stdValue = model_1.Field.bindContext(previousField, state).cellValueToStdValue(cellValue);
        const result = model_1.Field.bindContext(currentField, state).stdValueToCellValue(stdValue);
        // Because the data has been corrected, 
        // the old data structure will be updated at the same time to prevent the data from being correct 
        // and the recorded FieldType is still wrong, resulting in an error in the middle layer
        fieldMapSnapshot[currentField.id] = currentField;
        if (cellValue && !result && currentField.type === types_1.FieldType.Link) {
            // Fix the data exception caused by the lack of associated ops in this table
            return store_1.Selectors.getCellValue(state, store_1.Selectors.getSnapshot(state), recordId, currentField.id);
        }
        return result;
    }
    parse(actions, datasheetId, fieldMapSnapshot) {
        if (!fieldMapSnapshot) {
            return actions;
        }
        const fieldIds = Object.keys(fieldMapSnapshot);
        return (0, immer_1.default)(actions, draft => {
            for (const action of draft) {
                if (!action.p.includes('recordMap')) {
                    continue;
                }
                if (!action['oi']) {
                    continue;
                }
                const recordId = action.p[1];
                if (action.p.length === 4) {
                    if (!fieldIds.includes(action.p[3])) {
                        continue;
                    }
                    const fieldId = action.p[3];
                    const cellValue = action['oi'];
                    action['oi'] = this.convertValue(fieldId, recordId, cellValue, fieldMapSnapshot, datasheetId);
                }
                if (action.p.length === 2 && 'data' in action['oi']) {
                    for (const fieldId of fieldIds) {
                        const cellValue = action['oi'].data[fieldId];
                        action['oi'].data[fieldId] = this.convertValue(fieldId, recordId, cellValue, fieldMapSnapshot, datasheetId);
                    }
                }
            }
            return draft;
        });
    }
}
exports.CellFormatChecker = CellFormatChecker;


/***/ }),

/***/ 56706:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(78576), exports);


/***/ }),

/***/ 50690:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resourceOpsToChangesets = void 0;
const store_1 = __webpack_require__(56791);
const utils_1 = __webpack_require__(26854);
function resourceOpsToChangesets(resourceOpsCollects, state) {
    const changesetMap = new Map();
    resourceOpsCollects.forEach(collect => {
        const { resourceId, resourceType, operations } = collect;
        // One datasheet, one changeset
        let changeset = changesetMap.get(resourceId);
        if (!changeset) {
            const datasheet = store_1.Selectors.getDatasheet(state, resourceId);
            changesetMap.set(resourceId, (changeset = {
                baseRevision: datasheet.revision,
                messageId: (0, utils_1.generateRandomString)(),
                resourceId,
                resourceType,
                operations,
            }));
        }
        else {
            changeset.operations.push(...operations);
        }
    });
    return [...changesetMap.values()];
}
exports.resourceOpsToChangesets = resourceOpsToChangesets;


/***/ }),

/***/ 27001:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CollaCommand = void 0;
class CollaCommand {
    constructor(_cmdDef, name) {
        this._cmdDef = _cmdDef;
        this.name = name;
    }
    undoable() {
        return this._cmdDef.undoable;
    }
    canUndo(context, actions) {
        if (!this.undoable()) {
            return false;
        }
        return this._cmdDef.canUndo ? this._cmdDef.canUndo(context, actions) : true;
    }
    canRedo(context, actions) {
        if (!this.undoable()) {
            return false;
        }
        return this._cmdDef.canRedo ? this._cmdDef.canRedo(context, actions) : true;
    }
    /**
     * @returns {boolean} returns true, indicating that the result of execution can be placed in
     */
    execute(context, options) {
        return this._cmdDef.execute(context, options);
    }
}
exports.CollaCommand = CollaCommand;


/***/ }),

/***/ 17906:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CollaCommandManager = void 0;
const error_types_1 = __webpack_require__(88787);
const commands_1 = __webpack_require__(97018);
const command_1 = __webpack_require__(27001);
const types_1 = __webpack_require__(69581);
const store_1 = __webpack_require__(56791);
const model_1 = __webpack_require__(61116);
const types_2 = __webpack_require__(73578);
const cell_format_checker_1 = __webpack_require__(56706);
const link_integrity_checker_1 = __webpack_require__(89838);
const player_1 = __webpack_require__(63325);
class CollaCommandManager {
    constructor(_listener = {}, store) {
        this._listener = _listener;
        this.store = store;
        this._commands = {};
        const commandNames = Object.keys(commands_1.COLLA_COMMAND_MAP);
        commandNames.forEach(commandName => {
            this.register(commandName, commands_1.COLLA_COMMAND_MAP[commandName]);
        });
        this.cellFormatChecker = new cell_format_checker_1.CellFormatChecker(store);
        this.linkIntegrityChecker = new link_integrity_checker_1.LinkIntegrityChecker(store);
    }
    register(name, commandDef) {
        if (this._commands[name]) {
            console.warn(`the command name ${name} is registered and will be unregistered`, this._commands[name]);
            this.unregister(name);
        }
        this._commands[name] = new command_1.CollaCommand(commandDef, name);
    }
    unregister(name) {
        if (this._commands[name]) {
            delete this._commands[name];
        }
    }
    hasCommand(name) {
        return !!this._commands[name];
    }
    /**
     * passes the final generated op into the callback function that executes the op
     */
    didExecutedHook(datasheetOpsCollects) {
        this._listener.handleCommandExecuted && this._listener.handleCommandExecuted(datasheetOpsCollects);
    }
    execute(options) {
        const optionsFull = this.fullFillOptions(options);
        let ret = this._execute(optionsFull);
        if (ret === null) {
            ret = {
                resourceId: optionsFull.resourceId,
                resourceType: optionsFull.resourceType,
                result: types_1.ExecuteResult.None,
            };
        }
        else if (ret.result === types_1.ExecuteResult.Fail) {
            console.error('ExecuteResult.Fail: ', ret);
        }
        return ret;
    }
    /**
     * @desc tool method, passing in the basic command option and returning structured parameters
     * */
    fullFillOptions(options) {
        let resourceId = undefined;
        // If you don't fill in resourceType, the default is datasheet
        // TODO: fill in resourceType for global modification
        let resourceType = types_2.ResourceType.Datasheet;
        // TODO: Change this to resourceId later;
        if ('datasheetId' in options) {
            resourceId = options.datasheetId;
        }
        if ('resourceId' in options) {
            resourceId = options.resourceId;
            resourceType = options.resourceType;
        }
        if (!resourceId) {
            resourceId = store_1.Selectors.getActiveDatasheetId(this._getContext().model);
        }
        return Object.assign(Object.assign({}, options), { resourceId,
            resourceType });
    }
    _execute(options) {
        const name = options.cmd;
        const command = this._commands[name];
        if (!command) {
            return null;
        }
        let ret = null;
        const context = this._getContext();
        try {
            ret = command.execute(context, options);
        }
        catch (e) {
            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                error: new Error(`command execution error: ${e.message}`),
                metaData: {
                    resourceId: options.resourceId,
                    resourceType: options.resourceType,
                },
            });
            this._listener.handleCommandExecuteError &&
                this._listener.handleCommandExecuteError({
                    type: error_types_1.ErrorType.CollaError,
                    code: error_types_1.ErrorCode.CommandExecuteFailed,
                    message: e.message,
                });
            return {
                resourceId: options.resourceId,
                resourceType: options.resourceType,
                result: types_1.ExecuteResult.Fail,
                reason: types_1.ExecuteFailReason.ActionError,
            };
        }
        if (!ret) {
            return ret;
        }
        if (ret.result === types_1.ExecuteResult.Fail) {
            console.error('Execute "%s" Error', name, { error: ret, options });
            return ret;
        }
        const flushedActions = context.ldcMaintainer.flushLinkedActions(context.model);
        const memberFieldAction = context.memberFieldMaintainer.flushMemberAction(context.model);
        if (memberFieldAction.length) {
            ret.actions.push(...memberFieldAction);
        }
        if (ret.linkedActions) {
            ret.linkedActions.push(...flushedActions);
        }
        else {
            ret.linkedActions = flushedActions;
        }
        return this._executeActions(name, ret, types_1.ExecuteType.Execute);
    }
    _getContext() {
        // Each time the context is executed, a new maintainer is initialized to maintain the data consistency of the associated field cell
        return {
            model: this.store.getState(),
            ldcMaintainer: new model_1.LinkedDataConformanceMaintainer(),
            memberFieldMaintainer: new model_1.MemberFieldMaintainer(),
            fieldMapSnapshot: {},
        };
    }
    // TODO: Execution failure requires toast notification
    _executeActions(cmd, ret, executeType) {
        const { actions, resourceId, resourceType, linkedActions, fieldMapSnapshot } = ret;
        const command = this._commands[cmd];
        const context = this._getContext();
        if (!command || !resourceId) {
            console.error("can't find command or resource", command, resourceId);
            return null;
        }
        if (executeType === types_1.ExecuteType.Redo && !command.canRedo(context, actions)) {
            return null;
        }
        if (executeType === types_1.ExecuteType.Undo && !command.canUndo(context, actions)) {
            return null;
        }
        if (actions.length === 0) {
            return null;
        }
        if (this.addUndoStack && command.undoable()) {
            this.addUndoStack(cmd, ret, executeType);
        }
        let _actions = actions;
        const _fieldMapSnapshot = fieldMapSnapshot && Object.assign({}, fieldMapSnapshot);
        if (resourceType === types_2.ResourceType.Datasheet) {
            // This is adjusted to check all ops involved in cell writing, one is to judge the type, and if the type is consistent, check the format
            _actions = this.cellFormatChecker.parse(_actions, resourceId, _fieldMapSnapshot);
            if (executeType === types_1.ExecuteType.Redo || executeType === types_1.ExecuteType.Undo) {
                _actions = _fieldMapSnapshot ? _actions : this.linkIntegrityChecker.parse(_actions, resourceId, linkedActions);
            }
        }
        const _cmd = executeType === types_1.ExecuteType.Undo ? `UNDO:${cmd}` : cmd;
        const operation = {
            cmd: _cmd,
            actions: _actions,
        };
        const fieldTypeMap = {};
        if (_fieldMapSnapshot && Object.keys(_fieldMapSnapshot).length) {
            for (const id in _fieldMapSnapshot) {
                const field = _fieldMapSnapshot[id];
                fieldTypeMap[id] = field.type;
            }
            operation.fieldTypeMap = fieldTypeMap;
        }
        // Collect the op; generated by cmd and send it out at one time
        const datasheetOpsCollects = [];
        datasheetOpsCollects.push({
            resourceId,
            resourceType,
            operations: [(linkedActions === null || linkedActions === void 0 ? void 0 : linkedActions.length) ? Object.assign(Object.assign({}, operation), { mainLinkDstId: resourceId }) : operation],
        });
        if (linkedActions) {
            linkedActions.forEach(lCmd => {
                if (!lCmd.actions.length) {
                    return;
                }
                const op = {
                    cmd: _cmd,
                    actions: lCmd.actions,
                    mainLinkDstId: resourceId,
                };
                datasheetOpsCollects.push({
                    resourceId: lCmd.datasheetId,
                    resourceType,
                    operations: [op],
                });
            });
        }
        // After the op is applied, perform some hook operations.
        this.didExecutedHook(datasheetOpsCollects);
        return {
            result: types_1.ExecuteResult.Success,
            resourceId,
            resourceType,
            data: ret.data,
            operation,
            executeType,
            linkedActions,
            resourceOpsCollects: datasheetOpsCollects,
        };
    }
}
exports.CollaCommandManager = CollaCommandManager;


/***/ }),

/***/ 65654:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(69581), exports);
__exportStar(__webpack_require__(27001), exports);
__exportStar(__webpack_require__(17906), exports);
__exportStar(__webpack_require__(28560), exports);
__exportStar(__webpack_require__(35657), exports);
__exportStar(__webpack_require__(50690), exports);


/***/ }),

/***/ 35657:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResourceStashManager = void 0;
const store_1 = __webpack_require__(56791);
const undo_manager_1 = __webpack_require__(28560);
const lru_cache_1 = __importDefault(__webpack_require__(77105));
const lodash_1 = __importDefault(__webpack_require__(46517));
const redux_batched_actions_1 = __webpack_require__(11498);
const compute_manager_1 = __webpack_require__(73374);
class ResourceStashManager {
    constructor(store, getRoomService) {
        this.store = store;
        this.getRoomService = getRoomService;
        this.maxSize = 5;
        this.closeClear = true;
        this.stash = new lru_cache_1.default(this.maxSize);
    }
    calcRefMap(stashResourceIds, activeDstIds) {
        const state = this.store.getState();
        const computeRefManager = new compute_manager_1.ComputeRefManager();
        for (const resourceId of stashResourceIds) {
            const currSnapshot = store_1.Selectors.getSnapshot(state, resourceId);
            const fieldMap = currSnapshot === null || currSnapshot === void 0 ? void 0 : currSnapshot.meta.fieldMap;
            if (!fieldMap) {
                continue;
            }
            computeRefManager.computeRefMap(fieldMap, resourceId, state);
        }
        const reRefMap = computeRefManager.reRefMap;
        if (reRefMap.size === 0) {
            return;
        }
        const _activeDstIds = [];
        reRefMap.forEach(linkPath => {
            const _linkPath = Array.from(linkPath);
            const linkDstAndField = _linkPath[_linkPath.length - 1];
            if (linkDstAndField == null) {
                return;
            }
            const dstId = linkDstAndField.split('-')[0];
            if (activeDstIds.includes(dstId)) {
                return;
            }
            _activeDstIds.push(dstId);
        });
        activeDstIds.push(..._activeDstIds);
        this.calcRefMap(_activeDstIds, activeDstIds);
    }
    static getIdsByResourceType(stashResourceIds) {
        const stashDatasheetIds = [];
        const stashDashboardIds = [];
        const stashFormIds = [];
        const formIdReg = /(fom\w+)/;
        const datasheetIdReg = /(dst\w+)/;
        const dashboardReg = /(dsb\w+)/;
        for (const id of stashResourceIds) {
            if (datasheetIdReg.test(id)) {
                stashDatasheetIds.push(id);
            }
            if (dashboardReg.test(id)) {
                stashDashboardIds.push(id);
            }
            if (formIdReg.test(id)) {
                stashFormIds.push(id);
            }
        }
        return {
            stashDatasheetIds,
            stashDashboardIds,
            stashFormIds
        };
    }
    analyseActiveResource() {
        const state = this.store.getState();
        const stashResourceIds = this.stash.dump().map(item => item.k);
        const roomService = this.getRoomService();
        const { stashDatasheetIds, stashDashboardIds, } = ResourceStashManager.getIdsByResourceType(stashResourceIds);
        if (stashDatasheetIds.length) {
            const activeDstIds = [...stashResourceIds];
            if (Object.keys(state.widgetMap).length) {
                const widgetDependDstIds = Object.values(state.widgetMap).reduce((ids, widget) => {
                    const id = widget.widget.snapshot.datasheetId;
                    if (id && !ids.includes(id)) {
                        ids.push(id);
                    }
                    return ids;
                }, []);
                activeDstIds.push(...widgetDependDstIds);
            }
            this.calcRefMap(stashResourceIds, activeDstIds);
            const dstIdsInRedux = store_1.Selectors.getDatasheetIds(state);
            const unActiveDstIds = lodash_1.default.difference(dstIdsInRedux, activeDstIds);
            const _batchActions = [];
            unActiveDstIds.map(id => {
                roomService.quit(id);
                _batchActions.push(store_1.StoreActions.resetDatasheet(id));
            });
            this.store.dispatch((0, redux_batched_actions_1.batchActions)(_batchActions));
        }
        if (stashDashboardIds.length) {
            const dashboardIdsInRedux = Object.keys(state.dashboardMap);
            const unActiveDashboardIds = lodash_1.default.difference(dashboardIdsInRedux, stashDashboardIds);
            const _batchActions = [];
            unActiveDashboardIds.map(id => {
                roomService.quit(id);
                _batchActions.push(store_1.StoreActions.resetDashboard(id));
            });
            this.store.dispatch((0, redux_batched_actions_1.batchActions)(_batchActions));
        }
    }
    setUndoManager(resourceId, undoManager) {
        const stashCount = this.stash.length;
        const allowClear = stashCount === this.maxSize;
        this.stash.set(resourceId, undoManager);
        if (!this.closeClear) {
            allowClear && this.analyseActiveResource();
        }
    }
    getUndoManager(resourceId) {
        let undoManager = this.stash.get(resourceId);
        if (!undoManager) {
            undoManager = new undo_manager_1.UndoManager(resourceId);
            this.setUndoManager(resourceId, undoManager);
        }
        return undoManager;
    }
    destroy() {
        this.stash.reset();
    }
}
exports.ResourceStashManager = ResourceStashManager;


/***/ }),

/***/ 69581:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ExecuteFailReason = exports.ExecuteResult = exports.ExecuteType = void 0;
var ExecuteType;
(function (ExecuteType) {
    ExecuteType[ExecuteType["Execute"] = 0] = "Execute";
    ExecuteType[ExecuteType["Undo"] = 1] = "Undo";
    ExecuteType[ExecuteType["Redo"] = 2] = "Redo";
})(ExecuteType = exports.ExecuteType || (exports.ExecuteType = {}));
var ExecuteResult;
(function (ExecuteResult) {
    /** No need to execute */
    ExecuteResult["None"] = "None";
    ExecuteResult["Fail"] = "Fail";
    ExecuteResult["Success"] = "Success";
})(ExecuteResult = exports.ExecuteResult || (exports.ExecuteResult = {}));
var ExecuteFailReason;
(function (ExecuteFailReason) {
    /** Don't know what went wrong */
    ExecuteFailReason["Unknown"] = "Unknown";
    /** action validation failed */
    ExecuteFailReason["ActionError"] = "ActionError";
    /** Operate on unsupported field, view */
    ExecuteFailReason["NotSupport"] = "NotSupport";
    /** table, view name duplicate */
    ExecuteFailReason["NameRepeat"] = "NameRepeat";
    /** The last one, cannot be deleted */
    ExecuteFailReason["LastOne"] = "LastOne";
    /** Field type mismatch */
    ExecuteFailReason["FieldTypeNotMatch"] = "FieldTypeNotMatch";
    /** Passed parameter problem */
    ExecuteFailReason["WrongOptions"] = "WrongOptions";
})(ExecuteFailReason = exports.ExecuteFailReason || (exports.ExecuteFailReason = {}));


/***/ }),

/***/ 28560:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UndoManager = void 0;
const types_1 = __webpack_require__(69581);
const ot_1 = __webpack_require__(65315);
class UndoManager {
    constructor(resourceId) {
        this.resourceId = resourceId;
        this._undoStack = [];
        this._redoStack = [];
        this._maxLength = 50;
        this._commandManager = null;
        this._transformSquare = 100000;
    }
    setCommandManager(commandManager) {
        this._commandManager = commandManager;
    }
    undo() {
        const { _undoStack: undoStack, _commandManager: commandManager } = this;
        if (!undoStack.length) {
            return null;
        }
        const undoAction = undoStack.pop();
        if (undoAction && commandManager && commandManager.hasCommand(undoAction.cmd)) {
            return commandManager._executeActions(undoAction.cmd, undoAction.result, types_1.ExecuteType.Undo);
        }
        return null;
    }
    redo() {
        const { _redoStack: redoStack, _commandManager: commandManager } = this;
        if (!redoStack.length) {
            return null;
        }
        const redoAction = redoStack.pop();
        if (redoAction && commandManager && commandManager.hasCommand(redoAction.cmd)) {
            return commandManager._executeActions(redoAction.cmd, redoAction.result, types_1.ExecuteType.Redo);
        }
        return null;
    }
    static revertLinkedActions(cmd) {
        if (cmd.result.linkedActions) {
            cmd.result.linkedActions = cmd.result.linkedActions.map(lCmd => {
                return Object.assign(Object.assign({}, lCmd), { actions: ot_1.jot.invert(lCmd.actions) });
            });
        }
    }
    addUndoStack(command, executeType) {
        if (!command || !command.cmd) {
            return;
        }
        /**
         * The conversion of undo & redo stack needs to invert actions
         */
        if (executeType === types_1.ExecuteType.Undo) {
            const inverted = {
                cmd: command.cmd,
                result: Object.assign(Object.assign({}, command.result), { actions: ot_1.jot.invert(command.result.actions) }),
            };
            UndoManager.revertLinkedActions(inverted);
            this._redoStack.push(inverted);
        }
        else {
            const { _maxLength: maxLength, _undoStack: undoStack } = this;
            const deleteCount = undoStack.length - maxLength + 1;
            // clear the command that exceeds the stack size
            if (maxLength > 0 && deleteCount > 0) {
                undoStack.splice(0, deleteCount);
            }
            const inverted = {
                cmd: command.cmd,
                result: Object.assign(Object.assign({}, command.result), { actions: ot_1.jot.invert(command.result.actions) }),
            };
            UndoManager.revertLinkedActions(inverted);
            undoStack.push(inverted);
            // After executing the command, you need to clear the redo stack
            if (executeType === types_1.ExecuteType.Execute) {
                this._redoStack = [];
            }
        }
    }
    getStockLength(type) {
        if (type === 'undo') {
            return this._undoStack.length;
        }
        return this._redoStack.length;
    }
    getUndoStack() {
        return this._undoStack;
    }
    getRedoStack() {
        return this._redoStack;
    }
    /**
     * @description Temporary solution to solve the page stuck caused by excessive data volume
     * when transforming locally cached actions and remote collaborative actions
     * The current idea is to give up this transform if the product of the two actions of the transform
     * exceeds the set threshold. And clear all caches this time and later,
     * Subsequent solutions will solve performance problems through workers
     *
     * @param {number} stackActionLen
     * @param {number} remoteActionLen
     * @returns {boolean}
     * @private
     */
    checkTransformSquareOverLimit(stackActionLen, remoteActionLen) {
        return Boolean(stackActionLen * remoteActionLen > this._transformSquare);
    }
    transformStack(stack, remoteActions) {
        const newStack = [];
        for (let i = stack.length - 1; i >= 0; i--) {
            const stackActions = stack[i].result.actions;
            if (this.checkTransformSquareOverLimit(stackActions.length, remoteActions.length)) {
                break;
            }
            const [left, right] = ot_1.jot.transformX(stackActions, remoteActions);
            newStack.push(Object.assign(Object.assign({}, stack[i]), { result: Object.assign(Object.assign({}, stack[i].result), { actions: left }) }));
            remoteActions = right;
        }
        return newStack.reverse();
    }
    doTransform(remoteActions) {
        if (!remoteActions || !remoteActions.length) {
            return;
        }
        if (this._redoStack.length) {
            this._redoStack = this.transformStack(this._redoStack, remoteActions);
        }
        if (this._undoStack.length) {
            this._undoStack = this.transformStack(this._undoStack, remoteActions);
        }
    }
}
exports.UndoManager = UndoManager;


/***/ }),

/***/ 24537:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addWidgetPanel = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
exports.addWidgetPanel = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { resourceId, resourceType } = options;
        const snapshot = resourceType === types_1.ResourceType.Datasheet ? (0, selectors_1.getSnapshot)(state, resourceId) : (0, selectors_1.getMirrorSnapshot)(state, resourceId);
        const widgetPanels = (resourceType === types_1.ResourceType.Datasheet ? snapshot.meta.widgetPanels :
            snapshot.widgetPanels) || [];
        const panelCount = widgetPanels.length;
        if (panelCount > 2) {
            return null;
        }
        const existPanelIds = widgetPanels.map(item => {
            return item.id;
        });
        const existPanelName = widgetPanels.map(item => {
            return item.name;
        });
        const newPanelId = (0, utils_1.getNewId)(utils_1.IDPrefix.WidgetPanel, existPanelIds);
        const newPanelName = (0, utils_1.getUniqName)((0, i18n_1.t)(i18n_1.Strings.widget_panel), existPanelName);
        const generateStdValue = (id, name) => {
            return {
                name,
                id: id,
                widgets: [],
            };
        };
        const addWidgetPanelAction = resourceType === types_1.ResourceType.Datasheet ?
            model_1.DatasheetActions.addWidgetPanel2Action(snapshot, generateStdValue(newPanelId, newPanelName)) :
            model_1.DatasheetActions.addWidgetPanelWithMirror2Action(snapshot, generateStdValue(newPanelId, newPanelName));
        if (!addWidgetPanelAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: addWidgetPanelAction,
            data: {
                panelId: newPanelId,
            },
        };
    },
};


/***/ }),

/***/ 58093:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addWidgetToPanel = void 0;
const index_1 = __webpack_require__(97018);
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const add_widget_panel_1 = __webpack_require__(24537);
exports.addWidgetToPanel = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { widgetId, resourceId, resourceType } = options;
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        let panelIndex = 0;
        let installationIndex = 0;
        const actions = [];
        if (!widgetPanels || !widgetPanels.length) {
            // The first time you install a widget, you need to install a panel first
            const rct = add_widget_panel_1.addWidgetPanel.execute(context, {
                cmd: index_1.CollaCommandName.AddWidgetPanel,
                resourceId,
                resourceType
            });
            if (rct && rct.result !== command_manager_1.ExecuteResult.Fail) {
                actions.push(...rct.actions);
            }
        }
        else {
            const widgetPanelStatus = (0, selectors_1.getResourceWidgetPanelStatus)(state, resourceId, resourceType);
            const activePanelId = (widgetPanelStatus === null || widgetPanelStatus === void 0 ? void 0 : widgetPanelStatus.activePanelId) || widgetPanels[0].id;
            panelIndex = widgetPanels.findIndex(item => item.id === activePanelId);
            if (panelIndex < 0) {
                return null;
            }
            installationIndex = widgetPanels[panelIndex].widgets.length;
        }
        const addWidgetToPanelAction = resourceType === types_1.ResourceType.Datasheet ?
            model_1.DatasheetActions.addWidgetToPanel2Action(state, { installationIndex, panelIndex, widgetId }) :
            model_1.DatasheetActions.addWidgetToPanelWithMirror2Action(state, { installationIndex, panelIndex, widgetId });
        if (!addWidgetToPanelAction) {
            return null;
        }
        actions.push(...addWidgetToPanelAction);
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: actions,
        };
    },
};


/***/ }),

/***/ 93271:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteWidget = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.deleteWidget = {
    undoable: false,
    execute: (context, options) => {
        const { model: state } = context;
        const { widgetId, resourceId, resourceType } = options;
        const widgetPanels = store_1.Selectors.getResourceWidgetPanels(state, resourceId, resourceType);
        const activeWidgetPanel = store_1.Selectors.getResourceActiveWidgetPanel(state, resourceId, resourceType);
        if (!widgetPanels || !activeWidgetPanel) {
            return null;
        }
        const widgetPanelIndex = widgetPanels.findIndex(item => item.id === activeWidgetPanel.id);
        if (widgetPanelIndex < 0) {
            return null;
        }
        const widgets = activeWidgetPanel.widgets;
        const widgetIndex = widgets.findIndex(item => item.id === widgetId);
        if (widgetIndex < 0) {
            return null;
        }
        const deleteWidgetAction = resourceType === types_1.ResourceType.Datasheet ?
            model_1.DatasheetActions.deleteWidget2Action(state, { widgetPanelIndex, widget: widgets[widgetIndex], widgetIndex }) :
            model_1.DatasheetActions.deleteMirrorWidget2Action(state, { widgetPanelIndex, widget: widgets[widgetIndex], widgetIndex });
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: deleteWidgetAction,
        };
    },
};


/***/ }),

/***/ 12775:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setAffectFieldAttr2Action = exports.clearOldBrotherField = exports.createNewBrotherField = exports.createNewField = exports.setField = exports.createConvertActions = void 0;
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const constants_1 = __webpack_require__(12690);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const kanban_view_1 = __webpack_require__(39917);
// The store cannot be called here! !
/**
  * When the column type does not change, the single-selection and multi-selection types need to clean the cell values
  */
function changeFieldSetting(snapshot, oldField, newField) {
    const actions = [];
    if (newField.type !== oldField.type) {
        return actions;
    }
    switch (oldField.type) {
        case types_1.FieldType.MultiSelect:
        case types_1.FieldType.SingleSelect: {
            // delete records without options
            const optionIdMap = (0, lodash_1.keyBy)(newField.property.options, 'id');
            for (const recordId in snapshot.recordMap) {
                const cellValue = snapshot.recordMap[recordId].data[newField.id];
                let convertValue = cellValue;
                if (Array.isArray(cellValue)) {
                    convertValue = cellValue.filter(cv => optionIdMap[cv]);
                }
                else if (cellValue && (!optionIdMap || !optionIdMap[cellValue])) {
                    convertValue = null;
                }
                if (!(0, lodash_1.isEqual)(cellValue, convertValue)) {
                    const action = model_1.DatasheetActions.setRecord2Action(snapshot, {
                        recordId,
                        fieldId: newField.id,
                        // TODO what if convertValue is null ? value does not accept null
                        value: convertValue,
                    });
                    action && actions.push(action);
                }
            }
            return actions;
        }
        case types_1.FieldType.Link: {
            // When switching the associated datasheetId, you need to clear the value of the cell
            if (oldField.property.foreignDatasheetId !== newField.property.foreignDatasheetId) {
                for (const recordId in snapshot.recordMap) {
                    const cellValue = snapshot.recordMap[recordId].data[newField.id];
                    if (cellValue) {
                        const action = model_1.DatasheetActions.setRecord2Action(snapshot, {
                            recordId,
                            fieldId: newField.id,
                            value: null,
                        });
                        action && actions.push(action);
                    }
                }
            }
            return actions;
        }
        // Score type row score cannot be greater than the maximum value
        case types_1.FieldType.Rating: {
            if (newField.property.max < oldField.property.max) {
                for (const recordId in snapshot.recordMap) {
                    const cellValue = snapshot.recordMap[recordId].data[newField.id];
                    if (cellValue && cellValue > newField.property.max) {
                        const action = model_1.DatasheetActions.setRecord2Action(snapshot, {
                            recordId,
                            fieldId: newField.id,
                            value: newField.property.max,
                        });
                        action && actions.push(action);
                    }
                }
            }
        }
    }
    return actions;
}
/**
 * Execute general data conversion logic when the type of the column changes
 */
function switchFieldRecordData(context, snapshot, oldField, newField) {
    const { model: state, ldcMaintainer } = context;
    const actions = [];
    // Converted into an associated field to synchronize the associated data of the associated table
    // Only related fields with sibling fields need data consistency maintenance
    const needCreateLinkData = newField.type === types_1.FieldType.Link && newField.property.brotherFieldId;
    // Convert between computed fields without doing anything
    if (model_1.Field.bindContext(oldField, state).isComputed && model_1.Field.bindContext(newField, state).isComputed) {
        return {
            actions,
        };
    }
    for (const recordId in snapshot.recordMap) {
        const cellValue = store_1.Selectors.getCellValue(state, snapshot, recordId, newField.id);
        function setValue(convertValue) {
            const action = model_1.DatasheetActions.setRecord2Action(snapshot, {
                recordId,
                fieldId: newField.id,
                value: convertValue,
            });
            action && actions.push(action);
            if (needCreateLinkData) {
                const linkedSnapshot = (0, selectors_1.getSnapshot)(state, newField.property.foreignDatasheetId);
                ldcMaintainer && ldcMaintainer.insert(state, linkedSnapshot, recordId, newField, convertValue, null);
            }
        }
        if (cellValue != null) {
            // The new field is a calculated field, and the old field is an entity field, then all the original values are cleared
            if (model_1.Field.bindContext(newField, state).isComputed) {
                setValue(null);
            }
            else {
                const stdVal = model_1.Field.bindContext(oldField, state).cellValueToStdValue(cellValue);
                let convertValue = model_1.Field.bindContext(newField, state).stdValueToCellValue(stdVal);
                convertValue = (0, model_1.handleEmptyCellValue)(convertValue, model_1.Field.bindContext(newField, state).basicValueType);
                // Otherwise convert the value of the original cell
                setValue(convertValue);
            }
        }
        // delete the alarm when modifying the date column type
        if (oldField.type === types_1.FieldType.DateTime) {
            const alarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, recordId, oldField.id);
            if (alarm) {
                const alarmActions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
                    recordId,
                    fieldId: oldField.id,
                    alarm: null,
                });
                if (alarmActions) {
                    actions.push(...alarmActions);
                }
            }
        }
    }
    return {
        actions,
    };
}
/**
 * When the field changes, the related properties on the view should be cleared synchronously.
 */
function clearViewAttribute(snapshot, oldField, newField) {
    const actions = [];
    snapshot.meta.views.forEach(view => {
        // filter condition clear
        if (newField.type !== oldField.type && view.filterInfo) {
            const filterInfo = view.filterInfo;
            const newConditions = filterInfo.conditions.filter(condition => {
                // 1. The fieldId is not the same, indicating that there is no corresponding relationship, and no need to delete
                if (condition.fieldId !== newField.id) {
                    return true;
                }
                // 2. The fieldId is the same, but the fieldType is different and needs to be deleted
                // In theory, oldField.type is equal to condition.fieldType
                if (newField.type !== oldField.type ||
                    newField.type !== condition.fieldType) {
                    return false;
                }
                // 3. If the fieldType is not changed, and it is a single/multiple selection type, and the condition has selection options
                if (newField.type === oldField.type &&
                    newField.type === condition.fieldType &&
                    (0, utils_1.isSelectField)(newField) &&
                    (model_1.Field.isFilterBelongFieldType(types_1.FieldType.SingleSelect, condition) ||
                        model_1.Field.isFilterBelongFieldType(types_1.FieldType.MultiSelect, condition))) {
                    if (condition.value == null) {
                        return false;
                    }
                    /*
                     * If condition has an option,
                     * And the selection drop-down box does not exist this option,
                     * Then you need to delete this condition
                     */
                    const selectField = newField;
                    return condition.value.some(optionId => {
                        return selectField.property.options.every(option => {
                            return optionId !== option.id;
                        });
                    });
                }
                return true;
            });
            const action = model_1.DatasheetActions.setFilterInfo2Action(snapshot, {
                viewId: view.id,
                filterInfo: {
                    conjunction: filterInfo.conjunction,
                    conditions: newConditions,
                },
            });
            action && actions.push(action);
        }
        // Statistics type clear
        if (view.type === store_1.ViewType.Grid && newField.type !== oldField.type && !view.lockInfo) {
            let statType;
            // Convert to numeric type, automatically set it to StatType.Sum
            if (newField.type === types_1.FieldType.Number) {
                statType = model_1.StatType.Sum;
            }
            if (newField.type !== types_1.FieldType.Number) {
                statType = undefined;
            }
            const action = model_1.DatasheetActions.setColumnStatType2Action(snapshot, {
                viewId: view.id,
                fieldId: newField.id,
                statType,
            });
            action && actions.push(action);
        }
        // The grouping field of the kanban board, if the type is converted, 
        // or the multi-selection of the member field is turned on, the grouping field should be clear
        if (view.type === store_1.ViewType.Kanban &&
            view.style.kanbanFieldId === oldField.id &&
            (newField.type !== oldField.type || newField.property.isMulti)) {
            const action = kanban_view_1.KanbanView.setViewStyle2Action(snapshot, {
                viewId: view.id,
                styleKey: constants_1.KanbanStyleKey.KanbanFieldId,
                styleValue: null,
            });
            action && actions.push(action);
        }
        // The Grid view needs to consider the attachment field. 
        // The field that has been set as a grouping item should be deleted after being converted into an attachment field.
        if (view.type === store_1.ViewType.Grid &&
            newField.type !== oldField.type &&
            newField.type === types_1.FieldType.Attachment &&
            view.groupInfo) {
            const groupInfo = view.groupInfo.filter(item => item.fieldId !== newField.id);
            if (groupInfo.length !== view.groupInfo.length) {
                const action = model_1.DatasheetActions.setGroupInfoField2Action(snapshot, {
                    viewId: view.id,
                    groupInfo,
                });
                action && actions.push(action);
            }
        }
    });
    return actions;
}
/**
 * After modifying the field, perform conversion logic on all cell data in this column
 * Make it meet the requirements of the field attribute, and the value of the column cell cannot be out of the limit of the column attribute
 */
function createConvertActions(context, snapshot, oldField, newField) {
    if (oldField.type === newField.type) {
        return {
            actions: changeFieldSetting(snapshot, oldField, newField),
        };
    }
    return switchFieldRecordData(context, snapshot, oldField, newField);
}
exports.createConvertActions = createConvertActions;
function setField(context, snapshot, oldField, newField, datasheetId) {
    const state = context.model;
    const actions = [];
    // When different types are converted to each other, the property needs to be updated
    if (newField.type !== oldField.type) {
        const cellValues = model_1.DatasheetActions.getCellValuesByFieldId(state, snapshot, newField.id);
        const stdVals = cellValues.map(cv => {
            return model_1.Field.bindContext(oldField, state).cellValueToStdValue(cv);
        });
        const property = model_1.Field.bindContext(newField, state).enrichProperty(stdVals);
        newField.property = property;
        // Calculated fields need to determine their own datasheet through the field property, 
        // here we force him to specify the datasheetId of the current command
        if (model_1.Field.bindContext(newField, state).isComputed) {
            newField.property = Object.assign(Object.assign({}, newField.property), { datasheetId });
        }
        if (newField.type === types_1.FieldType.CreatedBy || newField.type === types_1.FieldType.LastModifiedBy) {
            newField.property.uuids = model_1.Field.bindContext(newField, state).getUuidsByRecordMap(snapshot.recordMap);
        }
    }
    const validateFieldPropertyError = model_1.Field.bindContext(newField, state).validateProperty().error;
    if (validateFieldPropertyError) {
        throw new Error(`${(0, i18n_1.t)(i18n_1.Strings.error_set_column_failed_bad_property)}: ${validateFieldPropertyError.details.map(d => d.message).join(',\n')}`);
    }
    // When modifying a field, if the target field of the conversion is a calculated field or an initial non-editable field,
    // For LastModifiedBy/LastModifiedTime field type, fieldIdCollection needs to be updated
    if (!types_1.readonlyFields.has(oldField.type) && types_1.readonlyFields.has(newField.type)) {
        const newActions = setAffectFieldAttr2Action(snapshot, newField.id);
        actions.push(...newActions);
    }
    const setFieldAction = model_1.DatasheetActions.setFieldAttr2Action(snapshot, { field: newField });
    setFieldAction && actions.push(setFieldAction);
    // Convert the value in record to type
    const converted = createConvertActions(context, snapshot, oldField, newField);
    actions.push(...converted.actions);
    /**
     * After the field is converted/deleted, the corresponding functions on the view,
     * such as filtering/grouping, need to be deleted or adjusted synchronously
     */
    actions.push(...clearViewAttribute(snapshot, oldField, newField));
    return {
        actions,
        linkedActions: undefined,
    };
}
exports.setField = setField;
function createNewField(snapshot, field, options) {
    if (!field.property) {
        field.property = (0, model_1.getFieldClass)(field.type).defaultProperty();
    }
    const action = model_1.DatasheetActions.addField2Action(snapshot, {
        viewId: options && options.viewId,
        index: options && options.index,
        fieldId: options && options.fieldId,
        offset: options && options.offset,
        hiddenColumn: options && options.hiddenColumn,
        field,
    });
    if (!action) {
        return [];
    }
    return action;
}
exports.createNewField = createNewField;
function createNewBrotherField(state, newField, datasheetId) {
    const currentDatasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
    // If the new field is the associated table, no action is required
    if (newField.property.foreignDatasheetId === currentDatasheet.id) {
        return {
            datasheetId: '',
            actions: [],
        };
    }
    const foreignSnapshot = (0, selectors_1.getSnapshot)(state, newField.property.foreignDatasheetId);
    const foreignFieldMap = foreignSnapshot.meta.fieldMap;
    const foreignFieldIds = Object.keys(foreignSnapshot.meta.fieldMap);
    const foreignFieldNewId = (0, utils_1.getNewId)(utils_1.IDPrefix.Field, foreignFieldIds);
    newField.property = Object.assign(Object.assign({}, newField.property), { brotherFieldId: foreignFieldNewId });
    /**
     * Create a field that is a sibling field of each other in the associated table.
     */
    const actions = createNewField(foreignSnapshot, {
        id: foreignFieldNewId,
        name: (0, utils_1.getUniqName)(currentDatasheet.name, foreignFieldIds.map(id => foreignFieldMap[id].name)),
        type: types_1.FieldType.Link,
        property: {
            foreignDatasheetId: currentDatasheet.id,
            brotherFieldId: newField.id,
        },
    });
    return {
        datasheetId: newField.property.foreignDatasheetId,
        actions,
    };
}
exports.createNewBrotherField = createNewBrotherField;
function clearOldBrotherField(context, oldField, deleteField) {
    const { model: state } = context;
    // If the old field is not associated with a sibling field, no additional operations are required
    if (!oldField.property.brotherFieldId) {
        return {
            datasheetId: '',
            actions: [],
        };
    }
    const foreignSnapshot = (0, selectors_1.getSnapshot)(state, oldField.property.foreignDatasheetId);
    if (!foreignSnapshot) {
        return null;
    }
    const foreignFieldMap = foreignSnapshot.meta.fieldMap;
    const foreignOldField = foreignFieldMap[oldField.property.brotherFieldId];
    if (!foreignOldField || foreignOldField.property.brotherFieldId !== oldField.id) {
        return null;
    }
    if (deleteField) {
        // delete field
        const actions = model_1.DatasheetActions.deleteField2Action(foreignSnapshot, {
            fieldId: oldField.property.brotherFieldId, datasheetId: state.pageParams.datasheetId
        });
        return actions ? {
            datasheetId: oldField.property.foreignDatasheetId,
            actions,
        } : null;
    }
    /**
     * Convert the sibling link field of the associated table to text type.
     */
    return {
        datasheetId: oldField.property.foreignDatasheetId,
        actions: setField(context, foreignSnapshot, foreignOldField, {
            id: foreignOldField.id,
            name: foreignOldField.name,
            type: types_1.FieldType.Text,
            property: model_1.TextField.defaultProperty(),
        }).actions,
    };
}
exports.clearOldBrotherField = clearOldBrotherField;
/**
 * For some types of fields, it may be necessary to perform corresponding operations when other columns are changed.
 * Temporarily only provides operations required for LastModifiedBy/LastModifiedTime types
 */
function setAffectFieldAttr2Action(snapshot, fieldId) {
    var _a;
    const actions = [];
    const fieldMap = (_a = snapshot.meta) === null || _a === void 0 ? void 0 : _a.fieldMap;
    fieldMap && Object.values(fieldMap).forEach(field => {
        switch (field.type) {
            case types_1.FieldType.LastModifiedBy:
            case types_1.FieldType.LastModifiedTime: {
                const fieldIdCollection = field.property.fieldIdCollection.slice();
                const index = fieldIdCollection.indexOf(fieldId);
                if (index > -1) {
                    fieldIdCollection.splice(index, 1);
                    const newField = Object.assign(Object.assign({}, field), { property: Object.assign(Object.assign({}, field.property), { fieldIdCollection }) });
                    const action = model_1.DatasheetActions.setFieldAttr2Action(snapshot, { field: newField });
                    action && actions.push(action);
                }
                break;
            }
            default:
                break;
        }
    });
    return actions;
}
exports.setAffectFieldAttr2Action = setAffectFieldAttr2Action;


/***/ }),

/***/ 8506:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addWidgetToDashboard = void 0;
const config_1 = __webpack_require__(77511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const store_1 = __webpack_require__(56791);
const dashboard_1 = __webpack_require__(89085);
const WIDTH = 3;
exports.addWidgetToDashboard = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { dashboardId, widgetIds, cols } = options;
        const dashboardSnapshot = store_1.Selectors.getDashboardSnapshot(state, dashboardId);
        if (!dashboardSnapshot) {
            return null;
        }
        const layout = dashboardSnapshot.widgetInstallations.layout || [];
        if (layout.length + widgetIds.length > Number((0, config_1.getCustomConfig)().DASHBOARD_WIDGET_MAX_NUM)) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.reach_dashboard_installed_limit, { count: (0, config_1.getCustomConfig)().DASHBOARD_WIDGET_MAX_NUM }));
        }
        const newLayouts = widgetIds.map((widgetId, index) => {
            return {
                id: widgetId,
                widthInColumns: WIDTH,
                heightInRoes: 6,
                // calculation formula
                // https://github.com/STRML/react-grid-layout/blob/master/test/examples/6-dynamic-add-remove.jsx
                row: Number.MAX_SAFE_INTEGER,
                column: ((layout.length + index) * WIDTH) % (cols || 12),
            };
        });
        const addWidgetActions = dashboard_1.DashboardAction.addWidget2Action(dashboardSnapshot, { layout: newLayouts });
        if (!addWidgetActions) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: dashboardId,
            resourceType: types_1.ResourceType.Dashboard,
            actions: addWidgetActions,
        };
    },
};


/***/ }),

/***/ 45873:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.changeDashboardLayout = void 0;
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const dashboard_1 = __webpack_require__(89085);
const store_1 = __webpack_require__(56791);
exports.changeDashboardLayout = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { dashboardId, layout } = options;
        const installedWidgetIds = store_1.Selectors.getInstalledWidgetInDashboard(state);
        if (!installedWidgetIds) {
            return null;
        }
        const ids = layout.map(item => { return item.id; });
        const _ids = [...new Set([...ids, ...installedWidgetIds])];
        if (_ids.length !== ids.length) {
            return null;
        }
        const dashboardSnapshot = store_1.Selectors.getDashboardSnapshot(state);
        if (!dashboardSnapshot) {
            return null;
        }
        const changeDashBoardLayoutAction = dashboard_1.DashboardAction.changeWidgetLayout2Action(dashboardSnapshot, { layout: layout });
        if (!changeDashBoardLayoutAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: dashboardId,
            resourceType: types_1.ResourceType.Dashboard,
            actions: changeDashBoardLayoutAction,
        };
    },
};


/***/ }),

/***/ 72597:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteDashboardWidget = void 0;
const command_manager_1 = __webpack_require__(65654);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const dashboard_1 = __webpack_require__(89085);
exports.deleteDashboardWidget = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { dashboardId, widgetId } = options;
        const snapshot = store_1.Selectors.getDashboardSnapshot(state);
        if (!snapshot) {
            return null;
        }
        const installedIds = store_1.Selectors.getInstalledWidgetInDashboard(state);
        if (!installedIds) {
            return null;
        }
        if (!installedIds.includes(widgetId)) {
            return null;
        }
        const deleteDashboardWidgetAction = dashboard_1.DashboardAction.deleteWidget2Action(snapshot, widgetId);
        if (!deleteDashboardWidgetAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: dashboardId,
            resourceType: types_1.ResourceType.Dashboard,
            actions: deleteDashboardWidgetAction,
        };
    },
};


/***/ }),

/***/ 52296:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(8506), exports);
__exportStar(__webpack_require__(45873), exports);
__exportStar(__webpack_require__(72597), exports);


/***/ }),

/***/ 27790:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addFields = void 0;
const command_manager_1 = __webpack_require__(65654);
const store_1 = __webpack_require__(56791);
const field_types_1 = __webpack_require__(80360);
const utils_1 = __webpack_require__(26854);
const field_1 = __webpack_require__(12775);
const __1 = __webpack_require__(97018);
const model_1 = __webpack_require__(61116);
const i18n_1 = __webpack_require__(47511);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const set_records_1 = __webpack_require__(34844);
exports.addFields = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const activeDatasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const { data, copyCell, internalFix, fieldId, datasheetId = activeDatasheetId } = options;
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const recordMap = snapshot.recordMap;
        const maxFieldCountPerSheet = (0, model_1.getMaxFieldCountPerSheet)();
        if (!snapshot || data.length === 0) {
            return null;
        }
        const isOverLimit = data.length + snapshot.meta.views[0].columns.length > maxFieldCountPerSheet;
        if (isOverLimit) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.columns_count_limit_tips, {
                column_limit: maxFieldCountPerSheet,
            }));
        }
        const newFieldIds = (0, utils_1.getNewIds)(utils_1.IDPrefix.Field, data.length, Object.keys(snapshot.meta.fieldMap));
        const frozenCountMap = new Map();
        let newFieldId = '';
        const linkedActions = [];
        const actions = data.reduce((collected, fieldOption, index) => {
            var _a;
            newFieldId = newFieldIds[index];
            const { index: columnIndex, viewId } = fieldOption;
            const view = snapshot.meta.views.find(view => view.id === viewId);
            const frozenColumnCount = view === null || view === void 0 ? void 0 : view.frozenColumnCount;
            // special handling for associated fields
            // When the table associated with the newly added associated field cannot be queried in the state, 
            // an association cannot be established at this time.
            // Here we convert this field directly to a text field.
            if (fieldOption.data.type === field_types_1.FieldType.Link &&
                !store_1.Selectors.getDatasheet(state, fieldOption.data.property.foreignDatasheetId)) {
                fieldOption = Object.assign(Object.assign({}, fieldOption), { data: Object.assign(Object.assign({}, fieldOption.data), { type: field_types_1.FieldType.Text, property: null }) });
            }
            const field = Object.assign(Object.assign({}, fieldOption.data), { id: fieldOption.data.id ? fieldOption.data.id : newFieldId, property: fieldOption.data.property });
            // Calculated fields need to determine their own datasheet through the field property, 
            // here we force him to specify the datasheetId of the current command
            if (model_1.Field.bindContext(field, state).isComputed) {
                field.property = Object.assign(Object.assign({}, field.property), { datasheetId });
            }
            if (field.type === field_types_1.FieldType.Link) {
                field.property = Object.assign(Object.assign({}, field.property), { brotherFieldId: undefined });
                const linkedAction = (0, field_1.createNewBrotherField)(state, field, datasheetId);
                linkedAction && linkedActions.push(linkedAction);
            }
            // AutoNumber needs to record the current view index
            if (field.type === field_types_1.FieldType.AutoNumber) {
                const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
                const viewIdx = snapshot.meta.views.findIndex(item => item.id === (datasheet === null || datasheet === void 0 ? void 0 : datasheet.activeView)) || 0;
                field.property = Object.assign(Object.assign({}, field.property), { viewIdx });
            }
            if (field.type === field_types_1.FieldType.CreatedBy || field.type === field_types_1.FieldType.LastModifiedBy) {
                const uuids = model_1.Field.bindContext(field, state).getUuidsByRecordMap(recordMap);
                field.property = Object.assign(Object.assign({}, field.property), { uuids });
            }
            const selfCreateNewField = (_a = internalFix === null || internalFix === void 0 ? void 0 : internalFix.selfCreateNewField) !== null && _a !== void 0 ? _a : true;
            // Special repair one-way association, if False, this table does not create a new field
            if (selfCreateNewField) {
                const action = (0, field_1.createNewField)(snapshot, field, fieldOption);
                collected.push(...action);
            }
            if (copyCell) {
                const recordData = Object.keys(recordMap).reduce((data, recordId) => {
                    if (!fieldId)
                        return data;
                    const value = recordMap[recordId].data[fieldId];
                    if (!value)
                        return data;
                    data.push({
                        recordId,
                        fieldId: newFieldId,
                        field,
                        value,
                    });
                    return data;
                }, []);
                const ret = set_records_1.setRecords.execute(context, {
                    cmd: __1.CollaCommandName.SetRecords,
                    data: recordData,
                    internalFix: internalFix,
                });
                if (ret && ret.result === command_manager_1.ExecuteResult.Success) {
                    collected.push(...ret.actions);
                }
            }
            if ((internalFix === null || internalFix === void 0 ? void 0 : internalFix.changeOneWayLinkDstId) && linkedActions.length) {
                const fixOneWayLinkData = {
                    oldBrotherFieldId: snapshot.meta.fieldMap[fieldId].property.brotherFieldId,
                    newBrotherFieldId: linkedActions[0].actions[0]['li']['fieldId'],
                };
                linkedActions[0].actions[linkedActions[0].actions.length - 1]['oi'].property.brotherFieldId = fieldId;
                // Fix one-way association column DstId
                const result = __1.fixOneWayLinkDstId.execute(context, {
                    cmd: __1.CollaCommandName.FixOneWayLinkDstId,
                    data: [fixOneWayLinkData],
                    datasheetId: datasheetId,
                    fieldId: fieldId,
                });
                if (result && result.result === command_manager_1.ExecuteResult.Success) {
                    collected.push(...result.actions);
                }
            }
            if (frozenColumnCount && columnIndex < frozenColumnCount) {
                const count = (frozenCountMap.get(viewId) || frozenColumnCount) + 1;
                const action = model_1.DatasheetActions.setFrozenColumnCount2Action(snapshot, { viewId: viewId, count: count });
                if (action) {
                    frozenCountMap.set(viewId, frozenColumnCount + 1);
                    collected.push(action);
                }
            }
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            data: newFieldId,
            actions,
            datasheetId,
            linkedActions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IAddFieldsOptions & { cmd: 'AddFields' });
 }
 }

 */


/***/ }),

/***/ 38082:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addRecords = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const utils_1 = __webpack_require__(26854);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const config_1 = __webpack_require__(77511);
const MAX_RECORD_NUM = 50000;
exports.addRecords = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, ldcMaintainer, memberFieldMaintainer, fieldMapSnapshot } = context;
        const { viewId, index, count, groupCellValues, cellValues, ignoreFieldPermission } = options;
        const datasheetId = options.datasheetId || store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const fieldPermissionMap = store_1.Selectors.getFieldPermissionMap(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        if (count <= 0 || isNaN(count)) {
            return null;
        }
        if (cellValues && cellValues.length !== count) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_add_row_failed_wrong_length_of_value));
        }
        const recordIds = Object.keys(snapshot.recordMap);
        const newRecordIds = (0, utils_1.getNewIds)(utils_1.IDPrefix.Record, count, recordIds.length ? recordIds : snapshot.meta.views[0].rows.map(item => item.recordId));
        if ((recordIds.length + newRecordIds.length) > MAX_RECORD_NUM) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.max_record_num_per_dst));
        }
        const linkFieldIds = [];
        const specialActions = [];
        const fieldMap = snapshot.meta.fieldMap;
        for (const fieldId in fieldMap) {
            const field = fieldMap[fieldId];
            if (field.type === types_1.FieldType.Link && field.property.brotherFieldId) {
                linkFieldIds.push(field);
            }
            if (field.type === types_1.FieldType.CreatedBy) {
                const uuids = field.property.uuids;
                const uuid = state.user.info && state.user.info['uuid'];
                if (uuid && !uuids.includes(uuid)) {
                    const newField = Object.assign(Object.assign({}, field), { property: Object.assign(Object.assign({}, field.property), { uuids: [...uuids, uuid] }) });
                    const action = model_1.DatasheetActions.setFieldAttr2Action(snapshot, { field: newField });
                    action && specialActions.push(action);
                }
            }
        }
        const memberFieldMap = {};
        /**
         * Add a new record, the record may be a blank record, or there may be some initialized data,
         * The data of the initialized data has three parts:
         * 1. Copy a record, the original data in the target record
         * 2. There is a filter item, if the filter value is a certain value, the filter item will be included
         * 3. There is a group item, adding a record in a group will bring the data of the group
         * Assuming that a record is added, and the above three parts have corresponding data,
         * the weights will decrease in turn, that is, for the same field,
         * the data from the next-level source will be overwritten by the data from the previous-level source.
         */
        const actions = newRecordIds.reduce((collected, recordId, i) => {
            const userInfo = state.user.info;
            const newRecord = model_1.DatasheetActions.getDefaultNewRecord(state, snapshot, recordId, viewId, groupCellValues, userInfo);
            if (cellValues) {
                newRecord.data = Object.assign({}, newRecord.data, cellValues[i]);
            }
            /**
             * Add a new record, which may be substituted into the initial value due to filtering, grouping, and copying a row.
             * If permission is set for one of the columns, and the current user does not have editing permission,
             * the data of the corresponding column needs to be filtered out when setting the data.
             * Because all data will pass here after processing, unified filtering is performed here
             */
            if (fieldPermissionMap && !ignoreFieldPermission) {
                const _data = {};
                for (const fieldId in newRecord.data) {
                    const fieldRole = store_1.Selectors.getFieldRoleByFieldId(fieldPermissionMap, fieldId);
                    if (!fieldRole || fieldRole === config_1.ConfigConstant.Role.Editor) {
                        _data[fieldId] = newRecord.data[fieldId];
                    }
                }
                newRecord.data = _data;
            }
            /**
             * If there is data in the member field in the added record, special processing is required.
             * In the current logic, the member field header will record the unitId of all members in the current column after deduplication,
             * Therefore, when a new record is added and there is initialization data,
             * and the content of the member field exists in the data,
             * it is necessary to check whether the newly added unitId exists in the header.
             * If it does not exist, the data of the member header needs to be updated synchronously
             */
            if (newRecord.data) {
                const _recordData = {};
                for (const [fieldId, cellValue] of Object.entries(newRecord.data)) {
                    if (!fieldMap[fieldId]) {
                        // Compatible processing for data exceptions, some tables in the template center have dirty data
                        continue;
                    }
                    // There will be column data that does not exist in the row record. After the middle layer strengthens the verification,
                    // this part of the data will cause an error, so only the column data that still exists in the fieldId is retained here.
                    _recordData[fieldId] = cellValue;
                    fieldMapSnapshot[fieldId] = fieldMap[fieldId];
                    if (fieldMap[fieldId].type !== types_1.FieldType.Member) {
                        continue;
                    }
                    const unitIds = Array.isArray(cellValue) ? cellValue : [];
                    if (!memberFieldMap[fieldId]) {
                        memberFieldMap[fieldId] = [...unitIds];
                        continue;
                    }
                    memberFieldMap[fieldId].push(...unitIds);
                }
                newRecord.data = _recordData;
            }
            const action = model_1.DatasheetActions.addRecord2Action(snapshot, {
                viewId,
                record: newRecord,
                index: index + i,
            });
            if (!action) {
                return collected;
            }
            linkFieldIds.forEach((field) => {
                const value = newRecord.data[field.id];
                const linkedSnapshot = store_1.Selectors.getSnapshot(state, field.property.foreignDatasheetId);
                // When the associated field cell itself has no value, do nothing
                if (!value) {
                    return;
                }
                ldcMaintainer.insert(state, linkedSnapshot, newRecord.id, field, value, null);
            });
            collected.push(...action);
            return collected;
        }, []);
        for (const [fieldId, cellValueForUnitIds] of Object.entries(memberFieldMap)) {
            const field = fieldMap[fieldId];
            const unitIds = field.property.unitIds || [];
            const _unitIds = [...new Set([...unitIds, ...cellValueForUnitIds])];
            if (_unitIds.length === unitIds.length) {
                continue;
            }
            memberFieldMaintainer.insert(fieldId, _unitIds, datasheetId);
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            data: newRecordIds,
            actions: [...actions, ...specialActions],
            fieldMapSnapshot,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IAddRecordsOptions & { cmd: 'AddRecords' }): ICollaCommandExecuteResult<IAddRecordsResult>;
 }
 }

 */


/***/ }),

/***/ 42206:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addViews = void 0;
const command_manager_1 = __webpack_require__(65654);
const ot_1 = __webpack_require__(65315);
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.addViews = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const views = snapshot.meta.views;
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        // const checkViewCount = (viewType: ViewType) => {
        //   const spaceInfo = state.space.curSpaceInfo!;
        //
        //   if(state.pageParams.shareId){
        //     return;
        //   }
        //
        //   switch (viewType) {
        //     case ViewType.Calendar: {
        //       subscribeUsageCheck('maxCalendarViewsInSpace', spaceInfo['calendarViewNums'] + 1);
        //       return;
        //     }
        //     case ViewType.Gantt: {
        //       subscribeUsageCheck('maxGanttViewsInSpace', spaceInfo['ganttViewNums'] + 1);
        //       return;
        //     }
        //     case ViewType.Kanban: {
        //       subscribeUsageCheck('maxKanbanViewsInSpace', spaceInfo['kanbanViewNums'] + 1);
        //       return;
        //     }
        //     case ViewType.Gallery: {
        //       subscribeUsageCheck('maxGalleryViewsInSpace', spaceInfo['galleryViewNums'] + 1);
        //       return;
        //     }
        //   }
        // };
        const actions = data.reduce((collected, recordOption) => {
            const { startIndex, view } = recordOption;
            // Check if viewId exists,
            // The newly added viewid should not conflict with the current and future ids
            if (views.findIndex(item => item.id === view.id) !== -1) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_create_view_failed_duplicate_view_id));
            }
            // checkViewCount(view.type);
            const action = model_1.DatasheetActions.addView2Action(snapshot, { startIndex, view });
            if (!action) {
                return collected;
            }
            if (collected.length) {
                const transformedAction = ot_1.jot.transform([action], collected, 'right');
                collected.push(...transformedAction);
            }
            else {
                collected.push(action);
            }
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IAddViewOptions & { cmd: 'AddViews' });
 }
 }

 */


/***/ }),

/***/ 7139:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.changeWidgetInPanelHeight = void 0;
const command_manager_1 = __webpack_require__(65654);
const selectors_1 = __webpack_require__(964);
const model_1 = __webpack_require__(61116);
exports.changeWidgetInPanelHeight = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { widgetId, resourceId, resourceType, panelId, widgetHeight } = options;
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        if (!widgetPanels) {
            return null;
        }
        const widgetPanelIndex = widgetPanels.findIndex(item => item.id === panelId);
        if (widgetPanelIndex < 0) {
            return null;
        }
        const widgets = widgetPanels[widgetPanelIndex].widgets;
        const widgetIndex = widgets.findIndex(item => item.id === widgetId);
        if (widgetIndex < 0) {
            return null;
        }
        const changeWidgetHeightAction = model_1.DatasheetActions.changeWidgetHeight2Action(state, { widgetIndex, widgetPanelIndex, widgetHeight, resourceId, resourceType });
        if (!changeWidgetHeightAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId,
            resourceType,
            actions: changeWidgetHeightAction,
        };
    },
};


/***/ }),

/***/ 77653:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteComment = void 0;
const types_1 = __webpack_require__(73578);
const selectors_1 = __webpack_require__(964);
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
exports.deleteComment = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { recordId, datasheetId, comment } = options;
        const actions = [];
        const record = (0, selectors_1.getRecord)(state, recordId, datasheetId);
        if (!record) {
            return null;
        }
        const deleteCommentAction = model_1.DatasheetActions.deleteComment2Action({ datasheetId, recordId, comments: [comment] });
        if (!deleteCommentAction) {
            return null;
        }
        actions.push(...deleteCommentAction);
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 2264:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteField = void 0;
const command_manager_1 = __webpack_require__(65654);
const field_1 = __webpack_require__(12775);
const engine_1 = __webpack_require__(39036);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.deleteField = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, datasheetId: _datasheetId } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, _datasheetId || datasheetId);
        if (!snapshot) {
            return null;
        }
        const actions = [];
        const linkedActions = [];
        // delete all cellValues of this field
        data.forEach(({ fieldId }) => {
            if (!snapshot.meta.fieldMap[fieldId]) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.field_had_deleted));
            }
            for (const recordId in snapshot.recordMap) {
                const action = model_1.DatasheetActions.setRecord2Action(snapshot, { recordId, fieldId, value: null });
                action && actions.push(action);
            }
            // For LastModifiedBy/LastModifiedTime field type, fieldIdCollection needs to be updated
            const newActions = (0, field_1.setAffectFieldAttr2Action)(snapshot, fieldId);
            actions.push(...newActions);
        });
        const { viewId } = state.pageParams;
        const collected = data.reduce((collected, { fieldId, deleteBrotherField }) => {
            const field = snapshot.meta.fieldMap[fieldId];
            if (field.type === types_1.FieldType.Link) {
                const linkedAction = (0, field_1.clearOldBrotherField)(context, field, deleteBrotherField);
                linkedAction && linkedActions.push(linkedAction);
            }
            let action = model_1.DatasheetActions.deleteField2Action(snapshot, {
                fieldId, datasheetId, viewId
            });
            if (!action) {
                return collected;
            }
            if (collected.length) {
                action = engine_1.jot.transform(action, collected, 'right');
            }
            collected.push(...action);
            return collected;
        }, []);
        actions.push(...collected);
        console.log({ actions });
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: _datasheetId || datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IAddRecordsOptions & { cmd: 'AddRecords' }): ICollaCommandExecuteResult<IAddRecordsResult>;
 }
 }

 */


/***/ }),

/***/ 84598:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteRecord = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const player_1 = __webpack_require__(63325);
exports.deleteRecord = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, ldcMaintainer } = context;
        const { data } = options;
        const datasheetId = options.datasheetId || store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const linkField = [];
        for (const fieldId in snapshot.meta.fieldMap) {
            const field = snapshot.meta.fieldMap[fieldId];
            if (field.type === types_1.FieldType.Link) {
                linkField.push(field);
            }
        }
        const getFieldByFieldId = (fieldId) => {
            return store_1.Selectors.getField(state, fieldId, datasheetId);
        };
        const actions = model_1.DatasheetActions.deleteRecords(snapshot, {
            recordIds: data,
            getFieldByFieldId,
            state,
        });
        /**
         * According to the self-association field, generate a map, the key is recordId,
         * and the value is the id array of those records associated with this recordId.
         * Multiple self-associated fields will have multiple such maps
         */
        const fieldRelinkMap = {};
        linkField.filter(field => {
            // Filter out the associated field of the word table
            return !field.property.brotherFieldId;
        }).forEach(field => {
            const reLinkRecords = {};
            Object.values(snapshot.recordMap).forEach(v => {
                const linkRecords = v.data[field.id];
                if (linkRecords) {
                    linkRecords.forEach(id => {
                        if (!reLinkRecords[id]) {
                            reLinkRecords[id] = [];
                        }
                        reLinkRecords[id].push(v.id);
                    });
                }
            });
            fieldRelinkMap[field.id] = reLinkRecords;
        });
        data.forEach(recordId => {
            const record = snapshot.recordMap[recordId];
            if (!record) {
                return;
            }
            linkField.forEach((field) => {
                let oldValue;
                // two tables are associated
                if (field.property.brotherFieldId) {
                    oldValue = record.data[field.id];
                }
                else {
                    // self-association
                    oldValue = fieldRelinkMap[field.id][record.id] || undefined;
                    // LinkedActions are not generated when the self-table is associated and the associated record contains the deleted record itself
                    oldValue = oldValue === null || oldValue === void 0 ? void 0 : oldValue.filter(item => !data.includes(item));
                }
                const linkedSnapshot = store_1.Selectors.getSnapshot(state, field.property.foreignDatasheetId);
                // When the associated field cell itself has no value, do nothing
                if (!(oldValue === null || oldValue === void 0 ? void 0 : oldValue.length)) {
                    return;
                }
                if (!linkedSnapshot) {
                    return player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                        error: new Error(`foreignDatasheet:${field.property.foreignDatasheetId} has been deleted`),
                        metaData: { foreignDatasheetId: field.property.foreignDatasheetId },
                    });
                }
                ldcMaintainer.insert(state, linkedSnapshot, record.id, field, null, oldValue);
            });
        }, []);
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IAddRecordsOptions & { cmd: 'AddRecords' }): ICollaCommandExecuteResult<IAddRecordsResult>;
 }
 }

 */


/***/ }),

/***/ 13744:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteViews = void 0;
const lodash_1 = __webpack_require__(46517);
const ot_1 = __webpack_require__(65315);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.deleteViews = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const views = snapshot.meta.views;
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        const actions = data.reduce((collected, recordOption) => {
            const { viewId } = recordOption;
            if (views.length === 1) {
                // The last view cannot be deleted
                return collected;
            }
            // Check if viewId exists
            if (!(0, lodash_1.find)(views, { id: viewId })) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_del_view_failed_not_found_target));
            }
            const action = model_1.DatasheetActions.deleteView2Action(snapshot, { viewId });
            if (!action) {
                return collected;
            }
            if (collected.length) {
                const transformedAction = ot_1.jot.transform([action], collected, 'right');
                collected.push(...transformedAction);
            }
            else {
                collected.push(action);
            }
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IDeleteViewsOptions & { cmd: 'DeleteViews' });
 }
 }

 */


/***/ }),

/***/ 57188:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.deleteWidgetPanel = void 0;
const selectors_1 = __webpack_require__(964);
const command_manager_1 = __webpack_require__(65654);
const datasheet_1 = __webpack_require__(55384);
exports.deleteWidgetPanel = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { deletePanelId, resourceType, resourceId } = options;
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        if (!widgetPanels) {
            return null;
        }
        const panel = widgetPanels.find(item => item.id === deletePanelId);
        if (!panel) {
            return null;
        }
        const deleteWidgetPanelAction = datasheet_1.DatasheetActions.deleteWidgetPanel2Action(state, deletePanelId, widgetPanels, resourceType);
        if (!deleteWidgetPanelAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: deleteWidgetPanelAction,
        };
    },
};


/***/ }),

/***/ 9899:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fillDataToCell = void 0;
const command_manager_1 = __webpack_require__(65654);
const commands_1 = __webpack_require__(97018);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const set_field_attr_1 = __webpack_require__(75701);
const set_records_1 = __webpack_require__(34844);
const dayjs_1 = __importDefault(__webpack_require__(1635));
const EARLIEST_DATE = -2177395200000; // time only supports up to 1901-01-01
const DELTA = 1e-12; // Tolerance when comparing floating-point numbers, EPSILON precision is too high
function patternFinder(selectCellCol, fieldType, state, snapshot, field) {
    if (selectCellCol.length < 2)
        return { type: 'copy' };
    const nums = [];
    selectCellCol.forEach((selectCell) => {
        let cellValue = store_1.Selectors.getCellValue(state, snapshot, selectCell.recordId, selectCell.fieldId);
        cellValue = (0, model_1.handleEmptyCellValue)(cellValue, model_1.Field.bindContext(field, state).basicValueType);
        nums.push(cellValue);
    });
    if (nums.find(n => n === null) === null) {
        return { type: 'copy' };
    }
    if (fieldType === types_1.FieldType.Number) {
        if (Math.max(...nums) > (1e16 - 1)) {
            return { type: 'copy' };
        }
        const diff = nums[1] - nums[0];
        for (let i = 2; i < nums.length; i++) {
            const newDiff = nums[i] - nums[i - 1];
            if (Math.abs(newDiff - diff) > DELTA) {
                return { type: 'copy' };
            }
        }
        return { type: 'arithmetic', args: { diff: diff } };
    }
    else if (fieldType === types_1.FieldType.DateTime) {
        const { property: { includeTime, dateFormat } } = field;
        const _nums = includeTime ? nums : nums.map(utils_1.getDate);
        // The format of the time is different without the corresponding calculation logic
        if (includeTime) { // When the specific point is reached
            const diff = _nums[1] - _nums[0];
            for (let i = 2; i < _nums.length; i++) {
                const newDiff = _nums[i] - _nums[i - 1];
                if (Math.abs(newDiff - diff) > DELTA) {
                    return { type: 'copy' };
                }
            }
            return { type: 'dateArithmetic', args: { dDiff: diff, dUnit: 'time' } };
        }
        if ([types_1.DateFormat['YYYY/MM/DD'], types_1.DateFormat['YYYY-MM-DD'], types_1.DateFormat['DD/MM/YYYY'],
            types_1.DateFormat['MM-DD'], types_1.DateFormat['DD']].includes(dateFormat)) { // When the date arrives, the filled date defaults to 0:00
            const diff = (0, dayjs_1.default)(_nums[1]).diff(_nums[0], 'day');
            for (let i = 2; i < _nums.length; i++) {
                const newDiff = (0, dayjs_1.default)(_nums[i]).diff(_nums[i - 1], 'day');
                if (Math.abs(newDiff - diff) > DELTA) {
                    return { type: 'copy' };
                }
            }
            return { type: 'dateArithmetic', args: { dDiff: diff, dUnit: 'day' } };
        }
        else if ([types_1.DateFormat['YYYY-MM'], types_1.DateFormat['MM']].includes(dateFormat)) {
            // When it comes to the month, the filled date defaults to the 1st of the month
            const diff = (0, dayjs_1.default)(_nums[1]).diff(_nums[0], 'month');
            for (let i = 2; i < _nums.length; i++) {
                const newDiff = (0, dayjs_1.default)(_nums[i]).diff(_nums[i - 1], 'month');
                if (Math.abs(newDiff - diff) > DELTA) {
                    return { type: 'copy' };
                }
            }
            return { type: 'dateArithmetic', args: { dDiff: diff, dUnit: 'month' } };
        }
        else if (dateFormat === types_1.DateFormat['YYYY']) { // When it comes to the year, the filled date defaults to January 1 of the current year
            const diff = (0, dayjs_1.default)(_nums[1]).diff(_nums[0], 'year');
            for (let i = 2; i < _nums.length; i++) {
                const newDiff = (0, dayjs_1.default)(_nums[i]).diff(_nums[i - 1], 'year');
                if (Math.abs(newDiff - diff) > DELTA) {
                    return { type: 'copy' };
                }
            }
            return { type: 'dateArithmetic', args: { dDiff: diff, dUnit: 'year' } };
        }
    }
    return { type: 'copy' };
}
exports.fillDataToCell = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, fieldMapSnapshot } = context;
        const { selectionRange, fillRange, direction } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        if (!state || !datasheetId || !fillRange) {
            return null;
        }
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const actions = [];
        const linkedActions = [];
        function copyCol(selectCells, fillCells) {
            const data = [];
            for (let i = 0; i < fillCells.length; i++) {
                const cellIndex = i % selectCells.length;
                const selectCell = selectCells[cellIndex];
                const fillCell = fillCells[i];
                const fieldId = fillCell.fieldId;
                const field = store_1.Selectors.getField(state, fieldId, datasheetId);
                let cellValue = store_1.Selectors.getCellValue(state, snapshot, selectCell.recordId, selectCell.fieldId);
                cellValue = (0, model_1.handleEmptyCellValue)(cellValue, model_1.Field.bindContext(field, state).basicValueType);
                data.push({
                    recordId: fillCell.recordId,
                    fieldId: fillCell.fieldId,
                    value: cellValue,
                });
            }
            return data;
        }
        function arithmeticCol(diff, selectCellCol, fillRangeCells, unit) {
            const data = [];
            const lastCell = selectCellCol.slice(-1)[0];
            const base = store_1.Selectors.getCellValue(state, snapshot, lastCell.recordId, lastCell.fieldId);
            for (let i = 0; i < fillRangeCells.length; i++) {
                const cell = fillRangeCells[i];
                let value;
                if (unit === 'time') {
                    value = diff * (i + 1) + base;
                }
                else if (unit === 'day') {
                    value = (0, dayjs_1.default)((0, dayjs_1.default)(base).format('YYYY/MM/DD')).add(diff * (i + 1), 'day').valueOf();
                }
                else if (unit === 'month') {
                    value = (0, dayjs_1.default)((0, dayjs_1.default)(base).format('YYYY/MM')).add(diff * (i + 1), 'month').valueOf();
                }
                else if (unit === 'year') {
                    value = (0, dayjs_1.default)((0, dayjs_1.default)(base).format('YYYY')).add(diff * (i + 1), 'year').valueOf();
                }
                else {
                    value = diff * (i + 1) + base;
                }
                data.push({
                    recordId: cell.recordId,
                    fieldId: cell.fieldId,
                    value: value,
                });
            }
            return data;
        }
        // Calculate vertically filled data
        const computeFillDataVertical = (fillRangeCells, selectRangeCells, direction) => {
            const data = [];
            const tSelectRangeCells = (0, utils_1.transpose)(selectRangeCells);
            const tFillRangeCells = (0, utils_1.transpose)(fillRangeCells);
            for (let j = 0; j < tSelectRangeCells.length; j++) { // Calculate by column
                const tSelectCellCol = tSelectRangeCells[j];
                const tFillCellCol = tFillRangeCells[j];
                if (direction === model_1.FillDirection.Top) {
                    tSelectCellCol.reverse();
                    tFillCellCol.reverse();
                }
                const fieldId = tSelectCellCol[0].fieldId;
                const field = store_1.Selectors.getField(state, fieldId, datasheetId);
                // Determine the column type, find rules for time and numbers
                if (field.type === types_1.FieldType.Number || field.type === types_1.FieldType.DateTime) {
                    const pattern = patternFinder(tSelectCellCol, field.type, state, snapshot, field);
                    switch (pattern.type) {
                        case 'arithmetic':
                            const { diff } = pattern.args;
                            const colData = arithmeticCol(diff, tSelectCellCol, tFillCellCol);
                            data.push(...colData);
                            break;
                        case 'dateArithmetic':
                            const { dDiff, dUnit } = pattern.args;
                            const dColData = arithmeticCol(dDiff, tSelectCellCol, tFillCellCol, dUnit);
                            if (dColData.find(data => data.value < EARLIEST_DATE)) {
                                data.push(...copyCol(tSelectCellCol, tFillCellCol));
                            }
                            else {
                                data.push(...dColData);
                            }
                            break;
                        case 'copy':
                            data.push(...copyCol(tSelectCellCol, tFillCellCol));
                            break;
                    }
                }
                else {
                    data.push(...copyCol(tSelectCellCol, tFillCellCol));
                }
            }
            return data;
        };
        const updateFillFieldsProperty = (selectFields, fillFields, selectCells) => {
            const newFillFields = [];
            for (const [index, field] of fillFields.entries()) {
                const selectField = selectFields[index % selectFields.length];
                const stdValues = selectCells.filter(cell => cell.fieldId === selectField.id).map(cell => {
                    let cellValue = store_1.Selectors.getCellValue(state, snapshot, cell.recordId, cell.fieldId);
                    cellValue = (0, model_1.handleEmptyCellValue)(cellValue, model_1.Field.bindContext(selectField, state).basicValueType);
                    return model_1.Field.bindContext(selectField, state).cellValueToStdValue(cellValue);
                });
                const newField = (0, utils_1.fastCloneDeep)(field);
                const newProperty = newField.type === types_1.FieldType.Member ? newField.property :
                    model_1.Field.bindContext(newField, state).enrichProperty(stdValues);
                const data = Object.assign(Object.assign({}, newField), { property: newProperty });
                newFillFields.push(data);
                const rst = set_field_attr_1.setFieldAttr.execute(context, {
                    cmd: commands_1.CollaCommandName.SetFieldAttr,
                    fieldId: newField.id,
                    data,
                });
                if (rst && rst.result === command_manager_1.ExecuteResult.Success) {
                    actions.push(...rst.actions);
                }
            }
            return newFillFields;
        };
        // Calculate horizontally filled data
        const computeFillDataHorizontal = (fillRangeCells, selectRangeCells, direction) => {
            const data = [];
            const selectCells = (0, lodash_1.zip)(...selectRangeCells).flat();
            const fillCells = (0, lodash_1.zip)(...fillRangeCells).flat();
            if (direction === model_1.FillDirection.Left) {
                selectCells.reverse();
                fillCells.reverse();
            }
            // Horizontal padding, may need to extend the property of the field
            const fillFields = store_1.Selectors.getRangeFields(state, fillRange, datasheetId);
            let newFillFields = fillFields;
            const selectFields = store_1.Selectors.getRangeFields(state, selectionRange[0], datasheetId);
            newFillFields = updateFillFieldsProperty(selectFields, fillFields, selectCells);
            for (let i = 0; i < fillCells.length; i++) {
                const cellIndex = i % selectCells.length;
                const selectCell = selectCells[cellIndex];
                const fillCell = fillCells[i];
                const fillField = newFillFields.find(f => f.id === fillCell.fieldId);
                const selectField = store_1.Selectors.getField(state, selectCell.fieldId, datasheetId);
                let selectCellValue = store_1.Selectors.getCellValue(state, snapshot, selectCell.recordId, selectCell.fieldId);
                selectCellValue = (0, model_1.handleEmptyCellValue)(selectCellValue, model_1.Field.bindContext(selectField, state).basicValueType);
                const selectStdVal = model_1.Field.bindContext(selectField, state).cellValueToStdValue(selectCellValue);
                const willFillCellValue = model_1.Field.bindContext(fillField, state).stdValueToCellValue(selectStdVal);
                // Horizontal padding involves field conversion, select cv > stdVal > Fill cv
                data.push({
                    recordId: fillCell.recordId,
                    fieldId: fillCell.fieldId,
                    value: willFillCellValue,
                });
            }
            return data;
        };
        const fillDataToCell = (selectionRange, fillRange, direction) => {
            if (!fillRange || !selectionRange) {
                return;
            }
            const selectionRangeCells = store_1.Selectors.getCellMatrixFromRange(state, selectionRange[0]);
            const fillRangeCells = store_1.Selectors.getCellMatrixFromRange(state, fillRange);
            if (!(selectionRangeCells && fillRangeCells)) {
                return;
            }
            let data = [];
            switch (direction) {
                case model_1.FillDirection.Below:
                case model_1.FillDirection.Top:
                    data = computeFillDataVertical(fillRangeCells, selectionRangeCells, direction);
                    break;
                case model_1.FillDirection.Right:
                case model_1.FillDirection.Left:
                    data = computeFillDataHorizontal(fillRangeCells, selectionRangeCells, direction);
                    break;
                default:
                    return;
            }
            if (data.length) {
                const rst = set_records_1.setRecords.execute(context, {
                    cmd: commands_1.CollaCommandName.SetRecords,
                    data,
                });
                if (rst) {
                    if (rst.result === command_manager_1.ExecuteResult.Fail) {
                        return rst;
                    }
                    actions.push(...rst.actions);
                    Object.assign(fieldMapSnapshot, rst.fieldMapSnapshot);
                    linkedActions.push(...(rst.linkedActions || []));
                }
            }
            return;
        };
        fillDataToCell(selectionRange, fillRange, direction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
            fieldMapSnapshot
        };
    },
};


/***/ }),

/***/ 86985:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fixOneWayLinkDstId = void 0;
const model_1 = __webpack_require__(61116);
const command_manager_1 = __webpack_require__(65654);
const types_1 = __webpack_require__(73578);
const lodash_1 = __webpack_require__(46517);
const store_1 = __webpack_require__(56791);
exports.fixOneWayLinkDstId = {
    undoable: false,
    execute: (context, options) => {
        const { model: state } = context;
        const { datasheetId, fieldId, data } = options;
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if ((0, lodash_1.isEmpty)(data) || !snapshot) {
            return null;
        }
        const field = snapshot.meta.fieldMap[fieldId];
        const actions = data.reduce((collected, linkFieldOption) => {
            if (!linkFieldOption)
                return collected;
            const newField = Object.assign(Object.assign({}, field), { property: Object.assign(Object.assign({}, field.property), { brotherFieldId: linkFieldOption.newBrotherFieldId }) });
            const action = model_1.DatasheetActions.changeOneWayLinkDstId2Action(snapshot, { fieldId: fieldId, newField });
            action && collected.push(action);
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions
        };
    },
};


/***/ }),

/***/ 64445:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(34844), exports);
__exportStar(__webpack_require__(27790), exports);
__exportStar(__webpack_require__(75701), exports);
__exportStar(__webpack_require__(1767), exports);
__exportStar(__webpack_require__(88823), exports);
__exportStar(__webpack_require__(38082), exports);
__exportStar(__webpack_require__(99826), exports);
__exportStar(__webpack_require__(52383), exports);
__exportStar(__webpack_require__(13744), exports);
__exportStar(__webpack_require__(42206), exports);
__exportStar(__webpack_require__(9950), exports);
__exportStar(__webpack_require__(84598), exports);
__exportStar(__webpack_require__(93411), exports);
__exportStar(__webpack_require__(2264), exports);
__exportStar(__webpack_require__(28218), exports);
__exportStar(__webpack_require__(49238), exports);
__exportStar(__webpack_require__(58222), exports);
__exportStar(__webpack_require__(67235), exports);
__exportStar(__webpack_require__(39658), exports);
__exportStar(__webpack_require__(18667), exports);
__exportStar(__webpack_require__(22269), exports);
__exportStar(__webpack_require__(9899), exports);
__exportStar(__webpack_require__(18781), exports);
__exportStar(__webpack_require__(86777), exports);
__exportStar(__webpack_require__(57357), exports);
__exportStar(__webpack_require__(49849), exports);
__exportStar(__webpack_require__(90001), exports);
__exportStar(__webpack_require__(75509), exports);
__exportStar(__webpack_require__(77653), exports);
__exportStar(__webpack_require__(24537), exports);
__exportStar(__webpack_require__(80871), exports);
__exportStar(__webpack_require__(57188), exports);
__exportStar(__webpack_require__(58093), exports);
__exportStar(__webpack_require__(93271), exports);
__exportStar(__webpack_require__(7139), exports);
__exportStar(__webpack_require__(94823), exports);
__exportStar(__webpack_require__(78308), exports);
__exportStar(__webpack_require__(66484), exports);
__exportStar(__webpack_require__(86985), exports);
__exportStar(__webpack_require__(86405), exports);
__exportStar(__webpack_require__(43197), exports);


/***/ }),

/***/ 90001:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.insertComment = void 0;
const utils_1 = __webpack_require__(26854);
const types_1 = __webpack_require__(73578);
const store_1 = __webpack_require__(56791);
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
exports.insertComment = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { datasheetId, recordId, comments } = options;
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const recordMap = snapshot.recordMap;
        if (!recordMap[recordId]) {
            return null;
        }
        const actions = [];
        const recordComments = recordMap[recordId].comments;
        const commentIds = recordComments ? recordComments.map(item => item.commentId) : [];
        const action = comments.reduce((collection, comment) => {
            const commentId = (0, utils_1.getNewIds)(utils_1.IDPrefix.Comment, 1, commentIds)[0];
            commentIds.push(commentId);
            const insertAction = model_1.DatasheetActions.insertComment2Action(state, {
                datasheetId,
                recordId,
                insertComments: [Object.assign(Object.assign({}, comment), { commentId: commentId })],
            });
            if (!insertAction) {
                return collection;
            }
            collection.push(...insertAction);
            return collection;
        }, []);
        if (!action) {
            return null;
        }
        actions.push(...action);
        if (!actions.length) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            datasheetId,
        };
    },
};


/***/ }),

/***/ 10089:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.manualSaveView = void 0;
const model_1 = __webpack_require__(61116);
const command_manager_1 = __webpack_require__(65654);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.manualSaveView = {
    undoable: false,
    execute: (context, options) => {
        const { model: state, fieldMapSnapshot } = context;
        const { viewProperty, viewId } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const manualSaveViewActions = model_1.DatasheetActions.manualSaveView2Action(snapshot, { viewId, viewProperty });
        if (!manualSaveViewActions) {
            return null;
        }
        const actions = [...manualSaveViewActions];
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            fieldMapSnapshot
        };
    },
};


/***/ }),

/***/ 52383:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.modifyViews = void 0;
const command_manager_1 = __webpack_require__(65654);
const config_1 = __webpack_require__(77511);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const store_1 = __webpack_require__(56791);
exports.modifyViews = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, datasheetId: _datasheetId } = options;
        const activeDatasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const datasheetId = _datasheetId || activeDatasheetId;
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const views = snapshot.meta.views;
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        const actions = data.reduce((collected, recordOption) => {
            const { viewId, key, value } = recordOption;
            // character is too long or not filled
            if (key === 'name' && (value.length > ((0, config_1.getCustomConfig)().VIEW_NAME_MAX_COUNT || 30) || value.length < 1)) {
                return collected;
            }
            // Check if there is a view with the same name
            if (key === 'name' && (0, lodash_1.find)(views, { name: value })) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_view_failed_duplicate_name));
            }
            // Check if viewId exists
            if (!(0, lodash_1.find)(views, { id: viewId })) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_view_failed_not_found_target));
            }
            const action = model_1.DatasheetActions.modifyView2Action(snapshot, { viewId, key, value });
            action && collected.push(...action);
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IModifyViewOptions & { cmd: 'ReplaceViews' });
 }
 }

 */


/***/ }),

/***/ 93411:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveColumn = void 0;
const lodash_1 = __webpack_require__(46517);
const ot_1 = __webpack_require__(65315);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.moveColumn = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, viewId } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const view = snapshot.meta.views.find(view => view.id === viewId);
        const getColumnIndexMap = () => {
            const columnsMap = {};
            if (!view) {
                return columnsMap;
            }
            for (const [k, v] of view.columns.entries()) {
                columnsMap[v.fieldId] = k;
            }
            return columnsMap;
        };
        const columnIndexMapById = getColumnIndexMap();
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        if (!view) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_move_column_failed_invalid_params));
        }
        const frozenColumnCount = view.frozenColumnCount;
        let finalFrozenColumnCount = frozenColumnCount;
        const actions = data.reduce((collected, recordOption) => {
            const { fieldId, overTargetId, direction } = recordOption;
            const originColumnIndex = columnIndexMapById[fieldId];
            const targetColumnIndex = columnIndexMapById[overTargetId];
            let targetIndex = originColumnIndex > targetColumnIndex ? targetColumnIndex + 1 : targetColumnIndex;
            if (direction === store_1.DropDirectionType.BEFORE) {
                targetIndex--;
            }
            if (targetIndex === 0) {
                // Do not allow dragging other columns to the first column
                return collected;
            }
            if (originColumnIndex === 0) {
                // The first column does not allow dragging
                return collected;
            }
            const action = model_1.DatasheetActions.moveColumns2Action(snapshot, { fieldId, target: targetIndex, viewId });
            if (!action) {
                return collected;
            }
            if (frozenColumnCount) {
                if (targetIndex < frozenColumnCount && originColumnIndex >= frozenColumnCount) {
                    finalFrozenColumnCount++;
                }
                if (targetIndex >= frozenColumnCount && originColumnIndex < frozenColumnCount) {
                    finalFrozenColumnCount--;
                }
            }
            if (collected.length) {
                const transformedAction = ot_1.jot.transform([action], collected, 'right');
                collected.push(...transformedAction);
            }
            else {
                collected.push(action);
            }
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        if (frozenColumnCount && frozenColumnCount !== finalFrozenColumnCount) {
            const action = model_1.DatasheetActions.setFrozenColumnCount2Action(snapshot, { viewId, count: finalFrozenColumnCount });
            action && actions.push(action);
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IMoveRowOptions & { cmd: 'MoveRow' });
 }
 }

 */


/***/ }),

/***/ 9950:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveRow = void 0;
const lodash_1 = __webpack_require__(46517);
const ot_1 = __webpack_require__(65315);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const set_records_1 = __webpack_require__(34844);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const commands_1 = __webpack_require__(97018);
const player_1 = __webpack_require__(63325);
exports.moveRow = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, recordData, viewId } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const recordMap = store_1.Selectors.getRowsIndexMap(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const views = snapshot.meta.views;
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        if (!views.some(item => item.id === viewId)) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_move_row_failed_invalid_params));
        }
        const linkedActions = [];
        const actions = data.reduce((collected, recordOption) => {
            const { recordId, overTargetId: targetRecordId, direction } = recordOption;
            const originRowIndex = recordMap.get(recordId);
            const targetRowIndex = recordMap.get(targetRecordId);
            if (targetRowIndex == null || originRowIndex == null) {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error('There is a problem with the moved row record data'),
                    metaData: {
                        recordId,
                        targetRecordId,
                        targetRowIndex,
                        originRowIndex,
                        rowIndexMap: JSON.stringify(recordMap),
                        recordIds: JSON.stringify(Object.keys(snapshot.recordMap)),
                        rows: JSON.stringify(snapshot.meta.views[0].rows)
                    },
                });
                return collected;
            }
            let targetIndex = originRowIndex > targetRowIndex ? targetRowIndex + 1 : targetRowIndex;
            if (direction === store_1.DropDirectionType.BEFORE) {
                targetIndex--;
            }
            const action = model_1.DatasheetActions.moveRow2Action(snapshot, { recordId, target: targetIndex, viewId });
            if (!action) {
                return collected;
            }
            if (collected.length) {
                const transformedAction = ot_1.jot.transform([action], collected, 'right');
                collected.push(...transformedAction);
            }
            else {
                collected.push(action);
            }
            return collected;
        }, []);
        if (recordData) {
            const rst = set_records_1.setRecords.execute(context, {
                cmd: commands_1.CollaCommandName.SetRecords,
                data: recordData,
            });
            if (rst) {
                if (rst.result === command_manager_1.ExecuteResult.Fail) {
                    return rst;
                }
                actions.push(...rst.actions);
                linkedActions.push(...(rst.linkedActions || []));
            }
        }
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
        };
    },
};


/***/ }),

/***/ 99826:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveViews = void 0;
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.moveViews = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const views = snapshot.meta.views;
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        const actions = data.reduce((collected, recordOption) => {
            const { newIndex, viewId } = recordOption;
            // Check if viewId exists
            if (!(0, lodash_1.find)(views, { id: viewId })) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_move_view_failed_not_found_target));
            }
            const action = model_1.DatasheetActions.moveView2Action(snapshot, { viewId, target: newIndex });
            action && collected.push(action);
            return collected;
        }, []);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

declare module '../../command_manager/command_manager' {
  interface CollaCommandManager {
    execute(options: IMoveViewOptions & { cmd: 'MoveViews' });
  }
}

*/


/***/ }),

/***/ 94823:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveWidget = void 0;
const command_manager_1 = __webpack_require__(65654);
const datasheet_1 = __webpack_require__(55384);
const selectors_1 = __webpack_require__(964);
exports.moveWidget = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { layout, panelId, resourceType, resourceId } = options;
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        if (!widgetPanels) {
            return null;
        }
        const activePanelIndex = widgetPanels.findIndex(item => item.id === panelId);
        if (activePanelIndex < 0) {
            return null;
        }
        const widgets = widgetPanels[activePanelIndex].widgets;
        const installedWidgetIds = widgets.map(widget => widget.id);
        const ids = layout.map(v => v.id);
        const _ids = [...new Set([...ids, ...installedWidgetIds])];
        if (_ids.length !== ids.length) {
            return null;
        }
        const moveWidgetAction = datasheet_1.DatasheetActions.moveWidget2Action(state, {
            widgetPanelIndex: activePanelIndex, layout, resourceType, resourceId
        });
        if (!moveWidgetAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: moveWidgetAction,
        };
    },
};


/***/ }),

/***/ 80871:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.moveWidgetPanel = void 0;
const selectors_1 = __webpack_require__(964);
const command_manager_1 = __webpack_require__(65654);
const datasheet_1 = __webpack_require__(55384);
exports.moveWidgetPanel = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { targetIndex, panelId, resourceId, resourceType } = options;
        if (targetIndex > 2) {
            return null;
        }
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        if (!widgetPanels) {
            return null;
        }
        const sourceIndex = widgetPanels.findIndex(item => item.id === panelId);
        if (sourceIndex < 0) {
            return null;
        }
        const moveWidgetPanelAction = datasheet_1.DatasheetActions.movePanel2Action(targetIndex, sourceIndex, resourceType);
        if (!moveWidgetPanelAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: moveWidgetPanelAction,
        };
    },
};


/***/ }),

/***/ 1767:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pasteSetFields = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const __1 = __webpack_require__(97018);
const add_fields_1 = __webpack_require__(27790);
const set_field_attr_1 = __webpack_require__(75701);
exports.pasteSetFields = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId, column, stdValues } = options;
        const { fields } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const view = (0, selectors_1.getViewById)(snapshot, viewId);
        const actions = [];
        const linkedActions = [];
        // Currently only the Grid view has paste
        if (!view || ![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type)) {
            return null;
        }
        if (isNaN(column) || column < 0) {
            return null;
        }
        const fieldCount = fields.length;
        const visibleColumns = (0, selectors_1.getVisibleColumns)(state);
        const columnsToPaste = visibleColumns.slice(column, column + fieldCount);
        if (columnsToPaste.length === 0) {
            return null;
        }
        const fieldMap = snapshot.meta.fieldMap;
        const { fieldPropertyEditable, fieldCreatable } = store_1.Selectors.getPermissions(state);
        function enrichColumnProperty(column, stdValues) {
            const oldField = fieldMap[column.fieldId];
            if (!fieldPropertyEditable) {
                return;
            }
            const newField = (0, utils_1.fastCloneDeep)(oldField);
            if (newField.type === types_1.FieldType.Member) {
                return;
            }
            const newProperty = model_1.Field.bindContext(newField, state).enrichProperty(stdValues);
            if (newProperty === newField.property) {
                return;
            }
            const rst = set_field_attr_1.setFieldAttr.execute(context, {
                cmd: __1.CollaCommandName.SetFieldAttr,
                fieldId: column.fieldId,
                data: Object.assign(Object.assign({}, newField), { property: newProperty }),
            });
            if (rst && rst.result === command_manager_1.ExecuteResult.Success) {
                actions.push(...rst.actions);
                rst.linkedActions && linkedActions.push(...rst.linkedActions);
            }
        }
        // In the case where only one cell is copied, enrich field property on the selection column
        const singleCellPaste = stdValues.length === 1 && stdValues[0].length === 1;
        if (singleCellPaste) {
            const ranges = (0, selectors_1.getSelectRanges)(state);
            const range = ranges[0];
            const fields = store_1.Selectors.getRangeFields(state, range, datasheetId);
            let stdValue = stdValues[0][0];
            const data = stdValue.data.filter(d => d.text);
            stdValue = Object.assign(Object.assign({}, stdValue), { data });
            for (const field of fields) {
                enrichColumnProperty({ fieldId: field.id }, [stdValue]);
            }
        }
        else {
            for (let i = 0, ii = columnsToPaste.length; i < ii; i++) {
                const column = columnsToPaste[i];
                const stdValueField = stdValues.reduce((result, stdValueRow) => {
                    const stdValue = stdValueRow[i];
                    if (stdValue) {
                        const data = stdValue.data.filter(d => d.text);
                        result.push(Object.assign(Object.assign({}, stdValue), { data }));
                    }
                    return result;
                }, []);
                enrichColumnProperty(column, stdValueField);
            }
        }
        // have columns to expand
        let newFields = fields.slice(columnsToPaste.length);
        // Does not allow adding new columns without the fieldCreatable permission
        if (fieldCreatable && newFields.length > 0) {
            const fieldNames = new Set();
            for (const fieldId in fieldMap) {
                fieldNames.add(fieldMap[fieldId].name);
            }
            newFields = newFields.map(field => {
                const originName = field.name;
                // The incoming fields may have fieldId. In order to ensure that it does not conflict with the id of the newly created field, 
                // we force it to be deleted in this category.
                delete field.id;
                let name = originName;
                let i = 1;
                if (!originName) {
                    do {
                        name = `${utils_1.NamePrefix.Field} ${i++}`;
                    } while (fieldNames.has(name));
                }
                else {
                    while (fieldNames.has(name)) {
                        name = `${originName} (${i++})`;
                    }
                }
                fieldNames.add(name);
                if (field.type === types_1.FieldType.LookUp) {
                    const relatedLinkFieldId = field.property.relatedLinkFieldId;
                    if (!fieldMap[relatedLinkFieldId] || fieldMap[relatedLinkFieldId].type !== types_1.FieldType.Link) {
                        return {
                            name,
                            type: types_1.FieldType.Text,
                            property: model_1.TextField.defaultProperty(),
                        };
                    }
                }
                return Object.assign(Object.assign({}, field), { name });
            });
            const rst = add_fields_1.addFields.execute(context, {
                cmd: __1.CollaCommandName.AddFields,
                data: newFields.map((field, index) => ({
                    viewId: view.id,
                    index: index + visibleColumns.length,
                    data: field,
                })),
            });
            if (rst) {
                if (rst.result === command_manager_1.ExecuteResult.Fail) {
                    return rst;
                }
                actions.push(...rst.actions);
                rst.linkedActions && linkedActions.push(...rst.linkedActions);
            }
        }
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: IPasteSetFieldsOptions & { cmd: 'PasteSetFields' }):
 ICollaCommandExecuteResult<IPasteSetFieldsOptions>;
 }
 }

 */


/***/ }),

/***/ 88823:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pasteSetRecords = void 0;
const command_manager_1 = __webpack_require__(65654);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const utils_1 = __webpack_require__(26854);
const __1 = __webpack_require__(97018);
const add_records_1 = __webpack_require__(38082);
const set_records_1 = __webpack_require__(34844);
exports.pasteSetRecords = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, fieldMapSnapshot } = context;
        const { recordIds, column, row, viewId, stdValues, cut, groupCellValues, notifyExistIncompatibleField } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const userInfo = state.user.info;
        if (!snapshot) {
            return null;
        }
        const view = (0, selectors_1.getViewById)(snapshot, viewId);
        // Currently only the Grid view has paste
        if (!view || ![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type)) {
            return null;
        }
        if (isNaN(column) || column < 0) {
            return null;
        }
        if (isNaN(row) || row < 0) {
            return null;
        }
        const fieldMap = snapshot.meta.fieldMap;
        const newRecordCount = stdValues.length;
        if (newRecordCount === 0) {
            return null;
        }
        const actions = [];
        // oi action for compensation when adding an alarm
        const defaultAlarmActions = [];
        // Add the oi action that the alarm clock actually takes effect
        const realAlarmActions = [];
        const linkedActions = [];
        const recordValues = [];
        // first delete the part that needs to be cut
        if (cut) {
            const datasheetId = cut.datasheetId;
            if (datasheetId === state.pageParams.datasheetId) {
                const cutRows = cut.rows;
                const cutColumns = cut.columns;
                cutRows.forEach(row => {
                    cutColumns.forEach(column => {
                        const field = fieldMap[column.fieldId];
                        if (field && field.type !== field_types_1.FieldType.NotSupport) {
                            recordValues.push({
                                recordId: row.recordId,
                                fieldId: column.fieldId,
                                value: null,
                            });
                        }
                    });
                });
            }
        }
        // There is already record paste assignment
        const columnCount = options.fields.length;
        const visibleColumns = (0, selectors_1.getVisibleColumns)(state);
        const columnsToPaste = visibleColumns.slice(column, column + columnCount);
        if (columnsToPaste.length === 0) {
            return null;
        }
        const recordIdsToPaste = (0, selectors_1.getRangeRows)(state, row, row + newRecordCount).map(r => r.recordId);
        function addAlarm(cv, field, recordId, oldRecordId) {
            var _a;
            if (field.type === field_types_1.FieldType.DateTime && cv && snapshot) {
                const alarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, oldRecordId, field.id);
                if (alarm) {
                    const curAlarmActions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
                        recordId,
                        fieldId: field.id,
                        alarm: Object.assign(Object.assign({ id: (0, utils_1.getNewId)(utils_1.IDPrefix.DateTimeAlarm) }, (0, lodash_1.omit)(alarm, 'id')), { 
                            // If the copy is another member, the alarm set by others will be changed to himself
                            alarmUsers: userInfo && ((_a = alarm.alarmUsers) === null || _a === void 0 ? void 0 : _a[0].type) === store_1.AlarmUsersType.Member ? [{
                                    type: store_1.AlarmUsersType.Member,
                                    data: userInfo.unitId,
                                }] : alarm.alarmUsers }),
                    });
                    if (curAlarmActions) {
                        // there is a compensated OP
                        if (curAlarmActions.length === 2) {
                            /**
                             * p same merge (merge of peers into one oi action)
                             * p is not the same, not merged (different lines are oi action alone)
                             */
                            let isMerged = false;
                            defaultAlarmActions.forEach((action, idx) => {
                                if ((0, lodash_1.isEqual)(action.p, curAlarmActions[0].p)) {
                                    defaultAlarmActions[idx].oi = Object.assign(Object.assign({}, curAlarmActions[0].oi), action.oi);
                                    isMerged = true;
                                }
                            });
                            if (!isMerged) {
                                defaultAlarmActions.push(curAlarmActions[0]);
                            }
                            realAlarmActions.push(curAlarmActions[1]);
                        }
                        else {
                            realAlarmActions.push(...curAlarmActions);
                        }
                    }
                }
            }
        }
        function pushPasteValue(stdValue, field, recordId, oldRecordId) {
            if (!field || field.type === field_types_1.FieldType.NotSupport) {
                return;
            }
            let value = model_1.Field.bindContext(field, state).stdValueToCellValue(stdValue);
            value = (0, model_1.handleEmptyCellValue)(value, model_1.Field.bindContext(field, state).basicValueType);
            if (value == null && stdValue.data.length && field.type !== stdValue.sourceType) {
                // This indicates that there is a mismatched type
                notifyExistIncompatibleField === null || notifyExistIncompatibleField === void 0 ? void 0 : notifyExistIncompatibleField();
            }
            recordValues.push({
                fieldId: field.id,
                recordId,
                value,
            });
            // Paste the cell as a date type, with a value and with an alarm
            oldRecordId && addAlarm(value, field, recordId, oldRecordId);
        }
        // In the case where only one cell is copied, paste over the selection
        const singleCellPaste = stdValues.length === 1 && stdValues[0].length === 1;
        if (singleCellPaste) {
            const ranges = (0, selectors_1.getSelectRanges)(state);
            const range = ranges[0];
            const rows = store_1.Selectors.getRangeRecords(state, range);
            const fields = store_1.Selectors.getRangeFields(state, range, datasheetId);
            if (!rows || !fields) {
                return null;
            }
            for (const row of rows) {
                const recordId = row.recordId;
                for (const field of fields) {
                    pushPasteValue(stdValues[0][0], field, recordId, recordIds === null || recordIds === void 0 ? void 0 : recordIds[0]);
                }
            }
            // When multiple cells are copied, the negative value area shall prevail, the selection area is irrelevant
        }
        else {
            for (let i = 0; stdValues[i] && recordIdsToPaste[i]; i++) {
                const recordId = recordIdsToPaste[i];
                const stdValuesRow = stdValues[i];
                for (let c = 0; stdValuesRow[c] && columnsToPaste[c]; c++) {
                    const fieldId = columnsToPaste[c].fieldId;
                    const stdValue = stdValuesRow[c];
                    const field = fieldMap[fieldId];
                    pushPasteValue(stdValue, field, recordId, recordIds === null || recordIds === void 0 ? void 0 : recordIds[i]);
                }
            }
        }
        const rst = set_records_1.setRecords.execute(context, { cmd: __1.CollaCommandName.SetRecords, data: recordValues });
        if (rst) {
            if (rst.result === command_manager_1.ExecuteResult.Fail) {
                return rst;
            }
            Object.assign(fieldMapSnapshot, rst.fieldMapSnapshot || {});
            actions.push(...rst.actions);
        }
        // Add new line and paste assignment for augmented line
        const newStdValues = stdValues.slice(recordIdsToPaste.length);
        if (newStdValues.length) {
            const recordValues = [];
            const oldRecordIds = [];
            for (let row = 0; newStdValues[row]; row++) {
                const stdValuesRow = newStdValues[row];
                const cellValues = {};
                // Convert a line to a record
                for (let column = 0; stdValuesRow[column] && columnsToPaste[column]; column++) {
                    const fieldId = columnsToPaste[column].fieldId;
                    const stdValue = stdValuesRow[column];
                    const field = fieldMap[fieldId];
                    if (!field || field.type === field_types_1.FieldType.NotSupport) {
                        continue;
                    }
                    let value = model_1.Field.bindContext(field, state).stdValueToCellValue(stdValue);
                    value = (0, model_1.handleEmptyCellValue)(value, model_1.Field.bindContext(field, state).basicValueType);
                    cellValues[fieldId] = value;
                }
                recordValues.push(cellValues);
                recordIds && oldRecordIds.push(recordIds[recordIdsToPaste.length + row]);
            }
            const rst = add_records_1.addRecords.execute(context, {
                cmd: __1.CollaCommandName.AddRecords,
                viewId,
                index: (0, selectors_1.getActualRowCount)(state),
                count: newStdValues.length,
                groupCellValues,
                cellValues: recordValues,
            });
            if (rst) {
                if (rst.result === command_manager_1.ExecuteResult.Fail) {
                    return rst;
                }
                Object.assign(fieldMapSnapshot, rst.fieldMapSnapshot || {});
                actions.push(...rst.actions);
                const newRecordIds = rst.data;
                recordValues.forEach((rv, cvIndex) => {
                    Object.keys(rv).forEach(fId => {
                        addAlarm(rv[fId], fieldMap[fId], newRecordIds[cvIndex], oldRecordIds[cvIndex]);
                    });
                });
            }
        }
        if (realAlarmActions.length > 0) {
            actions.push(...defaultAlarmActions);
            actions.push(...realAlarmActions);
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
            fieldMapSnapshot
        };
    },
};


/***/ }),

/***/ 48993:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resetRecords = void 0;
const command_manager_1 = __webpack_require__(65654);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const engine_1 = __webpack_require__(39036);
exports.resetRecords = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, fieldMapSnapshot } = context;
        const { data: _data } = options;
        const datasheetId = options.datasheetId || store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const actions = [{
                n: engine_1.OTActionName.ObjectReplace,
                p: ['recordMap'],
                od: snapshot.recordMap,
                oi: _data,
            }];
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            fieldMapSnapshot
        };
    },
};


/***/ }),

/***/ 78308:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rollback = exports.getRollbackActions = void 0;
const ot_1 = __webpack_require__(65315);
const lodash_1 = __webpack_require__(46517);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const utils_1 = __webpack_require__(26854);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const field_1 = __webpack_require__(12775);
const text_field_1 = __webpack_require__(55842);
const player_1 = __webpack_require__(63325);
const model_1 = __webpack_require__(61116);
const getRollbackActions = (operations, state, snapshot) => {
    return operations.reduce((collect, op) => {
        const needIgnoreActionFlag = { field: {}, record: {} };
        // First restore the column-related operations to ensure that the subsequent 
        // action of checking the set cell value can get the correct verification result
        const updateFieldActions = [];
        const addFieldActions = [];
        const otherActions = [];
        op.actions.forEach((action) => {
            const { type } = (0, utils_1.parseAction)(action);
            if ([utils_1.ActionType.UpdateField, utils_1.ActionType.DelField].includes(type)) {
                updateFieldActions.push(action);
            }
            else if (type === utils_1.ActionType.AddField) {
                addFieldActions.push(action);
            }
            else {
                otherActions.push(action);
            }
        });
        const sortedActions = [...updateFieldActions, ...otherActions, ...addFieldActions];
        sortedActions.forEach(item => {
            const action = item;
            if (['comments', 'commentCount'].includes(action.p[2])) {
                return;
            }
            const res = (0, utils_1.parseAction)(action);
            // The original field is link, and the link field will be inserted during recovery. 
            // If the corresponding association table cannot be found, the recovery of this data will be ignored.
            if ([utils_1.ActionType.UpdateField, utils_1.ActionType.DelField].includes(res.type)) {
                const oldField = action.od;
                if (oldField.type === types_1.FieldType.Link && oldField.property.foreignDatasheetId) {
                    const foreDatasheet = (0, selectors_1.getDatasheet)(state, oldField.property.foreignDatasheetId);
                    if (!foreDatasheet) {
                        needIgnoreActionFlag.field[oldField.id] = true;
                        return;
                    }
                }
            }
            // When deleting a column, if the corresponding field has been marked to be ignored, the data will not be restored
            if (res.type === utils_1.ActionType.DelColumn) {
                if (needIgnoreActionFlag.field[res.context.fieldId]) {
                    return;
                }
            }
            // Set the cell value, but the field does not match the type of the value to be set and needs to be ignored
            if (res.type === utils_1.ActionType.UpdateRecord) {
                const fieldId = res.context.fieldId;
                const recordId = res.context.recordId;
                if (needIgnoreActionFlag.field[fieldId] || needIgnoreActionFlag.record[recordId]) {
                    return;
                }
                const oldData = action.od;
                const field = snapshot.meta.fieldMap[fieldId];
                if (!field) {
                    return;
                }
                const validError = model_1.Field.bindContext(field, state).validateCellValue(oldData).error;
                if (validError && !validError.message.endsWith('is required')) {
                    return;
                }
            }
            try {
                const invertActions = ot_1.jot.invert([action]);
                ot_1.jot.apply(snapshot, invertActions);
                collect.push(...invertActions);
            }
            catch (error) {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error(`Time Machine rollback error: ${error}`),
                    metaData: {
                        actions: [action],
                        snapshot,
                    },
                });
            }
            return true;
        });
        return collect;
    }, []);
};
exports.getRollbackActions = getRollbackActions;
exports.rollback = {
    undoable: false,
    execute: (context, options) => {
        const { model: state } = context;
        const { datasheetId, data } = options;
        const { operations } = data;
        const preDatasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!preDatasheet) {
            return null;
        }
        /* 1. [apply], apply the reverse actions to a cloned snapshot in turn to get the original rollback snapshot */
        const preSnapshot = preDatasheet.snapshot;
        const postSnapshot = (0, utils_1.fastCloneDeep)(preSnapshot);
        const actions = (0, exports.getRollbackActions)(operations, state, postSnapshot);
        console.log(postSnapshot, preSnapshot);
        if (!actions.length) {
            return null;
        }
        // collect actions
        const linkedActions = [];
        function setLinkedActions(datasheetId, actions) {
            if (!actions.length) {
                return;
            }
            const la = linkedActions.find(la => la.datasheetId === datasheetId);
            if (la) {
                la.actions.push(...actions);
            }
            else {
                linkedActions.push({
                    datasheetId,
                    actions,
                });
            }
        }
        /* 2. [diff], compare the snapshot after apply with the previous snapshot,
        take out the changed link field, and generate field changes to the associated table */
        const { deletedLinkFields, newLinkFields, normalLinkFields } = getLinkFieldChange(preSnapshot.meta.fieldMap, postSnapshot.meta.fieldMap);
        console.log({ deletedLinkFields, newLinkFields, normalLinkFields });
        /* 3. [patch], re-establish bidirectional associations for all associated fields and align the data */
        deletedLinkFields.forEach(sourceField => {
            const foreignDatasheetId = sourceField.property.foreignDatasheetId;
            const foreignSnapshot = (0, selectors_1.getSnapshot)(state, foreignDatasheetId);
            const foreignField = (0, selectors_1.getField)(state, sourceField.property.brotherFieldId, foreignDatasheetId);
            const actions = (0, field_1.setField)(context, foreignSnapshot, foreignField, {
                id: foreignField.id,
                name: foreignField.name,
                type: types_1.FieldType.Text,
                property: text_field_1.TextField.defaultProperty(),
            }).actions;
            setLinkedActions(foreignDatasheetId, actions);
        });
        const newForeignField = newLinkFields.map(sourceField => {
            const foreignDatasheetId = sourceField.property.foreignDatasheetId;
            let brotherFieldId = sourceField.property.brotherFieldId;
            const foreignSnapshot = (0, selectors_1.getSnapshot)(state, foreignDatasheetId);
            if (!foreignSnapshot) {
                // one-way association
                return;
            }
            const foreignField = (0, selectors_1.getField)(state, brotherFieldId, foreignDatasheetId);
            const foreignFieldIds = Object.keys(foreignSnapshot.meta.fieldMap);
            /**
             * The brotherFieldId corresponding to newLinkFields still exists in the association table,
             * and the association field is not plain text, you need to modify brotherFieldId to create a new association field
             * Otherwise set the field type of the association table to the magic association type.
             */
            if (foreignField && foreignField.type !== types_1.FieldType.Text) {
                brotherFieldId = (0, utils_1.getNewId)(utils_1.IDPrefix.Field, foreignFieldIds);
                /** A deep clone avoids the following DatasheetActions.setFieldAttr2Action method to get the same value for ac oi and od.
                 * In order to avoid the occurrence of od when the middle layer does OT conversion,
                 * the value corresponding to the associated table fieldMap cannot be found
                 */
                sourceField = (0, lodash_1.cloneDeep)(sourceField);
                sourceField.property.brotherFieldId = brotherFieldId;
                const ac = datasheet_1.DatasheetActions.setFieldAttr2Action(postSnapshot, {
                    field: sourceField
                });
                if (ac) {
                    actions.push(ac);
                    ot_1.jot.apply(postSnapshot, [ac]);
                }
                const newField = {
                    id: brotherFieldId,
                    type: types_1.FieldType.Link,
                    name: (0, utils_1.getUniqName)(preDatasheet.name, foreignFieldIds.map(id => foreignSnapshot.meta.fieldMap[id].name)),
                    property: {
                        foreignDatasheetId: datasheetId,
                        brotherFieldId: sourceField.id,
                    }
                };
                const newFieldActions = (0, field_1.createNewField)(foreignSnapshot, newField);
                setLinkedActions(foreignDatasheetId, newFieldActions);
                return newField;
            }
            const modifiedField = Object.assign(Object.assign({}, foreignField), { type: types_1.FieldType.Link, property: {
                    foreignDatasheetId: datasheetId,
                    brotherFieldId: sourceField.id,
                } });
            const { actions: modifiedFieldActions } = (0, field_1.setField)(context, foreignSnapshot, foreignField, modifiedField);
            setLinkedActions(foreignDatasheetId, modifiedFieldActions);
            return sourceField;
        });
        newLinkFields.forEach((sourceField, index) => {
            console.log('newLinkFields: ', sourceField);
            if (!newForeignField[index]) {
                // one-way direction
                return;
            }
            const result = patchFieldValues(state, postSnapshot, sourceField, newForeignField[index]);
            actions.push(...result.sourceActions);
            setLinkedActions(sourceField.property.foreignDatasheetId, result.foreignActions);
        });
        normalLinkFields.forEach(sourceField => {
            const result = patchFieldValues(state, postSnapshot, sourceField);
            actions.push(...result.sourceActions);
            setLinkedActions(sourceField.property.foreignDatasheetId, result.foreignActions);
        });
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            linkedActions,
        };
    },
};
/**
 * Get an array of new and deleted associated fields
 * @param preFieldMap fieldMap before rollback
 * @param postFieldMap rollback fieldMap
 * @return deletedLinkFields Link fields deleted after rollback
 * @return newLinkFields added after rollback
 * @return normalLinkFields rollback existing associated fields
 */
function getLinkFieldChange(preFieldMap, postFieldMap) {
    let deletedLinkFields = [];
    let newLinkFields = [];
    let normalLinkFields = [];
    /**
      * The three cases are regarded as deletedLinkFields. After preFieldMap gets a field, it is matched with fieldId in postFieldMap
      * pre is linkField, this field cannot be matched in post
      * pre is a linkField, and it is not a link field that is converted in post
      * pre is a linkField, the post is converted into another link field, or the sibling fields are inconsistent,
      * (the link field in the post is considered new at this time)
      *
      * Three cases are treated as newLinkFields
      * post is a linkField, this field does not exist in pre
      * post is a linkField, pre is not a linkField
      * pre is a linkField, the post is converted into another link field, or the sibling fields are inconsistent, (same as the third item above)
      *
      * One case is treated as normalLinkFields
      * exists in both pre and post, and the associated table and sibling fields have not changed
      */
    Object.values(preFieldMap).forEach(preField => {
        const postField = postFieldMap[preField.id];
        // post is linkField, pre is not linkField, you need to push a record to newLinkFields;
        if (postField && postField.type === types_1.FieldType.Link) {
            if (preField && preField.type !== types_1.FieldType.Link) {
                newLinkFields.push(postField);
                return;
            }
        }
        // pre is not a linkField to filter out first
        if (preField.type !== types_1.FieldType.Link) {
            return;
        }
        // This field cannot be matched in the post
        if (!postField) {
            deletedLinkFields.push(preField);
            return;
        }
        // The post is converted not the link field
        if (postField.type !== types_1.FieldType.Link) {
            deletedLinkFields.push(preField);
            return;
        }
        // Posts are not related to the same table
        if (preField.property.foreignDatasheetId !== postField.property.foreignDatasheetId) {
            deletedLinkFields.push(preField);
            newLinkFields.push(postField);
            return;
        }
        // The post is associated with the same table, but the sibling fields are not the same
        if (preField.property.brotherFieldId !== postField.property.brotherFieldId) {
            deletedLinkFields.push(preField);
            newLinkFields.push(postField);
            return;
        }
        // Both pre and post exist, and the associated table and sibling fields have not changed
        normalLinkFields.push(postField);
    });
    // post is a linkField, this field does not exist in pre
    const newInPostFields = Object.values(postFieldMap).filter(postField => !preFieldMap[postField.id] && postField.type === types_1.FieldType.Link);
    newLinkFields.push(...newInPostFields);
    // Filter out the fields where brotherFieldId is empty, that is, the fields associated with the table
    deletedLinkFields = deletedLinkFields.filter(field => field.property.brotherFieldId);
    newLinkFields = newLinkFields.filter(field => field.property.brotherFieldId);
    normalLinkFields = normalLinkFields.filter(field => field.property.brotherFieldId);
    return { deletedLinkFields, newLinkFields, normalLinkFields };
}
// Provide sourceLinkField to align the cellValue in the field corresponding to the association table to a bidirectional association
function patchFieldValues(state, sourceSnapshot, sourceField, 
// The newly added field of the association table is not in the snapshot, and needs to be added in
isolateForeignField) {
    const foreignDatasheetId = sourceField.property.foreignDatasheetId;
    const foreignSnapshot = (0, selectors_1.getSnapshot)(state, foreignDatasheetId);
    const foreignField = isolateForeignField || (0, selectors_1.getField)(state, sourceField.property.brotherFieldId, foreignDatasheetId);
    // Generate the value required by the sibling field
    const foreignLinkRecordValueMap = {};
    const foreignActions = [];
    const sourceActions = [];
    function eachFieldValue(fieldId, recordMap, cb) {
        for (const recordId in recordMap) {
            const record = recordMap[recordId];
            const linkCellValue = record.data && record.data[fieldId];
            cb(recordId, linkCellValue);
        }
    }
    // Generate a value map of the associated column based on postField
    eachFieldValue(sourceField.id, sourceSnapshot.recordMap, (recordId, linkCellValue) => {
        if (!linkCellValue) {
            return;
        }
        const filteredLinkCellValue = linkCellValue.filter(rid => {
            // If the associated cell summary rid does not exist in the associated table, delete this rid
            if (!foreignSnapshot.recordMap[rid]) {
                return false;
            }
            if (foreignLinkRecordValueMap[rid]) {
                foreignLinkRecordValueMap[rid].push(recordId);
            }
            else {
                foreignLinkRecordValueMap[rid] = [recordId];
            }
            return true;
        });
        if (filteredLinkCellValue.length !== linkCellValue.length) {
            const action = datasheet_1.DatasheetActions.setRecord2Action(sourceSnapshot, {
                fieldId: sourceField.id,
                recordId: recordId,
                value: filteredLinkCellValue,
            });
            action && sourceActions.push(action);
        }
    });
    console.log({ foreignLinkRecordValueMap });
    // Traverse the association table, replace the existing ones, delete the ones that don't exist, and add the missing ones
    foreignSnapshot && eachFieldValue(foreignField.id, foreignSnapshot.recordMap, (recordId, linkCellValue) => {
        let action = null;
        const newCellValue = foreignLinkRecordValueMap[recordId];
        if (newCellValue) {
            // need to be replaced if there are different values in the array
            if ((0, lodash_1.xor)(linkCellValue, newCellValue)) {
                action = datasheet_1.DatasheetActions.setRecord2Action(foreignSnapshot, {
                    fieldId: foreignField.id,
                    recordId: recordId,
                    value: newCellValue,
                });
            }
        }
        else {
            action = datasheet_1.DatasheetActions.setRecord2Action(foreignSnapshot, {
                fieldId: foreignField.id,
                recordId: recordId,
                value: null,
            });
        }
        action && foreignActions.push(action);
    });
    console.log({ sourceActions, foreignActions });
    return { sourceActions, foreignActions };
}


/***/ }),

/***/ 58222:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setAutoHeadHeight = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setAutoHeadHeight = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { isAuto, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the current operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_set_row_height_failed_wrong_target_view));
        }
        const actions = [];
        const setAutoHeadHeightAction = model_1.DatasheetActions.setAutoHeadHeight2Action(datasheet.snapshot, { viewId, isAuto });
        setAutoHeadHeightAction && actions.push(setAutoHeadHeightAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 57357:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setCalendarStyle = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setCalendarStyle = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        const actions = [];
        const setCalendarStyleAction = model_1.CalendarView.setCalendarStyle2Action(datasheet.snapshot, options);
        setCalendarStyleAction && actions.push(...setCalendarStyleAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 67235:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setColumnsProperty = void 0;
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.setColumnsProperty = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { fieldId, viewId, data } = options;
        const { width, statType } = data;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        const fieldMap = (0, selectors_1.getFieldMap)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        if (!fieldMap[fieldId]) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_column_not_exist));
        }
        const actions = [];
        if (width) {
            const changeColumnsWidthAction = model_1.DatasheetActions.setColumnWidth2Action(datasheet.snapshot, { viewId, fieldId, width });
            changeColumnsWidthAction && actions.push(changeColumnsWidthAction);
        }
        if (statType != null) {
            const changeFieldStatAction = model_1.DatasheetActions.setColumnStatType2Action(datasheet.snapshot, { viewId, fieldId, statType });
            changeFieldStatAction && actions.push(changeFieldStatAction);
        }
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

declare module '../../command_manager/command_manager' {
  interface CollaCommandManager {
    execute(options: ISetRecordsOptions & { cmd: 'SetRecords' });
  }
}

*/


/***/ }),

/***/ 43197:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setDateTimeCellAlarm = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
/**
 * TODO(kailang)
 * Support new alarm clock OP
 */
exports.setDateTimeCellAlarm = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { fieldId, recordId, alarm } = options;
        const newAlarmId = (0, utils_1.getNewId)(utils_1.IDPrefix.DateTimeAlarm);
        const datasheetId = options.datasheetId || store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const actions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
            recordId,
            fieldId,
            alarm: alarm ? Object.assign({ id: newAlarmId }, alarm) : null
        });
        if (!actions) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    }
};


/***/ }),

/***/ 75701:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setFieldAttr = void 0;
const command_manager_1 = __webpack_require__(65654);
const lodash_1 = __webpack_require__(46517);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const field_types_1 = __webpack_require__(80360);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
const field_1 = __webpack_require__(12775);
const field_2 = __webpack_require__(46559);
const model_1 = __webpack_require__(61116);
function generateLinkedFieldActions(context, snapshot, oldField, newField, datasheetId, deleteBrotherField, internalFix) {
    const actions = [];
    const linkedActions = [];
    const { model: state } = context;
    if (oldField.type === field_types_1.FieldType.Link && newField.type === field_types_1.FieldType.Link) {
        // If the associated table id has not changed, no related operations are required.
        if (oldField.property.foreignDatasheetId === newField.property.foreignDatasheetId) {
            return (0, field_1.setField)(context, snapshot, oldField, newField, datasheetId);
        }
    }
    if (oldField.type === field_types_1.FieldType.Link) {
        const clearedActions = (0, field_1.clearOldBrotherField)(context, oldField, deleteBrotherField);
        clearedActions && linkedActions.push(clearedActions);
    }
    if (newField.type === field_types_1.FieldType.Link) {
        const createdActions = (0, field_1.createNewBrotherField)(state, newField, datasheetId);
        createdActions && linkedActions.push(createdActions);
    }
    if (field_types_1.FieldType.Text === newField.type && (internalFix === null || internalFix === void 0 ? void 0 : internalFix.clearOneWayLinkCell)) {
        const fieldId = oldField.id;
        // Clean up the content of the one-way association cell
        if (snapshot.meta.fieldMap[fieldId]) {
            for (const recordId in snapshot.recordMap) {
                const action = model_1.DatasheetActions.setRecord2Action(snapshot, { recordId, fieldId, value: null });
                action && actions.push(action);
            }
        }
    }
    const newFieldData = (0, field_1.setField)(context, snapshot, oldField, newField, datasheetId);
    actions.push(...newFieldData.actions);
    return { actions: actions, linkedActions };
}
exports.setFieldAttr = {
    undoable: true,
    execute: (context, options) => {
        var _a;
        const { model: state } = context;
        const activeDatasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const { fieldId, datasheetId = activeDatasheetId, deleteBrotherField, internalFix } = options;
        const newField = Object.assign({}, options.data);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot || fieldId !== newField.id) {
            return null;
        }
        const fieldMap = (0, selectors_1.getFieldMap)(state, datasheetId);
        const oldField = fieldMap[fieldId];
        if (!oldField) {
            return null;
        }
        /* Check for duplicate names */
        const duplicate = Object.values(fieldMap).some(f => {
            return f.id !== options.fieldId && f.name === options.data.name;
        });
        if (duplicate) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_set_column_failed_duplicate_column_name));
        }
        if (oldField.type === field_types_1.FieldType.NotSupport ||
            newField.type === field_types_1.FieldType.NotSupport) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_set_column_failed_no_support_unknown_column));
        }
        if (oldField.type === newField.type &&
            oldField.name === newField.name &&
            oldField.desc === newField.desc &&
            oldField.required === newField.required &&
            (0, lodash_1.isEqual)(oldField.property, newField.property)) {
            return null;
        }
        // Compatible with errors caused by defaultValue of some online fields being null
        if ([field_types_1.FieldType.Currency, field_types_1.FieldType.Percent, field_types_1.FieldType.Number].includes(newField.type) &&
            newField.property.defaultValue === null) {
            newField.property = Object.assign(Object.assign({}, newField.property), { defaultValue: '' });
        }
        // AutoNumber needs to record the current view index
        if (newField.type === field_types_1.FieldType.AutoNumber) {
            const datasheet = (0, selectors_1.getDatasheet)(state);
            const viewIdx = snapshot.meta.views.findIndex(item => item.id === (datasheet === null || datasheet === void 0 ? void 0 : datasheet.activeView)) || 0;
            newField.property = Object.assign(Object.assign({}, newField.property), { viewIdx });
        }
        // Ensure that the properties of the following fields must have datasheetId
        if (!((_a = newField.property) === null || _a === void 0 ? void 0 : _a.datasheetId) &&
            [field_types_1.FieldType.AutoNumber, field_types_1.FieldType.CreatedBy, field_types_1.FieldType.CreatedTime, field_types_1.FieldType.LastModifiedBy, field_types_1.FieldType.LastModifiedTime].includes(newField.type)) {
            newField.property = Object.assign(Object.assign({}, newField.property), { datasheetId });
        }
        // When modifying the associated field, it is necessary to maintain the sibling field data of the associated table
        if (oldField.type === field_types_1.FieldType.Link || newField.type === field_types_1.FieldType.Link) {
            const validateFieldPropertyError = field_2.Field.bindContext(newField, state).validateProperty().error;
            if (validateFieldPropertyError) {
                throw new Error(`${(0, i18n_1.t)(i18n_1.Strings.error_set_column_failed_bad_property)}: ${validateFieldPropertyError.details.map(d => d.message).join(',\n')}`);
            }
            const result = generateLinkedFieldActions(context, snapshot, oldField, newField, datasheetId, deleteBrotherField, internalFix);
            const linkedActions = result.linkedActions || [];
            return {
                result: command_manager_1.ExecuteResult.Success,
                resourceId: datasheetId,
                resourceType: types_1.ResourceType.Datasheet,
                actions: result.actions,
                linkedActions,
            };
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions: (0, field_1.setField)(context, snapshot, oldField, newField, datasheetId).actions,
        };
    },
};


/***/ }),

/***/ 22269:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setGalleryStyle = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setGalleryStyle = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        const actions = [];
        const setGalleryStyleAction = model_1.GalleryView.setGalleryStyle2Action(datasheet.snapshot, options);
        // action && collected.push(action);
        setGalleryStyleAction && actions.push(setGalleryStyleAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 86777:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setGanttStyle = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setGanttStyle = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        const actions = [];
        const setGanttStyleAction = model_1.GanttView.setGanttStyle2Action(datasheet.snapshot, options);
        setGanttStyleAction && actions.push(...setGanttStyleAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 18667:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setGroup = void 0;
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const interfaces_1 = __webpack_require__(37848);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const command_manager_1 = __webpack_require__(65654);
exports.setGroup = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        const fieldIds = (0, selectors_1.getCurrentView)(state, datasheetId).columns.map(item => item.fieldId);
        const fieldPermissionMap = (0, selectors_1.getFieldPermissionMap)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_group_failed_wrong_target_view));
        }
        const checkMissGroupField = () => {
            return data && data.filter(item => {
                // Data missing due to permissions is expected and will not be processed
                if ((0, selectors_1.getFieldRoleByFieldId)(fieldPermissionMap, item.fieldId) === interfaces_1.Role.None) {
                    return false;
                }
                return !fieldIds.includes(item.fieldId);
            }).length;
        };
        // Check if the field used by grouping exists in the current view
        if (checkMissGroupField()) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_group_failed_the_column_not_exist));
        }
        const actions = [];
        const setSortInfoAction = model_1.DatasheetActions.setGroupInfoField2Action(datasheet.snapshot, { viewId, groupInfo: data });
        setSortInfoAction && actions.push(setSortInfoAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 18781:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setKanbanStyle = void 0;
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const selectors_2 = __webpack_require__(964);
const __1 = __webpack_require__(97018);
const add_records_1 = __webpack_require__(38082);
exports.setKanbanStyle = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId, addRecord, styleValue } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_2.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        const actions = [];
        const setKanbanStyleAction = model_1.KanbanView.setViewStyle2Action(datasheet.snapshot, options);
        setKanbanStyleAction && actions.push(setKanbanStyleAction);
        if (addRecord) {
            const rowCount = (0, selectors_1.getActualRowCount)(state);
            const unitId = state.user.info.unitId;
            const addRecordActions = add_records_1.addRecords.execute(context, {
                cmd: __1.CollaCommandName.AddRecords,
                viewId,
                index: rowCount,
                count: 1,
                cellValues: [{ [styleValue]: [unitId] }],
            });
            if (addRecordActions) {
                if (addRecordActions.result === command_manager_1.ExecuteResult.Fail) {
                    return addRecordActions;
                }
                actions.push(...addRecordActions.actions);
            }
        }
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 49849:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setOrgChartStyle = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setOrgChartStyle = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_modify_column_failed_wrong_target_view));
        }
        const actions = [];
        const setOrgChartStyleAction = model_1.OrgChartView.setOrgChartStyle2Action(datasheet.snapshot, options);
        // action && collected.push(action);
        setOrgChartStyleAction && actions.push(setOrgChartStyleAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 34844:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setRecords = void 0;
const command_manager_1 = __webpack_require__(65654);
const config_1 = __webpack_require__(77511);
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const utils_1 = __webpack_require__(26854);
function collectMemberProperty(datasheetId, actions, context) {
    const { model: state, memberFieldMaintainer } = context;
    const fieldMap = store_1.Selectors.getFieldMap(state, datasheetId);
    const isAddFieldAction = actions.map(item => item.p[3]).some(fieldId => !fieldMap[fieldId]);
    if (isAddFieldAction) {
        return actions;
    }
    const memberFieldIds = [];
    const unitIdsMap = new Map();
    // Check if there is a modification to the member field in the current OP, if so,
    // Collect OI (written) data into operateRecordIds, and also collect related fieldIds into memberFieldIds
    actions.forEach(item => {
        const fieldId = item.p[3];
        const field = fieldMap[fieldId];
        if (field.type !== field_types_1.FieldType.Member) {
            return;
        }
        memberFieldIds.push(fieldId);
        // oi and od exist in op, if only od is to delete data, there is no need to collect
        if ('oi' in item) {
            const existValue = unitIdsMap.get(fieldId) || [];
            unitIdsMap.set(fieldId, [...new Set([...existValue, ...item['oi']])]);
        }
    });
    // Put the data collected according to fieldId into the property of the corresponding field
    memberFieldIds.forEach(fieldId => {
        const collectUnitIds = unitIdsMap.get(fieldId) || [];
        const field = fieldMap[fieldId];
        // The unitIds of members are dynamically calculated, which will cause the position of the kanban to change in the kanban. 
        // Therefore, in the data collection, the unitIds stored in the property and all the data of the collected cells are merged, 
        // and the duplicates are removed.
        // This can ensure that the order of the existing data in unitIds does not change, 
        // and then perform "intersection" processing with the result and the collected data, and take out the same part 
        // (i.e. that is, the data from the cell phone, but it is guaranteed the data order of the original unitIds)
        const unDuplicateArray = [...new Set([...field.property.unitIds, ...collectUnitIds])];
        const newProperty = unDuplicateArray.filter(item => item);
        memberFieldMaintainer.insert(fieldId, newProperty, datasheetId);
    });
    return actions;
}
exports.setRecords = {
    undoable: true,
    execute: (context, options) => {
        const { model: state, ldcMaintainer, fieldMapSnapshot } = context;
        const { data: _data, internalFix, alarm } = options;
        const datasheetId = options.datasheetId || store_1.Selectors.getActiveDatasheetId(state);
        const mirrorId = options.mirrorId;
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const fieldPermissionMap = store_1.Selectors.getFieldPermissionMap(state);
        if (!snapshot) {
            return null;
        }
        const data = _data.filter(item => {
            const fieldRole = store_1.Selectors.getFieldRoleByFieldId(fieldPermissionMap, item.fieldId);
            if (fieldRole && fieldRole !== config_1.ConfigConstant.Role.Editor) {
                return false;
            }
            return true;
        });
        if ((0, lodash_1.isEmpty)(data)) {
            return null;
        }
        const fieldMap = snapshot.meta.fieldMap;
        const actions = data.reduce((collected, recordOption) => {
            const { recordId, fieldId, field: fieldProp } = recordOption;
            const field = fieldMap[fieldId] || fieldProp;
            let value = recordOption.value;
            // field does not exist, the data does not take effect
            if (!field || !model_1.Field.bindContext(field, state).recordEditable(datasheetId, mirrorId) && !(internalFix === null || internalFix === void 0 ? void 0 : internalFix.anonymouFix)) {
                return collected;
            }
            // Number/currency/percentage fields need special processing, string to number, number of significant digits, etc.
            if (field.type === field_types_1.FieldType.Number || field.type === field_types_1.FieldType.Currency || field.type === field_types_1.FieldType.Percent) {
                if ((0, lodash_1.isString)(value)) {
                    value = (0, utils_1.str2number)(value);
                }
                else if ((0, lodash_1.isNumber)(value)) {
                    value = (0, utils_1.num2number)(value);
                }
                else {
                    value = null;
                }
            }
            // There will be some data problems on the line, and brotherFieldId will also exist in the case of self-table association, 
            // resulting in the existence of redundant actions
            if (field.type === field_types_1.FieldType.Link && field.property.brotherFieldId && field.property.foreignDatasheetId !== datasheetId) {
                /**
                 * Data consistency maintenance for associated field cells:
                 * Guarantee the interrelated consistency of the cell data in brotherField in two different datasheets that are related to each other.
                 * That is: when an associated record is added to the associated field cell of a datasheet.
                 * In the related datasheet sibling fields, a corresponding association relationship should be created.
                 * The same is true when deleting a record.
                 */
                const oldValue = store_1.Selectors.getCellValue(state, snapshot, recordId, fieldId);
                const linkedSnapshot = store_1.Selectors.getSnapshot(state, field.property.foreignDatasheetId);
                ldcMaintainer.insert(state, linkedSnapshot, recordId, field, value, oldValue);
            }
            // if val.value is an empty array then it will be null
            value = (0, model_1.handleEmptyCellValue)(value, model_1.Field.bindContext(field, state).basicValueType);
            fieldMapSnapshot[field.id] = field;
            const action = model_1.DatasheetActions.setRecord2Action(snapshot, { recordId, fieldId, value });
            action && collected.push(action);
            if (field.type === field_types_1.FieldType.DateTime) {
                const cacheAlarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, recordId, field.id);
                /**
                 * remove alarm
                 * 1. Delete date cell data
                 * 2. The date cell has data to remove the alarm clock directly
                 */
                if ((value === null && cacheAlarm) || (Boolean(value) && cacheAlarm && !alarm)) {
                    const alarmActions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
                        recordId,
                        fieldId,
                        alarm: null,
                    });
                    if (alarmActions) {
                        collected.push(...alarmActions);
                    }
                }
                else if (Boolean(value) && !cacheAlarm && Boolean(alarm)) { // new alarm
                    const newAlarmId = (0, utils_1.getNewId)(utils_1.IDPrefix.DateTimeAlarm);
                    const alarmActions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
                        recordId,
                        fieldId,
                        alarm: Object.assign(Object.assign({}, alarm), { id: newAlarmId }),
                    });
                    if (alarmActions) {
                        collected.push(...alarmActions);
                    }
                }
                else if (Boolean(value) && !(0, lodash_1.isEqual)(cacheAlarm, alarm)) { // edit alarm
                    const alarmActions = model_1.DatasheetActions.setDateTimeCellAlarm(snapshot, {
                        recordId,
                        fieldId,
                        alarm: Object.assign(Object.assign({}, cacheAlarm), alarm),
                    });
                    if (alarmActions) {
                        collected.push(...alarmActions);
                    }
                }
            }
            return collected;
        }, []);
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions: collectMemberProperty(datasheetId, actions, context),
            fieldMapSnapshot
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: ISetRecordsOptions & { cmd: 'SetRecords' });
 }
 }

 */


/***/ }),

/***/ 49238:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setRowHeight = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
exports.setRowHeight = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { level, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_set_row_height_failed_wrong_target_view));
        }
        const actions = [];
        const setRowHeightAction = model_1.DatasheetActions.setRowHeightLevel2Action(datasheet.snapshot, { viewId, level });
        // action && collected.push(action);
        setRowHeightAction && actions.push(setRowHeightAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: ISetRecordsOptions & { cmd: 'SetRecords' });
 }
 }

 */


/***/ }),

/***/ 28218:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setSortInfo = void 0;
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const selectors_1 = __webpack_require__(964);
const i18n_1 = __webpack_require__(47511);
const command_manager_1 = __webpack_require__(65654);
const config_1 = __webpack_require__(77511);
exports.setSortInfo = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, viewId, applySort } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        const fieldIds = (0, selectors_1.getCurrentView)(state, datasheetId).columns.map(item => item.fieldId);
        const fieldPermissionMap = (0, selectors_1.getFieldPermissionMap)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        const hasInvalidSort = data && data.rules.some(sortField => {
            const fieldRole = (0, selectors_1.getFieldRoleByFieldId)(fieldPermissionMap, sortField.fieldId);
            // If the column permission is set, the current column does not exist in the view data, so ignore this situation
            if (fieldRole === config_1.ConfigConstant.Role.None) {
                return false;
            }
            return !fieldIds.includes(sortField.fieldId);
        });
        // Determine whether the FieldId of the current operation exists or not
        if (hasInvalidSort) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_sorted_failed_the_field_not_exist));
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_sorted_failed_wrong_target_view));
        }
        const actions = [];
        const setSortInfoAction = model_1.DatasheetActions.setViewSort2Action(state, datasheet.snapshot, { viewId, sortInfo: data, applySort });
        // action && collected.push(action);
        setSortInfoAction && actions.push(...setSortInfoAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: ISetRecordsOptions & { cmd: 'SetRecords' });
 }
 }

 */


/***/ }),

/***/ 7479:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setViewAutoSave = void 0;
const model_1 = __webpack_require__(61116);
const command_manager_1 = __webpack_require__(65654);
const store_1 = __webpack_require__(56791);
const __1 = __webpack_require__(97018);
const types_1 = __webpack_require__(73578);
const manual_save_view_1 = __webpack_require__(10089);
exports.setViewAutoSave = {
    undoable: false,
    execute: (context, options) => {
        const { model: state, fieldMapSnapshot } = context;
        const { autoSave, viewId, viewProperty } = options;
        const datasheetId = store_1.Selectors.getActiveDatasheetId(state);
        const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        if (!snapshot) {
            return null;
        }
        const setViewAutoSaveAction = model_1.DatasheetActions.setViewAutoSave2Action(snapshot, { viewId, autoSave });
        if (!setViewAutoSaveAction) {
            return null;
        }
        const actions = [setViewAutoSaveAction];
        if (viewProperty) {
            const manualSaveViewActions = manual_save_view_1.manualSaveView.execute(context, { cmd: __1.CollaCommandName.ManualSaveView, viewId, viewProperty });
            if (manualSaveViewActions) {
                if (manualSaveViewActions.result === command_manager_1.ExecuteResult.Fail) {
                    return manualSaveViewActions;
                }
                actions.push(...manualSaveViewActions.actions);
            }
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
            fieldMapSnapshot
        };
    },
};


/***/ }),

/***/ 39658:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setViewFilter = void 0;
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const command_manager_1 = __webpack_require__(65654);
exports.setViewFilter = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        // Determine whether the currently operating view is the active view
        if (datasheet.activeView !== viewId) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_filter_failed_wrong_target_view));
        }
        const actions = [];
        const setFilterInfoAction = model_1.DatasheetActions.setFilterInfo2Action(datasheet.snapshot, { viewId, filterInfo: data });
        // action && collected.push(action);
        setFilterInfoAction && actions.push(setFilterInfoAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};
/*

 declare module '../../command_manager/command_manager' {
 interface CollaCommandManager {
 execute(options: ISetRecordsOptions & { cmd: 'SetRecords' });
 }
 }

 */


/***/ }),

/***/ 86405:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setViewFrozenColumnCount = void 0;
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.setViewFrozenColumnCount = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { count, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        const actions = [];
        const setViewFrozenColumnCountAction = model_1.DatasheetActions.setFrozenColumnCount2Action(datasheet.snapshot, { viewId, count });
        setViewFrozenColumnCountAction && actions.push(setViewFrozenColumnCountAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 66484:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setViewLockInfo = void 0;
const model_1 = __webpack_require__(61116);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
exports.setViewLockInfo = {
    undoable: true,
    execute: (context, options) => {
        const { model: state } = context;
        const { data, viewId } = options;
        const datasheetId = (0, selectors_1.getActiveDatasheetId)(state);
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        if (!state || !datasheet) {
            return null;
        }
        const actions = [];
        const setViewLockAction = model_1.DatasheetActions.setViewLockInfo2Action(datasheet.snapshot, { viewId, viewLockInfo: data });
        setViewLockAction && actions.push(setViewLockAction);
        if (actions.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 75509:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateComment = void 0;
const types_1 = __webpack_require__(73578);
const selectors_1 = __webpack_require__(964);
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
exports.updateComment = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { recordId, datasheetId, comments, emojiAction } = options;
        const actions = [];
        const record = (0, selectors_1.getRecord)(state, recordId, datasheetId);
        if (!record) {
            return null;
        }
        const updateCommentAction = model_1.DatasheetActions.updateComment2Action({
            datasheetId,
            recordId,
            updateComments: [comments],
            emojiAction
        });
        if (!updateCommentAction) {
            return null;
        }
        actions.push(...updateCommentAction);
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: datasheetId,
            resourceType: types_1.ResourceType.Datasheet,
            actions,
        };
    },
};


/***/ }),

/***/ 64720:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateFormProps = void 0;
const types_1 = __webpack_require__(73578);
const command_manager_1 = __webpack_require__(65654);
const form_1 = __webpack_require__(48271);
const store_1 = __webpack_require__(56791);
exports.updateFormProps = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { formId, partialProps } = options;
        const snapshot = store_1.Selectors.getFormSnapshot(state, formId);
        if (!snapshot) {
            return null;
        }
        const updateFormPropsAction = form_1.FormAction.updatePropsAction(snapshot.formProps, { partialProps });
        if (updateFormPropsAction.length === 0) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: formId,
            resourceType: types_1.ResourceType.Form,
            actions: updateFormPropsAction,
        };
    },
};


/***/ }),

/***/ 97018:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FieldCmd = exports.COLLA_COMMAND_MAP = exports.CollaCommandName = void 0;
const datasheet_1 = __webpack_require__(64445);
const widget_1 = __webpack_require__(45647);
const dashboard_1 = __webpack_require__(52296);
const form_1 = __webpack_require__(64720);
const manual_save_view_1 = __webpack_require__(10089);
const set_view_auto_save_1 = __webpack_require__(7479);
const reset_records_1 = __webpack_require__(48993);
var CollaCommandName;
(function (CollaCommandName) {
    CollaCommandName["AddFields"] = "AddFields";
    CollaCommandName["AddRecords"] = "AddRecords";
    CollaCommandName["SetRecords"] = "SetRecords";
    CollaCommandName["SetFieldAttr"] = "SetFieldAttr";
    CollaCommandName["PasteSetFields"] = "PasteSetFields";
    CollaCommandName["PasteSetRecords"] = "PasteSetRecords";
    CollaCommandName["MoveViews"] = "MoveViews";
    CollaCommandName["ModifyViews"] = "ModifyViews";
    CollaCommandName["DeleteViews"] = "DeleteViews";
    CollaCommandName["AddViews"] = "AddViews";
    CollaCommandName["MoveRow"] = "MoveRow";
    CollaCommandName["DeleteRecords"] = "DeleteRecords";
    CollaCommandName["MoveColumn"] = "MoveColumn";
    CollaCommandName["DeleteField"] = "DeleteField";
    CollaCommandName["SetSortInfo"] = "SetSortInfo";
    CollaCommandName["SetRowHeight"] = "SetRowHeight";
    CollaCommandName["SetAutoHeadHeight"] = "SetAutoHeadHeight";
    CollaCommandName["SetColumnsProperty"] = "SetColumnsProperty";
    CollaCommandName["SetViewFilter"] = "SetViewFilter";
    CollaCommandName["SetViewLockInfo"] = "SetViewLockInfo";
    CollaCommandName["SetViewFrozenColumnCount"] = "SetViewFrozenColumnCount";
    CollaCommandName["SetGroup"] = "SetGroup";
    CollaCommandName["SetGalleryStyle"] = "SetGalleryStyle";
    CollaCommandName["SetGanttStyle"] = "SetGanttStyle";
    CollaCommandName["SetOrgChartStyle"] = "SetOrgChartStyle";
    CollaCommandName["SetCalendarStyle"] = "SetCalendarStyle";
    CollaCommandName["FillDataToCells"] = "FillDataToCells";
    CollaCommandName["FixConsistency"] = "FixConsistency";
    // special command, used for some special records to set data only in the middle layer to fix the data consistency problem
    CollaCommandName["SystemSetRecords"] = "SystemSetRecords";
    // special command, used for some special fields to set attributes only in the middle layer to fix the data consistency problem
    CollaCommandName["SystemSetFieldAttr"] = "SystemSetFieldAttr";
    CollaCommandName["SetKanbanStyle"] = "SetKanbanStyle";
    CollaCommandName["InsertComment"] = "InsertComment";
    CollaCommandName["UpdateComment"] = "UpdateComment";
    CollaCommandName["DeleteComment"] = "DeleteComment";
    CollaCommandName["SystemCorrectComment"] = "SystemCorrectComment";
    CollaCommandName["Rollback"] = "Rollback";
    // widgetPanel
    CollaCommandName["AddWidgetPanel"] = "AddWidgetPanel";
    CollaCommandName["MoveWidgetPanel"] = "MoveWidgetPanel";
    CollaCommandName["ModifyWidgetPanelName"] = "ModifyWidgetPanelName";
    CollaCommandName["DeleteWidgetPanel"] = "DeleteWidgetPanel";
    CollaCommandName["AddWidgetToPanel"] = "AddWidgetToPanel";
    CollaCommandName["DeleteWidget"] = "DeleteWidget";
    CollaCommandName["ChangeWidgetInPanelHeight"] = "ChangeWidgetInPanelHeight";
    CollaCommandName["MoveWidget"] = "MoveWidget";
    // Widget
    CollaCommandName["SetGlobalStorage"] = "SetGlobalStorage";
    CollaCommandName["SetWidgetName"] = "SetWidgetName";
    // Dashboard
    CollaCommandName["AddWidgetToDashboard"] = "AddWidgetToDashboard";
    CollaCommandName["ChangeDashboardLayout"] = "ChangeDashboardLayout";
    CollaCommandName["DeleteDashboardWidget"] = "DeleteDashboardWidget";
    CollaCommandName["SetWidgetDepDstId"] = "SetWidgetDepDstId";
    // Form
    CollaCommandName["UpdateFormProps"] = "UpdateFormProps";
    // Date cell alarm
    CollaCommandName["SetDateTimeCellAlarm"] = "SetDateTimeCellAlarm";
    // Manually save the view configuration
    CollaCommandName["ManualSaveView"] = "ManualSaveView";
    // Modify the save mode of the configuration
    CollaCommandName["SetViewAutoSave"] = "SetViewAutoSave";
    // special command, correct one-way association DstId
    CollaCommandName["FixOneWayLinkDstId"] = "FixOneWayLinkDstId";
    // Only used for Fusion API for reload recordMap
    CollaCommandName["ResetRecords"] = "ResetRecords";
})(CollaCommandName = exports.CollaCommandName || (exports.CollaCommandName = {}));
exports.COLLA_COMMAND_MAP = {
    [CollaCommandName.AddFields]: datasheet_1.addFields,
    [CollaCommandName.AddRecords]: datasheet_1.addRecords,
    [CollaCommandName.SetRecords]: datasheet_1.setRecords,
    [CollaCommandName.SetFieldAttr]: datasheet_1.setFieldAttr,
    [CollaCommandName.PasteSetFields]: datasheet_1.pasteSetFields,
    [CollaCommandName.PasteSetRecords]: datasheet_1.pasteSetRecords,
    [CollaCommandName.MoveViews]: datasheet_1.moveViews,
    [CollaCommandName.ModifyViews]: datasheet_1.modifyViews,
    [CollaCommandName.DeleteViews]: datasheet_1.deleteViews,
    [CollaCommandName.AddViews]: datasheet_1.addViews,
    [CollaCommandName.MoveRow]: datasheet_1.moveRow,
    [CollaCommandName.DeleteRecords]: datasheet_1.deleteRecord,
    [CollaCommandName.DeleteField]: datasheet_1.deleteField,
    [CollaCommandName.MoveColumn]: datasheet_1.moveColumn,
    [CollaCommandName.SetSortInfo]: datasheet_1.setSortInfo,
    [CollaCommandName.SetRowHeight]: datasheet_1.setRowHeight,
    [CollaCommandName.SetAutoHeadHeight]: datasheet_1.setAutoHeadHeight,
    [CollaCommandName.SetColumnsProperty]: datasheet_1.setColumnsProperty,
    [CollaCommandName.SetViewFilter]: datasheet_1.setViewFilter,
    [CollaCommandName.SetGroup]: datasheet_1.setGroup,
    [CollaCommandName.SetGalleryStyle]: datasheet_1.setGalleryStyle,
    [CollaCommandName.SetGanttStyle]: datasheet_1.setGanttStyle,
    [CollaCommandName.SetCalendarStyle]: datasheet_1.setCalendarStyle,
    [CollaCommandName.SetOrgChartStyle]: datasheet_1.setOrgChartStyle,
    [CollaCommandName.FillDataToCells]: datasheet_1.fillDataToCell,
    [CollaCommandName.SetKanbanStyle]: datasheet_1.setKanbanStyle,
    [CollaCommandName.InsertComment]: datasheet_1.insertComment,
    [CollaCommandName.UpdateComment]: datasheet_1.updateComment,
    [CollaCommandName.DeleteComment]: datasheet_1.deleteComment,
    [CollaCommandName.AddWidgetPanel]: datasheet_1.addWidgetPanel,
    [CollaCommandName.MoveWidgetPanel]: datasheet_1.moveWidgetPanel,
    [CollaCommandName.ModifyWidgetPanelName]: widget_1.modifyWidgetPanelName,
    [CollaCommandName.DeleteWidgetPanel]: datasheet_1.deleteWidgetPanel,
    [CollaCommandName.AddWidgetToPanel]: datasheet_1.addWidgetToPanel,
    [CollaCommandName.DeleteWidget]: datasheet_1.deleteWidget,
    [CollaCommandName.SetGlobalStorage]: widget_1.setGlobalStorage,
    [CollaCommandName.ChangeWidgetInPanelHeight]: datasheet_1.changeWidgetInPanelHeight,
    [CollaCommandName.SetWidgetName]: widget_1.setWidgetName,
    [CollaCommandName.MoveWidget]: datasheet_1.moveWidget,
    [CollaCommandName.AddWidgetToDashboard]: dashboard_1.addWidgetToDashboard,
    [CollaCommandName.ChangeDashboardLayout]: dashboard_1.changeDashboardLayout,
    [CollaCommandName.DeleteDashboardWidget]: dashboard_1.deleteDashboardWidget,
    [CollaCommandName.SetWidgetDepDstId]: widget_1.setWidgetDepDstId,
    [CollaCommandName.Rollback]: datasheet_1.rollback,
    [CollaCommandName.UpdateFormProps]: form_1.updateFormProps,
    [CollaCommandName.SetViewLockInfo]: datasheet_1.setViewLockInfo,
    [CollaCommandName.ManualSaveView]: manual_save_view_1.manualSaveView,
    [CollaCommandName.SetViewAutoSave]: set_view_auto_save_1.setViewAutoSave,
    [CollaCommandName.FixOneWayLinkDstId]: datasheet_1.fixOneWayLinkDstId,
    [CollaCommandName.SetViewFrozenColumnCount]: datasheet_1.setViewFrozenColumnCount,
    [CollaCommandName.SetDateTimeCellAlarm]: datasheet_1.setDateTimeCellAlarm,
    [CollaCommandName.ResetRecords]: reset_records_1.resetRecords,
};
__exportStar(__webpack_require__(64445), exports);
exports.FieldCmd = __importStar(__webpack_require__(12775));


/***/ }),

/***/ 45647:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(30747), exports);
__exportStar(__webpack_require__(43812), exports);
__exportStar(__webpack_require__(53761), exports);
__exportStar(__webpack_require__(36962), exports);


/***/ }),

/***/ 30747:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.modifyWidgetPanelName = void 0;
const selectors_1 = __webpack_require__(964);
const command_manager_1 = __webpack_require__(65654);
const datasheet_1 = __webpack_require__(55384);
exports.modifyWidgetPanelName = {
    undoable: false,
    execute(context, options) {
        const { model: state } = context;
        const { panelName, panelId, resourceId, resourceType } = options;
        if (!panelName) {
            return null;
        }
        const widgetPanels = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        if (!widgetPanels) {
            return null;
        }
        const panel = widgetPanels.find(item => item.id === panelId);
        if (!panel) {
            return null;
        }
        const existPanelNames = widgetPanels.map(item => { return item.name; });
        if (existPanelNames.includes(panelName)) {
            return null;
        }
        const moveWidgetPanelAction = datasheet_1.DatasheetActions.modifyPanelName2Acton(state, Object.assign(Object.assign({}, panel), { name: panelName }), widgetPanels, resourceType);
        if (!moveWidgetPanelAction) {
            return null;
        }
        return {
            result: command_manager_1.ExecuteResult.Success,
            resourceId: resourceId,
            resourceType: resourceType,
            actions: moveWidgetPanelAction,
        };
    },
};


/***/ }),

/***/ 43812:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setGlobalStorage = void 0;
const command_manager_1 = __webpack_require__(65654);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const MAX_GLOBAL_STORAGE_KEY = 100;
exports.setGlobalStorage = {
    undoable: false,
    execute(context, options) {
        const state = context.model;
        const { resourceId, key, value } = options;
        const widgetPack = store_1.Selectors.getResourcePack(state, resourceId, types_1.ResourceType.Widget);
        if (!widgetPack) {
            return null;
        }
        const widgetSnapshot = widgetPack.widget.snapshot;
        if (Object.keys(widgetSnapshot).length > MAX_GLOBAL_STORAGE_KEY) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.global_storage_size_large));
        }
        const setGlobalStorageAction = model_1.WidgetActions.setGlobalStorage2Action(widgetSnapshot, { key, value });
        if (!setGlobalStorageAction) {
            return null;
        }
        return {
            resourceId: options.resourceId,
            resourceType: options.resourceType,
            result: command_manager_1.ExecuteResult.Success,
            actions: setGlobalStorageAction,
        };
    },
};


/***/ }),

/***/ 53761:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setWidgetDepDstId = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.setWidgetDepDstId = {
    undoable: false,
    execute(context, options) {
        const state = context.model;
        const { dstId, resourceId, sourceId } = options;
        const widgetPack = store_1.Selectors.getResourcePack(state, resourceId, types_1.ResourceType.Widget);
        if (!widgetPack) {
            return null;
        }
        const widgetSnapshot = widgetPack.widget.snapshot;
        if (widgetSnapshot.datasheetId) {
            return null;
        }
        const setWidgetDepDstIdAction = model_1.WidgetActions.setWidgetDepDstId2Action(widgetSnapshot, { dstId, sourceId });
        if (!setWidgetDepDstIdAction) {
            return null;
        }
        return {
            resourceId: options.resourceId,
            resourceType: options.resourceType,
            result: command_manager_1.ExecuteResult.Success,
            actions: setWidgetDepDstIdAction,
        };
    },
};


/***/ }),

/***/ 36962:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setWidgetName = void 0;
const command_manager_1 = __webpack_require__(65654);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
exports.setWidgetName = {
    undoable: false,
    execute(context, options) {
        const state = context.model;
        const { resourceId, newWidgetName } = options;
        const widgetPack = store_1.Selectors.getResourcePack(state, resourceId, types_1.ResourceType.Widget);
        if (!widgetPack) {
            return null;
        }
        const widgetSnapshot = widgetPack.widget.snapshot;
        const setWidgetNameAction = model_1.WidgetActions.setWidgetName2Action(widgetSnapshot, { newWidgetName });
        if (!setWidgetNameAction) {
            return null;
        }
        return {
            resourceId: resourceId,
            resourceType: options.resourceType,
            result: command_manager_1.ExecuteResult.Success,
            actions: setWidgetNameAction,
        };
    },
};


/***/ }),

/***/ 40806:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.compensator = void 0;
const usedWorker = () => !!global.useWorkerCompute;
const wrapValueToArray = (v) => {
    if (Array.isArray(v)) {
        return v;
    }
    return [v];
};
class Compensator {
    constructor() {
        this.handleAddChange = (key, changeData) => {
            if (!usedWorker()) {
                return;
            }
            const { ids, data } = changeData;
            ids.forEach((record) => {
                this[key].set(record, data);
            });
        };
        // private handleDelChange = (key: string, delIds) => {
        //   if (!useWorker) {
        //     return;
        //   }
        //   delIds.forEach((record) => {
        //     this[key].delete(record);
        //   });
        // };
        this.addWillRemoveRecords = (records) => {
            this.handleAddChange('willRemoveRecords', { ids: wrapValueToArray(records), data: true });
        };
        this.checkWillRemoveRecord = (record) => {
            return this.willRemoveRecords.has(record);
        };
        this.setLastGroupInfoIfNull = (groupInfo) => {
            if (!usedWorker()) {
                return;
            }
            if (!this.lastGroupInfo) {
                this.lastGroupInfo = groupInfo;
            }
        };
        this.getLastGroupInfo = () => {
            return this.lastGroupInfo;
        };
        this.clearAll = () => {
            this.willMoveRecords.clear();
            this.willRemoveRecords.clear();
            this.lastGroupInfo = null;
        };
        this.willRemoveRecords = new Map();
        this.willMoveRecords = new Map();
        this.lastGroupInfo = null;
    }
}
exports.compensator = new Compensator();


/***/ }),

/***/ 44182:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.computeCache = exports.dataSelfHelper = void 0;
const lodash_1 = __webpack_require__(46517);
/**
 * 1. The getCellValue process finds data that needs to be remedied
 * 2. Collect the data to be acquired into the helper for management.
 * 3. Timed batch remediation data in UI
 */
class DataSelfHelper {
    constructor() {
        this.dataMap = new Map();
    }
    clear() {
        this.dataMap.clear();
    }
    addRecord(dstId, recordId, fieldId) {
        const key = `${dstId}-${fieldId}`;
        if (!this.dataMap.has(key)) {
            this.dataMap.set(key, new Set([recordId]));
        }
        else {
            const dstRecordIdSet = this.dataMap.get(key);
            dstRecordIdSet === null || dstRecordIdSet === void 0 ? void 0 : dstRecordIdSet.add(recordId);
        }
    }
    // Confirm after the recovery data is successful
    confirm(key, recordIds) {
        const dstRecordIdSet = this.dataMap.get(key);
        if (dstRecordIdSet) {
            // During the remediation process, new records that need remediation may be added, and the difference is calculated.
            const restRecordIds = (0, lodash_1.difference)(Array.from(dstRecordIdSet), recordIds);
            if (restRecordIds.length) {
                this.dataMap.set(key, new Set(restRecordIds));
            }
            else {
                this.dataMap.delete(key);
            }
        }
    }
    get needHelper() {
        return this.dataMap.size > 0;
    }
}
// Implement self-rescue measures for data loss caused by dirty data. Ensure that the data can be displayed normally on the UI.
exports.dataSelfHelper = new DataSelfHelper();
// Map used to store the calculation cache
exports.computeCache = new Map();


/***/ }),

/***/ 32694:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ComputeRefManager = void 0;
const index_1 = __webpack_require__(23440);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
// Reference management for computed fields
class ComputeRefManager {
    constructor(refMap, reRefMap) {
        this.refMap = refMap || new Map();
        this.reRefMap = reRefMap || new Map();
    }
    addReRef(key, value) {
        this.reRefMap.set(key, value);
    }
    addRef(key, value) {
        // Simulate adding a new reference relationship
        const ref = this.refMap.get(key);
        if (ref) {
            ref.add(value);
        }
        else {
            this.refMap.set(key, new Set([value]));
        }
    }
    /**
     * Calculate the datasheetId collection of the forward or reverse dependence of the dimensional table dependence
     * @param dstId
     * @param fieldMap
     * @param refMap
     */
    getRefDstIds(dstId, fieldMap, refMap) {
        const fieldIds = Object.keys(fieldMap);
        const allKeys = fieldIds.map(fid => `${dstId}-${fid}`);
        const allDependenceKeys = new Set();
        const collectDependenceFieldKeys = (refKey) => {
            var _a;
            (_a = refMap.get(refKey)) === null || _a === void 0 ? void 0 : _a.forEach((key) => {
                if (!allDependenceKeys.has(key)) {
                    allDependenceKeys.add(key);
                    collectDependenceFieldKeys(key);
                }
            });
        };
        const hasErrorKeys = [];
        allKeys.forEach(key => {
            try {
                collectDependenceFieldKeys(key);
            }
            catch (error) {
                hasErrorKeys.push(key);
            }
        });
        const dstSet = new Set(Array.from(allDependenceKeys).map(key => key.split('-')[0]));
        return Array.from(dstSet);
    }
    // Check if there is a circular reference, if it exists, it will not pass
    checkRef(key, _visitedNode) {
        const visitedNode = _visitedNode || new Set();
        if (visitedNode.has(key)) {
            return false;
        }
        const ref = this.reRefMap.get(key);
        visitedNode.add(key);
        if (ref) {
            return Array.from(ref).every(key => this.checkRef(key, new Set(visitedNode)));
        }
        return true;
    }
    /**
     * TODO: Precisely clean up references.
     * 1. When a calculated field becomes a non-calculated field (deleted or field converted),
     * it is necessary to clean up the side of reRefMap as the key and the side of refMap as the value.
     * 2. Calculated fields are converted into other calculated fields, and formula lookup is converted to each other.
     * Cross-table non-cross-table dependent transformation
     * 3. The calculated field is not converted, but a dependency change has occurred.
     * For example, the formula originally depended on two fields A and B,
     * and later only depended on the A field, then the dependence on B should be removed.
     */
    cleanFieldRef(fieldId, datasheetId) {
        const key = `${datasheetId}-${fieldId}`;
        const thisFieldDeps = this.reRefMap.get(key);
        if (thisFieldDeps) {
            thisFieldDeps.forEach(item => {
                const thisFieldDep = this.refMap.get(item);
                thisFieldDep === null || thisFieldDep === void 0 ? void 0 : thisFieldDep.delete(key);
                if ((thisFieldDep === null || thisFieldDep === void 0 ? void 0 : thisFieldDep.size) === 0) {
                    this.refMap.delete(item);
                }
            });
            this.reRefMap.delete(key);
        }
        console.log(this.reRefMap, this.refMap);
    }
    /**
     * Clear dependencies and references.
     */
    clear() {
        this.refMap.clear();
        this.reRefMap.clear();
    }
    /*
     * Take the datasheet fieldMap as the entry to calculate the reference relationship of the datasheet,
     * and only calculate the reference relationship of one datasheet at a time
     * a - b - c three-table association,
     * When accessing table a, the server will also return meta and partial data of table b and c. In this case, computeRefMap is called three times.
     * @param fieldMap
     * @param datasheetId
     * @param state
     */
    computeRefMap(fieldMap, datasheetId, state, shouldSyncCache = true) {
        Object.values(fieldMap)
            .filter(field => model_1.Field.bindContext(field, state).isComputed || field.type === types_1.FieldType.Link)
            .forEach((field) => {
            switch (field.type) {
                case types_1.FieldType.Formula:
                    // formula may parse incorrectly
                    const formulaExpr = (0, index_1.parse)(field.property.expression, { field, fieldMap, state }, true);
                    if ('error' in formulaExpr) {
                        break;
                    }
                    const formulaRelatedFieldIds = new Set();
                    if (formulaExpr && formulaExpr.lexer.errors.length === 0) {
                        formulaExpr.lexer.matches.forEach(token => {
                            switch (token.type) {
                                case index_1.TokenType.Value:
                                    const fieldId = token.value.slice(1, -1);
                                    formulaRelatedFieldIds.add(fieldId);
                                    break;
                                case index_1.TokenType.PureValue:
                                    formulaRelatedFieldIds.add(token.value);
                                    break;
                            }
                        });
                    }
                    this.addReRef(`${datasheetId}-${field.id}`, new Set(Array.from(formulaRelatedFieldIds).map(fid => `${datasheetId}-${fid}`)));
                    formulaRelatedFieldIds.forEach(fid => {
                        const key = `${datasheetId}-${fid}`;
                        this.addRef(key, `${datasheetId}-${field.id}`);
                    });
                    break;
                // The lookup field depends on the link field of the current table and the looked field of the link table
                case types_1.FieldType.LookUp:
                    const keys = new model_1.LookUpField(field, state).getCurrentDatasheetRelatedFieldKeys(datasheetId);
                    this.addReRef(`${datasheetId}-${field.id}`, new Set(keys));
                    keys.forEach(key => {
                        this.addRef(key, `${datasheetId}-${field.id}`);
                    });
                    break;
                // The link field depends on the first field of the foreign key table
                case types_1.FieldType.Link:
                    const linkDstId = field.property.foreignDatasheetId;
                    const linkSnapshot = store_1.Selectors.getSnapshot(state, linkDstId);
                    if (linkSnapshot) {
                        const linkPrimaryField = store_1.Selectors.getDatasheetPrimaryField(linkSnapshot);
                        const key = `${linkDstId}-${linkPrimaryField.id}`;
                        this.addReRef(`${datasheetId}-${field.id}`, new Set([key]));
                        this.addRef(key, `${datasheetId}-${field.id}`);
                    }
                    break;
                default:
                    return;
            }
        });
        if (shouldSyncCache) {
            index_1.computeCache.set(index_1.COMPUTE_REF_MAP_CACHE_KEY, {
                refMap: this.refMap,
                reRefMap: this.reRefMap,
            });
        }
    }
    /**
     * Get all fields affected by a field
     */
    getAllEffectKeysByKey(key) {
        const effectedKeys = new Set();
        const collectEffectedFieldKeys = (refKey) => {
            var _a;
            (_a = this.refMap.get(refKey)) === null || _a === void 0 ? void 0 : _a.forEach((key) => {
                // First check if there is a circular reference.
                if (!effectedKeys.has(key)) {
                    effectedKeys.add(key);
                    collectEffectedFieldKeys(key);
                }
            });
        };
        try {
            collectEffectedFieldKeys(key);
        }
        catch (error) {
            return {
                hasError: true,
                effectedKeys
            };
        }
        return {
            hasError: false,
            effectedKeys
        };
    }
    /**
     * Check which table datasheetId collection a table depends on
     * @param dstId
     * @param fieldMap
     */
    getDependenceByDstIds(dstId, fieldMap) {
        return this.getRefDstIds(dstId, fieldMap, this.reRefMap);
    }
    /**
     * Check which tables a table depends on
     * @param dstId
     * @param fieldMap
     */
    getDependenceDstIds(dstId, fieldMap) {
        return this.getRefDstIds(dstId, fieldMap, this.refMap);
    }
}
exports.ComputeRefManager = ComputeRefManager;


/***/ }),

/***/ 46568:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getComputeRefManager = exports.COMPUTE_REF_MAP_CACHE_KEY = void 0;
const store_1 = __webpack_require__(56791);
const env_1 = __webpack_require__(13799);
const compute_cache_manager_1 = __webpack_require__(44182);
const compute_reference_manager_1 = __webpack_require__(32694);
exports.COMPUTE_REF_MAP_CACHE_KEY = 'COMPUTE_REF_MAP_CACHE_KEY';
/**
 * Pass in the current `state`, and return the reference relationship management instance of the computed field in the current state.
 */
const getComputeRefManager = (state) => {
    const refMapCache = compute_cache_manager_1.computeCache.get(exports.COMPUTE_REF_MAP_CACHE_KEY);
    // The server does not have a mechanism to update the refMap, so every time it gets the latest one. cannot be retrieved from the cache.
    if (refMapCache && !(0, env_1.isServer)()) {
        const computeRefManager = new compute_reference_manager_1.ComputeRefManager(refMapCache.refMap, refMapCache.reRefMap);
        return computeRefManager;
    }
    const computeRefManager = new compute_reference_manager_1.ComputeRefManager();
    Object.keys(state.datasheetMap).forEach(datasheetId => {
        const currSnapshot = store_1.Selectors.getSnapshot(state, datasheetId);
        const fieldMap = currSnapshot === null || currSnapshot === void 0 ? void 0 : currSnapshot.meta.fieldMap;
        if (fieldMap) {
            computeRefManager.computeRefMap(fieldMap, datasheetId, state);
        }
    });
    return computeRefManager;
};
exports.getComputeRefManager = getComputeRefManager;


/***/ }),

/***/ 73374:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(44182), exports);
__exportStar(__webpack_require__(32694), exports);
__exportStar(__webpack_require__(46568), exports);
__exportStar(__webpack_require__(21852), exports);


/***/ }),

/***/ 26693:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dispatchNewViewDerivation = exports.ViewDerivateFactory = void 0;
const utils_1 = __webpack_require__(26854);
const actions_1 = __webpack_require__(6021);
const selectors_1 = __webpack_require__(964);
const view_derivate_calendar_1 = __webpack_require__(96141);
const view_derivate_gallery_1 = __webpack_require__(25019);
const view_derivate_gantt_1 = __webpack_require__(27563);
const view_derivate_grid_1 = __webpack_require__(59235);
const view_derivate_kanban_1 = __webpack_require__(47291);
const view_derivate_org_chart_1 = __webpack_require__(67270);
const constants_1 = __webpack_require__(12690);
class ViewDerivateFactory {
    static createViewDerivate(state, datasheetId, viewType) {
        switch (viewType) {
            case constants_1.ViewType.Calendar:
                return new view_derivate_calendar_1.ViewDerivateCalendar(state, datasheetId);
            case constants_1.ViewType.Gallery:
                return new view_derivate_gallery_1.ViewDerivateGallery(state, datasheetId);
            case constants_1.ViewType.Gantt:
                return new view_derivate_gantt_1.ViewDerivateGantt(state, datasheetId);
            case constants_1.ViewType.Grid:
                return new view_derivate_grid_1.ViewDerivateGrid(state, datasheetId);
            case constants_1.ViewType.Kanban:
                return new view_derivate_kanban_1.ViewDerivateKanban(state, datasheetId);
            case constants_1.ViewType.OrgChart:
                return new view_derivate_org_chart_1.ViewDerivateOrgChart(state, datasheetId);
            case constants_1.ViewType.NotSupport:
                // Old client renders unsupported views as table views by default
                return new view_derivate_grid_1.ViewDerivateGrid(state, datasheetId);
            case constants_1.ViewType.Form:
                throw new Error('Form view is should not be derivate');
        }
        (0, utils_1.assertNever)(viewType);
    }
}
exports.ViewDerivateFactory = ViewDerivateFactory;
const dispatchNewViewDerivation = (store, datasheetId, viewId) => {
    const state = store.getState();
    const currentViewId = (0, selectors_1.getActiveViewId)(state);
    const view = (0, selectors_1.getViewInNode)(state, datasheetId, viewId || currentViewId);
    if (!view || !view.rows) {
        return;
    }
    const timeStart = Date.now();
    const viewDerivate = ViewDerivateFactory.createViewDerivate(state, datasheetId, view.type);
    const viewDerivation = viewDerivate.getViewDerivation(view);
    console.log('DERIVATE: calcViewDerivation %s  %s cost: %s ms', datasheetId, view.id, Date.now() - timeStart);
    store.dispatch((0, actions_1.setViewDerivation)(datasheetId, {
        viewId: view.id,
        viewDerivation,
    }));
};
exports.dispatchNewViewDerivation = dispatchNewViewDerivation;


/***/ }),

/***/ 21852:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(89882), exports);
__exportStar(__webpack_require__(96141), exports);
__exportStar(__webpack_require__(25019), exports);
__exportStar(__webpack_require__(27563), exports);
__exportStar(__webpack_require__(59235), exports);
__exportStar(__webpack_require__(47291), exports);
__exportStar(__webpack_require__(67270), exports);
__exportStar(__webpack_require__(26693), exports);
__exportStar(__webpack_require__(18463), exports);


/***/ }),

/***/ 18463:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(29733), exports);
__exportStar(__webpack_require__(80766), exports);


/***/ }),

/***/ 29733:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewFilterDerivate = void 0;
const lodash_1 = __webpack_require__(46517);
const field_1 = __webpack_require__(46559);
const datasheet_1 = __webpack_require__(55384);
const datasheet_2 = __webpack_require__(57056);
const view_types_1 = __webpack_require__(88471);
const field_types_1 = __webpack_require__(80360);
class ViewFilterDerivate {
    constructor(state, datasheetId) {
        this.state = state;
        this.datasheetId = datasheetId;
        /**
         * Currently only to lookup with, TODO: change the method to lookup, the follow-up to go deprecated
         * @param linkFieldRecords
         * @param filterInfo
         */
        this.getFilteredRecords = (data) => {
            var _a;
            const { linkFieldRecordIds, filterInfo } = data;
            const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
            if (!linkFieldRecordIds || !snapshot) {
                return [];
            }
            const recordMap = snapshot.recordMap;
            const _filterInfo = (0, datasheet_2.getFilterInfoExceptInvalid)(this.state, this.datasheetId, filterInfo);
            if (!_filterInfo) {
                return linkFieldRecordIds;
            }
            const result = linkFieldRecordIds.filter(linkFieldRecordId => {
                const record = recordMap[linkFieldRecordId];
                return this.checkConditions(record, _filterInfo);
            });
            return result;
        };
    }
    /**
     * Filter out duplicate cellValue, return the de-duplicated rows,
     * only allow adding one with duplicate conditions
     *
     * TODO: Repeat is not quite in line with the logic of "filtering",
     * it should be a separate function, and the following calculation is not rigorous, it needs to be rewritten.
     */
    findRepeatRow(rows, fieldId, isAnd) {
        var _a;
        const map = new Map();
        const state = this.state;
        const snapshot = this.state.datasheetMap[this.datasheetId].datasheet.snapshot;
        const field = snapshot.meta.fieldMap[fieldId];
        const fieldMethod = field_1.Field.bindContext(field, this.state);
        const values = datasheet_1.DatasheetActions.getCellValuesByFieldId(state, snapshot, field.id, undefined, true);
        if (values === null || values === void 0 ? void 0 : values.length) {
            for (const row of rows) {
                const needTranslate = [field_types_1.FieldType.Currency, field_types_1.FieldType.SingleText, field_types_1.FieldType.Text, field_types_1.FieldType.URL, field_types_1.FieldType.Phone, field_types_1.FieldType.Email,
                    field_types_1.FieldType.DateTime, field_types_1.FieldType.CreatedTime, field_types_1.FieldType.LastModifiedTime, field_types_1.FieldType.Number, field_types_1.FieldType.Percent];
                let cellValue = (0, datasheet_2.getCellValue)(state, snapshot, row.recordId, field.id);
                const lookUpField = (0, datasheet_2.findRealField)(state, field);
                const rollUpType = ((_a = field.property) === null || _a === void 0 ? void 0 : _a.rollUpType) || field_types_1.RollUpFuncType.VALUES;
                const isNeedSort = Array.isArray(cellValue) && ((field.type === field_types_1.FieldType.LookUp && rollUpType === field_types_1.RollUpFuncType.VALUES) ||
                    ([field_types_1.FieldType.MultiSelect, field_types_1.FieldType.Member].includes(field.type))
                    || field.type === field_types_1.FieldType.Link);
                if (isNeedSort) {
                    cellValue = (0, lodash_1.sortBy)(cellValue, o => typeof o === 'object' ? o.text : o);
                }
                // Do you need to call cellValueToString to convert to string form.
                if (needTranslate.includes(field.type) ||
                    (field_types_1.FieldType.LookUp === field.type && lookUpField &&
                        ![field_types_1.FieldType.SingleSelect, field_types_1.FieldType.MultiSelect, field_types_1.FieldType.Link].includes(lookUpField.type))) {
                    cellValue = fieldMethod.cellValueToString(cellValue, { hideUnit: true }) || '';
                }
                cellValue = (cellValue === null || cellValue === void 0 ? void 0 : cellValue.toString().trim()) || '';
                if (!map.has(cellValue)) {
                    map.set(cellValue, [row.recordId]);
                    continue;
                }
                map.set(cellValue, [...map.get(cellValue), row.recordId]);
            }
        }
        const result = [];
        map.forEach(value => {
            if (value.length > 1) {
                result.push(...value);
            }
        });
        if (isAnd) {
            const recordIdMap = new Map(result.map((value, key) => [value, key]));
            return rows.filter(row => recordIdMap.has(row.recordId));
        }
        return result;
    }
    doFilter(condition, field, cellValue) {
        const fieldMethod = field_1.Field.bindContext(field, this.state);
        /**
         *  isEmpty, isNotEmpty call generic logic
         */
        if (condition.operator === view_types_1.FOperator.IsEmpty || condition.operator === view_types_1.FOperator.IsNotEmpty) {
            return fieldMethod.isEmptyOrNot(condition.operator, cellValue);
        }
        /**
         *  In the non-isEmpty || isNotEmpty condition, if the value is not filled in, no filtering is done.
         */
        if (condition.value == null && fieldMethod.basicValueType !== field_types_1.BasicValueType.Number && condition.operator !== view_types_1.FOperator.IsRepeat) {
            return true;
        }
        /**
         * Call the field's own operator calculation function to calculate.
         */
        return fieldMethod.isMeetFilter(condition.operator, cellValue, condition.value);
    }
    doFilterOperations(condition, record, repeatRows) {
        var _a;
        /**
         * or condition to have repeatRows
         * or condition on the presence or absence of repeatRows
         */
        if (repeatRows === null || repeatRows === void 0 ? void 0 : repeatRows.includes(record.id)) {
            return true;
        }
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!snapshot) {
            return false;
        }
        const { fieldId } = condition;
        const field = snapshot.meta.fieldMap[fieldId];
        // currently, we don't filter data by the columns without permission,
        // so we need to ignore the permission check when get `cellValue`
        const cellValue = (0, datasheet_2.getCellValue)(this.state, snapshot, record.id, fieldId, undefined, undefined, true);
        try {
            return this.doFilter(condition, field, cellValue);
        }
        catch (error) {
            // FIXME: calc fields transform cause filter match error
            return false;
        }
    }
    /**
     * Check if a record meets the conditions in filterCondition
     */
    checkConditions(record, filterInfo, repeatRows) {
        const conditions = filterInfo.conditions;
        if (!record) {
            return false;
        }
        if (filterInfo.conjunction === view_types_1.FilterConjunction.And) {
            return conditions.every(condition => this.doFilterOperations(condition, record));
        }
        if (filterInfo.conjunction === view_types_1.FilterConjunction.Or) {
            return conditions.some(condition => this.doFilterOperations(condition, record, repeatRows));
        }
        // never happen
        return false;
    }
    getFilterRowsBase(props) {
        let filterInfo = props.filterInfo;
        const recordMap = props.recordMap;
        let rows = props.rows;
        if (!filterInfo) {
            return rows;
        }
        const isRepeatCondition = filterInfo.conditions.find(condition => condition.operator === view_types_1.FOperator.IsRepeat);
        const isAnd = filterInfo.conjunction === view_types_1.FilterConjunction.And;
        let repeatRows;
        if (isRepeatCondition) {
            if (isAnd) {
                rows = this.findRepeatRow(rows, isRepeatCondition.fieldId, true);
                const filteredConditions = filterInfo.conditions.filter(condition => condition.operator !== view_types_1.FOperator.IsRepeat);
                filterInfo = Object.assign(Object.assign({}, filterInfo), { conditions: filteredConditions });
            }
            else {
                repeatRows = this.findRepeatRow(rows, isRepeatCondition.fieldId);
            }
        }
        const result = rows.filter(row => {
            return this.checkConditions(recordMap[row.recordId], filterInfo, repeatRows);
        });
        return result;
    }
    // TODO: mirrorFilter is no longer a direct source view filter.
    getFilteredRows(view) {
        var _a, _b, _c, _d;
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!view.rows || !snapshot) {
            return [];
        }
        const recordMap = snapshot.recordMap;
        // TODO: empty data filter, subsequent data repair should be able to delete
        const rows = view.rows.filter(row => recordMap[row.recordId]);
        const filterInfo = (0, datasheet_2.getFilterInfoExceptInvalid)(this.state, this.datasheetId, view.filterInfo);
        const viewRows = this.getFilterRowsBase({ filterInfo, rows, recordMap });
        const mirrorId = this.state.pageParams.mirrorId;
        const mirrorFilter = (_d = (_c = (_b = this.state.mirrorMap[mirrorId]) === null || _b === void 0 ? void 0 : _b.mirror) === null || _c === void 0 ? void 0 : _c.temporaryView) === null || _d === void 0 ? void 0 : _d.filterInfo;
        if (!mirrorFilter) {
            return viewRows;
        }
        /**
         * Filter again in the presence of mirror
         */
        return this.getFilterRowsBase({ filterInfo: mirrorFilter, rows: viewRows, recordMap });
    }
}
exports.ViewFilterDerivate = ViewFilterDerivate;


/***/ }),

/***/ 80766:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewGroupDerivate = void 0;
const field_1 = __webpack_require__(46559);
const datasheet_1 = __webpack_require__(57056);
const constants_1 = __webpack_require__(12690);
const model_1 = __webpack_require__(61116);
class ViewGroupDerivate {
    constructor(state, datasheetId) {
        this.state = state;
        this.datasheetId = datasheetId;
    }
    getFixedCellValue(recordMoveType, recordId, fieldId) {
        var _a, _b, _c;
        const snapshot = (_b = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet) === null || _b === void 0 ? void 0 : _b.snapshot;
        if (!recordId || !snapshot) {
            return null;
        }
        const state = this.state;
        const activeRecordId = (0, datasheet_1.getActiveRecordId)(state);
        const _cv = (0, datasheet_1.getCellValue)(state, snapshot, recordId, fieldId);
        if (activeRecordId !== recordId) {
            return _cv;
        }
        if ([constants_1.RecordMoveType.OutOfView, constants_1.RecordMoveType.WillMove].includes(recordMoveType)) {
            const activeRowInfo = (0, datasheet_1.getActiveRowInfo)(state);
            if (activeRowInfo) {
                const { recordSnapshot } = activeRowInfo;
                let cv = (_c = recordSnapshot.recordMap[recordId]) === null || _c === void 0 ? void 0 : _c.data[fieldId];
                const field = (0, datasheet_1.getField)(state, fieldId, this.datasheetId);
                cv = (0, model_1.handleEmptyCellValue)(cv, field_1.Field.bindContext(field, state).basicValueType);
                return cv;
            }
        }
        return (0, datasheet_1.getCellValue)(state, snapshot, recordId, fieldId);
    }
    getLinearRowsAndGroup(view, visibleRows, recordMoveType) {
        const state = this.state;
        const groupInfo = view.groupInfo || [];
        const linearRows = [];
        // init groupBreakpoint
        const groupSketch = new model_1.Group(groupInfo);
        const groupLevel = groupInfo.length;
        let preRow = { recordId: '' };
        const lastRow = { recordId: '' };
        // Displays the line number in front of the record and resets when grouping occurs.
        let displayRowIndex = 0;
        let groupHeadRecordId = '';
        // Presence of grouping, nothing, add station line.
        if (!visibleRows.length && groupInfo.length) {
            linearRows.push({
                type: constants_1.CellType.Blank,
                depth: 0,
                recordId: '',
            });
            linearRows.push({
                type: constants_1.CellType.Add,
                depth: 0,
                recordId: '',
            });
        }
        for (const [index, row] of [...visibleRows, lastRow].entries()) {
            let shouldGenGroupLinearRows = false;
            groupInfo.forEach((groupItem, groupItemIndex) => {
                const fieldId = groupItem.fieldId;
                const field = (0, datasheet_1.getField)(state, fieldId, this.datasheetId);
                const cv1 = this.getFixedCellValue(recordMoveType, preRow.recordId, fieldId);
                const cv2 = this.getFixedCellValue(recordMoveType, row.recordId, fieldId);
                if (!row.recordId ||
                    !preRow.recordId ||
                    !(field_1.Field.bindContext(field, state).compare(cv1, cv2) === 0)) {
                    shouldGenGroupLinearRows = true;
                    // Because the breakpoint of the upper layer must be the breakpoint of the lower layer, 
                    // so here we have to iterate through them and add a line to each one.
                    groupInfo.slice(groupItemIndex).forEach((groupItem, subIndex) => {
                        groupSketch.addBreakpointAndSetGroupTab(groupItem.fieldId, index, row.recordId, subIndex + groupItemIndex);
                    });
                }
            });
            if (shouldGenGroupLinearRows) {
                groupHeadRecordId = row.recordId;
                const groupLinearRows = groupSketch.genGroupLinearRows(index, row.recordId, preRow.recordId);
                linearRows.push(...groupLinearRows);
                displayRowIndex = 0;
            }
            preRow = row;
            if (row.recordId) {
                displayRowIndex++;
                linearRows.push({
                    type: constants_1.CellType.Record,
                    depth: groupLevel,
                    recordId: row.recordId,
                    displayIndex: displayRowIndex,
                    groupHeadRecordId,
                });
            }
            if (!groupLevel && !row.recordId) {
                linearRows.push({
                    type: constants_1.CellType.Add,
                    depth: 0,
                    recordId: '',
                });
            }
        }
        groupSketch.cacheGroupBreakpoint();
        return {
            linearRows: linearRows,
            groupSketch,
        };
    }
    /**
     * Remove collapsed groups
     * blank_0
     * tab_A_0 (Folded)
     *   tab_A_1
     *     recA_2
     *     recB_2
     *     add_2
     *   blank_1
     *   tab_C_1
     *     recC_2
     *     add_2
     *   blank_1
     * blank_0 (End of folding)
     * tab_D_0
     *   tab_D_1
     *     recD_2
     *     add_2
     *   blank_1
     *
     * As shown in the above diagram, as long as we find the head of the collapsed group until
     * we meet a blank with the same depth as it, anything in between can be ignored.
     */
    getLinearRowsAndGroupAfterCollapse(linearRows, groupingCollapseIds) {
        if (!groupingCollapseIds) {
            return linearRows;
        }
        const groupingCollapseSet = new Set(groupingCollapseIds);
        const res = linearRows.reduce((ctx, linearRow) => {
            if (ctx.skip) {
                // A black with the same level as the skipped group is encountered, indicating that the group has ended
                if (linearRow.type === constants_1.CellType.Blank &&
                    linearRow.depth === ctx.depth) {
                    // Resetting the collapsed state
                    ctx.depth = Infinity;
                    ctx.skip = false;
                    ctx.collapsedLinearRows.push(linearRow);
                }
                return ctx;
            }
            // Enable skip mode by if the grouping header hits the fold.
            if (linearRow.type === constants_1.CellType.GroupTab &&
                groupingCollapseSet.has(linearRow.recordId + '_' + linearRow.depth)) {
                ctx.skip = true;
                ctx.depth = linearRow.depth;
            }
            ctx.collapsedLinearRows.push(linearRow);
            return ctx;
        }, { collapsedLinearRows: [], skip: false, depth: Infinity });
        return res.collapsedLinearRows;
    }
    getGroupDerivation(view, rowsWithLazySort, recordMoveType) {
        const groupingCollapseIds = (0, datasheet_1.getGroupingCollapseIds)(this.state, this.datasheetId);
        const { linearRows: pureLinearRows, groupSketch } = this.getLinearRowsAndGroup(view, rowsWithLazySort, recordMoveType);
        const visibleLinearRows = this.getLinearRowsAndGroupAfterCollapse(pureLinearRows, groupingCollapseIds);
        return {
            // Grouping breakpoint data
            /**
            * groupBreakpoint
            * field1 Grouping Breakpoints 0---------10---------20
            * field2 level Grouping Breakpoints 0--3-5-6--10----15---20
            *
            * field1: [0, 10, 20]
            * field2: [0, 3, 5, 6, 10, 15, 20]
            */
            groupBreakpoint: groupSketch.groupBreakpoint,
            /**
            * Guide the grid view to draw the structured data of the table,
            * with the hierarchical structure reflected by depth.
            * [
            *    Blank 0
            *    GroupTab 0
            *      GroupTab 1
            *        GroupTab 2
            *          Record 3
            *        Add 2
            *        Blank 2
            *      Blank 1
            *    Blank 0
            * ]
            */
            linearRows: visibleLinearRows,
            /**
            * [`${row.type}_${row.recordId}`, index]
            */
            linearRowsIndexMap: new Map(pureLinearRows.map((row, index) => [`${row.type}_${row.recordId}`, index])),
            // Gantt Chart view of ui row information
            pureLinearRows,
        };
    }
}
exports.ViewGroupDerivate = ViewGroupDerivate;


/***/ }),

/***/ 89882:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateBase = void 0;
const field_1 = __webpack_require__(46559);
const view_filter_derivate_1 = __webpack_require__(29733);
const selectors_1 = __webpack_require__(964);
class ViewDerivateBase {
    constructor(state, datasheetId) {
        this.state = state;
        this.datasheetId = datasheetId;
        this.viewFilterDerivate = new view_filter_derivate_1.ViewFilterDerivate(state, datasheetId);
    }
    getSortRowsByGroup(view, rows) {
        var _a, _b;
        const state = this.state;
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!view || !snapshot) {
            return [];
        }
        const fieldMap = snapshot.meta.fieldMap;
        if (!view.groupInfo) {
            return rows;
        }
        const fieldPermissionMap = (_b = this.state.datasheetMap[this.datasheetId]) === null || _b === void 0 ? void 0 : _b.fieldPermissionMap;
        const groups = (0, selectors_1.getGroupFields)(view, snapshot.meta.fieldMap, fieldPermissionMap);
        if (!groups.length) {
            return rows;
        }
        const descOrders = view.groupInfo.reduce((acc, gp) => {
            if (fieldMap[gp.fieldId]) {
                acc.push(gp.desc);
            }
            return acc;
        }, []);
        const fieldInstanceMap = {};
        const cacheSortRes = {};
        // rows sorted by group
        return rows.sort((row1, row2) => {
            return groups.reduce((prev, field, index) => {
                if (prev !== 0) {
                    return prev;
                }
                let fieldInstance = fieldInstanceMap[field.id];
                if (!fieldInstance) {
                    fieldInstance = field_1.Field.bindContext(field, state);
                    fieldInstanceMap[field.id] = fieldInstance;
                }
                const cv1 = (0, selectors_1.getCellValue)(state, snapshot, row1.recordId, field.id);
                const cv2 = (0, selectors_1.getCellValue)(state, snapshot, row2.recordId, field.id);
                const key = `${cv1}${cv2}`;
                let res = 0;
                if (key in cacheSortRes) {
                    res = cacheSortRes[key];
                }
                else {
                    res = fieldInstance.compare(cv1, cv2);
                    typeof cv1 !== 'object' && typeof cv2 !== 'object' && (cacheSortRes[key] = res);
                }
                const sign = descOrders[index] ? -1 : 1;
                return res * sign;
            }, 0) || 1;
        });
    }
    getSortRows(view, rows) {
        var _a;
        if (!(view === null || view === void 0 ? void 0 : view.sortInfo) || !view.sortInfo.keepSort) {
            return rows;
        }
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!snapshot) {
            return [];
        }
        return (0, selectors_1.sortRowsBySortInfo)(this.state, rows, view.sortInfo.rules, snapshot);
    }
    getSearchRows(rows, view) {
        var _a;
        const searchKeyword = (0, selectors_1.getSearchKeyword)(this.state);
        if (!searchKeyword) {
            return { visibleRows: rows };
        }
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!snapshot) {
            return { visibleRows: rows };
        }
        const lowerCaseSearchKeyword = searchKeyword.toLowerCase();
        const searchResults = [];
        const visibleColumns = !(view === null || view === void 0 ? void 0 : view.columns) ? [] : view.columns.filter(item => !item.hidden).map(item => item.fieldId);
        const visibleRows = rows.filter(row => {
            const { recordId } = row;
            let isRecordDataMatchKeyword = false;
            visibleColumns.forEach(fieldId => {
                const cellValue = (0, selectors_1.getStringifyCellValue)(this.state, snapshot, recordId, fieldId);
                if (cellValue && cellValue.toLowerCase().includes(lowerCaseSearchKeyword)) {
                    searchResults.push([recordId, fieldId]);
                    isRecordDataMatchKeyword = true;
                }
            });
            return isRecordDataMatchKeyword;
        });
        return { visibleRows, searchResults };
    }
    /**
     * An array in order after filtering and sorting by view properties.
     * @param view view properties
     */
    getRowsAfterViewQuery(view) {
        if (!view) {
            return [];
        }
        // where exact match by field
        const filteredRows = this.viewFilterDerivate.getFilteredRows(view).filter(item => !item.hidden);
        // order by
        const sortedRows = this.getSortRows(view, filteredRows);
        // group by
        return this.getSortRowsByGroup(view, sortedRows);
    }
    /**
     * View Calculation of Derived Data
     *
     * For views that do not require custom view-derived data,
     * you can call this method directly to return it, otherwise you need to override it.
     */
    getViewDerivation(view) {
        view = view || (0, selectors_1.getCurrentView)(this.state);
        if (!view || !view.rows) {
            throw new Error("View not loaded, can't get view data");
        }
        const rowsInView = this.getRowsAfterViewQuery(view);
        return Object.assign({ rowsWithoutSearch: rowsInView }, this.getViewDerivationWithSearch(view, rowsInView));
    }
    /**
     * Get computationally derived data containing search results.
     *
     * Used to do calculations when searching for updates.
     */
    getViewDerivationWithSearch(view, rowsWithoutSearch) {
        if (!view || !view.rows) {
            throw new Error("View not loaded, can't get view data");
        }
        const { visibleRows, searchResults } = this.getSearchRows(rowsWithoutSearch, view);
        const visibleRowsIndexMap = new Map(visibleRows.map((item, index) => [item.recordId, index]));
        return {
            // Raw rows of data, grouped without any filtering sorting.
            rowsIndexMap: new Map(view.rows.map((item, index) => [item.recordId, index])),
            // Excluding pre-sorted row data, including filtered sorted grouped search.
            pureVisibleRows: visibleRows,
            // Map of the row-order data after view property calculation
            pureVisibleRowsIndexMap: visibleRowsIndexMap,
            // Visible row data, including filtering sorting grouping search [pre-sorting], 
            // Kanban view does not have pre-sorting, so it is the same as pureVisibleRows.
            visibleRows,
            // A map with recordId as key and order as value.
            visibleRowsIndexMap: visibleRowsIndexMap,
            searchResults
        };
    }
}
exports.ViewDerivateBase = ViewDerivateBase;


/***/ }),

/***/ 96141:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateCalendar = void 0;
const view_derivate_base_1 = __webpack_require__(89882);
class ViewDerivateCalendar extends view_derivate_base_1.ViewDerivateBase {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
    }
    getViewDerivation(view) {
        return super.getViewDerivation(view);
    }
}
exports.ViewDerivateCalendar = ViewDerivateCalendar;


/***/ }),

/***/ 25019:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateGallery = void 0;
const datasheet_1 = __webpack_require__(57056);
const field_1 = __webpack_require__(46559);
const view_derivate_base_1 = __webpack_require__(89882);
class ViewDerivateGallery extends view_derivate_base_1.ViewDerivateBase {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
    }
    getGalleryGroupedRows(view, rows) {
        var _a, _b;
        const state = this.state;
        const datasheetId = this.datasheetId;
        const groupInfo = view.groupInfo || [];
        const groupedRows = [];
        const snapshot = (_b = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet) === null || _b === void 0 ? void 0 : _b.snapshot;
        if (!groupInfo || !datasheetId || !snapshot) {
            return groupedRows;
        }
        if (groupInfo && groupInfo.length === 0) {
            return groupedRows;
        }
        const fieldMap = (0, datasheet_1.getFieldMap)(state, datasheetId);
        const fieldId = groupInfo[0].fieldId;
        const field = fieldMap[fieldId];
        let preRecordId = '';
        let tempGroupedRows = [];
        for (let index = 0; index < rows.length; index++) {
            const record = rows[index];
            const recordId = record.recordId;
            if (index === 0) {
                tempGroupedRows.push(record.recordId);
            }
            else {
                if (field &&
                    field_1.Field.bindContext(field, state).compare((0, datasheet_1.getCellValue)(state, snapshot, preRecordId, fieldId), (0, datasheet_1.getCellValue)(state, snapshot, recordId, fieldId))) {
                    groupedRows.push(tempGroupedRows);
                    tempGroupedRows = [record.recordId];
                }
                else {
                    tempGroupedRows.push(record.recordId);
                }
            }
            preRecordId = recordId;
            if (index === rows.length - 1) {
                groupedRows.push(tempGroupedRows);
                break;
            }
        }
        return groupedRows;
    }
    getViewDerivation(view) {
        const baseViewDerivation = super.getViewDerivation(view);
        const galleryGroupedRows = this.getGalleryGroupedRows(view, baseViewDerivation.visibleRows);
        return Object.assign(Object.assign({}, baseViewDerivation), { 
            // Grouped rows of data for gallery view.
            galleryGroupedRows });
    }
    /**
     * Get computationally derived data containing search results.
     *
     * Used to do calculations when searching for updates.
     */
    getViewDerivationWithSearch(view, rowsWithoutSearch) {
        const baseViewDerivation = super.getViewDerivationWithSearch(view, rowsWithoutSearch);
        const galleryGroupedRows = this.getGalleryGroupedRows(view, baseViewDerivation.visibleRows);
        return Object.assign(Object.assign({}, baseViewDerivation), { 
            // Grouped rows of data for gallery view
            galleryGroupedRows });
    }
}
exports.ViewDerivateGallery = ViewDerivateGallery;


/***/ }),

/***/ 27563:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateGantt = void 0;
const view_derivate_grid_1 = __webpack_require__(59235);
// gantt is consistent with the data required by the Grid view.
class ViewDerivateGantt extends view_derivate_grid_1.ViewDerivateGrid {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
    }
}
exports.ViewDerivateGantt = ViewDerivateGantt;


/***/ }),

/***/ 59235:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateGrid = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const field_1 = __webpack_require__(46559);
const view_filter_derivate_1 = __webpack_require__(29733);
const view_group_derivate_1 = __webpack_require__(80766);
const interfaces_1 = __webpack_require__(37848);
const datasheet_1 = __webpack_require__(57056);
const constants_1 = __webpack_require__(12690);
const model_1 = __webpack_require__(61116);
const view_derivate_base_1 = __webpack_require__(89882);
class ViewDerivateGrid extends view_derivate_base_1.ViewDerivateBase {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
        this.viewFilterDerivate = new view_filter_derivate_1.ViewFilterDerivate(state, datasheetId);
        this.viewGroupDerivate = new view_group_derivate_1.ViewGroupDerivate(state, datasheetId);
    }
    // including the visibleRows of the pre-sorted results, the original getVisibleRowsInner.
    getVisibleRowsWithLazySort(visibleRows, recordMoveType, activeRowInfo) {
        const snapshot = this.state.datasheetMap[this.datasheetId].datasheet.snapshot;
        const recordMap = snapshot.recordMap;
        if (!visibleRows) {
            return [];
        }
        if (!activeRowInfo) {
            return visibleRows;
        }
        const { positionInfo: { recordId, visibleRowIndex } } = activeRowInfo;
        const nextVisibleRows = (0, immer_1.default)(visibleRows, draftVisibleRows => {
            if ([constants_1.RecordMoveType.OutOfView, constants_1.RecordMoveType.WillMove].includes(recordMoveType)) {
                if (constants_1.RecordMoveType.WillMove === recordMoveType) {
                    const nextVisibleRowIndex = draftVisibleRows.findIndex(row => row.recordId === recordId);
                    draftVisibleRows.splice(nextVisibleRowIndex, 1);
                }
                // Insert it only when the record still exists.
                if (recordId in recordMap) {
                    draftVisibleRows.splice(visibleRowIndex, 0, { recordId });
                }
            }
            return draftVisibleRows;
        });
        return nextVisibleRows;
    }
    getRecordMoveType(view, visibleRowsIndexMap, activeRecordId, activeRowInfo) {
        var _a, _b;
        const datasheetId = this.datasheetId;
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        // getPureVisibleRows gets the latest visibleRows.
        const NOT_MOVE = constants_1.RecordMoveType.NotMove;
        if (!snapshot || !activeRecordId) {
            return NOT_MOVE;
        }
        if (!activeRowInfo) {
            return NOT_MOVE;
        }
        const { positionInfo, type = constants_1.WhyRecordMoveType.UpdateRecord } = activeRowInfo;
        const nextVisibleRowIndex = visibleRowsIndexMap.get(activeRecordId);
        if (positionInfo.isInit) {
            return NOT_MOVE;
        }
        if (type === constants_1.WhyRecordMoveType.NewRecord) {
            if (!visibleRowsIndexMap.has(activeRecordId)) {
                // does not exist in the current view, 
                // but the recordMap exists, indicating that it is filtered
                if (activeRecordId in snapshot.recordMap) {
                    return constants_1.RecordMoveType.OutOfView;
                }
                // The current view does not exist and the recordMap does not exist, 
                // indicating that it is deleted.
                return NOT_MOVE;
            }
            if (nextVisibleRowIndex !== positionInfo.visibleRowIndex) {
                return constants_1.RecordMoveType.WillMove;
            }
        }
        // Reduce unnecessary calculations by judging ahead of time
        if (nextVisibleRowIndex === positionInfo.visibleRowIndex) {
            return NOT_MOVE;
        }
        const { recordSnapshot } = activeRowInfo;
        const nextRecordSnapshot = (0, datasheet_1.getRecordSnapshot)(this.state, datasheetId, activeRecordId);
        // Records are deleted
        if (!nextRecordSnapshot) {
            return constants_1.RecordMoveType.Deleted;
        }
        const fieldMap = (0, datasheet_1.getFieldMap)(this.state);
        const fieldPermissionMap = (_b = this.state.datasheetMap[this.datasheetId]) === null || _b === void 0 ? void 0 : _b.fieldPermissionMap;
        const groupField = (0, datasheet_1.getGroupFields)(view, fieldMap, fieldPermissionMap);
        const filterInfo = (0, datasheet_1.getActiveViewFilterInfo)(this.state);
        const sortInfo = (0, datasheet_1.getActiveViewSortInfo)(this.state);
        const isSearching = (0, datasheet_1.getIsSearching)(this.state);
        const isRecordEffectPositionCellValueChanged = (recordSnapshot) => {
            // Whether the record is pre-sorted is determined by the group, filter, 
            // and sort fields that have auto-sorting turned on.
            const fieldsWhichMakeRecordMove = groupField.map(field => field.id);
            if (sortInfo === null || sortInfo === void 0 ? void 0 : sortInfo.keepSort) {
                sortInfo === null || sortInfo === void 0 ? void 0 : sortInfo.rules.forEach(rule => fieldsWhichMakeRecordMove.push(rule.fieldId));
            }
            filterInfo === null || filterInfo === void 0 ? void 0 : filterInfo.conditions.forEach(cond => fieldsWhichMakeRecordMove.push(cond.fieldId));
            const _fieldsWhichMakeRecordMove = [...new Set(fieldsWhichMakeRecordMove)].filter(fieldId => {
                const fieldRole = (0, datasheet_1.getFieldRoleByFieldId)(fieldPermissionMap, fieldId);
                return fieldRole !== interfaces_1.Role.None;
            });
            return _fieldsWhichMakeRecordMove.some(fieldId => {
                var _a, _b;
                /**
                * The recordSnapshot passed in by getCellValue will not work for the formula,
                * which is always up-to-date.
                * So store the value of the calculated field in the old recordSnapshot.
                * Used to handle the case of pre-sorted calculated fields.
                */
                const field = fieldMap[fieldId];
                let cv1 = (_b = (_a = recordSnapshot.recordMap[activeRecordId]) === null || _a === void 0 ? void 0 : _a.data[fieldId]) !== null && _b !== void 0 ? _b : null;
                cv1 = (0, model_1.handleEmptyCellValue)(cv1, field_1.Field.bindContext(field, this.state).basicValueType);
                const cv2 = (0, datasheet_1.getCellValue)(this.state, snapshot, activeRecordId, fieldId);
                return !field_1.Field.bindContext(field, this.state).eq(cv1, cv2);
            });
        };
        // Non-search state, and the specified field data changes before causing pre-sorting.
        if (!isSearching && !isRecordEffectPositionCellValueChanged(recordSnapshot)) {
            return NOT_MOVE;
        }
        if (nextVisibleRowIndex == null && nextRecordSnapshot) {
            return constants_1.RecordMoveType.OutOfView;
        }
        if (nextVisibleRowIndex !== positionInfo.visibleRowIndex) {
            return constants_1.RecordMoveType.WillMove;
        }
        return NOT_MOVE;
    }
    /**
     * Incrementally update view-derived data when pre-sorting behavior changes
     *
     * @returns viewDerivationPatch partial derivation data
     */
    getViewDerivationPatchByLazySort(view, prevViewDerivation, activeRowInfo) {
        const activeRecordId = (0, datasheet_1.getActiveRecordId)(this.state);
        const recordMoveType = this.getRecordMoveType(view, prevViewDerivation.pureVisibleRowsIndexMap, activeRecordId, activeRowInfo);
        const visibleRows = this.getVisibleRowsWithLazySort(prevViewDerivation.pureVisibleRows, recordMoveType, activeRowInfo);
        const { groupBreakpoint, linearRows, pureLinearRows } = this.viewGroupDerivate.getGroupDerivation(view, visibleRows, recordMoveType);
        return {
            visibleRows,
            visibleRowsIndexMap: new Map(visibleRows.map((item, index) => [item.recordId, index])),
            recordMoveType,
            groupBreakpoint,
            linearRows,
            linearRowsIndexMap: new Map(linearRows.map((row, index) => [`${row.type}_${row.recordId}`, index])),
            pureLinearRows,
        };
    }
    getViewDerivation(view) {
        view = view || (0, datasheet_1.getCurrentView)(this.state);
        const { rowsWithoutSearch } = super.getViewDerivation(view);
        return Object.assign({ rowsWithoutSearch }, this.getViewDerivationWithSearch(view, rowsWithoutSearch));
    }
    getViewDerivationWithSearch(view, rowsWithoutSearch) {
        const { visibleRows: rowsWithoutLazyShort, searchResults } = this.getSearchRows(rowsWithoutSearch, view);
        const rowsWithoutLazyShortIndexMap = new Map(rowsWithoutLazyShort.map((item, index) => [item.recordId, index]));
        const activeRecordId = (0, datasheet_1.getActiveRecordId)(this.state);
        const activeRowInfo = (0, datasheet_1.getActiveRowInfo)(this.state);
        const recordMoveType = this.getRecordMoveType(view, rowsWithoutLazyShortIndexMap, activeRecordId, activeRowInfo);
        const visibleRows = this.getVisibleRowsWithLazySort(rowsWithoutLazyShort, recordMoveType, activeRowInfo);
        const { groupBreakpoint, linearRows, pureLinearRows } = this.viewGroupDerivate.getGroupDerivation(view, visibleRows, recordMoveType);
        return {
            // Raw rows of data, grouped without any filtering sorting.
            rowsIndexMap: new Map(view.rows.map((item, index) => [item.recordId, index])),
            // Excluding pre-sorted row data, including filtered sorted grouped search
            pureVisibleRows: rowsWithoutLazyShort,
            // Map of the row-order data after view property calculation
            pureVisibleRowsIndexMap: rowsWithoutLazyShortIndexMap,
            // Visual row data, including filtering sorting grouping search pre-sorting
            visibleRows,
            // A map with recordId as key and order as value
            visibleRowsIndexMap: new Map(visibleRows.map((item, index) => [item.recordId, index])),
            // Pre-sorted or delayed sorted move types
            recordMoveType,
            searchResults,
            // Grouping breakpoint data
            /**
            * groupBreakpoint
            * field1 Grouping Breakpoints 0---------10---------20
            * field2 level Grouping Breakpoints 0--3-5-6--10----15---20
            *
            * field1: [0, 10, 20]
            * field2: [0, 3, 5, 6, 10, 15, 20]
            */
            groupBreakpoint,
            /**
            * Guide the table view to draw the structured data of the table,
            * with the hierarchical structure reflected by depth.
            * [
            *    Blank 0
            *    GroupTab 0
            *      GroupTab 1
            *        GroupTab 2
            *          Record 3
            *        Add 2
            *        Blank 2
            *      Blank 1
            *    Blank 0
            * ]
            */
            linearRows,
            /**
            * [`${row.type}_${row.recordId}`, index]
            */
            linearRowsIndexMap: new Map(linearRows.map((row, index) => [`${row.type}_${row.recordId}`, index])),
            // Gantt Chart view of ui row information
            pureLinearRows,
        };
    }
}
exports.ViewDerivateGrid = ViewDerivateGrid;


/***/ }),

/***/ 47291:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateKanban = void 0;
const interfaces_1 = __webpack_require__(37848);
const datasheet_1 = __webpack_require__(57056);
const constants_1 = __webpack_require__(12690);
const field_1 = __webpack_require__(46559);
const field_types_1 = __webpack_require__(80360);
const view_derivate_base_1 = __webpack_require__(89882);
class ViewDerivateKanban extends view_derivate_base_1.ViewDerivateBase {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
    }
    getGroupValueMap(field) {
        let sourceData = [];
        if (field.type === field_types_1.FieldType.SingleSelect) {
            sourceData = field.property.options.map(item => item.id);
        }
        else {
            sourceData = field.property.unitIds || [];
        }
        return sourceData.reduce((map, item) => {
            map[item] = [];
            return map;
        }, { [constants_1.UN_GROUP]: [] });
    }
    getKanbanGroupMap(rows, kanbanFieldId) {
        var _a, _b;
        const snapshot = this.state.datasheetMap[this.datasheetId].datasheet.snapshot;
        const fieldPermissionMap = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.fieldPermissionMap;
        if (!kanbanFieldId || !snapshot) {
            return {};
        }
        const recordMap = snapshot.recordMap;
        const fieldRole = (0, datasheet_1.getFieldRoleByFieldId)(fieldPermissionMap, kanbanFieldId);
        const fieldMap = snapshot.meta.fieldMap;
        const field = fieldMap[kanbanFieldId];
        if (fieldRole === interfaces_1.Role.None || !field) {
            return {
                UN_GROUP: rows.map(row => {
                    return recordMap[row.recordId];
                }),
            };
        }
        const groupMap = this.getGroupValueMap(field);
        for (const { recordId } of rows) {
            const record = recordMap[recordId];
            if (!record) {
                console.warn('! ' + `${recordId} is not exist,check kanban data`);
                continue;
            }
            const fieldData = record.data[kanbanFieldId];
            if (fieldData == null) {
                groupMap[constants_1.UN_GROUP].push(record);
                continue;
            }
            try {
                if (field.type === field_types_1.FieldType.Member) {
                    const id = (_b = field_1.MemberField.polyfillOldData(fieldData)) === null || _b === void 0 ? void 0 : _b[0];
                    id && groupMap[id].push(record);
                    continue;
                }
                groupMap[fieldData].push(record);
            }
            catch (e) {
                console.warn('! ' + `${fieldData} is not exist,check kanban data`);
            }
        }
        return groupMap;
    }
    // Sorting under Kanban view.
    getSortRowsByKanbanGroup(view, rows, kanbanGroupMap) {
        var _a, _b;
        const snapshot = (_a = this.state.datasheetMap[this.datasheetId]) === null || _a === void 0 ? void 0 : _a.datasheet.snapshot;
        if (!view || view.type !== constants_1.ViewType.Kanban || !snapshot) {
            return rows;
        }
        const kanbanFieldId = view === null || view === void 0 ? void 0 : view.style.kanbanFieldId;
        if (!kanbanFieldId) {
            return rows;
        }
        const field = snapshot.meta.fieldMap[kanbanFieldId];
        if (!field) {
            return rows;
        }
        const fieldPermissionMap = (_b = this.state.datasheetMap[this.datasheetId]) === null || _b === void 0 ? void 0 : _b.fieldPermissionMap;
        if ((0, datasheet_1.getFieldRoleByFieldId)(fieldPermissionMap, kanbanFieldId) === interfaces_1.Role.None) {
            // kanbanFieldId Permissions have been set and are not visible to the current user, 
            // there is no need to handle the following logic.
            return rows;
        }
        if (!kanbanGroupMap) {
            return rows;
        }
        const groupIds = field.type === field_types_1.FieldType.SingleSelect
            ? field.property.options.map(item => item.id)
            : field.property.unitIds;
        if (!Array.isArray(groupIds)) {
            return rows;
        }
        const flatRows = [constants_1.UN_GROUP, ...groupIds].map(groupId => {
            const kanbanGroup = kanbanGroupMap[groupId];
            if (!kanbanGroup) {
                return [];
            }
            return kanbanGroup.map(record => ({ recordId: record.id }));
        }).flat();
        return flatRows;
    }
    getViewDerivation(view) {
        view = view || (0, datasheet_1.getCurrentView)(this.state);
        const { rowsWithoutSearch } = super.getViewDerivation(view);
        const viewDerivationWithSearch = this.getViewDerivationWithSearch(view, rowsWithoutSearch);
        return Object.assign({ rowsWithoutSearch }, viewDerivationWithSearch);
    }
    getViewDerivationWithSearch(view, rowsWithoutSearch) {
        const kanbanGroupMapWithoutSearch = this.getKanbanGroupMap(rowsWithoutSearch, (0, datasheet_1.getKanbanFieldId)(this.state));
        rowsWithoutSearch = this.getSortRowsByKanbanGroup(view, rowsWithoutSearch, kanbanGroupMapWithoutSearch);
        const { visibleRows, searchResults } = this.getSearchRows(rowsWithoutSearch, view);
        const kanbanGroupMap = this.getKanbanGroupMap(visibleRows, (0, datasheet_1.getKanbanFieldId)(this.state));
        const visibleRowsIndexMap = new Map(visibleRows.map((item, index) => [item.recordId, index]));
        return {
            // Raw rows of data, grouped without any filtering sorting.
            rowsIndexMap: new Map(view.rows.map((item, index) => [item.recordId, index])),
            // Excluding pre-sorted row data, including filtered sorted grouped search
            pureVisibleRows: visibleRows,
            // Map of the row-order data after view property calculation
            pureVisibleRowsIndexMap: visibleRowsIndexMap,
            // Visual row data, including filtering sorting grouping search pre-sorting
            visibleRows,
            // A map with recordId as key and order as value
            visibleRowsIndexMap: visibleRowsIndexMap,
            // Kanban middle properties
            kanbanGroupMap,
            searchResults,
        };
    }
}
exports.ViewDerivateKanban = ViewDerivateKanban;


/***/ }),

/***/ 67270:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewDerivateOrgChart = void 0;
const view_derivate_base_1 = __webpack_require__(89882);
class ViewDerivateOrgChart extends view_derivate_base_1.ViewDerivateBase {
    constructor(state, datasheetId) {
        super(state, datasheetId);
        this.state = state;
        this.datasheetId = datasheetId;
    }
    getViewDerivation(view) {
        return super.getViewDerivation(view);
    }
}
exports.ViewDerivateOrgChart = ViewDerivateOrgChart;


/***/ }),

/***/ 83039:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmailCodeType = exports.CodeTypes = exports.SmsTypes = exports.GENERAL_VALIDATION = exports.CHANGE_MAIN_ADMIN = exports.DEL_SPACE = exports.MODIFY_EMAIL = exports.UNBIND_MOBILE = exports.BIND_MOBILE = exports.BIND_DINGDING = exports.MODIFY_PASSWORD = exports.LOGIN_ACCOUNT = exports.REGISTER_ACCOUNT = exports.MOUSE_LEFT_CLICK = exports.TAB_ITEM_WIDTH = exports.TAB_ARROW_RIGHT = exports.TAB_ARROW_LEFT = exports.BREAD_CRUMB_SCROLL_DIST = exports.NODE_DESCRIPTION_EDITOR_ID = exports.ContextMenuType = exports.Modules = exports.UnitTypes = exports.RolePriority = exports.FolderPermissionTip = exports.DashboardPermissionTip = exports.DatasheetPermissionTip = exports.FormPermissionTip = exports.permissionText = exports.nodePermissionMap = exports.permission = exports.Role = exports.EXPORT_TYPE_CSV = exports.EXPORT_TYPE_XLSX = exports.EXPORT_ALL_SHEET_NAME = exports.WorkbenchSidePanels = exports.NODE_CONTEXT_MENU_ID = exports.SocialType = exports.NodeTypeReg = exports.orderedNode = exports.nodeNameMap = exports.NodeType = exports.CELL_EMOJI_LARGE_SIZE = exports.CELL_EMOJI_SIZE = exports.GIRD_CELL_EDITOR = exports.BOTTOM_RIGHT_REGION = exports.UPPER_RIGHT_REGION = exports.BOTTOM_LEFT_REGION = exports.UPPER_LEFT_REGION = exports.FIRST_FILE_IN_GUIDE_CLASS = exports.MAX_ROBOT_COUNT_PER_DST = void 0;
exports.JSBridgeMethod = exports.MOBILE_APP_UA = exports.AuthReference = exports.nvcAppkey = exports.PlatFormTypes = exports.ShowRecordHistory = exports.ActivityListParamsType = exports.WIDGET_PANEL_MAX_WIDGET_COUNT = exports.WizardIdConstant = exports.MAX_CHECK_TIMES = exports.PINT_TIMEOUT = exports.BannerType = exports.TEMPLATE_UNCATEGORIZED = exports.TEMPLATE_NAME_MAX = exports.TEMPLATE_CHOICE_CATEGORY_ID = exports.NOTICE_LIST_SIZE = exports.PermissionCode = exports.LS_DATASHEET_NAMESPACE = exports.ACCEPT_FILE_TYPE = exports.ORDER_UPDATE_TIME = exports.ORDER_CREATE_TIME = exports.SORT_ASC = exports.SORT_DESC = exports.USER_INTEGRAL_RECORDS_PAGE_SIZE = exports.MEMBER_NAME_LENGTH = exports.WECHAT = exports.DINGDING = exports.CAPACITY_REWARD_LIST_PAGE_SIZE = exports.SUB_ADMIN_LIST_PAGE_SIZE = exports.MEMBER_LIST_PAGE_SIZE = exports.SPACE_NAME_LENGTH = exports.ROOT_TEAM_ID = exports.PROGRESS_EXCEPTION = exports.PROGRESS_NORMAL = exports.GLASS_FILTER = exports.RESET_PWD_STEP_FINISH = exports.RESET_PWD_STEP_SET_PASSWORD = exports.RESET_PWD_STEP_VERITY_IDENTITY = exports.RESET_PWD_STEP_SELECT_MODE = exports.RESET_PWD_BY_EMAIL = exports.RESET_PWD_BY_PHONE = exports.PASSWORD_MAX_LENGTH = exports.PASSWORD_MIN_LENGTH = exports.SSO_LOGIN = exports.PASSWORD_LOGIN = exports.IDENTIFY_CODE_LOGIN = exports.ScanQrType = exports.LoginTypes = exports.LoginMode = exports.CaptchaIds = void 0;
exports.MAX_URL_COPY_RECOG_NUM = exports.DefaultStatusMessage = void 0;
const env_1 = __webpack_require__(4994);
const i18n_1 = __webpack_require__(47511);
exports.MAX_ROBOT_COUNT_PER_DST = 30; // The maximum number of robots in a single table
// When you click the file for the first time, to activate the novice guide, you need to add a class
exports.FIRST_FILE_IN_GUIDE_CLASS = 'FIRST_FILE_IN_GUIDE_CLASS';
// table area related
exports.UPPER_LEFT_REGION = 0;
exports.BOTTOM_LEFT_REGION = 1;
exports.UPPER_RIGHT_REGION = 2;
exports.BOTTOM_RIGHT_REGION = 3;
exports.GIRD_CELL_EDITOR = 'gridCellEditor';
exports.CELL_EMOJI_SIZE = 16;
exports.CELL_EMOJI_LARGE_SIZE = 22;
// Node type (please +1 the value when adding a new type)
var NodeType;
(function (NodeType) {
    NodeType[NodeType["ROOT"] = 0] = "ROOT";
    NodeType[NodeType["FOLDER"] = 1] = "FOLDER";
    NodeType[NodeType["DATASHEET"] = 2] = "DATASHEET";
    NodeType[NodeType["FORM"] = 3] = "FORM";
    NodeType[NodeType["DASHBOARD"] = 4] = "DASHBOARD";
    NodeType[NodeType["MIRROR"] = 5] = "MIRROR";
    NodeType[NodeType["DATAPAGE"] = 6] = "DATAPAGE";
    NodeType[NodeType["CANVAS"] = 7] = "CANVAS";
    NodeType[NodeType["WORD_DOC"] = 8] = "WORD_DOC";
    NodeType[NodeType["VIEW"] = 9] = "VIEW";
    NodeType[NodeType["ASSET_FILE"] = 98] = "ASSET_FILE";
    NodeType[NodeType["TRASH"] = 99] = "TRASH";
})(NodeType = exports.NodeType || (exports.NodeType = {}));
exports.nodeNameMap = new Map([
    [NodeType.FOLDER, (0, i18n_1.t)(i18n_1.Strings.folder)],
    [NodeType.DATASHEET, (0, i18n_1.t)(i18n_1.Strings.datasheet)],
    [NodeType.FORM, (0, i18n_1.t)(i18n_1.Strings.form)],
    [NodeType.VIEW, (0, i18n_1.t)(i18n_1.Strings.view)],
    [NodeType.TRASH, (0, i18n_1.t)(i18n_1.Strings.trash)],
    [NodeType.MIRROR, (0, i18n_1.t)(i18n_1.Strings.mirror)],
    [NodeType.DASHBOARD, (0, i18n_1.t)(i18n_1.Strings.dashboard)],
]);
exports.orderedNode = [
    {
        type: NodeType.FOLDER,
        name: (0, i18n_1.t)(i18n_1.Strings.folder),
    },
    {
        type: NodeType.DATASHEET,
        name: (0, i18n_1.t)(i18n_1.Strings.file),
    },
    {
        type: NodeType.FORM,
        name: (0, i18n_1.t)(i18n_1.Strings.view_form),
    },
    {
        type: NodeType.DASHBOARD,
        name: (0, i18n_1.t)(i18n_1.Strings.dashboard),
    },
];
var NodeTypeReg;
(function (NodeTypeReg) {
    NodeTypeReg["FOLDER"] = "fod";
    NodeTypeReg["DATASHEET"] = "dst";
    NodeTypeReg["FORM"] = "fom";
    NodeTypeReg["DASHBOARD"] = "dsb";
    NodeTypeReg["MIRROR"] = "mir";
    NodeTypeReg["WIDGET"] = "wdt";
})(NodeTypeReg = exports.NodeTypeReg || (exports.NodeTypeReg = {}));
var SocialType;
(function (SocialType) {
    SocialType[SocialType["WECOM"] = 1] = "WECOM";
    SocialType[SocialType["DINGTALK"] = 2] = "DINGTALK";
    SocialType[SocialType["FEISHU"] = 3] = "FEISHU";
})(SocialType = exports.SocialType || (exports.SocialType = {}));
// catalog tree
exports.NODE_CONTEXT_MENU_ID = 'NODE_CONTEXT_MENU_ID';
var WorkbenchSidePanels;
(function (WorkbenchSidePanels) {
    WorkbenchSidePanels[WorkbenchSidePanels["FAVORITE"] = 0] = "FAVORITE";
    WorkbenchSidePanels[WorkbenchSidePanels["CATALOG"] = 1] = "CATALOG";
})(WorkbenchSidePanels = exports.WorkbenchSidePanels || (exports.WorkbenchSidePanels = {}));
exports.EXPORT_ALL_SHEET_NAME = (0, i18n_1.t)(i18n_1.Strings.form_the_full);
exports.EXPORT_TYPE_XLSX = 'xlsx';
exports.EXPORT_TYPE_CSV = 'csv';
var Role;
(function (Role) {
    Role["Administrator"] = "administrator";
    Role["Manager"] = "manager";
    Role["Editor"] = "editor";
    Role["Reader"] = "reader";
    Role["None"] = "none";
    Role["Member"] = "member";
    Role["Guest"] = "guest";
    Role["Foreigner"] = "foreigner";
})(Role = exports.Role || (exports.Role = {}));
exports.permission = {
    manager: 'manager',
    editor: 'editor',
    reader: 'reader',
    updater: 'updater',
    templateVisitor: 'templateVisitor',
    owner: 'manager',
    anonymous: 'reader',
    foreigner: 'reader',
    // for share
    shareReader: 'shareReader',
    shareEditor: 'shareEditor',
    shareSave: 'shareSave',
};
exports.nodePermissionMap = new Map([
    [
        NodeType.DATASHEET,
        {
            [exports.permission.manager]: (0, i18n_1.t)(i18n_1.Strings.add_datasheet_manager),
            [exports.permission.editor]: (0, i18n_1.t)(i18n_1.Strings.add_datasheet_editor),
            [exports.permission.reader]: (0, i18n_1.t)(i18n_1.Strings.add_datasheet_reader),
            [exports.permission.updater]: (0, i18n_1.t)(i18n_1.Strings.add_datasheet_updater),
        },
    ],
    [
        NodeType.FOLDER,
        {
            [exports.permission.manager]: (0, i18n_1.t)(i18n_1.Strings.add_folder_manager),
            [exports.permission.editor]: (0, i18n_1.t)(i18n_1.Strings.add_folder_editor),
            [exports.permission.reader]: (0, i18n_1.t)(i18n_1.Strings.add_folder_reader),
            [exports.permission.updater]: (0, i18n_1.t)(i18n_1.Strings.add_folder_updater),
        },
    ],
    [
        NodeType.FORM,
        {
            [exports.permission.manager]: (0, i18n_1.t)(i18n_1.Strings.form_manager_label),
            [exports.permission.editor]: (0, i18n_1.t)(i18n_1.Strings.form_editor_label),
            [exports.permission.reader]: (0, i18n_1.t)(i18n_1.Strings.form_reader_label),
            [exports.permission.updater]: (0, i18n_1.t)(i18n_1.Strings.form_updater_label),
        },
    ],
    [
        NodeType.DASHBOARD,
        {
            [exports.permission.manager]: (0, i18n_1.t)(i18n_1.Strings.dashboard_manager_label),
            [exports.permission.editor]: (0, i18n_1.t)(i18n_1.Strings.dashboard_editor_label),
            [exports.permission.reader]: (0, i18n_1.t)(i18n_1.Strings.dashboard_reader_label),
            [exports.permission.updater]: (0, i18n_1.t)(i18n_1.Strings.dashboard_updater_label),
        },
    ],
    [
        NodeType.MIRROR,
        {
            [exports.permission.manager]: (0, i18n_1.t)(i18n_1.Strings.mirror_manager_label),
            [exports.permission.editor]: (0, i18n_1.t)(i18n_1.Strings.mirror_editor_label),
            [exports.permission.reader]: (0, i18n_1.t)(i18n_1.Strings.mirror_reader_label),
            [exports.permission.updater]: (0, i18n_1.t)(i18n_1.Strings.mirror_uploader_label),
        },
    ],
]);
exports.permissionText = {
    manager: (0, i18n_1.t)(i18n_1.Strings.can_control),
    editor: (0, i18n_1.t)(i18n_1.Strings.can_edit),
    reader: (0, i18n_1.t)(i18n_1.Strings.can_read),
    member: (0, i18n_1.t)(i18n_1.Strings.ordinary_members),
    updater: (0, i18n_1.t)(i18n_1.Strings.can_updater),
    templateVisitor: (0, i18n_1.t)(i18n_1.Strings.permission_template_visitor),
    shareReader: (0, i18n_1.t)(i18n_1.Strings.share_reader),
    shareEditor: (0, i18n_1.t)(i18n_1.Strings.share_editor),
    shareSave: (0, i18n_1.t)(i18n_1.Strings.share_save),
};
exports.FormPermissionTip = {
    manager: (0, i18n_1.t)(i18n_1.Strings.form_manager_label),
    editor: (0, i18n_1.t)(i18n_1.Strings.form_editor_label),
    reader: (0, i18n_1.t)(i18n_1.Strings.form_reader_label),
};
exports.DatasheetPermissionTip = {
    manager: (0, i18n_1.t)(i18n_1.Strings.datasheet_manager_label),
    editor: (0, i18n_1.t)(i18n_1.Strings.datasheet_editor_label),
    reader: (0, i18n_1.t)(i18n_1.Strings.datasheet_reader_label),
    templateVisitor: (0, i18n_1.t)(i18n_1.Strings.datasheet_experience_label),
    shareReader: (0, i18n_1.t)(i18n_1.Strings.share_reader_label),
    shareEditor: (0, i18n_1.t)(i18n_1.Strings.share_editor_label),
    shareSave: (0, i18n_1.t)(i18n_1.Strings.share_save_label),
};
exports.DashboardPermissionTip = {
    manager: (0, i18n_1.t)(i18n_1.Strings.dashboard_manager_label),
    editor: (0, i18n_1.t)(i18n_1.Strings.dashboard_editor_label),
    reader: (0, i18n_1.t)(i18n_1.Strings.dashboard_reader_label),
    // templateVisitor this can be shared
    templateVisitor: (0, i18n_1.t)(i18n_1.Strings.datasheet_experience_label),
    shareReader: (0, i18n_1.t)(i18n_1.Strings.share_reader_label),
    shareEditor: (0, i18n_1.t)(i18n_1.Strings.share_editor_label),
    shareSave: (0, i18n_1.t)(i18n_1.Strings.share_save_label),
};
exports.FolderPermissionTip = {
    manager: (0, i18n_1.t)(i18n_1.Strings.folder_manager_label),
    editor: (0, i18n_1.t)(i18n_1.Strings.folder_editor_label),
    reader: (0, i18n_1.t)(i18n_1.Strings.folder_reader_label),
    templateVisitor: (0, i18n_1.t)(i18n_1.Strings.datasheet_experience_label),
};
// TODO(remove eslint disable)
var RolePriority;
(function (RolePriority) {
    // eslint-disable-next-line @typescript-eslint/naming-convention
    RolePriority[RolePriority["manager"] = 0] = "manager";
    // eslint-disable-next-line @typescript-eslint/naming-convention
    RolePriority[RolePriority["editor"] = 1] = "editor";
    // eslint-disable-next-line @typescript-eslint/naming-convention
    RolePriority[RolePriority["reader"] = 2] = "reader";
    // eslint-disable-next-line @typescript-eslint/naming-convention
    RolePriority[RolePriority["updater"] = 3] = "updater";
})(RolePriority = exports.RolePriority || (exports.RolePriority = {}));
var UnitTypes;
(function (UnitTypes) {
    UnitTypes["Teams"] = "teams";
    UnitTypes["Tags"] = "tags";
    UnitTypes["Members"] = "members";
})(UnitTypes = exports.UnitTypes || (exports.UnitTypes = {}));
/** Indicates the module where the menu is located */
var Modules;
(function (Modules) {
    Modules["FAVORITE"] = "FAVORITE";
    Modules["CATALOG"] = "CATALOG";
    Modules["SHARE"] = "SHARE";
    Modules["TEAM_TREE"] = "TEAM_TREE";
})(Modules = exports.Modules || (exports.Modules = {}));
/** Indicates the type of menu, each different type of menu corresponds to a different menu list */
var ContextMenuType;
(function (ContextMenuType) {
    ContextMenuType["DEFAULT"] = "DEFAULT";
    ContextMenuType["DATASHEET"] = "DATASHEET";
    ContextMenuType["FORM"] = "FORM";
    ContextMenuType["DASHBOARD"] = "DASHBOARD";
    ContextMenuType["FOLDER"] = "FOLDER";
    ContextMenuType["FOLDER_SHOWCASE"] = "FOLDER_SHOWCASE";
    ContextMenuType["VIEW_TABBAR"] = "VIEW_TABBAR";
    ContextMenuType["MIRROR"] = "MIRROR";
    ContextMenuType["FORM_FIELD_OP"] = "FORM_FIELD_OP";
    ContextMenuType["EXPAND_RECORD_FIELD"] = "EXPAND_RECORD_FIELD";
})(ContextMenuType = exports.ContextMenuType || (exports.ContextMenuType = {}));
exports.NODE_DESCRIPTION_EDITOR_ID = 'folderDescribeEditor';
exports.BREAD_CRUMB_SCROLL_DIST = 100;
// tabbar
exports.TAB_ARROW_LEFT = 'left';
exports.TAB_ARROW_RIGHT = 'right';
exports.TAB_ITEM_WIDTH = 180;
exports.MOUSE_LEFT_CLICK = 0;
// login/register
exports.REGISTER_ACCOUNT = 1;
exports.LOGIN_ACCOUNT = 2;
exports.MODIFY_PASSWORD = 3;
exports.BIND_DINGDING = 4;
exports.BIND_MOBILE = 5;
exports.UNBIND_MOBILE = 6;
exports.MODIFY_EMAIL = 7;
exports.DEL_SPACE = 8;
exports.CHANGE_MAIN_ADMIN = 9;
exports.GENERAL_VALIDATION = 10;
var SmsTypes;
(function (SmsTypes) {
    SmsTypes[SmsTypes["REGISTER_ACCOUNT"] = 1] = "REGISTER_ACCOUNT";
    SmsTypes[SmsTypes["LOGIN_ACCOUNT"] = 2] = "LOGIN_ACCOUNT";
    SmsTypes[SmsTypes["MODIFY_PASSWORD"] = 3] = "MODIFY_PASSWORD";
    SmsTypes[SmsTypes["BIND_DINGDING"] = 4] = "BIND_DINGDING";
    SmsTypes[SmsTypes["BIND_MOBILE"] = 5] = "BIND_MOBILE";
    SmsTypes[SmsTypes["UNBIND_MOBILE"] = 6] = "UNBIND_MOBILE";
    SmsTypes[SmsTypes["MODIFY_EMAIL"] = 7] = "MODIFY_EMAIL";
    SmsTypes[SmsTypes["DEL_SPACE"] = 8] = "DEL_SPACE";
    SmsTypes[SmsTypes["CHANGE_MAIN_ADMIN"] = 9] = "CHANGE_MAIN_ADMIN";
    SmsTypes[SmsTypes["GENERAL_VALIDATION"] = 10] = "GENERAL_VALIDATION";
    SmsTypes[SmsTypes["CHANGE_DEVELOPER_CONFIG"] = 11] = "CHANGE_DEVELOPER_CONFIG";
    SmsTypes[SmsTypes["BIND_SOCIAL_USER"] = 12] = "BIND_SOCIAL_USER";
})(SmsTypes = exports.SmsTypes || (exports.SmsTypes = {}));
var CodeTypes;
(function (CodeTypes) {
    CodeTypes["SMS_CODE"] = "sms_code";
    CodeTypes["EMAIL_CODE"] = "email_code";
})(CodeTypes = exports.CodeTypes || (exports.CodeTypes = {}));
var EmailCodeType;
(function (EmailCodeType) {
    EmailCodeType[EmailCodeType["BIND"] = 1] = "BIND";
    EmailCodeType[EmailCodeType["REGISTER"] = 2] = "REGISTER";
    EmailCodeType[EmailCodeType["COMMON"] = 3] = "COMMON";
})(EmailCodeType = exports.EmailCodeType || (exports.EmailCodeType = {}));
var CaptchaIds;
(function (CaptchaIds) {
    CaptchaIds["LOGIN"] = "login";
    CaptchaIds["DEFAULT"] = "nc";
})(CaptchaIds = exports.CaptchaIds || (exports.CaptchaIds = {}));
var LoginMode;
(function (LoginMode) {
    LoginMode["PASSWORD"] = "password";
    LoginMode["IDENTIFYING_CODE"] = "identifying_code";
    LoginMode["MAIL"] = "mail";
    LoginMode["PHONE"] = "phone";
    LoginMode["OTHER"] = "other";
})(LoginMode = exports.LoginMode || (exports.LoginMode = {}));
var LoginTypes;
(function (LoginTypes) {
    LoginTypes["SMS"] = "sms_code";
    LoginTypes["EMAIL"] = "email_code";
    LoginTypes["PASSWORD"] = "password";
    LoginTypes["SSO_AUTH"] = "sso_auth";
})(LoginTypes = exports.LoginTypes || (exports.LoginTypes = {}));
// Scan QRCode operations
var ScanQrType;
(function (ScanQrType) {
    ScanQrType[ScanQrType["Login"] = 0] = "Login";
    ScanQrType[ScanQrType["Binding"] = 1] = "Binding";
})(ScanQrType = exports.ScanQrType || (exports.ScanQrType = {}));
exports.IDENTIFY_CODE_LOGIN = 'identify_code_login'; // login verify code
exports.PASSWORD_LOGIN = 'password_login'; // password login
exports.SSO_LOGIN = 'sso_login'; // sso login
exports.PASSWORD_MIN_LENGTH = 8;
exports.PASSWORD_MAX_LENGTH = 24;
// export const PASSWORD_LENGTH_ERR = t(Strings.password_length_err); // 'Password length must be between 8-24';
// export const PASSWORD_PATTERN_ERR = t(Strings.password_pattern_err); // 'Password must contain both numbers and letters';
// export const PASSWORD_NOT_IDENTICAL_ERR = t(Strings.password_not_identical_err); // 'different from the first entered password';
// export const PHONE_ERR = t(Strings.phone_err); // 'The phone number format is incorrect';
// export const EMAIL_ERR = t(Strings.email_err); // 'The email format is incorrect';
// export const BIND_PHONE_SAME = t(Strings.bind_phone_same); // 'Cannot change to the same phone number';
// export const BIND_EMAIL_SAME = t(Strings.bind_email_same); // 'Cannot change to the same email';
// export const PHONE_CODE_ERR = t(Strings.phone_code_err); // 'Verification code error';
exports.RESET_PWD_BY_PHONE = 0;
exports.RESET_PWD_BY_EMAIL = 1;
exports.RESET_PWD_STEP_SELECT_MODE = 0;
exports.RESET_PWD_STEP_VERITY_IDENTITY = 1;
exports.RESET_PWD_STEP_SET_PASSWORD = 2;
exports.RESET_PWD_STEP_FINISH = 3;
exports.GLASS_FILTER = 'blur(8px)';
exports.PROGRESS_NORMAL = 'normal';
exports.PROGRESS_EXCEPTION = 'exception';
// space - basic space information
exports.ROOT_TEAM_ID = '0';
exports.SPACE_NAME_LENGTH = 100;
// space-members-members list query pages number
exports.MEMBER_LIST_PAGE_SIZE = 13;
// space - sub admin - sub admin list query pages number
exports.SUB_ADMIN_LIST_PAGE_SIZE = 12;
// gifted space query page number
exports.CAPACITY_REWARD_LIST_PAGE_SIZE = 12;
// personal center
exports.DINGDING = 0;
exports.WECHAT = 1;
exports.MEMBER_NAME_LENGTH = 32; // space nickname length cannot exceed 32 characters
exports.USER_INTEGRAL_RECORDS_PAGE_SIZE = 4; // account wallet orders number per page
// data sorting rule
exports.SORT_DESC = 'desc';
exports.SORT_ASC = 'asc';
exports.ORDER_CREATE_TIME = 'createdAt';
exports.ORDER_UPDATE_TIME = 'updatedAt';
// personal avatar relates to space log
// attributes can not use short name, https://blog.csdn.net/weixin_45936690/article/details/108386544
exports.ACCEPT_FILE_TYPE = 'image/jpeg,image/png,image/gif';
// localStorage 's namespace
// https://github.com/nbubna/store
exports.LS_DATASHEET_NAMESPACE = '_datasheet';
// operation permission id
var PermissionCode;
(function (PermissionCode) {
    PermissionCode["WORKBENCH"] = "MANAGE_WORKBENCH";
    PermissionCode["TEAM"] = "MANAGE_TEAM";
    PermissionCode["MEMBER"] = "MANAGE_MEMBER";
    PermissionCode["NORMAL_MEMBER"] = "MANAGE_NORMAL_MEMBER";
    PermissionCode["TEMPLATE"] = "MANAGE_TEMPLATE";
    PermissionCode["MANAGE_WIDGET"] = "MANAGE_WIDGET";
    PermissionCode["SECURITY"] = "MANAGE_SECURITY";
    PermissionCode["MANAGE_ROLE"] = "MANAGE_ROLE";
})(PermissionCode = exports.PermissionCode || (exports.PermissionCode = {}));
// notification center
exports.NOTICE_LIST_SIZE = 10; // notification list, one request notification count
// template center
exports.TEMPLATE_CHOICE_CATEGORY_ID = 'tpc000';
exports.TEMPLATE_NAME_MAX = 100;
exports.TEMPLATE_UNCATEGORIZED = 'tpc_uncategorized';
var BannerType;
(function (BannerType) {
    BannerType["LARGE"] = "large";
    BannerType["MIDDLE"] = "middle";
})(BannerType = exports.BannerType || (exports.BannerType = {}));
// the timeout of socket ping, actually 120000+25000
exports.PINT_TIMEOUT = 150000;
// max check times
exports.MAX_CHECK_TIMES = 10;
// export const NODE_INTRODUCE_MAP = new Map([
//   [
//     NodeType.FORM,
//     {
//       title: t(Strings.form_view),
//       desc: t(Strings.form_view_desc),
//       videoGuide: integrateCdnHost(Settings.form_guide_video.value),
//     },
//   ],
// ]);
// wizardId
var WizardIdConstant;
(function (WizardIdConstant) {
    WizardIdConstant[WizardIdConstant["EMAIL_BIND"] = 20] = "EMAIL_BIND";
    WizardIdConstant[WizardIdConstant["INTRODUCTION_VIDEO_14_SERVER"] = 24] = "INTRODUCTION_VIDEO_14_SERVER";
    WizardIdConstant[WizardIdConstant["FUNCTION_GUIDANCE"] = 18] = "FUNCTION_GUIDANCE";
    WizardIdConstant[WizardIdConstant["REPLAY_GANTT_VIDEO"] = 34] = "REPLAY_GANTT_VIDEO";
    WizardIdConstant[WizardIdConstant["REPLAY_CALENDAR_VIDEO"] = 37] = "REPLAY_CALENDAR_VIDEO";
    WizardIdConstant[WizardIdConstant["REPLAY_ORG_CHART_VIDEO"] = 54] = "REPLAY_ORG_CHART_VIDEO";
    WizardIdConstant[WizardIdConstant["ADD_FIRST_CHILD"] = 57] = "ADD_FIRST_CHILD";
    WizardIdConstant[WizardIdConstant["DRAG_TO_UNHANDLED_LIST"] = 58] = "DRAG_TO_UNHANDLED_LIST";
    WizardIdConstant[WizardIdConstant["CREATE_WIDGET_GUIDE"] = 40] = "CREATE_WIDGET_GUIDE";
    WizardIdConstant[WizardIdConstant["RELEASE_WIDGET_GUIDE"] = 47] = "RELEASE_WIDGET_GUIDE";
    WizardIdConstant[WizardIdConstant["CONTACT_US_GUIDE"] = 64] = "CONTACT_US_GUIDE";
    WizardIdConstant[WizardIdConstant["VIKABY_UPDATE_LOGS_HISTORY"] = 67] = "VIKABY_UPDATE_LOGS_HISTORY";
    WizardIdConstant[WizardIdConstant["AGREE_TERMS_OF_SERVICE"] = Number((0, env_1.getCustomConfig)().LOGIN_AGREE_TERMS_OF_SERVICE_WIZARD_ID)] = "AGREE_TERMS_OF_SERVICE";
    // org chart view
    WizardIdConstant[WizardIdConstant["ORG_VIEW_CREATE"] = 78] = "ORG_VIEW_CREATE";
    WizardIdConstant[WizardIdConstant["ORG_VIEW_PANEL"] = 79] = "ORG_VIEW_PANEL";
    WizardIdConstant[WizardIdConstant["ORG_VIEW_ADD_FIRST_NODE"] = 80] = "ORG_VIEW_ADD_FIRST_NODE";
    WizardIdConstant[WizardIdConstant["ORG_VIEW_DRAG_TO_UNHANDLED_LIST"] = 81] = "ORG_VIEW_DRAG_TO_UNHANDLED_LIST";
    // node permissions
    WizardIdConstant[WizardIdConstant["PERMISSION_SETTING_EXTEND"] = 95] = "PERMISSION_SETTING_EXTEND";
    WizardIdConstant[WizardIdConstant["PERMISSION_SETTING_OPENED"] = 96] = "PERMISSION_SETTING_OPENED";
    WizardIdConstant[WizardIdConstant["CREATE_MIRROR_TIP"] = 106] = "CREATE_MIRROR_TIP";
})(WizardIdConstant = exports.WizardIdConstant || (exports.WizardIdConstant = {}));
exports.WIDGET_PANEL_MAX_WIDGET_COUNT = 30;
// 0 => all
// 1 => changelog history
// 2 => comments
var ActivityListParamsType;
(function (ActivityListParamsType) {
    ActivityListParamsType[ActivityListParamsType["ALL"] = 0] = "ALL";
    ActivityListParamsType[ActivityListParamsType["HISTORY"] = 1] = "HISTORY";
    ActivityListParamsType[ActivityListParamsType["COMMENT"] = 2] = "COMMENT";
})(ActivityListParamsType = exports.ActivityListParamsType || (exports.ActivityListParamsType = {}));
var ShowRecordHistory;
(function (ShowRecordHistory) {
    ShowRecordHistory[ShowRecordHistory["CLOSE"] = 0] = "CLOSE";
    ShowRecordHistory[ShowRecordHistory["OPEN"] = 1] = "OPEN";
})(ShowRecordHistory = exports.ShowRecordHistory || (exports.ShowRecordHistory = {}));
// platform information
var PlatFormTypes;
(function (PlatFormTypes) {
    PlatFormTypes["Web"] = "Web";
    PlatFormTypes["Desktop"] = "Desktop";
    PlatFormTypes["App"] = "App";
})(PlatFormTypes = exports.PlatFormTypes || (exports.PlatFormTypes = {}));
// captcha appkey
exports.nvcAppkey = 'FFFF0N00000000008B7D';
// Distinguish the entry source of the jump (Wecom App Store application) authorization page
var AuthReference;
(function (AuthReference) {
    AuthReference["CAMERA"] = "camera";
    AuthReference["APPLICATION"] = "application";
})(AuthReference = exports.AuthReference || (exports.AuthReference = {}));
exports.MOBILE_APP_UA = 'vikaApp';
var JSBridgeMethod;
(function (JSBridgeMethod) {
    JSBridgeMethod["OpenAppFeedback"] = "openAppFeedback";
})(JSBridgeMethod = exports.JSBridgeMethod || (exports.JSBridgeMethod = {}));
var DefaultStatusMessage;
(function (DefaultStatusMessage) {
    DefaultStatusMessage["OK_MSG"] = "SUCCESS";
    DefaultStatusMessage["SERVER_ERROR_MSG"] = "SERVER_ERROR";
})(DefaultStatusMessage = exports.DefaultStatusMessage || (exports.DefaultStatusMessage = {}));
// batch copy URL cell, max support batch recognize count
exports.MAX_URL_COPY_RECOG_NUM = 100;


/***/ }),

/***/ 75061:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.INVITE_BTN = void 0;
/* eslint-disable */
// contact
const PREFIX = 'ADDRESS_';
exports.INVITE_BTN = PREFIX + 'INVITE_BTN'; // invite button


/***/ }),

/***/ 72424:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.INVITE_INVALID = exports.LOGIN_CHANGE_MODE_TAB = exports.WORKBENCH_PAGE = exports.LOGIN_BTN = exports.IDENTIFYING_CODE_INPUT = exports.GET_IDENTIFYING_CODE_BTN = exports.LOGIN_MAIL_INPUT = exports.CHANGE_MODE_BTN = exports.LOGIN_PASSWORD_INPUT = exports.LOGIN_PHONE_INPUT = exports.TEMPLATE_DETAIL_CONTAINER = exports.SHARE_CONTAINER = exports.FORM_CONTAINER = exports.SHARE_MENU_CARD_BTN = exports.GO_LOGIN_BTN = exports.LOGIN = void 0;
/**
 * Do not touch, the ID in this file is for automated testing
 */
const PREFIX = 'VIKA_';
// Represents the login page
exports.LOGIN = PREFIX + 'LOGIN';
// "Go to login" button
exports.GO_LOGIN_BTN = PREFIX + 'GO_LOGIN_BTN';
// Share page - the button in the card below the menu on the left, such as "Save to my space"
exports.SHARE_MENU_CARD_BTN = PREFIX + 'SHARE_MENU_CARD_BTN';
// Magical form sharing page Container
exports.FORM_CONTAINER = PREFIX + 'FORM_CONTAINER';
// Share page Container
exports.SHARE_CONTAINER = PREFIX + 'SHARE_CONTAINER';
// Template details Container
exports.TEMPLATE_DETAIL_CONTAINER = PREFIX + 'TEMPLATE_DETAIL_CONTAINER';
// Login page - mobile phone number input box
exports.LOGIN_PHONE_INPUT = PREFIX + 'LOGIN_PHONE_INPUT';
// Login page - password input box
exports.LOGIN_PASSWORD_INPUT = PREFIX + 'LOGIN_PASSWORD_INPUT';
// Login - button to switch the login method
exports.CHANGE_MODE_BTN = PREFIX + 'CHANGE_MODE_BTN';
// Login page - email input box
exports.LOGIN_MAIL_INPUT = PREFIX + 'LOGIN_MAIL_INPUT';
// get verification code button
exports.GET_IDENTIFYING_CODE_BTN = PREFIX + 'GET_IDENTIFYING_CODE_BTN';
// verification code input box
exports.IDENTIFYING_CODE_INPUT = PREFIX + 'IDENTIFYING_CODE_INPUT';
// login button
exports.LOGIN_BTN = PREFIX + 'LOGIN_BTN';
// workbench page
exports.WORKBENCH_PAGE = PREFIX + 'WORKBENCH_PAGE';
// Login page - login switch Tab
exports.LOGIN_CHANGE_MODE_TAB = PREFIX + 'LOGIN_CHANGE_MODE_TAB';
// Invitation invalidation page
exports.INVITE_INVALID = PREFIX + 'INVITE_INVALID';


/***/ }),

/***/ 67969:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TOOL_BAR_VIEW_SETTING = exports.ORG_CHART_RECORD_LIST = exports.GANTT_CONFIG_COLOR_HELP = exports.FORM_CONTAINER_SETTING = exports.ADD_RECORD_BTN = exports.APPLICATION_JOIN_SPACE_BTN = exports.CREATE_ORG_IN_VIEW_LIST = exports.CREATE_CALENDAR_IN_VIEW_LIST = exports.VIEW_LIST_CREATE_GANTT_VIEW = exports.VIEW_LIST_CREATE_GALLERY_VIEW = exports.VIEW_LIST_CREATE_KANBAN_VIEW = exports.VIEW_LIST_CREATE_GRID_VIEW = exports.VIEW_LIST_SHOW_BTN = exports.VIEW_OPERATION_ITEM_CHANGE_AUTO_SAVE_CHECK = exports.VIEW_OPERATION_ITEM_CHANGE_AUTO_SAVE = exports.VIEW_OPERATION_ITEM_LOCK_CHECK = exports.VIEW_OPERATION_ITEM_LOCK = exports.VIEW_OPERATION_ITEM_DELETE = exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_IMAGE = exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_EXCEL = exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_CSV = exports.VIEW_OPERATION_ITEM_COPY_MIRROR = exports.VIEW_OPERATION_ITEM_COPY_FORM = exports.VIEW_OPERATION_ITEM_COPY = exports.VIEW_OPERATION_ITEM_RENAME = exports.VIEW_CREATOR_TABLE = exports.VIEW_CREATOR_GANTT = exports.VIEW_CREATOR_ORG_CHART = exports.VIEW_CREATOR_CALENDAR = exports.VIEW_CREATOR_FORM = exports.VIEW_CREATOR_GRID = exports.VIEW_CREATOR_GALLERY = exports.VIEW_CREATOR_KANBAN = exports.ADD_COLUMN_BTN = exports.DOM_CONTAINER = exports.TIME_MACHINE_BTN = exports.FORM_LIST_PANEL = exports.ROBOT_BTN = exports.WIDGET_BTN = exports.FORM_BTN = exports.API_BTN = exports.VIEW_TAB_BAR = exports.VIKABY = exports.FILL_HANDLE_AREA = exports.GRID_CUR_COLUMN_TYPE = exports.SWITCH_VIEW_TYPE_CONTAINER = exports.VIEW_TOOL_BAR = exports.FIELD_CONTEXT = exports.ADD_VIEW_BTN = exports.VIEW_EXPORT = void 0;
exports.SIDE_RECORD_PANEL = void 0;
/* eslint-disable */
// The id of the datasheet (parts of, excluding the working directory)
const PREFIX = 'DATASHEET_';
exports.VIEW_EXPORT = PREFIX + 'VIEW_EXPORT'; // view export
exports.ADD_VIEW_BTN = PREFIX + 'ADD_VIEW_BTN'; // New view icon button
exports.FIELD_CONTEXT = PREFIX + 'FIELD_CONTEXT'; // Right-click menu of the Wig table header
exports.VIEW_TOOL_BAR = PREFIX + 'TOOL_BAR'; // view toolbar
exports.SWITCH_VIEW_TYPE_CONTAINER = PREFIX + 'SWITCH_VIEW_TYPE_CONTAINER'; // create a new view card
exports.GRID_CUR_COLUMN_TYPE = PREFIX + 'GRID_CUR_COLUMN_TYPE';
exports.FILL_HANDLE_AREA = PREFIX + 'FILL_HANDLE_AREA';
exports.VIKABY = PREFIX + 'VIKABY'; // vikaby
// view tab bar
exports.VIEW_TAB_BAR = PREFIX + 'VIEW_TAB_BAR'; // view tab bar
exports.API_BTN = PREFIX + 'API_BTN'; // view tab bar - api panel
exports.FORM_BTN = PREFIX + 'FORM_BTN'; // View Tab Bar - Magic Form
exports.WIDGET_BTN = PREFIX + 'WIDGET_BTN'; // View Tab Bar - Widget
exports.ROBOT_BTN = PREFIX + 'ROBOT_BTN'; // View Tab Bar - Robot
exports.FORM_LIST_PANEL = PREFIX + 'FORM_LIST_PANEL'; // view tab bar - magic form list
exports.TIME_MACHINE_BTN = PREFIX + 'TIME_MACHINE_BTN'; // View Tab Bar - Time Machine
// Wig table content (Wig view)
exports.DOM_CONTAINER = PREFIX + 'DOM_CONTAINER'; // Wig table content (Wig view)
exports.ADD_COLUMN_BTN = PREFIX + 'ADD_COLUMN_BTN'; // New column button
// create a new view context
exports.VIEW_CREATOR_KANBAN = PREFIX + 'CREATE_KANBAN_VIEW';
exports.VIEW_CREATOR_GALLERY = PREFIX + 'CREATE_GALLERY_VIEW';
exports.VIEW_CREATOR_GRID = PREFIX + 'CREATE_GRID_VIEW';
exports.VIEW_CREATOR_FORM = PREFIX + 'CREATE_FORM_VIEW';
exports.VIEW_CREATOR_CALENDAR = PREFIX + 'CREATE_CALENDAR_VIEW';
exports.VIEW_CREATOR_ORG_CHART = PREFIX + 'CREATOR_ORG_CHART';
exports.VIEW_CREATOR_GANTT = PREFIX + 'CREATE_GANTT_VIEW';
exports.VIEW_CREATOR_TABLE = PREFIX + 'CREATE_TABLE';
// view operation context
exports.VIEW_OPERATION_ITEM_RENAME = PREFIX + 'RENAME_VIEW';
exports.VIEW_OPERATION_ITEM_COPY = PREFIX + 'COPY_VIEW';
exports.VIEW_OPERATION_ITEM_COPY_FORM = PREFIX + 'COPY_VIEW_FORM';
exports.VIEW_OPERATION_ITEM_COPY_MIRROR = PREFIX + 'COPY_VIEW_MIRROR';
exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_CSV = PREFIX + 'EXPORT_VIEW_CSV';
exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_EXCEL = PREFIX + 'EXPORT_VIEW_EXCEL';
exports.VIEW_OPERATION_ITEM_EXPORT_VIEW_TO_IMAGE = PREFIX + 'EXPORT_VIEW_IMAGE';
exports.VIEW_OPERATION_ITEM_DELETE = PREFIX + 'DELETE_VIEW';
exports.VIEW_OPERATION_ITEM_LOCK = PREFIX + 'LOCK_VIEW';
exports.VIEW_OPERATION_ITEM_LOCK_CHECK = PREFIX + 'LOCK_VIEW_CHECK';
exports.VIEW_OPERATION_ITEM_CHANGE_AUTO_SAVE = PREFIX + 'CHANGE_AUTO_SAVE';
exports.VIEW_OPERATION_ITEM_CHANGE_AUTO_SAVE_CHECK = PREFIX + 'CHANGE_AUTO_SAVE_CHECK';
// view list view button
exports.VIEW_LIST_SHOW_BTN = PREFIX + 'SHOW_VIEW_LIST_BTN';
// view list context
exports.VIEW_LIST_CREATE_GRID_VIEW = PREFIX + 'CREATE_GRID_IN_VIEW_LIST';
exports.VIEW_LIST_CREATE_KANBAN_VIEW = PREFIX + 'CREATE_KANBAN_IN_VIEW_LIST';
exports.VIEW_LIST_CREATE_GALLERY_VIEW = PREFIX + 'CREATE_GALLERY_IN_VIEW_LIST';
exports.VIEW_LIST_CREATE_GANTT_VIEW = PREFIX + 'CREATE_GANTT_IN_VIEW_LIST';
exports.CREATE_CALENDAR_IN_VIEW_LIST = PREFIX + 'CREATE_CALENDAR_IN_VIEW_LIST';
exports.CREATE_ORG_IN_VIEW_LIST = PREFIX + 'CREATE_ORG_IN_VIEW_LIST';
// floating frame
exports.APPLICATION_JOIN_SPACE_BTN = PREFIX + 'APPLICATION_JOIN_SPACE_BTN';
exports.ADD_RECORD_BTN = PREFIX + 'ADD_RECORD_BTN';
// magic form
exports.FORM_CONTAINER_SETTING = PREFIX + 'FORM_CONTAINER_SETTING'; // Magical form content page - setting button
// Gantt chart
exports.GANTT_CONFIG_COLOR_HELP = PREFIX + 'GANTT_CONFIG_COLOR_HELP';
// Organization Chart
exports.ORG_CHART_RECORD_LIST = PREFIX + 'ORG_CHART_RECORD_LIST'; // Organization Chart - Record List
// toolbar
exports.TOOL_BAR_VIEW_SETTING = PREFIX + 'TOOL_BAR_VIEW_SETTING'; // Toolbar - new record
// side record card
exports.SIDE_RECORD_PANEL = PREFIX + 'SIDE_RECORD_PANEL';


/***/ }),

/***/ 76237:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NODES_CONTAINER = exports.FIRST_NODE = exports.BTN_SET_PERMISSION = exports.BTN_MORE = exports.DESCRIPTION = exports.TITLE_INPUT = exports.TITLE = void 0;
/* eslint-disable */
// folder preview
const FOLDER_SHOWCASE_PREFIX = 'FOLDER_SHOWCASE_';
exports.TITLE = FOLDER_SHOWCASE_PREFIX + 'TITLE'; // title
exports.TITLE_INPUT = FOLDER_SHOWCASE_PREFIX + 'TITLE_INPUT'; // Title in the form of an input box
exports.DESCRIPTION = FOLDER_SHOWCASE_PREFIX + 'DESCRIPTION'; // description
exports.BTN_MORE = FOLDER_SHOWCASE_PREFIX + 'BTN_MORE'; // more button
exports.BTN_SET_PERMISSION = FOLDER_SHOWCASE_PREFIX + 'BTN_SET_PERMISSION'; // Set permissions button under more button
exports.FIRST_NODE = FOLDER_SHOWCASE_PREFIX + 'FIRST_NODE'; // the first node of the folder preview page
exports.NODES_CONTAINER = FOLDER_SHOWCASE_PREFIX + 'NODES_CONTAINER'; // parent container of child nodes


/***/ }),

/***/ 98536:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LOGIN_TYPE_LARK = exports.LOGIN_TYPE_DINGDING = exports.LOGIN_TYPE_WECHAT = exports.LOGIN_TYPE_QQ = void 0;
const PREFIX = 'HOME__';
// login method
exports.LOGIN_TYPE_QQ = PREFIX + 'LOGIN_TYPE_QQ';
exports.LOGIN_TYPE_WECHAT = PREFIX + 'LOGIN_TYPE_WECHAT';
exports.LOGIN_TYPE_DINGDING = PREFIX + 'LOGIN_TYPE_DINGDING';
exports.LOGIN_TYPE_LARK = PREFIX + 'LOGIN_TYPE_LARK';


/***/ }),

/***/ 24693:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.VIKABY_ID = exports.AutoTestID = exports.HomeId = exports.ADDRESS_ID = exports.FOLDER_SHOWCASE_ID = exports.TEMPLATE_CENTER_ID = exports.NOTIFICATION_ID = exports.NAV_ID = exports.DATASHEET_ID = exports.WORKBENCH_SIDE_ID = void 0;
const WORKBENCH_SIDE_ID = __importStar(__webpack_require__(52813));
exports.WORKBENCH_SIDE_ID = WORKBENCH_SIDE_ID;
const DATASHEET_ID = __importStar(__webpack_require__(67969));
exports.DATASHEET_ID = DATASHEET_ID;
const NAV_ID = __importStar(__webpack_require__(68244));
exports.NAV_ID = NAV_ID;
const NOTIFICATION_ID = __importStar(__webpack_require__(35396));
exports.NOTIFICATION_ID = NOTIFICATION_ID;
const TEMPLATE_CENTER_ID = __importStar(__webpack_require__(38421));
exports.TEMPLATE_CENTER_ID = TEMPLATE_CENTER_ID;
const FOLDER_SHOWCASE_ID = __importStar(__webpack_require__(76237));
exports.FOLDER_SHOWCASE_ID = FOLDER_SHOWCASE_ID;
const ADDRESS_ID = __importStar(__webpack_require__(75061));
exports.ADDRESS_ID = ADDRESS_ID;
const HomeId = __importStar(__webpack_require__(98536));
exports.HomeId = HomeId;
const AutoTestID = __importStar(__webpack_require__(72424));
exports.AutoTestID = AutoTestID;
const VIKABY_ID = __importStar(__webpack_require__(81466));
exports.VIKABY_ID = VIKABY_ID;


/***/ }),

/***/ 68244:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.USER_MENU_INVITE_ICON = exports.HELP_MENU_BEGINNER_GUIDE = exports.HELP_MENU_SHORTCUT_PANEL = exports.ICON_NOTIFICATION = exports.ICON_SPACE_MANAGE = exports.ICON_TEMPLATE = exports.ICON_ADDRESS = exports.ICON_WORKBENCH = void 0;
/* eslint_disable */
// The id of the Wig table part (excluding the working directory)
const NAV_PREFIX = 'NAV_';
const PREFIX = 'NAV__';
exports.ICON_WORKBENCH = NAV_PREFIX + 'ICON_WORKBENCH'; // navigation bar icon_workbench
exports.ICON_ADDRESS = NAV_PREFIX + 'ICON_ADDRESS'; // navigation bar icon_address book
exports.ICON_TEMPLATE = NAV_PREFIX + 'ICON_TEMPLATE'; // navigation bar icon_template center
exports.ICON_SPACE_MANAGE = NAV_PREFIX + 'ICON_SPACE_MANAGE'; // navigation bar icon_space management
exports.ICON_NOTIFICATION = NAV_PREFIX + 'ICON_NOTIFICATION'; // navigation bar icon_notification center icon
// context of help_menu
exports.HELP_MENU_SHORTCUT_PANEL = PREFIX + 'SHORTCUT_PANEL';
exports.HELP_MENU_BEGINNER_GUIDE = PREFIX + 'BEGINNER_GUIDE';
// context of user_menu
exports.USER_MENU_INVITE_ICON = NAV_PREFIX + 'USER_MENU_INVITE_ICON';


/***/ }),

/***/ 35396:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NOTICE_LIST_WRAPPER = void 0;
/* eslint-disable */
// notification center id
const NOTIFICATION_PREFIX = 'NOTIFICATION_';
exports.NOTICE_LIST_WRAPPER = NOTIFICATION_PREFIX + 'NOTICE_LIST_WRAPPER'; // notification center message list


/***/ }),

/***/ 38421:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CONFIRM_BTN_IN_TEMPLATE_MODAL = exports.USE_TEMPLATE_BTN = exports.TOP_HOT_BANNER = void 0;
/* eslint-disable */
// id of the template center
const TEMPLATE_CENTER_PREFIX = 'TEMPLATE_CENTER_';
exports.TOP_HOT_BANNER = TEMPLATE_CENTER_PREFIX + 'TOP_HOT_BANNER'; // The most popular banner in the template center
exports.USE_TEMPLATE_BTN = TEMPLATE_CENTER_PREFIX + 'USE_TEMPLATE_BTN'; // "Use Template" button
exports.CONFIRM_BTN_IN_TEMPLATE_MODAL = TEMPLATE_CENTER_PREFIX + 'CONFIRM_BTN_IN_TEMPLATE_MODAL'; // use the confirmation button in the template confirmation box


/***/ }),

/***/ 81466:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UPDATE_LOGS_HISTORY = void 0;
const PREFIX = 'VIKABY_';
exports.UPDATE_LOGS_HISTORY = PREFIX + 'UPDATE_LOGS_HISTORY'; // History update button


/***/ }),

/***/ 52813:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NODE_INFO = exports.NEW_DASHBOARD = exports.NEW_FORM_TEMPLATE = exports.NEW_FOLDER = exports.NEW_FORM = exports.NEW_DATASHEET = exports.NODE_IMPORT = exports.NODE_EXPORT = exports.FORM_USE_GUIDE_BTN = exports.OPERATE_ITEM_MOVE_TO = exports.OPERATE_ITEM_ADD_DATASHEET = exports.OPERATE_ITEM_DELETE_NODE = exports.OPERATE_ITEM_SAVE_AS_TEMPLATE = exports.OPERATE_ITEM_SHARE_NODE = exports.OPERATE_ITEM_SET_PERMISSIONS = exports.OPERATE_ITEM_EXPORT_NODE_EXCEL = exports.OPERATE_ITEM_EXPORT_NODE_CSV = exports.OPERATE_ITEM_COPY_NODE_URL = exports.OPERATE_ITEM_COPY_NODE = exports.OPERATE_ITEM_STAR_NODE = exports.OPERATE_ITEM_RENAME_NODE = exports.TO_SPACE_TEMPLATE = exports.RECYCLE_BIN = exports.ADD_NODE_BTN = exports.NODE_WRAPPER = void 0;
/* eslint_disable */
// workbench - working directory ID
const PREFIX = 'WORKBENCH_SIDE_';
// star and container for working directory
exports.NODE_WRAPPER = PREFIX + 'NODE_WRAPPER';
exports.ADD_NODE_BTN = PREFIX + 'ADD_NODE_BTN';
// recycle bin
exports.RECYCLE_BIN = PREFIX + 'RECYCLE_BIN';
// use template
exports.TO_SPACE_TEMPLATE = PREFIX + 'TO_SPACE_TEMPLATE';
// Action menu context of the working directory node
exports.OPERATE_ITEM_RENAME_NODE = PREFIX + 'RENAME_NODE';
exports.OPERATE_ITEM_STAR_NODE = PREFIX + 'STAR_NODE';
exports.OPERATE_ITEM_COPY_NODE = PREFIX + 'COPY_NODE';
exports.OPERATE_ITEM_COPY_NODE_URL = PREFIX + 'COPY_NODE_URL';
exports.OPERATE_ITEM_EXPORT_NODE_CSV = PREFIX + 'EXPORT_NODE_CSV';
exports.OPERATE_ITEM_EXPORT_NODE_EXCEL = PREFIX + 'EXPORT_NODE_EXCEL';
exports.OPERATE_ITEM_SET_PERMISSIONS = PREFIX + 'SET_PERMISSIONS';
exports.OPERATE_ITEM_SHARE_NODE = PREFIX + 'SHARE_NODE';
exports.OPERATE_ITEM_SAVE_AS_TEMPLATE = PREFIX + 'SAVE_AS_TEMPLATE';
exports.OPERATE_ITEM_DELETE_NODE = PREFIX + 'DELETE_NODE';
exports.OPERATE_ITEM_ADD_DATASHEET = PREFIX + 'ADD_DATASHEET';
exports.OPERATE_ITEM_MOVE_TO = PREFIX + 'MOVE_TO';
// collection table, form
exports.FORM_USE_GUIDE_BTN = PREFIX + 'FORM_USE_GUIDE_BTN';
exports.NODE_EXPORT = PREFIX + 'NODE_EXPORT';
exports.NODE_IMPORT = PREFIX + 'NODE_IMPORT';
exports.NEW_DATASHEET = PREFIX + 'NEW_DATASHEET';
exports.NEW_FORM = PREFIX + 'NEW_FORM';
exports.NEW_FOLDER = PREFIX + 'NEW_FOLDER';
exports.NEW_FORM_TEMPLATE = PREFIX + 'NEW_FORM_TEMPLATE';
exports.NEW_DASHBOARD = PREFIX + 'NEW_DASHBOARD';
exports.NODE_INFO = PREFIX + 'NODE_INFO';


/***/ }),

/***/ 1975:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmojisConfig = void 0;
const emojisJson = __importStar(__webpack_require__(79799));
exports.EmojisConfig = emojisJson.emojis;


/***/ }),

/***/ 4994:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getCustomConfig = exports.isIdassPrivateDeployment = exports.isPrivateDeployment = void 0;
const constant_1 = __webpack_require__(83039);
const process = __importStar(__webpack_require__(39369));
function isPrivateDeployment() {
    return Boolean(process.env.REACT_APP_DEPLOYMENT_MODELS === 'PRIVATE');
}
exports.isPrivateDeployment = isPrivateDeployment;
function isIdassPrivateDeployment() {
    return getCustomConfig().isIdaas && isPrivateDeployment();
}
exports.isIdassPrivateDeployment = isIdassPrivateDeployment;
function getCustomConfig() {
    return typeof window === 'object' && window.__initialization_data__.envVars || {
        LOGIN_DEFAULT_VERIFY_TYPE: constant_1.IDENTIFY_CODE_LOGIN,
        VIEW_NAME_MAX_COUNT: process.env.VIEW_NAME_MAX_COUNT || 30
    };
}
exports.getCustomConfig = getCustomConfig;


/***/ }),

/***/ 77511:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTipConstant = exports.ApiTipConfig = exports.NoticeTemplatesConstant = exports.TrackEvents = exports.Settings = exports.SystemConfig = exports.SpacePathType = exports.Navigation = exports.StatusCode = exports.ConfigConstant = void 0;
const ConfigConstant = __importStar(__webpack_require__(83039));
exports.ConfigConstant = ConfigConstant;
const router_1 = __webpack_require__(59388);
Object.defineProperty(exports, "Navigation", ({ enumerable: true, get: function () { return router_1.Navigation; } }));
Object.defineProperty(exports, "SpacePathType", ({ enumerable: true, get: function () { return router_1.SpacePathType; } }));
const StatusCode = __importStar(__webpack_require__(89713));
exports.StatusCode = StatusCode;
const system_config_1 = __webpack_require__(7942);
Object.defineProperty(exports, "ApiTipConfig", ({ enumerable: true, get: function () { return system_config_1.ApiTipConfig; } }));
Object.defineProperty(exports, "ApiTipConstant", ({ enumerable: true, get: function () { return system_config_1.ApiTipConstant; } }));
Object.defineProperty(exports, "NoticeTemplatesConstant", ({ enumerable: true, get: function () { return system_config_1.NoticeTemplatesConstant; } }));
Object.defineProperty(exports, "Settings", ({ enumerable: true, get: function () { return system_config_1.Settings; } }));
Object.defineProperty(exports, "SystemConfig", ({ enumerable: true, get: function () { return system_config_1.SystemConfig; } }));
const track_events_1 = __webpack_require__(77861);
Object.defineProperty(exports, "TrackEvents", ({ enumerable: true, get: function () { return track_events_1.TrackEvents; } }));
__exportStar(__webpack_require__(1975), exports);
__exportStar(__webpack_require__(21782), exports);
__exportStar(__webpack_require__(24693), exports);
__exportStar(__webpack_require__(31401), exports);
__exportStar(__webpack_require__(4994), exports);


/***/ }),

/***/ 91113:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GRID_STAT_RIGHT_CLICK_MENU = exports.GRID_STAT_MENU = exports.GANTT_LINE_SETTING = exports.GANTT_LINE_TASK = exports.GANTT_LINE_POINT = exports.GANTT_ERROR_TASK_TIP = exports.GANTT_GROUP_TOGGLE_BUTTON = exports.GANTT_NEXT_PAGE_BUTTON = exports.GANTT_PREV_PAGE_BUTTON = exports.GANTT_BLANK = exports.GANTT_TRANSFORMER_ANCHOR_RIGHT = exports.GANTT_TRANSFORMER_ANCHOR_LEFT = exports.GANTT_HIDE_GRID_BUTTON = exports.GANTT_BACK_TO_TASK_BUTTON_RIGHT = exports.GANTT_BACK_TO_TASK_BUTTON_LEFT = exports.GANTT_BACK_TO_NOW_BUTTON = exports.GANTT_TASK_CONTENT = exports.GANTT_HOVER_SPLITTER = exports.GANTT_HEADER = exports.GANTT_SPLITTER = exports.GANTT_TASK = exports.GRID_DATE_CELL_CREATE_ALARM = exports.GRID_DATE_CELL_ALARM = exports.GRID_FROZEN_SHADOW_LINE = exports.GRID_COLLABORATOR_AVATAR = exports.GRID_GROUP_TAB = exports.GRID_BLANK = exports.GRID_FIELD_HEAD_OPACITY_LINE = exports.GRID_BOTTOM_STAT = exports.GRID_GROUP_STAT = exports.GRID_GROUP_MENU = exports.GRID_FIELD_HEAD_DESC = exports.GRID_FIELD_HEAD_SELECT_CHECKBOX = exports.GRID_GROUP_TOGGLE_BUTTON = exports.GRID_ROW_ADD_BUTTON = exports.GRID_CELL_FILL_HANDLER = exports.GRID_ROW_EXPAND_RECORD = exports.GRID_ROW_SELECT_CHECKBOX = exports.GRID_ROW_DRAG_HANDLER = exports.GRID_ROW_HEAD = exports.GRID_FIELD_ADD_BUTTON = exports.GRID_FIELD_HEAD_MORE = exports.GRID_FIELD_HEAD = exports.GRID_CELL_LINK_ICON = exports.GRID_CELL = void 0;
// Grid
exports.GRID_CELL = 'GRID_CELL'; // cellValue
exports.GRID_CELL_LINK_ICON = 'GRID_CELL_LINK_ICON'; // cellValue icon for email/url/phone
exports.GRID_FIELD_HEAD = 'GRID_FIELD_HEAD'; // column header
exports.GRID_FIELD_HEAD_MORE = 'GRID_FIELD_HEAD_MORE'; // More button in the column header
exports.GRID_FIELD_ADD_BUTTON = 'GRID_FIELD_ADD_BUTTON'; // Add column button
exports.GRID_ROW_HEAD = 'GRID_ROW_HEAD'; // row header
exports.GRID_ROW_DRAG_HANDLER = 'GRID_ROW_DRAG_HANDLER'; // row drag handle
exports.GRID_ROW_SELECT_CHECKBOX = 'GRID_ROW_SELECT_CHECKBOX'; // row check box
exports.GRID_ROW_EXPAND_RECORD = 'GRID_ROW_EXPAND_RECORD'; // row expand button
exports.GRID_CELL_FILL_HANDLER = 'GRID_CELL_FILL_HANDLER'; // cell fill handle
exports.GRID_ROW_ADD_BUTTON = 'GRID_ROW_ADD_BUTTON'; // add row button
exports.GRID_GROUP_TOGGLE_BUTTON = 'GRID_GROUP_TOGGLE_BUTTON'; // Group expand/collapse buttons
exports.GRID_FIELD_HEAD_SELECT_CHECKBOX = 'GRID_FIELD_HEAD_SELECT_CHECKBOX'; // select all column headers
exports.GRID_FIELD_HEAD_DESC = 'GRID_FIELD_HEAD_DESC'; // Column header description
exports.GRID_GROUP_MENU = 'GRID_GROUP_MENU'; // Group header menu
exports.GRID_GROUP_STAT = 'GRID_GROUP_STAT'; // group statistics column
exports.GRID_BOTTOM_STAT = 'GRID_BOTTOM_STAT'; // bottom statistics bar
exports.GRID_FIELD_HEAD_OPACITY_LINE = 'GRID_FIELD_HEAD_OPACITY_LINE'; // The column header is used for dragging and dropping
exports.GRID_BLANK = 'GRID_BLANK'; // blank area
exports.GRID_GROUP_TAB = 'GRID_GROUP_TAB'; // Group header placeholder
exports.GRID_COLLABORATOR_AVATAR = 'GRID_COLLABORATOR_AVATAR'; // Cell collaboration avatar
exports.GRID_FROZEN_SHADOW_LINE = 'GRID_FROZEN_SHADOW_LINE'; // Freeze area projection line
exports.GRID_DATE_CELL_ALARM = 'GRID_DATE_CELL_ALARM'; // Date alarm
exports.GRID_DATE_CELL_CREATE_ALARM = 'GRID_DATE_CELL_CREATE_ALARM'; // create date alarm
// Gantt
exports.GANTT_TASK = 'GANTT_TASK'; // Gantt chart task
exports.GANTT_SPLITTER = 'GANTT_SPLITTER'; // drag line
exports.GANTT_HEADER = 'GANTT_HEADER'; // Gantt header
exports.GANTT_HOVER_SPLITTER = 'GANTT_HOVER_SPLITTER'; // Suspended drag line
exports.GANTT_TASK_CONTENT = 'GANTT_TASK_CONTENT'; // Content area for Gantt tasks
exports.GANTT_BACK_TO_NOW_BUTTON = 'GANTT_BACK_TO_NOW_BUTTON'; // "Back to today" button
exports.GANTT_BACK_TO_TASK_BUTTON_LEFT = 'GANTT_BACK_TO_TASK_BUTTON_LEFT'; // left "back to task" button
exports.GANTT_BACK_TO_TASK_BUTTON_RIGHT = 'GANTT_BACK_TO_TASK_BUTTON_RIGHT'; // Right "Back to Task" button
exports.GANTT_HIDE_GRID_BUTTON = 'GANTT_HIDE_GRID_BUTTON'; // "Hide taskbar" button
exports.GANTT_TRANSFORMER_ANCHOR_LEFT = 'GANTT_TRANSFORMER_ANCHOR_LEFT'; // Transformer left handle
exports.GANTT_TRANSFORMER_ANCHOR_RIGHT = 'GANTT_TRANSFORMER_ANCHOR_RIGHT'; // Transformer right handle
exports.GANTT_BLANK = 'GANTT_BLANK'; // blank area
exports.GANTT_PREV_PAGE_BUTTON = 'GANTT_PREV_PAGE_BUTTON'; // "Page forward" button
exports.GANTT_NEXT_PAGE_BUTTON = 'GANTT_NEXT_PAGE_BUTTON'; // "page back" button
exports.GANTT_GROUP_TOGGLE_BUTTON = 'GANTT_GROUP_TOGGLE_BUTTON'; // Group expand/collapse buttons
exports.GANTT_ERROR_TASK_TIP = 'GANTT_ERROR_TASK_TIP'; // Tips for wrong date
exports.GANTT_LINE_POINT = 'GANTT_LINE_POINT'; // Gantt chart task association link point
exports.GANTT_LINE_TASK = 'GANTT_LINE_TASK'; // Gantt chart task connection line
exports.GANTT_LINE_SETTING = 'GANTT_LINE_SETTING'; // Gantt chart connection line settings
// contextMenu
exports.GRID_STAT_MENU = 'GRID_STAT_MENU'; // Menu on the left button of the statistics column
exports.GRID_STAT_RIGHT_CLICK_MENU = 'GRID_STAT_RIGHT_CLICK_MENU'; // Right-click Menu in the statistics bar


/***/ }),

/***/ 31401:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KONVA_DATASHEET_ID = void 0;
const KONVA_DATASHEET_ID = __importStar(__webpack_require__(91113));
exports.KONVA_DATASHEET_ID = KONVA_DATASHEET_ID;


/***/ }),

/***/ 59388:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SpacePathType = exports.Navigation = void 0;
var Navigation;
(function (Navigation) {
    Navigation[Navigation["HOME"] = 0] = "HOME";
    Navigation[Navigation["LOGIN"] = 1] = "LOGIN";
    Navigation[Navigation["APPLY_LOGOUT"] = 2] = "APPLY_LOGOUT";
    Navigation[Navigation["REGISTER"] = 3] = "REGISTER";
    Navigation[Navigation["RESET_PWD"] = 4] = "RESET_PWD";
    Navigation[Navigation["CREATE_SPACE"] = 5] = "CREATE_SPACE";
    Navigation[Navigation["WORKBENCH"] = 6] = "WORKBENCH";
    Navigation[Navigation["SPACE"] = 7] = "SPACE";
    Navigation[Navigation["SPACE_MANAGE"] = 8] = "SPACE_MANAGE";
    Navigation[Navigation["NOT_FOUND"] = 9] = "NOT_FOUND";
    Navigation[Navigation["INVITE"] = 10] = "INVITE";
    Navigation[Navigation["SET_PASSWORD"] = 11] = "SET_PASSWORD";
    Navigation[Navigation["SHARE_FAIL"] = 12] = "SHARE_FAIL";
    Navigation[Navigation["SETTING_NICKNAME"] = 13] = "SETTING_NICKNAME";
    Navigation[Navigation["SHARE_SPACE"] = 14] = "SHARE_SPACE";
    Navigation[Navigation["NO_SUPPORT"] = 15] = "NO_SUPPORT";
    Navigation[Navigation["TEMPLATE"] = 16] = "TEMPLATE";
    Navigation[Navigation["TRASH"] = 17] = "TRASH";
    Navigation[Navigation["IMPROVING_INFO"] = 18] = "IMPROVING_INFO";
    Navigation[Navigation["INVITATION_VALIDATION"] = 19] = "INVITATION_VALIDATION";
    Navigation[Navigation["MEMBER_DETAIL"] = 20] = "MEMBER_DETAIL";
    Navigation[Navigation["FEISHU"] = 21] = "FEISHU";
    Navigation[Navigation["DINGTALK"] = 22] = "DINGTALK";
    Navigation[Navigation["WECOM"] = 23] = "WECOM";
    Navigation[Navigation["WECOM_SHOP_CALLBACK"] = 24] = "WECOM_SHOP_CALLBACK";
    Navigation[Navigation["EMBED_SPACE"] = 25] = "EMBED_SPACE";
})(Navigation = exports.Navigation || (exports.Navigation = {}));
var SpacePathType;
(function (SpacePathType) {
    SpacePathType["SAPCE_OVERVIEW"] = "overview";
    SpacePathType["MANAGE_WORKBENCH"] = "workbench";
    SpacePathType["MANAGE_MEMBER"] = "managemember";
    SpacePathType["MAIN_ADMIN"] = "mainadmin";
    SpacePathType["SUB_ADMIN"] = "subadmin";
    SpacePathType["MEMBER"] = "member";
    SpacePathType["MARKETING"] = "marketing";
})(SpacePathType = exports.SpacePathType || (exports.SpacePathType = {}));


/***/ }),

/***/ 89713:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WECOM_NO_INSTALL = exports.WECOM_NO_EXIST = exports.WECOM_HAS_BIND = exports.WECOM_NOT_BIND_DOMAIN = exports.WECOM_SHOP_USER_NOT_EXIST = exports.DINGTALK_USER_CONTACT_SYNCING = exports.DINGTALK_USER_NOT_EXIST = exports.DINGTALK_TENANT_NOT_EXIST = exports.DINGTALK_NOT_BIND_SPACE = exports.WECOM_NOT_BIND_SPACE = exports.FEISHU_ACCOUNT_NOT_BOUND = exports.USER_DEFINED_PASSWORD_ERR = exports.FORM_FOREIGN_DATASHEET_NOT_EXIST = exports.FORM_DATASHEET_NOT_EXIST = exports.LOG_OUT_UNSATISFIED = exports.PAYMENT_PLAN = exports.NOT_PERMISSION = exports.NODE_NOT_EXIST = exports.NODE_DELETED = exports.SPACE_LIMIT = exports.LINK_INVALID = exports.INVITER_SPACE_MEMBER_LIMIT = exports.SPACE_DELETED = exports.INVALID_SPACE = exports.BINDING_ACCOUNT_ERR = exports.MEMBER_NOT_EXIST = exports.COMMON_ERR = exports.FREQUENTLY_QR = exports.TEMPLATE_NOT_EXIST = exports.NODE_NUMBER_ERR = exports.SPACE_NOT_EXIST = exports.MOVE_FORM_SPACE = exports.BINDING_WECHAT = exports.NAME_AND_PWD_ERR = exports.PHONE_COMMON_ERR = exports.SMS_CODE_NOT_CHECK = exports.SMS_CHECK_ERR = exports.SMS_GET_ERR = exports.LOGIN_OUT_NUMBER = exports.PASSWORD_ERR = exports.EMAIL_ERR = exports.TIME_OUT = exports.ACCOUNT_ERROR = exports.OPERATION_FREQUENT = exports.PHONE_VALIDATION = exports.SECONDARY_VALIDATION = exports.NVC_FAIL = exports.RESOURCE_NOT_EXIST = exports.UN_AUTHORIZED = exports.STATUS_OK = void 0;
exports.PasswordErr = exports.AccountErr = exports.PhoneErr = exports.SmsErrCode = exports.DELETE_ROLE_EXIST_MEMBER = exports.FRONT_VERSION_ERROR = exports.SPACE_CAPACITY_OVER_LIMIT = exports.WECOM_NOT_ADMIN = exports.WECOM_OUT_OF_RANGE = void 0;
exports.STATUS_OK = 200;
exports.UN_AUTHORIZED = 201;
exports.RESOURCE_NOT_EXIST = 210;
exports.NVC_FAIL = 250;
exports.SECONDARY_VALIDATION = 251;
exports.PHONE_VALIDATION = 252;
exports.OPERATION_FREQUENT = 233;
exports.ACCOUNT_ERROR = 303;
exports.TIME_OUT = 303;
exports.EMAIL_ERR = 304;
exports.PASSWORD_ERR = 305;
exports.LOGIN_OUT_NUMBER = 306;
exports.SMS_GET_ERR = 230;
exports.SMS_CHECK_ERR = 231;
exports.SMS_CODE_NOT_CHECK = 232;
exports.PHONE_COMMON_ERR = 303;
exports.NAME_AND_PWD_ERR = 302;
exports.BINDING_WECHAT = 332; // The phone number has been bound to WeChat
exports.MOVE_FORM_SPACE = 403; // Moved out of space
exports.SPACE_NOT_EXIST = 404; // The invited space does not exist
exports.NODE_NUMBER_ERR = 412;
exports.TEMPLATE_NOT_EXIST = 431;
exports.FREQUENTLY_QR = 324; // The verification code is refreshed too frequently
exports.COMMON_ERR = 500; // general error
exports.MEMBER_NOT_EXIST = 508; // member does not exist
exports.BINDING_ACCOUNT_ERR = [320, 332];
// switch space, space is not activated
exports.INVALID_SPACE = 406;
// Email invitation, the inviter clicks the link, the space has been deleted, and the message is that the space does not exist
exports.SPACE_DELETED = 404;
// Public link invitation - the number of inviters in the space has reached the upper limit, temporarily unable to join
exports.INVITER_SPACE_MEMBER_LIMIT = 407;
// public link invite - invite link has expired
exports.LINK_INVALID = 517;
// public link invitation - the number of spaces has reached the limit
exports.SPACE_LIMIT = 405;
exports.NODE_DELETED = 600; // no permission or node is deleted
exports.NODE_NOT_EXIST = 601; // no permission or node doesn't exist
exports.NOT_PERMISSION = 602; // operation without permission - no editing permission
exports.PAYMENT_PLAN = 951;
exports.LOG_OUT_UNSATISFIED = 962; // The logout condition is not met, the user is not allowed to logout
// The datasheet for the magic form mapping does not exist
exports.FORM_DATASHEET_NOT_EXIST = 301;
exports.FORM_FOREIGN_DATASHEET_NOT_EXIST = 302;
// Front-end custom error code
exports.USER_DEFINED_PASSWORD_ERR = 1001;
exports.FEISHU_ACCOUNT_NOT_BOUND = 1110;
exports.WECOM_NOT_BIND_SPACE = 1106;
exports.DINGTALK_NOT_BIND_SPACE = 1106; // Enterprise unbound space
exports.DINGTALK_TENANT_NOT_EXIST = 1107; // tenant does not exist
exports.DINGTALK_USER_NOT_EXIST = 1109; // Tenant user is not authorized
exports.DINGTALK_USER_CONTACT_SYNCING = 1131; // Contacts are being synchronized
// Enterprise WeChat app store error code
exports.WECOM_SHOP_USER_NOT_EXIST = 1115; // The tenant is not visible to the application
// The exclusive domain name is not bound
exports.WECOM_NOT_BIND_DOMAIN = 1122;
exports.WECOM_HAS_BIND = 338; // The account has been bound to the corporate WeChat account
exports.WECOM_NO_EXIST = 1107; // The enterprise has not installed third-party applications
exports.WECOM_NO_INSTALL = 1114; // Enterprise application is deleted
exports.WECOM_OUT_OF_RANGE = 1109; // The tenant is not authorized, that is, the user is not within the visible range of the enterprise
exports.WECOM_NOT_ADMIN = 1113; // not an administrator
exports.SPACE_CAPACITY_OVER_LIMIT = 4008; // The space capacity exceeds the limit
exports.FRONT_VERSION_ERROR = 3005; //The front-end version does not match
exports.DELETE_ROLE_EXIST_MEMBER = 528; // Delete the role, but there are members in the role
var SmsErrCode;
(function (SmsErrCode) {
    SmsErrCode[SmsErrCode["GetErr"] = 230] = "GetErr";
    SmsErrCode[SmsErrCode["CheckErr"] = 231] = "CheckErr";
    SmsErrCode[SmsErrCode["CodeNotCheck"] = 232] = "CodeNotCheck";
    SmsErrCode[SmsErrCode["NormalErr"] = 500] = "NormalErr";
})(SmsErrCode = exports.SmsErrCode || (exports.SmsErrCode = {}));
var PhoneErr;
(function (PhoneErr) {
    PhoneErr[PhoneErr["CommonErr"] = 303] = "CommonErr";
    PhoneErr[PhoneErr["PhoneLengthErr"] = 500] = "PhoneLengthErr";
})(PhoneErr = exports.PhoneErr || (exports.PhoneErr = {}));
var AccountErr;
(function (AccountErr) {
    AccountErr[AccountErr["UserNameErr"] = 302] = "UserNameErr";
    AccountErr[AccountErr["CommonErr"] = 303] = "CommonErr";
    AccountErr[AccountErr["EmailErr"] = 304] = "EmailErr";
    AccountErr[AccountErr["PhoneLengthErr"] = 500] = "PhoneLengthErr";
})(AccountErr = exports.AccountErr || (exports.AccountErr = {}));
var PasswordErr;
(function (PasswordErr) {
    PasswordErr[PasswordErr["NameAndPwdErr"] = 302] = "NameAndPwdErr";
    PasswordErr[PasswordErr["PasswordEmptyErr"] = 305] = "PasswordEmptyErr";
})(PasswordErr = exports.PasswordErr || (exports.PasswordErr = {}));


/***/ }),

/***/ 71920:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 7942:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ApiTipConstant = exports.ApiTipConfig = exports.NoticeTemplatesConstant = exports.NoticeTypesConstant = exports.NotificationTemplates = exports.NotificationTypes = exports.Settings = exports.SystemConfig = void 0;
const api_tip_config_auto_json_1 = __importDefault(__webpack_require__(73092));
const system_config_auto_json_1 = __importDefault(__webpack_require__(52238));
/**
 * config class, directly get the entire class of SystemConfig
 */
const SystemConfig = system_config_auto_json_1.default;
exports.SystemConfig = SystemConfig;
/**
 * api tip config class
 */
const ApiTipConfig = api_tip_config_auto_json_1.default;
exports.ApiTipConfig = ApiTipConfig;
/**
 * Settings object, quickly get system_config.system table, system constant configuration
 *
 * pass in key
 * @example Conf.api_rate...
 */
const Settings = SystemConfig.settings;
exports.Settings = Settings;
// notification
const jsonToObject = (object) => {
    const obj = Object.assign({}, object);
    Object.keys(object).forEach((i) => {
        obj[i] = i;
    });
    return obj;
};
const Notifications = SystemConfig.notifications;
const NotificationTypes = Notifications.types;
exports.NotificationTypes = NotificationTypes;
const NotificationTemplates = Notifications.templates;
exports.NotificationTemplates = NotificationTemplates;
const NoticeTypesConstant = jsonToObject(Notifications.types);
exports.NoticeTypesConstant = NoticeTypesConstant;
const NoticeTemplatesConstant = jsonToObject(Notifications.templates);
exports.NoticeTemplatesConstant = NoticeTemplatesConstant;
const ApiTipConstant = jsonToObject(ApiTipConfig.api.tips);
exports.ApiTipConstant = ApiTipConstant;


/***/ }),

/***/ 21782:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TIMEZONES = exports.getClientTimeZone = exports.getUtcOptionList = exports.getTimeZoneAbbrByUtc = exports.getTimeZoneOffsetByUtc = void 0;
const getTimeZoneOffsetByUtc = (utc) => {
    const currentTimeZoneData = exports.TIMEZONES.find((tz) => tz.utc.includes(utc));
    return currentTimeZoneData === null || currentTimeZoneData === void 0 ? void 0 : currentTimeZoneData.offset;
};
exports.getTimeZoneOffsetByUtc = getTimeZoneOffsetByUtc;
const getTimeZoneAbbrByUtc = (utc) => {
    const currentTimeZoneData = exports.TIMEZONES.find((tz) => tz.utc.includes(utc));
    return currentTimeZoneData === null || currentTimeZoneData === void 0 ? void 0 : currentTimeZoneData.abbr;
};
exports.getTimeZoneAbbrByUtc = getTimeZoneAbbrByUtc;
const getUtcOptionList = () => {
    let list = [];
    for (let i = 0; i < exports.TIMEZONES.length; i++) {
        const { abbr, offset, utc, isdst } = exports.TIMEZONES[i];
        if (isdst)
            continue;
        list = list.concat(utc.filter((tz) => !tz.includes('Etc/GMT')).map((tz) => {
            return {
                abbr,
                offset,
                label: `UTC${offset > 0 ? '+' : ''}${offset}(${tz})`,
                value: tz,
            };
        }));
    }
    return list;
};
exports.getUtcOptionList = getUtcOptionList;
const getClientTimeZone = () => {
    // https://github.com/iamkun/dayjs/blob/dev/src/plugin/timezone/index.js#L143
    const clientTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const currentTimeZoneData = exports.TIMEZONES.find((tz) => tz.utc.includes(clientTimeZone));
    const { offset } = currentTimeZoneData;
    return `UTC${offset > 0 ? '+' : ''}${offset}(${clientTimeZone})`;
};
exports.getClientTimeZone = getClientTimeZone;
// https://github.com/dmfilipenko/timezones.json/blob/master/timezones.json
// compare to https://github.com/vikadata/vikadata/blob/new-teamx/apitable/packages/datasheet/src/pc/components/editors/cascader_editor/cascader_editor.tsx
exports.TIMEZONES = [
    {
        value: 'Dateline Standard Time',
        abbr: 'DST',
        offset: -12,
        isdst: false,
        text: '(UTC-12:00) International Date Line West',
        utc: [
            'Etc/GMT+12'
        ]
    },
    {
        value: 'UTC-11',
        abbr: 'U',
        offset: -11,
        isdst: false,
        text: '(UTC-11:00) Coordinated Universal Time-11',
        utc: [
            'Etc/GMT+11',
            'Pacific/Midway',
            'Pacific/Niue',
            'Pacific/Pago_Pago'
        ]
    },
    {
        value: 'Hawaiian Standard Time',
        abbr: 'HST',
        offset: -10,
        isdst: false,
        text: '(UTC-10:00) Hawaii',
        utc: [
            'Etc/GMT+10',
            'Pacific/Honolulu',
            'Pacific/Johnston',
            'Pacific/Rarotonga',
            'Pacific/Tahiti'
        ]
    },
    {
        value: 'Alaskan Standard Time',
        abbr: 'AKDT',
        offset: -8,
        isdst: true,
        text: '(UTC-09:00) Alaska',
        utc: [
            'America/Anchorage',
            'America/Juneau',
            'America/Nome',
            'America/Sitka',
            'America/Yakutat'
        ]
    },
    {
        value: 'Pacific Standard Time (Mexico)',
        abbr: 'PDT',
        offset: -7,
        isdst: true,
        text: '(UTC-08:00) Baja California',
        utc: [
            'America/Santa_Isabel'
        ]
    },
    {
        value: 'Pacific Daylight Time',
        abbr: 'PDT',
        offset: -7,
        isdst: true,
        text: '(UTC-07:00) Pacific Daylight Time (US & Canada)',
        utc: [
            'America/Los_Angeles',
            'America/Tijuana',
            'America/Vancouver'
        ]
    },
    {
        value: 'Pacific Standard Time',
        abbr: 'PST',
        offset: -8,
        isdst: false,
        text: '(UTC-08:00) Pacific Standard Time (US & Canada)',
        utc: [
            'America/Los_Angeles',
            'America/Tijuana',
            'America/Vancouver',
            'PST8PDT'
        ]
    },
    {
        value: 'US Mountain Standard Time',
        abbr: 'UMST',
        offset: -7,
        isdst: false,
        text: '(UTC-07:00) Arizona',
        utc: [
            'America/Creston',
            'America/Dawson',
            'America/Dawson_Creek',
            'America/Hermosillo',
            'America/Phoenix',
            'America/Whitehorse',
            'Etc/GMT+7'
        ]
    },
    {
        value: 'Mountain Standard Time (Mexico)',
        abbr: 'MDT',
        offset: -6,
        isdst: true,
        text: '(UTC-07:00) Chihuahua, La Paz, Mazatlan',
        utc: [
            'America/Chihuahua',
            'America/Mazatlan'
        ]
    },
    {
        value: 'Mountain Standard Time',
        abbr: 'MDT',
        offset: -6,
        isdst: true,
        text: '(UTC-07:00) Mountain Time (US & Canada)',
        utc: [
            'America/Boise',
            'America/Cambridge_Bay',
            'America/Denver',
            'America/Edmonton',
            'America/Inuvik',
            'America/Ojinaga',
            'America/Yellowknife',
            'MST7MDT'
        ]
    },
    {
        value: 'Central America Standard Time',
        abbr: 'CAST',
        offset: -6,
        isdst: false,
        text: '(UTC-06:00) Central America',
        utc: [
            'America/Belize',
            'America/Costa_Rica',
            'America/El_Salvador',
            'America/Guatemala',
            'America/Managua',
            'America/Tegucigalpa',
            'Etc/GMT+6',
            'Pacific/Galapagos'
        ]
    },
    {
        value: 'Central Standard Time',
        abbr: 'CDT',
        offset: -5,
        isdst: true,
        text: '(UTC-06:00) Central Time (US & Canada)',
        utc: [
            'America/Chicago',
            'America/Indiana/Knox',
            'America/Indiana/Tell_City',
            'America/Matamoros',
            'America/Menominee',
            'America/North_Dakota/Beulah',
            'America/North_Dakota/Center',
            'America/North_Dakota/New_Salem',
            'America/Rainy_River',
            'America/Rankin_Inlet',
            'America/Resolute',
            'America/Winnipeg',
            'CST6CDT'
        ]
    },
    {
        value: 'Central Standard Time (Mexico)',
        abbr: 'CDT',
        offset: -5,
        isdst: true,
        text: '(UTC-06:00) Guadalajara, Mexico City, Monterrey',
        utc: [
            'America/Bahia_Banderas',
            'America/Cancun',
            'America/Merida',
            'America/Mexico_City',
            'America/Monterrey'
        ]
    },
    {
        value: 'Canada Central Standard Time',
        abbr: 'CCST',
        offset: -6,
        isdst: false,
        text: '(UTC-06:00) Saskatchewan',
        utc: [
            'America/Regina',
            'America/Swift_Current'
        ]
    },
    {
        value: 'SA Pacific Standard Time',
        abbr: 'SPST',
        offset: -5,
        isdst: false,
        text: '(UTC-05:00) Bogota, Lima, Quito',
        utc: [
            'America/Bogota',
            'America/Cayman',
            'America/Coral_Harbour',
            'America/Eirunepe',
            'America/Guayaquil',
            'America/Jamaica',
            'America/Lima',
            'America/Panama',
            'America/Rio_Branco',
            'Etc/GMT+5'
        ]
    },
    {
        value: 'Eastern Standard Time',
        abbr: 'EST',
        offset: -5,
        isdst: false,
        text: '(UTC-05:00) Eastern Time (US & Canada)',
        utc: [
            'America/Detroit',
            'America/Havana',
            'America/Indiana/Petersburg',
            'America/Indiana/Vincennes',
            'America/Indiana/Winamac',
            'America/Iqaluit',
            'America/Kentucky/Monticello',
            'America/Louisville',
            'America/Montreal',
            'America/Nassau',
            'America/New_York',
            'America/Nipigon',
            'America/Pangnirtung',
            'America/Port-au-Prince',
            'America/Thunder_Bay',
            'America/Toronto'
        ]
    },
    {
        value: 'Eastern Daylight Time',
        abbr: 'EDT',
        offset: -4,
        isdst: true,
        text: '(UTC-04:00) Eastern Daylight Time (US & Canada)',
        utc: [
            'America/Detroit',
            'America/Havana',
            'America/Indiana/Petersburg',
            'America/Indiana/Vincennes',
            'America/Indiana/Winamac',
            'America/Iqaluit',
            'America/Kentucky/Monticello',
            'America/Louisville',
            'America/Montreal',
            'America/Nassau',
            'America/New_York',
            'America/Nipigon',
            'America/Pangnirtung',
            'America/Port-au-Prince',
            'America/Thunder_Bay',
            'America/Toronto'
        ]
    },
    {
        value: 'US Eastern Standard Time',
        abbr: 'UEDT',
        offset: -5,
        isdst: false,
        text: '(UTC-05:00) Indiana (East)',
        utc: [
            'America/Indiana/Marengo',
            'America/Indiana/Vevay',
            'America/Indianapolis'
        ]
    },
    {
        value: 'Venezuela Standard Time',
        abbr: 'VST',
        offset: -4.5,
        isdst: false,
        text: '(UTC-04:30) Caracas',
        utc: [
            'America/Caracas'
        ]
    },
    {
        value: 'Paraguay Standard Time',
        abbr: 'PYT',
        offset: -4,
        isdst: false,
        text: '(UTC-04:00) Asuncion',
        utc: [
            'America/Asuncion'
        ]
    },
    {
        value: 'Atlantic Standard Time',
        abbr: 'ADT',
        offset: -3,
        isdst: true,
        text: '(UTC-04:00) Atlantic Time (Canada)',
        utc: [
            'America/Glace_Bay',
            'America/Goose_Bay',
            'America/Halifax',
            'America/Moncton',
            'America/Thule',
            'Atlantic/Bermuda'
        ]
    },
    {
        value: 'Central Brazilian Standard Time',
        abbr: 'CBST',
        offset: -4,
        isdst: false,
        text: '(UTC-04:00) Cuiaba',
        utc: [
            'America/Campo_Grande',
            'America/Cuiaba'
        ]
    },
    {
        value: 'SA Western Standard Time',
        abbr: 'SWST',
        offset: -4,
        isdst: false,
        text: '(UTC-04:00) Georgetown, La Paz, Manaus, San Juan',
        utc: [
            'America/Anguilla',
            'America/Antigua',
            'America/Aruba',
            'America/Barbados',
            'America/Blanc-Sablon',
            'America/Boa_Vista',
            'America/Curacao',
            'America/Dominica',
            'America/Grand_Turk',
            'America/Grenada',
            'America/Guadeloupe',
            'America/Guyana',
            'America/Kralendijk',
            'America/La_Paz',
            'America/Lower_Princes',
            'America/Manaus',
            'America/Marigot',
            'America/Martinique',
            'America/Montserrat',
            'America/Port_of_Spain',
            'America/Porto_Velho',
            'America/Puerto_Rico',
            'America/Santo_Domingo',
            'America/St_Barthelemy',
            'America/St_Kitts',
            'America/St_Lucia',
            'America/St_Thomas',
            'America/St_Vincent',
            'America/Tortola',
            'Etc/GMT+4'
        ]
    },
    {
        value: 'Pacific SA Standard Time',
        abbr: 'PSST',
        offset: -4,
        isdst: false,
        text: '(UTC-04:00) Santiago',
        utc: [
            'America/Santiago',
            'Antarctica/Palmer'
        ]
    },
    {
        value: 'Newfoundland Standard Time',
        abbr: 'NDT',
        offset: -2.5,
        isdst: true,
        text: '(UTC-03:30) Newfoundland',
        utc: [
            'America/St_Johns'
        ]
    },
    {
        value: 'E. South America Standard Time',
        abbr: 'ESAST',
        offset: -3,
        isdst: false,
        text: '(UTC-03:00) Brasilia',
        utc: [
            'America/Sao_Paulo'
        ]
    },
    {
        value: 'Argentina Standard Time',
        abbr: 'AST',
        offset: -3,
        isdst: false,
        text: '(UTC-03:00) Buenos Aires',
        utc: [
            'America/Argentina/La_Rioja',
            'America/Argentina/Rio_Gallegos',
            'America/Argentina/Salta',
            'America/Argentina/San_Juan',
            'America/Argentina/San_Luis',
            'America/Argentina/Tucuman',
            'America/Argentina/Ushuaia',
            'America/Buenos_Aires',
            'America/Catamarca',
            'America/Cordoba',
            'America/Jujuy',
            'America/Mendoza'
        ]
    },
    {
        value: 'SA Eastern Standard Time',
        abbr: 'SEST',
        offset: -3,
        isdst: false,
        text: '(UTC-03:00) Cayenne, Fortaleza',
        utc: [
            'America/Araguaina',
            'America/Belem',
            'America/Cayenne',
            'America/Fortaleza',
            'America/Maceio',
            'America/Paramaribo',
            'America/Recife',
            'America/Santarem',
            'Antarctica/Rothera',
            'Atlantic/Stanley',
            'Etc/GMT+3'
        ]
    },
    {
        value: 'Greenland Standard Time',
        abbr: 'GDT',
        offset: -3,
        isdst: true,
        text: '(UTC-03:00) Greenland',
        utc: [
            'America/Godthab'
        ]
    },
    {
        value: 'Montevideo Standard Time',
        abbr: 'MST',
        offset: -3,
        isdst: false,
        text: '(UTC-03:00) Montevideo',
        utc: [
            'America/Montevideo'
        ]
    },
    {
        value: 'Bahia Standard Time',
        abbr: 'BST',
        offset: -3,
        isdst: false,
        text: '(UTC-03:00) Salvador',
        utc: [
            'America/Bahia'
        ]
    },
    {
        value: 'UTC-02',
        abbr: 'U',
        offset: -2,
        isdst: false,
        text: '(UTC-02:00) Coordinated Universal Time-02',
        utc: [
            'America/Noronha',
            'Atlantic/South_Georgia',
            'Etc/GMT+2'
        ]
    },
    {
        value: 'Mid-Atlantic Standard Time',
        abbr: 'MDT',
        offset: -1,
        isdst: true,
        text: '(UTC-02:00) Mid-Atlantic - Old',
        utc: []
    },
    {
        value: 'Azores Standard Time',
        abbr: 'ADT',
        offset: 0,
        isdst: true,
        text: '(UTC-01:00) Azores',
        utc: [
            'America/Scoresbysund',
            'Atlantic/Azores'
        ]
    },
    {
        value: 'Cape Verde Standard Time',
        abbr: 'CVST',
        offset: -1,
        isdst: false,
        text: '(UTC-01:00) Cape Verde Is.',
        utc: [
            'Atlantic/Cape_Verde',
            'Etc/GMT+1'
        ]
    },
    {
        value: 'Morocco Standard Time',
        abbr: 'MDT',
        offset: 1,
        isdst: true,
        text: '(UTC) Casablanca',
        utc: [
            'Africa/Casablanca',
            'Africa/El_Aaiun'
        ]
    },
    {
        value: 'UTC',
        abbr: 'UTC',
        offset: 0,
        isdst: false,
        text: '(UTC) Coordinated Universal Time',
        utc: [
            'America/Danmarkshavn',
            'Etc/GMT'
        ]
    },
    {
        value: 'GMT Standard Time',
        abbr: 'GMT',
        offset: 0,
        isdst: false,
        text: '(UTC) Edinburgh, London',
        utc: [
            'Europe/Isle_of_Man',
            'Europe/Guernsey',
            'Europe/Jersey',
            'Europe/London'
        ]
    },
    {
        value: 'British Summer Time',
        abbr: 'BST',
        offset: 1,
        isdst: true,
        text: '(UTC+01:00) Edinburgh, London',
        utc: [
            'Europe/Isle_of_Man',
            'Europe/Guernsey',
            'Europe/Jersey',
            'Europe/London'
        ]
    },
    {
        value: 'GMT Standard Time',
        abbr: 'GDT',
        offset: 1,
        isdst: true,
        text: '(UTC) Dublin, Lisbon',
        utc: [
            'Atlantic/Canary',
            'Atlantic/Faeroe',
            'Atlantic/Madeira',
            'Europe/Dublin',
            'Europe/Lisbon'
        ]
    },
    {
        value: 'Greenwich Standard Time',
        abbr: 'GST',
        offset: 0,
        isdst: false,
        text: '(UTC) Monrovia, Reykjavik',
        utc: [
            'Africa/Abidjan',
            'Africa/Accra',
            'Africa/Bamako',
            'Africa/Banjul',
            'Africa/Bissau',
            'Africa/Conakry',
            'Africa/Dakar',
            'Africa/Freetown',
            'Africa/Lome',
            'Africa/Monrovia',
            'Africa/Nouakchott',
            'Africa/Ouagadougou',
            'Africa/Sao_Tome',
            'Atlantic/Reykjavik',
            'Atlantic/St_Helena'
        ]
    },
    {
        value: 'W. Europe Standard Time',
        abbr: 'WEDT',
        offset: 2,
        isdst: true,
        text: '(UTC+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna',
        utc: [
            'Arctic/Longyearbyen',
            'Europe/Amsterdam',
            'Europe/Andorra',
            'Europe/Berlin',
            'Europe/Busingen',
            'Europe/Gibraltar',
            'Europe/Luxembourg',
            'Europe/Malta',
            'Europe/Monaco',
            'Europe/Oslo',
            'Europe/Rome',
            'Europe/San_Marino',
            'Europe/Stockholm',
            'Europe/Vaduz',
            'Europe/Vatican',
            'Europe/Vienna',
            'Europe/Zurich'
        ]
    },
    {
        value: 'Central Europe Standard Time',
        abbr: 'CEDT',
        offset: 2,
        isdst: true,
        text: '(UTC+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague',
        utc: [
            'Europe/Belgrade',
            'Europe/Bratislava',
            'Europe/Budapest',
            'Europe/Ljubljana',
            'Europe/Podgorica',
            'Europe/Prague',
            'Europe/Tirane'
        ]
    },
    {
        value: 'Romance Standard Time',
        abbr: 'RDT',
        offset: 2,
        isdst: true,
        text: '(UTC+01:00) Brussels, Copenhagen, Madrid, Paris',
        utc: [
            'Africa/Ceuta',
            'Europe/Brussels',
            'Europe/Copenhagen',
            'Europe/Madrid',
            'Europe/Paris'
        ]
    },
    {
        value: 'Central European Standard Time',
        abbr: 'CEDT',
        offset: 2,
        isdst: true,
        text: '(UTC+01:00) Sarajevo, Skopje, Warsaw, Zagreb',
        utc: [
            'Europe/Sarajevo',
            'Europe/Skopje',
            'Europe/Warsaw',
            'Europe/Zagreb'
        ]
    },
    {
        value: 'W. Central Africa Standard Time',
        abbr: 'WCAST',
        offset: 1,
        isdst: false,
        text: '(UTC+01:00) West Central Africa',
        utc: [
            'Africa/Algiers',
            'Africa/Bangui',
            'Africa/Brazzaville',
            'Africa/Douala',
            'Africa/Kinshasa',
            'Africa/Lagos',
            'Africa/Libreville',
            'Africa/Luanda',
            'Africa/Malabo',
            'Africa/Ndjamena',
            'Africa/Niamey',
            'Africa/Porto-Novo',
            'Africa/Tunis',
            'Etc/GMT-1'
        ]
    },
    {
        value: 'Namibia Standard Time',
        abbr: 'NST',
        offset: 1,
        isdst: false,
        text: '(UTC+01:00) Windhoek',
        utc: [
            'Africa/Windhoek'
        ]
    },
    {
        value: 'GTB Standard Time',
        abbr: 'GDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) Athens, Bucharest',
        utc: [
            'Asia/Nicosia',
            'Europe/Athens',
            'Europe/Bucharest',
            'Europe/Chisinau'
        ]
    },
    {
        value: 'Middle East Standard Time',
        abbr: 'MEDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) Beirut',
        utc: [
            'Asia/Beirut'
        ]
    },
    {
        value: 'Egypt Standard Time',
        abbr: 'EST',
        offset: 2,
        isdst: false,
        text: '(UTC+02:00) Cairo',
        utc: [
            'Africa/Cairo'
        ]
    },
    {
        value: 'Syria Standard Time',
        abbr: 'SDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) Damascus',
        utc: [
            'Asia/Damascus'
        ]
    },
    {
        value: 'E. Europe Standard Time',
        abbr: 'EEDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) E. Europe',
        utc: [
            'Asia/Nicosia',
            'Europe/Athens',
            'Europe/Bucharest',
            'Europe/Chisinau',
            'Europe/Helsinki',
            'Europe/Kiev',
            'Europe/Mariehamn',
            'Europe/Nicosia',
            'Europe/Riga',
            'Europe/Sofia',
            'Europe/Tallinn',
            'Europe/Uzhgorod',
            'Europe/Vilnius',
            'Europe/Zaporozhye'
        ]
    },
    {
        value: 'South Africa Standard Time',
        abbr: 'SAST',
        offset: 2,
        isdst: false,
        text: '(UTC+02:00) Harare, Pretoria',
        utc: [
            'Africa/Blantyre',
            'Africa/Bujumbura',
            'Africa/Gaborone',
            'Africa/Harare',
            'Africa/Johannesburg',
            'Africa/Kigali',
            'Africa/Lubumbashi',
            'Africa/Lusaka',
            'Africa/Maputo',
            'Africa/Maseru',
            'Africa/Mbabane',
            'Etc/GMT-2'
        ]
    },
    {
        value: 'FLE Standard Time',
        abbr: 'FDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius',
        utc: [
            'Europe/Helsinki',
            'Europe/Kiev',
            'Europe/Mariehamn',
            'Europe/Riga',
            'Europe/Sofia',
            'Europe/Tallinn',
            'Europe/Uzhgorod',
            'Europe/Vilnius',
            'Europe/Zaporozhye'
        ]
    },
    {
        value: 'Turkey Standard Time',
        abbr: 'TDT',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Istanbul',
        utc: [
            'Europe/Istanbul'
        ]
    },
    {
        value: 'Israel Standard Time',
        abbr: 'JDT',
        offset: 3,
        isdst: true,
        text: '(UTC+02:00) Jerusalem',
        utc: [
            'Asia/Jerusalem'
        ]
    },
    {
        value: 'Libya Standard Time',
        abbr: 'LST',
        offset: 2,
        isdst: false,
        text: '(UTC+02:00) Tripoli',
        utc: [
            'Africa/Tripoli'
        ]
    },
    {
        value: 'Jordan Standard Time',
        abbr: 'JST',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Amman',
        utc: [
            'Asia/Amman'
        ]
    },
    {
        value: 'Arabic Standard Time',
        abbr: 'AST',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Baghdad',
        utc: [
            'Asia/Baghdad'
        ]
    },
    {
        value: 'Kaliningrad Standard Time',
        abbr: 'KST',
        offset: 3,
        isdst: false,
        text: '(UTC+02:00) Kaliningrad',
        utc: [
            'Europe/Kaliningrad'
        ]
    },
    {
        value: 'Arab Standard Time',
        abbr: 'AST',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Kuwait, Riyadh',
        utc: [
            'Asia/Aden',
            'Asia/Bahrain',
            'Asia/Kuwait',
            'Asia/Qatar',
            'Asia/Riyadh'
        ]
    },
    {
        value: 'E. Africa Standard Time',
        abbr: 'EAST',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Nairobi',
        utc: [
            'Africa/Addis_Ababa',
            'Africa/Asmera',
            'Africa/Dar_es_Salaam',
            'Africa/Djibouti',
            'Africa/Juba',
            'Africa/Kampala',
            'Africa/Khartoum',
            'Africa/Mogadishu',
            'Africa/Nairobi',
            'Antarctica/Syowa',
            'Etc/GMT-3',
            'Indian/Antananarivo',
            'Indian/Comoro',
            'Indian/Mayotte'
        ]
    },
    {
        value: 'Moscow Standard Time',
        abbr: 'MSK',
        offset: 3,
        isdst: false,
        text: '(UTC+03:00) Moscow, St. Petersburg, Volgograd, Minsk',
        utc: [
            'Europe/Kirov',
            'Europe/Moscow',
            'Europe/Simferopol',
            'Europe/Volgograd',
            'Europe/Minsk'
        ]
    },
    {
        value: 'Samara Time',
        abbr: 'SAMT',
        offset: 4,
        isdst: false,
        text: '(UTC+04:00) Samara, Ulyanovsk, Saratov',
        utc: [
            'Europe/Astrakhan',
            'Europe/Samara',
            'Europe/Ulyanovsk'
        ]
    },
    {
        value: 'Iran Standard Time',
        abbr: 'IDT',
        offset: 4.5,
        isdst: true,
        text: '(UTC+03:30) Tehran',
        utc: [
            'Asia/Tehran'
        ]
    },
    {
        value: 'Arabian Standard Time',
        abbr: 'AST',
        offset: 4,
        isdst: false,
        text: '(UTC+04:00) Abu Dhabi, Muscat',
        utc: [
            'Asia/Dubai',
            'Asia/Muscat',
            'Etc/GMT-4'
        ]
    },
    {
        value: 'Azerbaijan Standard Time',
        abbr: 'ADT',
        offset: 5,
        isdst: true,
        text: '(UTC+04:00) Baku',
        utc: [
            'Asia/Baku'
        ]
    },
    {
        value: 'Mauritius Standard Time',
        abbr: 'MST',
        offset: 4,
        isdst: false,
        text: '(UTC+04:00) Port Louis',
        utc: [
            'Indian/Mahe',
            'Indian/Mauritius',
            'Indian/Reunion'
        ]
    },
    {
        value: 'Georgian Standard Time',
        abbr: 'GET',
        offset: 4,
        isdst: false,
        text: '(UTC+04:00) Tbilisi',
        utc: [
            'Asia/Tbilisi'
        ]
    },
    {
        value: 'Caucasus Standard Time',
        abbr: 'CST',
        offset: 4,
        isdst: false,
        text: '(UTC+04:00) Yerevan',
        utc: [
            'Asia/Yerevan'
        ]
    },
    {
        value: 'Afghanistan Standard Time',
        abbr: 'AST',
        offset: 4.5,
        isdst: false,
        text: '(UTC+04:30) Kabul',
        utc: [
            'Asia/Kabul'
        ]
    },
    {
        value: 'West Asia Standard Time',
        abbr: 'WAST',
        offset: 5,
        isdst: false,
        text: '(UTC+05:00) Ashgabat, Tashkent',
        utc: [
            'Antarctica/Mawson',
            'Asia/Aqtau',
            'Asia/Aqtobe',
            'Asia/Ashgabat',
            'Asia/Dushanbe',
            'Asia/Oral',
            'Asia/Samarkand',
            'Asia/Tashkent',
            'Etc/GMT-5',
            'Indian/Kerguelen',
            'Indian/Maldives'
        ]
    },
    {
        value: 'Yekaterinburg Time',
        abbr: 'YEKT',
        offset: 5,
        isdst: false,
        text: '(UTC+05:00) Yekaterinburg',
        utc: [
            'Asia/Yekaterinburg'
        ]
    },
    {
        value: 'Pakistan Standard Time',
        abbr: 'PKT',
        offset: 5,
        isdst: false,
        text: '(UTC+05:00) Islamabad, Karachi',
        utc: [
            'Asia/Karachi'
        ]
    },
    {
        value: 'India Standard Time',
        abbr: 'IST',
        offset: 5.5,
        isdst: false,
        text: '(UTC+05:30) Chennai, Kolkata, Mumbai, New Delhi',
        utc: [
            'Asia/Kolkata',
            'Asia/Calcutta'
        ]
    },
    {
        value: 'Sri Lanka Standard Time',
        abbr: 'SLST',
        offset: 5.5,
        isdst: false,
        text: '(UTC+05:30) Sri Jayawardenepura',
        utc: [
            'Asia/Colombo'
        ]
    },
    {
        value: 'Nepal Standard Time',
        abbr: 'NST',
        offset: 5.75,
        isdst: false,
        text: '(UTC+05:45) Kathmandu',
        utc: [
            'Asia/Kathmandu'
        ]
    },
    {
        value: 'Central Asia Standard Time',
        abbr: 'CAST',
        offset: 6,
        isdst: false,
        text: '(UTC+06:00) Nur-Sultan (Astana)',
        utc: [
            'Antarctica/Vostok',
            'Asia/Almaty',
            'Asia/Bishkek',
            'Asia/Qyzylorda',
            'Asia/Urumqi',
            'Etc/GMT-6',
            'Indian/Chagos'
        ]
    },
    {
        value: 'Bangladesh Standard Time',
        abbr: 'BST',
        offset: 6,
        isdst: false,
        text: '(UTC+06:00) Dhaka',
        utc: [
            'Asia/Dhaka',
            'Asia/Thimphu',
            'Asia/Omsk'
        ]
    },
    {
        value: 'Myanmar Standard Time',
        abbr: 'MST',
        offset: 6.5,
        isdst: false,
        text: '(UTC+06:30) Yangon (Rangoon)',
        utc: [
            'Asia/Rangoon',
            'Indian/Cocos'
        ]
    },
    {
        value: 'SE Asia Standard Time',
        abbr: 'SAST',
        offset: 7,
        isdst: false,
        text: '(UTC+07:00) Bangkok, Hanoi, Jakarta',
        utc: [
            'Antarctica/Davis',
            'Asia/Bangkok',
            'Asia/Hovd',
            'Asia/Jakarta',
            'Asia/Phnom_Penh',
            'Asia/Pontianak',
            'Asia/Saigon',
            'Asia/Vientiane',
            'Etc/GMT-7',
            'Indian/Christmas'
        ]
    },
    {
        value: 'N. Central Asia Standard Time',
        abbr: 'NCAST',
        offset: 7,
        isdst: false,
        text: '(UTC+07:00) Novosibirsk',
        utc: [
            'Asia/Novokuznetsk',
            'Asia/Novosibirsk'
        ]
    },
    {
        value: 'China Standard Time',
        abbr: 'CST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Beijing, Chongqing, Hong Kong, Urumqi',
        utc: [
            'Asia/Hong_Kong',
            'Asia/Macau',
            'Asia/Shanghai'
        ]
    },
    {
        value: 'North Asia Standard Time',
        abbr: 'NAST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Krasnoyarsk',
        utc: [
            'Asia/Krasnoyarsk'
        ]
    },
    {
        value: 'Singapore Standard Time',
        abbr: 'MPST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Kuala Lumpur, Singapore',
        utc: [
            'Asia/Brunei',
            'Asia/Kuala_Lumpur',
            'Asia/Kuching',
            'Asia/Makassar',
            'Asia/Manila',
            'Asia/Singapore',
            'Etc/GMT-8'
        ]
    },
    {
        value: 'W. Australia Standard Time',
        abbr: 'WAST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Perth',
        utc: [
            'Antarctica/Casey',
            'Australia/Perth'
        ]
    },
    {
        value: 'Taipei Standard Time',
        abbr: 'TST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Taipei',
        utc: [
            'Asia/Taipei'
        ]
    },
    {
        value: 'Ulaanbaatar Standard Time',
        abbr: 'UST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Ulaanbaatar',
        utc: [
            'Asia/Choibalsan',
            'Asia/Ulaanbaatar'
        ]
    },
    {
        value: 'North Asia East Standard Time',
        abbr: 'NAEST',
        offset: 8,
        isdst: false,
        text: '(UTC+08:00) Irkutsk',
        utc: [
            'Asia/Irkutsk'
        ]
    },
    {
        value: 'Japan Standard Time',
        abbr: 'JST',
        offset: 9,
        isdst: false,
        text: '(UTC+09:00) Osaka, Sapporo, Tokyo',
        utc: [
            'Asia/Dili',
            'Asia/Jayapura',
            'Asia/Tokyo',
            'Etc/GMT-9',
            'Pacific/Palau'
        ]
    },
    {
        value: 'Korea Standard Time',
        abbr: 'KST',
        offset: 9,
        isdst: false,
        text: '(UTC+09:00) Seoul',
        utc: [
            'Asia/Pyongyang',
            'Asia/Seoul'
        ]
    },
    {
        value: 'Cen. Australia Standard Time',
        abbr: 'CAST',
        offset: 9.5,
        isdst: false,
        text: '(UTC+09:30) Adelaide',
        utc: [
            'Australia/Adelaide',
            'Australia/Broken_Hill'
        ]
    },
    {
        value: 'AUS Central Standard Time',
        abbr: 'ACST',
        offset: 9.5,
        isdst: false,
        text: '(UTC+09:30) Darwin',
        utc: [
            'Australia/Darwin'
        ]
    },
    {
        value: 'E. Australia Standard Time',
        abbr: 'EAST',
        offset: 10,
        isdst: false,
        text: '(UTC+10:00) Brisbane',
        utc: [
            'Australia/Brisbane',
            'Australia/Lindeman'
        ]
    },
    {
        value: 'AUS Eastern Standard Time',
        abbr: 'AEST',
        offset: 10,
        isdst: false,
        text: '(UTC+10:00) Canberra, Melbourne, Sydney',
        utc: [
            'Australia/Melbourne',
            'Australia/Sydney'
        ]
    },
    {
        value: 'West Pacific Standard Time',
        abbr: 'WPST',
        offset: 10,
        isdst: false,
        text: '(UTC+10:00) Guam, Port Moresby',
        utc: [
            'Antarctica/DumontDUrville',
            'Etc/GMT-10',
            'Pacific/Guam',
            'Pacific/Port_Moresby',
            'Pacific/Saipan',
            'Pacific/Truk'
        ]
    },
    {
        value: 'Tasmania Standard Time',
        abbr: 'TST',
        offset: 10,
        isdst: false,
        text: '(UTC+10:00) Hobart',
        utc: [
            'Australia/Currie',
            'Australia/Hobart'
        ]
    },
    {
        value: 'Yakutsk Standard Time',
        abbr: 'YST',
        offset: 9,
        isdst: false,
        text: '(UTC+09:00) Yakutsk',
        utc: [
            'Asia/Chita',
            'Asia/Khandyga',
            'Asia/Yakutsk'
        ]
    },
    {
        value: 'Central Pacific Standard Time',
        abbr: 'CPST',
        offset: 11,
        isdst: false,
        text: '(UTC+11:00) Solomon Is., New Caledonia',
        utc: [
            'Antarctica/Macquarie',
            'Etc/GMT-11',
            'Pacific/Efate',
            'Pacific/Guadalcanal',
            'Pacific/Kosrae',
            'Pacific/Noumea',
            'Pacific/Ponape'
        ]
    },
    {
        value: 'Vladivostok Standard Time',
        abbr: 'VST',
        offset: 11,
        isdst: false,
        text: '(UTC+11:00) Vladivostok',
        utc: [
            'Asia/Sakhalin',
            'Asia/Ust-Nera',
            'Asia/Vladivostok'
        ]
    },
    {
        value: 'New Zealand Standard Time',
        abbr: 'NZST',
        offset: 12,
        isdst: false,
        text: '(UTC+12:00) Auckland, Wellington',
        utc: [
            'Antarctica/McMurdo',
            'Pacific/Auckland'
        ]
    },
    {
        value: 'UTC+12',
        abbr: 'U',
        offset: 12,
        isdst: false,
        text: '(UTC+12:00) Coordinated Universal Time+12',
        utc: [
            'Etc/GMT-12',
            'Pacific/Funafuti',
            'Pacific/Kwajalein',
            'Pacific/Majuro',
            'Pacific/Nauru',
            'Pacific/Tarawa',
            'Pacific/Wake',
            'Pacific/Wallis'
        ]
    },
    {
        value: 'Fiji Standard Time',
        abbr: 'FST',
        offset: 12,
        isdst: false,
        text: '(UTC+12:00) Fiji',
        utc: [
            'Pacific/Fiji'
        ]
    },
    {
        value: 'Magadan Standard Time',
        abbr: 'MST',
        offset: 12,
        isdst: false,
        text: '(UTC+12:00) Magadan',
        utc: [
            'Asia/Anadyr',
            'Asia/Kamchatka',
            'Asia/Magadan',
            'Asia/Srednekolymsk'
        ]
    },
    {
        value: 'Kamchatka Standard Time',
        abbr: 'KDT',
        offset: 13,
        isdst: true,
        text: '(UTC+12:00) Petropavlovsk-Kamchatsky - Old',
        utc: [
            'Asia/Kamchatka'
        ]
    },
    {
        value: 'Tonga Standard Time',
        abbr: 'TST',
        offset: 13,
        isdst: false,
        text: "(UTC+13:00) Nuku'alofa",
        utc: [
            'Etc/GMT-13',
            'Pacific/Enderbury',
            'Pacific/Fakaofo',
            'Pacific/Tongatapu'
        ]
    },
    {
        value: 'Samoa Standard Time',
        abbr: 'SST',
        offset: 13,
        isdst: false,
        text: '(UTC+13:00) Samoa',
        utc: [
            'Pacific/Apia'
        ]
    },
    {
        value: '',
        abbr: 'LINT',
        offset: 14,
        isdst: false,
        text: '(UTC+14:00) Kiritimati',
        utc: [
            'Pacific/Kiritimati'
        ]
    }
];


/***/ }),

/***/ 77861:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TrackEvents = void 0;
var TrackEvents;
(function (TrackEvents) {
    TrackEvents["ButtonClick"] = "ButtonClick";
    TrackEvents["OpTransform"] = "OpTransform";
    TrackEvents["Operation"] = "Operation";
    TrackEvents["OldLocalChangeset"] = "OldLocalChangeset";
    TrackEvents["UpdateLog"] = "UpdateLog";
    TrackEvents["ViewsInfo"] = "ViewsInfo";
    TrackEvents["IntroVideoStart"] = "IntroVideoStart";
    TrackEvents["IntroVideoEnd"] = "IntroVideoEnd";
    // Folder novice guide related
    TrackEvents["TaskListPush"] = "TaskListPush";
    TrackEvents["TaskListClick"] = "TaskListClick";
    TrackEvents["TaskListComplete"] = "TaskListComplete";
    TrackEvents["TaskListClose"] = "TaskListClose";
    TrackEvents["Theme"] = "Theme";
    TrackEvents["Language"] = "Language";
    TrackEvents["RecordCard"] = "RecordCard";
    // Template center search keyword report
    TrackEvents["TemplateKeyword"] = "TemplateKeyword";
    // posthug event name
    TrackEvents["TemplateSearchKeyword"] = "templateSearchKeyword";
    TrackEvents["TemplatePageView"] = "templatePageView";
    TrackEvents["TemplateUse"] = "templateUse";
    TrackEvents["TemplateConfirmUse"] = "templateConfirmUse";
    TrackEvents["InviteByContacts"] = "inviteByContacts";
    TrackEvents["InviteByWorkbench"] = "inviteByWorkbench";
})(TrackEvents = exports.TrackEvents || (exports.TrackEvents = {}));


/***/ }),

/***/ 58136:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 36605:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 37566:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 67074:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 31419:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 98070:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(37566), exports);
__exportStar(__webpack_require__(67074), exports);
__exportStar(__webpack_require__(31419), exports);
__exportStar(__webpack_require__(36605), exports);
__exportStar(__webpack_require__(58136), exports);


/***/ }),

/***/ 67007:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.event = void 0;
exports.event = __importStar(__webpack_require__(98070));


/***/ }),

/***/ 33564:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DataBus = void 0;
const logic_1 = __webpack_require__(65967);
/**
 * The entry point of the DataBus layer.
 */
class DataBus {
    constructor() {
        this._database = new logic_1.Database();
    }
    /**
     * Create a DataBus instance.
     */
    static create(options) {
        const { dataStorageProvider, storeProvider } = options;
        const databus = new DataBus();
        const db = databus.getDatabase();
        db.setDataStorageProvider(dataStorageProvider);
        db.setStoreProvider(storeProvider);
        return databus;
    }
    /**
     * Get the database of a DataBus instance.
     *
     * Currently, only one database exists for a DataBus instance. In the future, there may be multiple databases
     * for a DataBus instance. And the use cases are:
     *
     * - For front end, there is only one user, so one database suffice.
     * - For back end, the server creates many databases, one database corresponds to one user respectively.
     */
    getDatabase() {
        return this._database;
    }
}
exports.DataBus = DataBus;


/***/ }),

/***/ 83866:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(33564), exports);
__exportStar(__webpack_require__(65967), exports);
__exportStar(__webpack_require__(7281), exports);
__exportStar(__webpack_require__(67007), exports);


/***/ }),

/***/ 83466:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Dashboard = void 0;
const types_1 = __webpack_require__(73578);
class Dashboard {
    constructor(id, name) {
        this.id = id;
        this.name = name;
        this.type = types_1.ResourceType.Dashboard;
    }
    get revision() {
        throw 'TODO';
    }
}
exports.Dashboard = Dashboard;


/***/ }),

/***/ 2023:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Database = void 0;
const command_manager_1 = __webpack_require__(65654);
const datasheet_1 = __webpack_require__(55);
/**
 * A database is responsible for providing `Datasheet` instances.
 *
 * Conceptually, one database corresponds to one space in APITable.
 */
class Database {
    constructor() {
        this.commandManagers = new WeakMap();
        this._eventHandlers = new Map();
    }
    /**
     * Set the data storage provider for the database.
     *
     * **NOTE**: A data storage provider must be set before loading datasheets.
     */
    setDataStorageProvider(provider) {
        this.storageProvider = provider;
    }
    /**
     * Set the store provider that is responsible for providing internal redux stores for datasheets in this database.
     *
     * **NOTE**: A store provider must be set before loading datasheets.
     */
    setStoreProvider(provider) {
        this.storeProvider = provider;
    }
    /**
     * Load a datasheet in the database.
     *
     * **NOTE**: A data storage provider and a store provider must be set before loading datasheets.
     */
    getDatasheet(dstId, options) {
        return __awaiter(this, void 0, void 0, function* () {
            const { loadOptions } = options;
            const { datasheetPack } = yield this.storageProvider.loadDatasheetPack(dstId, loadOptions);
            if (datasheetPack === null) {
                return null;
            }
            const store = 'createStore' in options ? yield options.createStore(datasheetPack) : yield this.storeProvider.createStore(datasheetPack, options.storeOptions);
            let commandManager;
            if (this.commandManagers.has(store)) {
                commandManager = this.commandManagers.get(store);
            }
            else {
                commandManager = new command_manager_1.CollaCommandManager({
                    handleCommandExecuted: (resourceOpCollections) => {
                        this.fireEvent({
                            type: 1 /* DatasheetEventType.CommandExecuted */,
                            execResult: 0 /* CommandExecutionResultType.Success */,
                            resourceOpCollections,
                        });
                    },
                    handleCommandExecuteError: (error, errorType) => {
                        this.fireEvent({
                            type: 1 /* DatasheetEventType.CommandExecuted */,
                            execResult: 1 /* CommandExecutionResultType.Error */,
                            error,
                            errorType,
                        });
                    },
                }, store);
            }
            const datasheet = new datasheet_1.Datasheet(dstId, {
                store,
                saver: this.storageProvider,
                commandManager,
            });
            return datasheet;
        });
    }
    /**
     * Add an event handler to the database.
     *
     * @returns `true` if the event handler was successfully added. `false` if the same handler was previously added.
     */
    addEventHandler(handler) {
        let handlers = this._eventHandlers.get(handler.type);
        if (handlers === undefined) {
            handlers = new Set();
            this._eventHandlers.set(handler.type, handlers);
        }
        if (handlers.has(handler)) {
            return false;
        }
        handlers.add(handler);
        return true;
    }
    /**
     * Remove an event handler from the database.
     *
     * @returns `true` if the event handler was successfully removed. `false` if the handler did not exist in the datasheet.
     */
    removeEventHandler(handler) {
        let handlers = this._eventHandlers.get(handler.type);
        if (handlers === undefined) {
            handlers = new Set();
            this._eventHandlers.set(handler.type, handlers);
        }
        return handlers.delete(handler);
    }
    /**
     * Remove all event handles of a specific type from the database.
     */
    removeEventHandlers(type) {
        this._eventHandlers.delete(type);
    }
    /**
     * Fire an event in the database, invoking corresponding event handlers.
     */
    fireEvent(event) {
        return __awaiter(this, void 0, void 0, function* () {
            const handlers = this._eventHandlers.get(event.type);
            if (handlers) {
                for (const handler of handlers) {
                    yield handler.handle(event);
                }
            }
        });
    }
}
exports.Database = Database;


/***/ }),

/***/ 55:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Datasheet = void 0;
const _1 = __webpack_require__(65967);
const view_1 = __webpack_require__(58174);
const command_manager_1 = __webpack_require__(65654);
const types_1 = __webpack_require__(73578);
const store_1 = __webpack_require__(56791);
const commands_1 = __webpack_require__(97018);
const model_1 = __webpack_require__(61116);
class Datasheet {
    /**
     * Create a `Datasheet` instance.
     *
     * @deprecated This constructor is not intended for public use.
     */
    constructor(id, options) {
        this.id = id;
        this.type = types_1.ResourceType.Datasheet;
        const { store, saver, commandManager } = options;
        this.store = store;
        this.saver = saver;
        this._commandManager = commandManager;
    }
    /**
     * The name of this datasheet.
     */
    get name() {
        return store_1.Selectors.getDatasheet(this.store.getState(), this.id).name;
    }
    /**
     * The snapshot data of this datasheet.
     */
    get snapshot() {
        return store_1.Selectors.getSnapshot(this.store.getState(), this.id);
    }
    /**
     * The revision number of this datasheet.
     */
    get revision() {
        return store_1.Selectors.getResourceRevision(this.store.getState(), this.id, types_1.ResourceType.Datasheet);
    }
    /**
     * A map of all fields in the datasheet, including fields hidden in some views.
     */
    get fields() {
        const { fieldMap } = this.snapshot.meta;
        const fields = {};
        for (const fieldId in fieldMap) {
            fields[fieldId] = new _1.Field(fieldMap[fieldId], this.store);
        }
        return fields;
    }
    /**
     * TODO This is a temporary getter needed by front-end. All dependencies of CommandManager in the front-end will be removed in the future.
     */
    get commandManager() {
        return this._commandManager;
    }
    /**
     * Perform a command on this datasheet.
     *
     * @param command The command that will be executed.
     * @param saveOptions The options that will be passed to the data saver.
     *
     * @deprecated This method is not intended for public use.
     */
    doCommand(command, saveOptions) {
        return __awaiter(this, void 0, void 0, function* () {
            const result = this._commandManager.execute(command);
            if (result.result === command_manager_1.ExecuteResult.Success) {
                const saveResult = yield this.saver.saveOps(result.resourceOpsCollects, Object.assign(Object.assign({}, saveOptions), { datasheet: this, store: this.store }));
                result['saveResult'] = saveResult;
            }
            return result;
        });
    }
    /**
     * Add records to the datasheet.
     *
     * @param recordOptions Options for adding records.
     * @param saveOptions The options that will be passed to the data saver.
     *
     * @return If the command execution succeeded, the `data` field of the return value is an array of IDs of newly created records.
     */
    addRecords(recordOptions, saveOptions) {
        var _a;
        return this.doCommand({
            cmd: commands_1.CollaCommandName.AddRecords,
            viewId: recordOptions.viewId,
            index: recordOptions.index,
            count: (_a = recordOptions['count']) !== null && _a !== void 0 ? _a : recordOptions['recordValues'].length,
            cellValues: recordOptions['recordValues'],
            groupCellValues: recordOptions.groupCellValues,
            ignoreFieldPermission: recordOptions.ignoreFieldPermission,
            datasheetId: this.id,
        }, saveOptions);
    }
    /**
     * Update existing records in the datasheet.
     *
     * @param recordOptions Options for updating records.
     * @param saveOptions The options that will be passed to the data saver.
     */
    updateRecords(recordOptions, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.SetRecords,
            datasheetId: this.id,
            data: recordOptions,
        }, saveOptions);
    }
    resetRecords(recordMap, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.ResetRecords,
            datasheetId: this.id,
            data: recordMap,
            store: this.store,
        }, saveOptions);
    }
    /**
     * Delete records from the datasheet.
     *
     * @param recordIds Record IDs of records that will be deleted.
     * @param saveOptions The options that will be passed to the data saver.
     */
    deleteRecords(recordIds, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.DeleteRecords,
            data: recordIds,
        }, saveOptions);
    }
    /**
     * Add fields to the datasheet.
     *
     * @param fieldOptions Options for adding fields.
     * @param saveOptions The options that will be passed to the data saver.
     *
     * @return If the command execution succeeded, the `data` field of the return value is the ID of the newly created field.
     */
    addFields(fieldOptions, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.AddFields,
            data: fieldOptions,
            datasheetId: this.id,
        }, saveOptions);
    }
    /**
     * Delete fields from the datasheet.
     *
     * @param fields Options for deleting fields.
     * @param saveOptions The options that will be passed to the data saver.
     */
    deleteFields(fields, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.DeleteField,
            data: fields,
            datasheetId: this.id,
        }, saveOptions);
    }
    /**
     * Update existing fields in the datasheet.
     *
     * @param field New field property.
     * @param saveOptions The options that will be passed to the data saver.
     */
    updateField(field, saveOptions) {
        return this.doCommand({
            cmd: commands_1.CollaCommandName.SetFieldAttr,
            fieldId: field.id,
            data: field,
            datasheetId: this.id,
        }, saveOptions);
    }
    /**
     * Get the view whose property is given by `options.getViewInfo`.
     *
     * @return If the view is not found, `null` is returned.
     */
    getView(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const { getViewInfo } = options;
            const state = this.store.getState();
            const info = yield getViewInfo(state);
            if (!info) {
                return null;
            }
            return new view_1.View(this, this.store, info);
        });
    }
    /**
     * generate default view property
     * @param viewType view type
     * @param activeViewId
     */
    deriveDefaultViewProperty(viewType, activeViewId) {
        const defaultProperty = (0, model_1.getViewClass)(viewType).generateDefaultProperty(this.snapshot, activeViewId, this.store.getState());
        if (!defaultProperty) {
            throw Error(`Unexpected view type ${viewType}!`);
        }
        return defaultProperty;
    }
}
exports.Datasheet = Datasheet;


/***/ }),

/***/ 12129:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Field = void 0;
class Field {
    constructor(field, store) {
        this.field = field;
        this.store = store;
    }
    get id() {
        return this.field.id;
    }
    get name() {
        return this.field.name;
    }
    get type() {
        return this.field.type;
    }
    /**
     * Get the view object of the field via `transform`.
     */
    getViewObject(transform) {
        return transform(this.field, { state: this.store.getState() });
    }
}
exports.Field = Field;


/***/ }),

/***/ 84956:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Form = void 0;
const types_1 = __webpack_require__(73578);
class Form {
    constructor(id, name) {
        this.id = id;
        this.name = name;
        this.type = types_1.ResourceType.Form;
    }
    get revision() {
        throw new Error('TODO');
    }
}
exports.Form = Form;


/***/ }),

/***/ 65967:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(83466), exports);
__exportStar(__webpack_require__(2023), exports);
__exportStar(__webpack_require__(55), exports);
__exportStar(__webpack_require__(12129), exports);
__exportStar(__webpack_require__(84956), exports);
__exportStar(__webpack_require__(23207), exports);
__exportStar(__webpack_require__(29839), exports);
__exportStar(__webpack_require__(60677), exports);
__exportStar(__webpack_require__(58174), exports);
__exportStar(__webpack_require__(27625), exports);


/***/ }),

/***/ 23207:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Mirror = void 0;
const types_1 = __webpack_require__(73578);
class Mirror {
    constructor(id, name) {
        this.id = id;
        this.name = name;
        this.type = types_1.ResourceType.Mirror;
    }
    get revision() {
        throw new Error('TODO');
    }
}
exports.Mirror = Mirror;


/***/ }),

/***/ 29839:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Record = void 0;
class Record {
    /**
     * Create a `Record` instance from an `IRecord` object.
     *
     * @deprecated This constructor is not intended for public use.
     */
    constructor(record, options) {
        this.record = record;
        const { voTransformOptions } = options;
        this.voTransformOptions = voTransformOptions;
    }
    get id() {
        return this.record.id;
    }
    /**
     * The comment list of the record. If no comments exist, an empty array is returned.
     */
    get comments() {
        var _a;
        return (_a = this.record.comments) !== null && _a !== void 0 ? _a : [];
    }
    /**
     * Get the view object of the record via `transform`.
     */
    getViewObject(transform) {
        return transform(this.record, this.voTransformOptions);
    }
}
exports.Record = Record;


/***/ }),

/***/ 60677:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 58174:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.View = void 0;
const store_1 = __webpack_require__(56791);
const lodash_1 = __webpack_require__(46517);
const field_1 = __webpack_require__(12129);
const record_1 = __webpack_require__(29839);
class View {
    /**
     * Create a `View` instance from `IViewInfo`.
     *
     * @internal This constructor is not intended for public use.
     */
    constructor(datasheet, store, info) {
        this.datasheet = datasheet;
        this.store = store;
        const { name, type, id, rows, columns, fieldMap } = info;
        this.name = name;
        this.type = type;
        this.id = id;
        this.rows = rows;
        this.columns = columns;
        this.fieldMap = fieldMap;
    }
    /**
     * Get all fields in the view. Hidden fields are not included by default.
     */
    getFields(options) {
        const { columns, fieldMap } = this;
        const { includeHidden } = options;
        const fields = [];
        for (const column of columns) {
            const field = fieldMap[column.fieldId];
            // When specifying a view, it is consistent with the view order being visible and invisible.
            if (field && (includeHidden || !column.hidden)) {
                fields.push(new field_1.Field(field, this.store)); // core.Field.bindContext(field, state).getApiMeta(dstId)));
            }
        }
        return Promise.resolve(fields);
    }
    /**
     * Get records in the view.
     */
    getRecords(options) {
        const { store, fieldMap } = this;
        const snapshot = store_1.Selectors.getSnapshot(store.getState());
        if (!snapshot) {
            return Promise.resolve([]);
        }
        const { pagination, maxRecords } = options;
        // Pagination
        let pageRows = this.rows;
        if (maxRecords !== undefined && maxRecords < this.rows.length) {
            pageRows = this.rows.slice(0, maxRecords);
        }
        if (pagination !== undefined) {
            const start = (pagination.pageNum - 1) * pagination.pageSize;
            const end = start + pagination.pageSize;
            pageRows = pagination.pageSize == -1 ? pageRows : pageRows.slice(start, end);
        }
        if (pageRows.length === 0) {
            return Promise.resolve([]);
        }
        const recordMap = snapshot.recordMap;
        const fieldKeys = Object.keys(this.fieldMap);
        const columnMap = (0, lodash_1.keyBy)(this.columns, 'fieldId');
        const voTransformOptions = {
            fieldMap,
            store,
            fieldKeys,
            columnMap,
        };
        const records = [];
        for (const row of pageRows) {
            if (recordMap[row.recordId]) {
                records.push(new record_1.Record(recordMap[row.recordId], {
                    voTransformOptions,
                }));
            }
        }
        return Promise.resolve(records);
    }
    /**
     * Add records to the datasheet via this view.
     *
     * @param options Options for adding records.
     * @param saveOptions Options for the data saver.
     * @return If the command execution succeeded, the `data` field of the return value is an array of record IDs.
     */
    addRecords(recordOptions, saveOptions) {
        return this.datasheet.addRecords(Object.assign(Object.assign({}, recordOptions), { viewId: this.id }), saveOptions);
    }
}
exports.View = View;


/***/ }),

/***/ 27625:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Widget = void 0;
const types_1 = __webpack_require__(73578);
class Widget {
    constructor(id, name) {
        this.id = id;
        this.name = name;
        this.type = types_1.ResourceType.Widget;
    }
    get revision() {
        throw new Error('TODO');
    }
}
exports.Widget = Widget;


/***/ }),

/***/ 21909:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 90811:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 9494:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 7281:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(21909), exports);
__exportStar(__webpack_require__(90811), exports);
__exportStar(__webpack_require__(9494), exports);
__exportStar(__webpack_require__(55061), exports);


/***/ }),

/***/ 55061:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 78008:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.BufferStorage = void 0;
const constant_1 = __webpack_require__(83039);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const ot_1 = __webpack_require__(65315);
/**
  * used to cache opBuffer and localChangeset in local localStorage
  * Unsaved data can also be recovered locally for poor network conditions/unexpected shutdown
  */
class BufferStorage {
    constructor(resourceId, resourceType, lsStore) {
        this.resourceId = resourceId;
        this.resourceType = resourceType;
        this.lsStore = lsStore;
        // localStorage encapsulates the instance and binds the namespace in advance
        // https://github.com/nbubna/store
        this.opBufferStorage = this.lsStore.namespace(BufferStorage.bufferStorageNamespace);
        this._opBuffer = [];
        this.localPendingChangesetStorage = this.lsStore.namespace(BufferStorage.pendingChangesetsNamespace);
        this.resumeLocalState();
    }
    // The cache has just been created, but it is still queuing operations that have not been sent out
    // After sending, the op in opBuffer will be assembled into localPendingChangeset
    get opBuffer() {
        return this._opBuffer;
    }
    set opBuffer(value) {
        this._opBuffer = value;
        if (value == null || value.length === 0) {
            this.opBufferStorage.remove(this.resourceId);
            return;
        }
        try {
            this.opBufferStorage.set(this.resourceId, value);
        }
        catch (e) {
            console.error(e);
        }
    }
    // has been sent, waiting for ACK changeset
    get localPendingChangeset() {
        return this._localPendingChangeset;
    }
    set localPendingChangeset(value) {
        this._localPendingChangeset = value;
        if (value == null) {
            this.localPendingChangesetStorage.remove(this.resourceId);
            return;
        }
        try {
            this.localPendingChangesetStorage.set(this.resourceId, value);
        }
        catch (e) {
            // When setting localStorage fails, clear the original value.
            this.localPendingChangesetStorage.remove(this.resourceId);
            console.error(e);
        }
    }
    /**
     * @description reads the data of opBuffer and clears the opBuffer,
     * Considering the delay of the network layer, the front end cannot receive the ack in time,
     * here will save a copy of the opsBuffer data in the storage
     * @param {number} revision
     * @returns
     * @memberof Engine
     */
    deOpBuffer(revision) {
        const ops = this.opBuffer;
        // reset opBuffer
        this.opBuffer = [];
        // set localChangeset
        if (!ops.length) {
            this.localPendingChangeset = undefined;
            return;
        }
        this.localPendingChangeset = BufferStorage.ops2Changeset(ops, revision, this.resourceId, this.resourceType);
    }
    static ops2Changeset(ops, revision, resourceId, resourceType) {
        return {
            messageId: (0, utils_1.generateRandomString)(),
            baseRevision: revision,
            resourceId,
            resourceType,
            operations: (0, ot_1.composeOperations)(ops),
        };
    }
    // Clearing the opBuffer will lose unsynchronized data
    clearOpBuffer() {
        this.opBuffer = [];
    }
    /**
     * @description adds the operation to the buffer send queue.
     */
    pushOpBuffer(operation) {
        // To trigger the setter, assign directly instead of push
        const opBuffer = this.opBuffer;
        this.opBuffer = [...opBuffer, operation];
    }
    clearLocalPendingChangeset() {
        // Clear the local temporary changeset
        this.localPendingChangeset = undefined;
        // this.status = EngineStatus.Clear;
        // // Do a new round of sending
        // this.send();
    }
    /**
     * Restore application state from localStorage.
     * Mainly involves two states, localChangeset and opBuffer.
     * These two variables hold the op that has not been confirmed by the server. And keep backups in localStorage in real time.
     * When the page is refreshed or the data table is re-initialized, the values of localChangeset and opBuffer in memory are lost
     * At this point it is time to restore from localStorage.
     */
    resumeLocalState() {
        this.localPendingChangeset = this.compatibleLocalChangeset(this.localPendingChangesetStorage.get(this.resourceId) || undefined);
        this.opBuffer = this.opBufferStorage.get(this.resourceId) || [];
    }
    /**
      * @description A processing of the collaborative data structure for the online cache
      * Only the localChangeset is considered here. The op buffer storage records the op temp structure , which does not need to be compatible.
      * @param changeset
      * Currently 0.6.2 , this compatibility processing can be removed after two or three versions
      * @private
      */
    compatibleLocalChangeset(changeset) {
        if (!changeset) {
            return;
        }
        if (changeset['datasheetId']) {
            // The datasheetId in the attribute can be considered as the old data structure,
            // and the userId still exists in the old structure, which can be discarded
            const newLocalChangeset = {
                baseRevision: changeset.baseRevision,
                resourceId: changeset['datasheetId'],
                resourceType: types_1.ResourceType.Datasheet,
                operations: changeset.operations,
                messageId: changeset.messageId,
            };
            return newLocalChangeset;
        }
        return changeset;
    }
}
exports.BufferStorage = BufferStorage;
BufferStorage.bufferStorageNamespace = `${constant_1.LS_DATASHEET_NAMESPACE}.opBuffer`;
BufferStorage.pendingChangesetsNamespace = `${constant_1.LS_DATASHEET_NAMESPACE}.localChangeset`;


/***/ }),

/***/ 1334:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Engine = void 0;
const commands_1 = __webpack_require__(97018);
const engine_1 = __webpack_require__(39036);
const view_property_filter_1 = __webpack_require__(12908);
const types_1 = __webpack_require__(73578);
const error_types_1 = __webpack_require__(88787);
const api_1 = __webpack_require__(62625);
const i18n_1 = __webpack_require__(47511);
const actions_1 = __webpack_require__(6021);
const selectors_1 = __webpack_require__(964);
const player_1 = __webpack_require__(63325);
const buffer_storage_1 = __webpack_require__(78008);
/**
  * Real-time collaboration engine, providing real-time collaboration support for any serializable JSON structure data
  * TODO: Listen to the datasheet loaded event, supplementary check whether the version has fallen behind
  */
class Engine {
    constructor(params) {
        // The time when the last departure request was sent.
        this.latestSendTime = 0;
        this.prepared = false;
        const { resourceId, resourceType, getRevision, getNetworking, lsStore, event, getState, dispatch } = params;
        this.resourceId = resourceId;
        this.resourceType = resourceType;
        this.getRevision = getRevision;
        this.getNetworking = getNetworking;
        this.bufferStorage = new buffer_storage_1.BufferStorage(resourceId, resourceType, lsStore);
        this.event = event;
        this.cancelQuit = null;
        this.prepare();
        this.getState = getState;
        this.dispatch = dispatch;
        if (resourceType === types_1.ResourceType.Datasheet) {
            this.viewPropertyFilter = new view_property_filter_1.ViewPropertyFilter(getState, dispatch, resourceId, { onError: this.event.onError });
        }
    }
    /**
     * Push the operation into the send queue, SyncEngine will ensure that the data is sent to the server in version order
     * And provide temporary local persistence capabilities to prevent users from losing data
     * in the case of accidental network disconnection and active refresh
     */
    pushOpBuffer(operation) {
        const _actions = this.viewPropertyFilter ?
            this.viewPropertyFilter.parseActions(operation.actions, { commandName: operation.cmd }) :
            operation.actions;
        if (_actions.length) {
            this.bufferStorage.pushOpBuffer(Object.assign(Object.assign({}, operation), { actions: _actions, revision: this.getRevision(), resourceType: this.resourceType }));
        }
    }
    /**
     * Whether there is still unsent data
     */
    isStorageClear() {
        if (this.bufferStorage.opBuffer.length > 0 || this.bufferStorage.localPendingChangeset) {
            return false;
        }
        return true;
    }
    getNextChangeset() {
        const revision = this.getRevision();
        if (revision == null) {
            const error = new Error((0, i18n_1.t)(i18n_1.Strings.error_revision_does_not_exist));
            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                error,
                metaData: JSON.stringify({
                    resourceId: this.resourceId,
                    resourceType: this.resourceType,
                    engine: this,
                    resourceExist: Boolean((0, selectors_1.getResourcePack)(this.getState(), this.resourceId, this.resourceType)),
                }),
            });
            throw error;
        }
        this.bufferStorage.deOpBuffer(revision);
        if (!this.bufferStorage.localPendingChangeset) {
            return null;
        }
        this.latestSendTime = Date.now();
        return this.bufferStorage.localPendingChangeset;
    }
    getLocalPendingChangeset() {
        return this.bufferStorage.localPendingChangeset;
    }
    getOpBuffer() {
        return this.bufferStorage.opBuffer;
    }
    // clear changeset pending confirmation
    clearLocalPendingChangeset() {
        this.bufferStorage.clearLocalPendingChangeset();
    }
    // clear ops waiting to be sent
    clearOpBuffer() {
        this.bufferStorage.clearOpBuffer();
    }
    /**
     * Initialization preparations
     * 1. Check if there are any missing versions, and supplement if there are any.
     * 2. Check whether there are unsynchronized changesets locally, and if so, perform necessary transforms to keep revision and snapshot aligned
     * 3. Each engine will be prepared when it is first instantiated and watched
     *
     * checkVersion does not exist when instantiated
     */
    prepare(checkVersion) {
        return __awaiter(this, void 0, void 0, function* () {
            try {
                yield this.checkLocalDiffChanges(checkVersion);
                this.prepared = true;
            }
            catch (error) {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error,
                    metaData: {
                        localPendingChangeset: this.bufferStorage.localPendingChangeset,
                        opBuffer: this.bufferStorage.opBuffer,
                    },
                });
                // clear the local cache to prevent the problem from happening again
                this.bufferStorage.clearLocalPendingChangeset();
                this.bufferStorage.clearOpBuffer();
                this.event.onError && this.event.onError({
                    type: error_types_1.ErrorType.CollaError,
                    code: error_types_1.ErrorCode.EngineCreateFailed,
                    message: (0, i18n_1.t)(i18n_1.Strings.local_data_conflict),
                    modalType: types_1.ModalType.Info
                });
            }
        });
    }
    /**
     * Completed the version supplement of local resources, and can perform collaborative data synchronization operations
     */
    waitPrepareComplete() {
        return new Promise((resolve) => {
            if (this.prepared) {
                return resolve(true);
            }
            const timer = setInterval(() => {
                if (this.prepared) {
                    clearInterval(timer);
                    return resolve(true);
                }
            }, 30);
        });
    }
    /**
      * The submitted changeset is accepted by the service
      */
    handleAcceptCommit(remoteChangeset) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            // Check version continuity, if not, add it first.
            yield this.checkMissChanges(remoteChangeset.revision);
            const revision = this.getRevision();
            // This may happen when entering the table for the first time.
            // The client detects that there is still local content that cannot be sent, so it re-sends
            if (!this.bufferStorage.localPendingChangeset) {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error('missing localChangeset when receiving ACK'),
                });
                return;
            }
            if (revision != null &&
                (remoteChangeset === null || remoteChangeset === void 0 ? void 0 : remoteChangeset.messageId) === ((_a = this.bufferStorage.localPendingChangeset) === null || _a === void 0 ? void 0 : _a.messageId) &&
                (remoteChangeset === null || remoteChangeset === void 0 ? void 0 : remoteChangeset.revision) === revision + 1) {
                const filteredOperations = remoteChangeset.operations.filter(op => {
                    return (op.cmd === commands_1.CollaCommandName.SystemSetRecords || op.cmd === commands_1.CollaCommandName.SystemSetFieldAttr);
                });
                if (filteredOperations.length) {
                    this.event.onAcceptSystemOperations(filteredOperations);
                }
                this.dispatch((0, actions_1.updateRevision)(revision + 1, this.resourceId, this.resourceType));
                return;
            }
            console.error('ACK data error', { revision, ack: remoteChangeset, localChangeset: this.bufferStorage.localPendingChangeset });
            throw new Error('Data returned in wrong format, please refresh and try again');
        });
    }
    /**
     * @param startRevision inclusive
     * @param endRevision   exclusive
     */
    fetchMissVersion(startRevision, endRevision) {
        return __awaiter(this, void 0, void 0, function* () {
            console.log('fetchingMissVersion', this.resourceId, startRevision, endRevision);
            const result = yield api_1.DatasheetApi.fetchChangesets(this.resourceId, this.resourceType, startRevision, endRevision, this.getState().pageParams.nodeId, this.getState().pageParams.shareId);
            if (result.data.success) {
                console.log('fetchMissVersion success: ', result.data.data);
                if (endRevision - startRevision !== result.data.data.length) {
                    throw new Error((0, i18n_1.t)(i18n_1.Strings.error_the_length_of_changeset_is_inconsistent));
                }
                return result.data.data;
            }
            throw new Error((0, i18n_1.t)(i18n_1.Strings.error_occurred_while_requesting_the_missing_version));
        });
    }
    /**
     * The backend actively pushes changesets submitted by others
     * Or actively compensate for missing versions of changeset
     */
    handleNewChanges(data) {
        return __awaiter(this, void 0, void 0, function* () {
            console.log('Received remote Changeset: ', { data });
            const loading = this.getNetworking().loading;
            if (loading) {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error('receive newChanges while datasheet loading, ignored'),
                });
                return;
            }
            yield this.checkMissChanges(data.revision);
            this.applyNewChanges(data);
        });
    }
    applyNewChanges(cs) {
        // Receive newChanges from itself. This happens because the client disconnects and reconnects,
        // and the reconnected client is considered a collaborator.
        // At this time, the changeset sent by yourself will be broadcast to yourself as newChanges again.
        // So we have to first judge the equality of messageId
        // If messageId is equal, it is regarded as ACK.
        if (this.bufferStorage.localPendingChangeset && cs.messageId === this.bufferStorage.localPendingChangeset.messageId) {
            console.error('messageId in newChanges is equal to localChangeset and has been converted to ACK');
            this.handleAcceptCommit(cs);
            return;
        }
        const revision = this.getRevision();
        // must ensure that data.revision does not jump carry
        if (cs.revision > revision + 1) {
            console.log('revision error', revision, cs.revision);
            throw new Error('miss changes didn\'t well prepared');
        }
        // Changesets smaller than the current version are ignored directly
        if (cs.revision <= revision) {
            console.warn('older changeset received and ignored');
            return;
        }
        if (revision == null || cs.revision !== +revision + 1) {
            console.error('currentRevision', revision, cs);
            throw new Error('wrong changeset revision');
        }
        const nextRevision = +revision + 1;
        const remoteActions = this.doTransform(cs);
        const _remoteActions = this.viewPropertyFilter ? this.viewPropertyFilter.parseActions(remoteActions, { fromServer: true }) : remoteActions;
        this.dispatch((0, actions_1.updateRevision)(nextRevision, this.resourceId, this.resourceType));
        this.event.onNewChanges(this.resourceType, this.resourceId, _remoteActions);
        return _remoteActions;
    }
    // Check the missing version of the remote changeset, and if there is one, directly fill in the missing changeset and apply it to the snapshot.
    checkMissChanges(revisionUpgradeTo) {
        return __awaiter(this, void 0, void 0, function* () {
            const revision = this.getRevision();
            /**
             * The remote newChange version needs to be exactly equal to the version + 1 to go through the normal process.
             * If the version gap is greater than 1, you need to fill in the intermediate version
             */
            if (revisionUpgradeTo === revision + 1) {
                return;
            }
            if (revisionUpgradeTo <= revision) {
                return;
            }
            const changesetList = yield this.fetchMissVersion(revision + 1, revisionUpgradeTo);
            changesetList.forEach(cs => {
                this.applyNewChanges(cs);
            });
        });
    }
    // Check the version gap between the local snapshot and the local changeset.
    // If there is a gap, transform and rebase the localChangeset.
    checkLocalDiffChanges(checkVersion) {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.bufferStorage.localPendingChangeset) {
                checkVersion != null && this.checkMissChanges(checkVersion);
                return;
            }
            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                error: new Error((0, i18n_1.t)(i18n_1.Strings.error_an_unsynchronized_changeset_is_detected)),
                metaData: this.bufferStorage.localPendingChangeset,
            });
            const revision = this.getRevision();
            const baseRevision = this.bufferStorage.localPendingChangeset.baseRevision;
            if (baseRevision > revision) {
                throw new Error('localRevision greater than remoteRevision');
            }
            console.log('checkLocalDiffChanges: ', { baseRevision, revision });
            if (baseRevision < revision) {
                let changesetList = yield this.fetchMissVersion(baseRevision + 1, revision + 1);
                /**
                  * Check if localChangeset is already in changesetList, if so
                  * 1. It means that localChangeset has been applied to the snapshot, so it does not need to be sent locally
                  * 2. This changeset before this needs to be transformed, and the latter does not need to be transformed
                  */
                const transformEndIndex = changesetList.findIndex(changeset => {
                    return changeset.messageId === this.bufferStorage.localPendingChangeset.messageId;
                });
                changesetList = changesetList.slice(0, transformEndIndex);
                if (transformEndIndex >= 0) {
                    // 1. Discard localChangeset.
                    // 2. opBuffer becomes the new localChangeset, and baseRevision is set to the revision
                    // in the changesetList where the original localChangeset is located.
                    console.log('Detected that the local localPendingChangeset has been consumed, delete it directly', this.bufferStorage.localPendingChangeset);
                    this.bufferStorage.deOpBuffer(revision);
                    console.log('The local opBuffer enters localPendingChangeset', this.bufferStorage.localPendingChangeset);
                }
                changesetList.forEach(changeset => {
                    this.doTransform(changeset);
                });
            }
        });
    }
    doTransform(cs) {
        let remoteActions = cs.operations.reduce((pre, op) => {
            pre.push(...op.actions);
            return pre;
        }, []);
        this.event.getUndoManager().doTransform(remoteActions);
        // localChangeset needs to be transformed and updated to the latest version
        if (this.bufferStorage.localPendingChangeset) {
            console.log('localPendingChangeset before transform:', { localChangeset: this.bufferStorage.localPendingChangeset, remoteActions });
            const newOperations = this.bufferStorage.localPendingChangeset.operations.map(op => {
                const [leftOp, rightOp] = engine_1.jot.transformX(op.actions, remoteActions);
                remoteActions = rightOp;
                return {
                    cmd: op.cmd,
                    actions: leftOp,
                };
            });
            this.bufferStorage.localPendingChangeset = Object.assign(Object.assign({}, this.bufferStorage.localPendingChangeset), { operations: newOperations, baseRevision: cs.revision });
            console.log('localChangeset after transformed: ', { localChangeset: this.bufferStorage.localPendingChangeset, remoteActions });
        }
        if (this.bufferStorage.opBuffer.length) {
            console.log('opBuffer before transform:', { localChangeset: this.bufferStorage.localPendingChangeset, remoteActions });
            this.bufferStorage.opBuffer = this.bufferStorage.opBuffer.map(op => {
                const [leftOp, rightOp] = engine_1.jot.transformX(op.actions, remoteActions);
                remoteActions = rightOp;
                return {
                    cmd: op.cmd,
                    actions: leftOp,
                };
            });
            console.log('opBuffer after transformed: ', { localPendingChangeset: this.bufferStorage.localPendingChangeset, serverOperations: remoteActions });
        }
        return remoteActions;
    }
}
exports.Engine = Engine;


/***/ }),

/***/ 39036:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(65315), exports);
__exportStar(__webpack_require__(1334), exports);
__exportStar(__webpack_require__(12908), exports);


/***/ }),

/***/ 79395:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.composeOperation = exports.composeOperations = void 0;
const ot_1 = __webpack_require__(65315);
const lodash_1 = __webpack_require__(46517);
/**
 * Compose (Merge) operations
 * Only compose for operations that same path and single action's operation
 *
 * @param operations Operations Array
 */
function composeOperations(operations) {
    return operations.reduce((pre, cur) => {
        delete cur.resourceType;
        delete cur.revision;
        delete cur.fieldTypeMap;
        if (pre.length) {
            const preOp = pre.pop();
            const { operation, isComposed } = composeOperation(cur, preOp);
            if (operation != null) {
                pre.push(operation);
                if (!isComposed) {
                    pre.push(cur);
                }
            }
        }
        else {
            pre.push(cur);
        }
        return pre;
    }, []);
}
exports.composeOperations = composeOperations;
function composeOperation(preOperation, curOperation) {
    if (curOperation.actions.length === preOperation.actions.length &&
        curOperation.actions.length === 1 &&
        preOperation.actions[0].p.length === curOperation.actions[0].p.length) {
        // filter the same actions as od, oi or li, ld
        const actions = ot_1.jot.compose(curOperation.actions, preOperation.actions).filter((action) => {
            if (action.n === ot_1.OTActionName.ObjectReplace) {
                return !(0, lodash_1.isEqual)(action.od, action.oi);
            }
            if (action.n === ot_1.OTActionName.ListReplace) {
                return !(0, lodash_1.isEqual)(action.ld, action.li);
            }
            return true;
        });
        // The merged actions do not exceed the length of the original actions
        if (actions.length <= curOperation.actions.length) {
            let operation = null;
            if (actions.length > 0) {
                operation = Object.assign(Object.assign({}, curOperation), { actions });
            }
            return { operation, isComposed: true };
        }
    }
    return { operation: curOperation, isComposed: false };
}
exports.composeOperation = composeOperation;


/***/ }),

/***/ 65315:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.jot = void 0;
// Only the JSON type is exported, because the text type is deprecated
// otherwise. (If you want to use it somewhere, you're welcome to pull it out
// into a separate module that json0 can depend on).
const i18n_1 = __webpack_require__(47511);
const json0_1 = __importDefault(__webpack_require__(49100));
__exportStar(__webpack_require__(27669), exports);
__exportStar(__webpack_require__(79395), exports);
exports.jot = Object.assign(Object.assign({}, json0_1.default), { apply(json, actions) {
        try {
            return json0_1.default.apply(json, actions);
        }
        catch (e) {
            if (e.message === 'invalid / missing instruction in op') {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.missing_instruction_op_error), { cause: e });
            }
            else {
                throw e;
            }
        }
    } });


/***/ }),

/***/ 27669:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OTActionName = void 0;
// Use words' first letter as the identifier to save network transmission bytes
var OTActionName;
(function (OTActionName) {
    OTActionName["NumberAdd"] = "NA";
    OTActionName["ListInsert"] = "LI";
    OTActionName["ListDelete"] = "LD";
    OTActionName["ListReplace"] = "LR";
    OTActionName["ListMove"] = "LM";
    OTActionName["ObjectInsert"] = "OI";
    OTActionName["ObjectDelete"] = "OD";
    OTActionName["ObjectReplace"] = "OR";
    OTActionName["SubType"] = "ST";
    OTActionName["TextInsert"] = "TI";
    OTActionName["TextDelete"] = "TD";
})(OTActionName = exports.OTActionName || (exports.OTActionName = {}));


/***/ }),

/***/ 12908:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ViewPropertyFilter = void 0;
const datasheet_api_1 = __webpack_require__(68615);
const commands_1 = __webpack_require__(97018);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
class ViewPropertyFilter {
    constructor(_getState, _dispatch, _datasheetId, _listener) {
        this._getState = _getState;
        this._dispatch = _dispatch;
        this._datasheetId = _datasheetId;
        this._listener = _listener;
    }
    _checkGroupInfo(groupInfo, fieldMap) {
        return groupInfo.every(info => {
            return fieldMap[info.fieldId];
        });
    }
    _checkFilterInfo(filterInfo, fieldMap) {
        if (!filterInfo.conditions.length) {
            return true;
        }
        return filterInfo.conditions.every(info => {
            return fieldMap[info.fieldId];
        });
    }
    _checkSortInfo(sortInfo, fieldMap) {
        if (!sortInfo.rules.length) {
            return true;
        }
        return sortInfo.rules.every(info => {
            return fieldMap[info.fieldId];
        });
    }
    _checkStyle(style, fieldMap) {
        if (style.kanbanFieldId) {
            return fieldMap[style.kanbanFieldId];
        }
        return true;
    }
    /* Strategy for checking data integrity */
    _fieldIntegrityCheck(viewProperty, op, fieldMap) {
        switch (viewProperty) {
            case 'groupInfo': {
                return this._checkGroupInfo(op, fieldMap);
            }
            case 'filterInfo': {
                return this._checkFilterInfo(op, fieldMap);
            }
            case 'sortInfo': {
                return this._checkSortInfo(op, fieldMap);
            }
            case 'style': {
                return this._checkStyle(op, fieldMap);
            }
            default: {
                return true;
            }
        }
    }
    _actionFilter(action) {
        const path = action.p;
        if (!path.includes('views')) {
            return true;
        }
        const state = this._getState();
        const viewIndex = path[2];
        const snapshot = store_1.Selectors.getSnapshot(state, this._datasheetId);
        if (!snapshot) {
            return false;
        }
        const views = snapshot.meta.views;
        const view = views[viewIndex];
        const opViewId = view === null || view === void 0 ? void 0 : view.id;
        if (!view || !opViewId) {
            return true;
        }
        if (view['autoSave']) {
            return true;
        }
        const propertyKey = path[3];
        if (!propertyKey) {
            // If there is no propertyKey, it should be doing the delete operation of the view, and the view deletion also needs to be released
            return true;
        }
        if (ViewPropertyFilter.ignoreViewProperty.includes(propertyKey)) {
            return true;
        }
        if (this._fromServer && path.includes('autoSave') && action['oi']) {
            // Receive op from the server, if it is checked that there is a modification to autoSave,
            // and it is turned on, you need to pull the latest view data from the server to overwrite the local
            ViewPropertyFilter.resetViewProperty(state, {
                datasheetId: this._datasheetId,
                viewId: view.id,
                dispatch: this._dispatch,
                onError: this._listener.onError
            });
            return true;
        }
        if (path.includes('columns')) {
            // If the li and ld operations are performed at the same time,
            // it means that the original content is being replaced, which belongs to LR and needs to be filtered out
            // Such as hiding columns, modifying column widths, etc.
            if (action['li'] && action['ld']) {
                return false;
            }
            // There is only one li and ld, just delete or add
            if (action['li'] || action['ld']) {
                return true;
            }
            return false;
        }
        return false;
    }
    parseActions(actions, { fromServer, commandName }) {
        var _a, _b, _c;
        this._fromServer = fromServer;
        if (commandName &&
            [commands_1.CollaCommandName.AddViews, commands_1.CollaCommandName.DeleteViews, commands_1.CollaCommandName.MoveViews, commands_1.CollaCommandName.DeleteField,
                commands_1.CollaCommandName.SetFieldAttr].includes(commandName)) {
            // If it is detected that the collaborative state of the view is being modified, there is no need to filter this action.
            return actions;
        }
        const state = this._getState();
        if (!((_a = state.labs) === null || _a === void 0 ? void 0 : _a.includes('view_manual_save')) && !((_b = state.share) === null || _b === void 0 ? void 0 : _b.featureViewManualSave) && !((_c = state.embedInfo) === null || _c === void 0 ? void 0 : _c.viewManualSave)) {
            // There is no uncoordinated view of the entire space station, so there is no need to check the data here
            return actions;
        }
        if (commandName && [commands_1.CollaCommandName.ManualSaveView, commands_1.CollaCommandName.SetViewAutoSave].includes(commandName)) {
            // Manually save the view data. In order to avoid the impact of the field's absence on the view configuration,
            // it is necessary to check the field's existence and filter the abnormal configuration.
            // This filtering scheme is only used to submit data from the client to the server, otherwise this method is not called
            return actions.filter((action) => this._filterFieldExist(action));
        }
        return actions.filter((action) => this._actionFilter(action));
    }
    _filterFieldExist(action) {
        const path = action.p;
        if (!path.includes('views')) {
            return true;
        }
        const state = this._getState();
        const snapshot = store_1.Selectors.getSnapshot(state, this._datasheetId);
        if (!snapshot) {
            return false;
        }
        const fieldMap = snapshot === null || snapshot === void 0 ? void 0 : snapshot.meta.fieldMap;
        const propertyKey = path[3];
        if (action['oi']) {
            return this._fieldIntegrityCheck(propertyKey, action['oi'], fieldMap);
        }
        return true;
    }
    // Reset the current graph configuration, which is consistent with the database data
    static resetViewProperty(state, { datasheetId, viewId, dispatch, onError, shareId }) {
        return __awaiter(this, void 0, void 0, function* () {
            const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
            const { success, data } = yield ViewPropertyFilter.requestViewDate(datasheetId, viewId);
            if (success) {
                const revision = store_1.Selectors.getResourceRevision(state, datasheetId, types_1.ResourceType.Datasheet);
                if (data['revision'] < revision) {
                    // The version of the database is smaller than the local version, it may be that the op is being processed
                    // at the same time as the request, so resend the request
                    return yield this.requestViewDate(datasheetId, viewId, shareId);
                }
                if (data['revision'] > revision + 1) {
                    // If the local version is smaller than the database version, you should make up the version number first, and then perform data replacement
                    return this.handleError(onError);
                }
                const viewProperty = data['view'];
                const resetActions = model_1.DatasheetActions.resetView2Action(snapshot, { viewId: viewId, viewProperty: viewProperty });
                if (!resetActions) {
                    return this.handleError(onError);
                }
                dispatch(store_1.StoreActions.applyJOTOperations([{
                        cmd: commands_1.CollaCommandName.SetViewAutoSave,
                        actions: resetActions
                    }], types_1.ResourceType.Datasheet, datasheetId));
                return;
            }
            return this.handleError(onError);
        });
    }
    static handleError(onError) {
        onError === null || onError === void 0 ? void 0 : onError({
            type: types_1.ErrorType.CollaError,
            code: types_1.ErrorCode.EngineCreateFailed,
            message: (0, i18n_1.t)(i18n_1.Strings.manual_save_view_error),
            modalType: types_1.ModalType.Warning
        });
    }
    static requestViewDate(datasheetId, viewId, shareId) {
        return __awaiter(this, void 0, void 0, function* () {
            const res = shareId ? yield (0, datasheet_api_1.getShareDstViewDataPack)(datasheetId, viewId, shareId) : yield (0, datasheet_api_1.getDstViewDataPack)(datasheetId, viewId);
            return res.data;
        });
    }
    static getReaderRolePermission(state, datasheetId, permission) {
        var _a, _b, _c;
        const spaceManualSaveViewIsOpen = ((_a = state.labs) === null || _a === void 0 ? void 0 : _a.includes('view_manual_save')) ||
            Boolean((_b = state.share) === null || _b === void 0 ? void 0 : _b.featureViewManualSave) ||
            Boolean((_c = state.embedInfo) === null || _c === void 0 ? void 0 : _c.viewManualSave);
        const viewId = state.pageParams.viewId;
        if (!viewId || !spaceManualSaveViewIsOpen || !permission) {
            return permission;
        }
        const view = (0, selectors_1.getCurrentViewBase)((0, selectors_1.getSnapshot)(state, datasheetId), viewId, datasheetId);
        if (!view || view.autoSave) {
            return permission;
        }
        return Object.assign(Object.assign({}, permission), { viewFilterable: true, columnSortable: true, columnHideable: true, fieldSortable: true, fieldGroupable: true, rowHighEditable: true, columnWidthEditable: true, columnCountEditable: true, viewLayoutEditable: true, viewStyleEditable: true, viewKeyFieldEditable: true, viewColorOptionEditable: true, visualizationEditable: true });
    }
}
exports.ViewPropertyFilter = ViewPropertyFilter;
ViewPropertyFilter.ignoreViewProperty = ['id', 'type', 'rows', 'name', 'lockInfo'];


/***/ }),

/***/ 3221:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventNameClsMap = exports.DEFAULT_EVENT_MANAGER_OPTIONS = exports.EMPTY_ARRAY = exports.REMOTE_NEW_CHANGES = exports.defaultEventListenerOptions = exports.EventSourceTypeEnums = exports.EventAtomTypeEnums = exports.EventRealTypeEnums = exports.OPEventNameEnums = void 0;
const datasheet_1 = __webpack_require__(64633);
/**
 * Before defining a new event, declare it below
 */
var OPEventNameEnums;
(function (OPEventNameEnums) {
    OPEventNameEnums["FieldUpdated"] = "FieldUpdated";
    OPEventNameEnums["CellUpdated"] = "CellUpdated";
    OPEventNameEnums["RecordCreated"] = "RecordCreated";
    OPEventNameEnums["RecordDeleted"] = "RecordDeleted";
    OPEventNameEnums["RecordUpdated"] = "RecordUpdated";
    OPEventNameEnums["RecordMetaUpdated"] = "RecordMetaUpdated";
    OPEventNameEnums["RecordCommentUpdated"] = "RecordCommentUpdated";
    OPEventNameEnums["FormSubmitted"] = "FormSubmitted";
})(OPEventNameEnums = exports.OPEventNameEnums || (exports.OPEventNameEnums = {}));
var EventRealTypeEnums;
(function (EventRealTypeEnums) {
    EventRealTypeEnums["VIRTUAL"] = "VIRTUAL";
    EventRealTypeEnums["REAL"] = "REAL";
    EventRealTypeEnums["ALL"] = "ALL";
})(EventRealTypeEnums = exports.EventRealTypeEnums || (exports.EventRealTypeEnums = {}));
var EventAtomTypeEnums;
(function (EventAtomTypeEnums) {
    EventAtomTypeEnums["ATOM"] = "ATOM";
    EventAtomTypeEnums["COMB"] = "COMB";
})(EventAtomTypeEnums = exports.EventAtomTypeEnums || (exports.EventAtomTypeEnums = {}));
var EventSourceTypeEnums;
(function (EventSourceTypeEnums) {
    EventSourceTypeEnums["LOCAL"] = "LOCAL";
    EventSourceTypeEnums["REMOTE"] = "REMOTE";
    EventSourceTypeEnums["ALL"] = "ALL";
})(EventSourceTypeEnums = exports.EventSourceTypeEnums || (exports.EventSourceTypeEnums = {}));
/**
 * When listening for events, you can pass in option parameters.
 * By default, all events are subscribed, and the event is triggered after the event op apply to the store.
 */
exports.defaultEventListenerOptions = {
    realType: EventRealTypeEnums.ALL,
    sourceType: EventSourceTypeEnums.ALL,
    beforeApply: false,
};
exports.REMOTE_NEW_CHANGES = 'REMOTE_NEW_CHANGES';
exports.EMPTY_ARRAY = [];
exports.DEFAULT_EVENT_MANAGER_OPTIONS = {
    enableVirtualEvent: false,
    enableCombEvent: false,
    enableEventComplete: false
};
// Mapping relationship between event name and event definition class
exports.EventNameClsMap = {
    // cell
    [OPEventNameEnums.CellUpdated]: datasheet_1.datasheetEvent.OPEventCellUpdated,
    // field
    [OPEventNameEnums.FieldUpdated]: datasheet_1.datasheetEvent.OPEventFieldUpdated,
    // record
    [OPEventNameEnums.RecordCommentUpdated]: datasheet_1.datasheetEvent.OPEventRecordCommentUpdated,
    [OPEventNameEnums.RecordMetaUpdated]: datasheet_1.datasheetEvent.OPEventRecordMetaUpdated,
    [OPEventNameEnums.RecordCreated]: datasheet_1.datasheetEvent.OPEventRecordCreated,
    [OPEventNameEnums.RecordDeleted]: datasheet_1.datasheetEvent.OPEventRecordDeleted,
    [OPEventNameEnums.RecordUpdated]: datasheet_1.datasheetEvent.OPEventRecordUpdated,
};


/***/ }),

/***/ 51661:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EventManager = void 0;
const lodash_1 = __webpack_require__(46517);
const const_1 = __webpack_require__(3221);
/**
 * Manage event monitoring
 */
class EventManager {
    constructor() {
        // Maintain the mapping relationship between registered events and binding actions
        this.eventListenerMap = {};
    }
    /**
     * Listen for events
     * @param eventName event name
     * @param actionFunc action function
     * @param _options
     */
    addEventListener(eventName, actionFunc, _options = const_1.defaultEventListenerOptions) {
        const options = Object.assign(Object.assign({}, const_1.defaultEventListenerOptions), _options);
        const eventListener = {
            actionFunc,
            options,
        };
        if (this.eventListenerMap[eventName]) {
            this.eventListenerMap[eventName].push(eventListener);
        }
        else {
            this.eventListenerMap[eventName] = [eventListener];
        }
    }
    /**
     * Cancel event listener
     * @param eventName
     * @param actionFunc
     * @param _options
     */
    removeEventListener(eventName, actionFunc, _options = const_1.defaultEventListenerOptions) {
        const options = Object.assign(Object.assign({}, const_1.defaultEventListenerOptions), _options);
        const eventListeners = this.eventListenerMap[eventName];
        const thisEventListenerSignature = {
            actionFunc: actionFunc.toString(),
            options,
        };
        if (eventListeners) {
            const listenerIndex = eventListeners.findIndex(item => {
                const itemSignature = {
                    actionFunc: item.actionFunc.toString(),
                    options: item.options,
                };
                return (0, lodash_1.isEqual)(itemSignature, thisEventListenerSignature);
            });
            if (listenerIndex > -1) {
                eventListeners.splice(listenerIndex, 1);
            }
        }
    }
    /**
     * Trigger the event, the op stream will automatically trigger the event, or it can be triggered manually.
     * @param event
     * @param beforeApply
     * @param metaContext
     */
    dispatchEvent(event, beforeApply, metaContext = {}) {
        const eventListeners = this.eventListenerMap[event.eventName];
        if (eventListeners) {
            eventListeners.forEach(({ actionFunc, options }) => {
                if ((options === null || options === void 0 ? void 0 : options.realType) !== const_1.EventRealTypeEnums.ALL && (options === null || options === void 0 ? void 0 : options.realType) !== event.realType) {
                    return;
                }
                if ((options === null || options === void 0 ? void 0 : options.sourceType) !== const_1.EventSourceTypeEnums.ALL && (options === null || options === void 0 ? void 0 : options.sourceType) !== event.sourceType) {
                    return;
                }
                if (Boolean(options.beforeApply) !== beforeApply) {
                    return;
                }
                actionFunc(event.context, metaContext);
            });
        }
    }
    handleEvents(events, beforeApply, context = {}) {
        events.forEach(event => {
            this.dispatchEvent(event, beforeApply, context);
        });
    }
}
exports.EventManager = EventManager;


/***/ }),

/***/ 90259:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventCellUpdated = void 0;
const compute_manager_1 = __webpack_require__(73374);
const helper_1 = __webpack_require__(7087);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const resource_types_1 = __webpack_require__(27722);
const interface_1 = __webpack_require__(49073);
const const_1 = __webpack_require__(3221);
// @EventMeta(OPEventNameEnums.CellUpdated)
class OPEventCellUpdated extends interface_1.IAtomEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.CellUpdated;
        this.realType = const_1.EventRealTypeEnums.REAL;
        this.scope = resource_types_1.ResourceType.Datasheet;
    }
    test(opContext) {
        const { action, resourceId, resourceType } = opContext;
        if (resourceType !== resource_types_1.ResourceType.Datasheet) {
            return {
                pass: false,
                context: null,
            };
        }
        const { pass, recordId, fieldId } = (0, helper_1.testPath)(action.p, ['recordMap', ':recordId', 'data', ':fieldId']);
        return {
            pass,
            context: {
                recordId,
                fieldId,
                datasheetId: resourceId,
                action,
                change: {
                    from: action['od'],
                    to: action['oi'],
                }
            }
        };
    }
    /**
     * Entity events generate virtual events, deduplication.
     * This relies on meta and recordMap , so you need to pass in state.
     */
    computeEvent(eventBuffer, state) {
        const computeRefManager = (0, compute_manager_1.getComputeRefManager)(state);
        const computeEventContextQueue = [];
        const finalComputeEventContextQueue = [];
        const enqueueChecker = (key) => {
            if (!computeEventContextQueue.includes(key)) {
                computeEventContextQueue.push(key);
                finalComputeEventContextQueue.push(key);
            }
        };
        const addComputeEventContext = (context, state) => {
            const [datasheetId, recordId, fieldId] = context.split('-');
            // 1. A cell is updated, this cell corresponds to the field
            const updateCellField = store_1.Selectors.getField(state, fieldId, datasheetId);
            if (!updateCellField) {
                return;
            }
            // 2. All fields that depend on this field (these fields are all calculated fields)
            const fieldRefs = computeRefManager.refMap.get(`${datasheetId}-${fieldId}`);
            if (!(fieldRefs === null || fieldRefs === void 0 ? void 0 : fieldRefs.size)) {
                return;
            }
            fieldRefs.forEach(refId => {
                const [_datasheetId, _fieldId] = refId.split('-');
                const fieldMap = store_1.Selectors.getFieldMap(state, _datasheetId);
                // 3. Depends on one of the fields of this field
                const field = fieldMap[_fieldId];
                // FIXME: There is a fieldId that does not exist in fieldMap, 
                // the field has been deleted, and the reference relationship of refMap has not been updated in time.
                if (!field)
                    return;
                const isEventInSameDatasheet = _datasheetId === datasheetId;
                const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
                // 4. The table that triggers the event and the table that depends on this event are different tables, 
                // which can generate cross-table dependencies, which must be the lookup or link fields.
                switch (field.type) {
                    case types_1.FieldType.LookUp:
                        // 1. The link field that the lookup field depends on
                        const relatedLinkField = model_1.Field.bindContext(field, state).getRelatedLinkField();
                        if (!relatedLinkField) {
                            return;
                        }
                        let triggerRecIds = [];
                        // 2. The same table triggers a lookup update, which must be associated with the table. 
                        // The sibling field of the associated link field is itself
                        if (isEventInSameDatasheet) {
                            // Cause the lookup field to change, either the link field or the entity field being looked.
                            if (updateCellField.id === relatedLinkField.id) {
                                enqueueChecker(`${_datasheetId}-${recordId}-${_fieldId}`);
                            }
                            else {
                                // Since the entity field of the table association look changes. 
                                // The lookup fields of all records that reference this record are updated.
                                triggerRecIds = Object.keys(snapshot.recordMap).reduce((prev, _recordId) => {
                                    const linkCellValue = store_1.Selectors.getCellValue(state, snapshot, _recordId, relatedLinkField.id);
                                    if (linkCellValue && linkCellValue.includes(recordId)) {
                                        prev.push(_recordId);
                                    }
                                    return prev;
                                }, []);
                            }
                        }
                        else {
                            const brotherFieldId = relatedLinkField.property.brotherFieldId;
                            // 3. The recordIds affected by this cell update
                            triggerRecIds = store_1.Selectors.getCellValue(state, snapshot, recordId, brotherFieldId);
                        }
                        // TODO: The value of the link field cell must be null or an array. 
                        // Due to the existence of dirty data, we first judge whether it is an array type before processing it. Delete data after cleaning?
                        if (triggerRecIds && Array.isArray(triggerRecIds)) {
                            triggerRecIds.forEach(recId => {
                                enqueueChecker(`${_datasheetId}-${recId}-${_fieldId}`);
                            });
                        }
                        break;
                    case types_1.FieldType.Formula:
                        enqueueChecker(`${_datasheetId}-${recordId}-${_fieldId}`);
                        break;
                    case types_1.FieldType.Link:
                        // The LINK field is not a strictly calculated field, 
                        // and the title of the link field needs to be updated here. Temporarily treated as a calculated field
                        // The link field in the update table this time
                        const thisLinkFieldId = field.property.brotherFieldId;
                        if (!thisLinkFieldId)
                            return;
                        // Which records of the foreign key table depend on this record
                        const linkRecIds = store_1.Selectors.getCellValue(state, snapshot, recordId, thisLinkFieldId);
                        // FIXME: There may be a non-empty cv that is not an array here. Causes the following code to have problems, first compatible.
                        if (linkRecIds && Array.isArray(linkRecIds)) {
                            linkRecIds.forEach(recId => {
                                enqueueChecker(`${_datasheetId}-${recId}-${_fieldId}`);
                            });
                        }
                        break;
                    default:
                        // TODO: Include creation time, creator, update time, update person, 
                        // and auto-increment numbers into event management. 10.13 Modifications after launch
                        console.warn('! ' + `Unknown computed field type: ${field.type}`);
                    // throw new Error(`unsupported field type: ${field.type}`);
                }
            });
        };
        // The context from which the entity event came
        eventBuffer.forEach(({ context }) => {
            const { datasheetId, recordId, fieldId } = context;
            const key = `${datasheetId}-${recordId}-${fieldId}`;
            addComputeEventContext(key, state);
        });
        // The context from which the virtual event came
        while (computeEventContextQueue.length) {
            const context = computeEventContextQueue[0];
            computeEventContextQueue.shift();
            addComputeEventContext(context, state);
        }
        // After set deduplication. Inside the computeRef is the update of the calculation cell that will be triggered by the update of the entity cell.
        /**
         * !!! The collection continues to push new elements into the collection during the loop. New elements also appear in this cycle.
         * const aset = new Set([1,2,3])
         * aset.forEach(i=> {
         *   console.log(i);
         *   if(i====3){
         *     aset.add(4)
         *   }
         * })
         * output: 1 2 3 4
         * Here, when the signal is calculated in a loop, the event will be triggered recursively,
         * and the event will push the signal into the collection. until the signal is empty.
         * In theory, in the absence of circular references, there will be no infinite loop.
         */
        const res = [];
        finalComputeEventContextQueue.forEach(context => {
            const [datasheetId, recordId, fieldId] = context.split('-');
            res.push({
                eventName: const_1.OPEventNameEnums.CellUpdated,
                context: {
                    datasheetId, recordId, fieldId,
                },
                atomType: const_1.EventAtomTypeEnums.ATOM,
                realType: const_1.EventRealTypeEnums.VIRTUAL,
                sourceType: const_1.EventSourceTypeEnums.ALL,
                scope: this.scope,
            });
        });
        return res;
    }
}
exports.OPEventCellUpdated = OPEventCellUpdated;


/***/ }),

/***/ 66275:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventFieldUpdated = void 0;
const event_manager_1 = __webpack_require__(30485);
const types_1 = __webpack_require__(73578);
const interface_1 = __webpack_require__(49073);
const const_1 = __webpack_require__(3221);
class OPEventFieldUpdated extends interface_1.IAtomEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.FieldUpdated;
        this.realType = const_1.EventRealTypeEnums.REAL;
        this.scope = types_1.ResourceType.Datasheet;
    }
    test({ action, resourceId }) {
        const { pass, fieldId } = (0, event_manager_1.testPath)(action.p, ['meta', 'fieldMap', ':fieldId']);
        return {
            pass,
            context: {
                fieldId,
                datasheetId: resourceId,
            }
        };
    }
}
exports.OPEventFieldUpdated = OPEventFieldUpdated;


/***/ }),

/***/ 64633:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.datasheetEvent = void 0;
const cell_updated_1 = __webpack_require__(90259);
const field_updated_1 = __webpack_require__(66275);
const record_created_1 = __webpack_require__(44265);
const record_deleted_1 = __webpack_require__(7613);
const record_updated_1 = __webpack_require__(80894);
exports.datasheetEvent = {
    // Cell
    OPEventCellUpdated: cell_updated_1.OPEventCellUpdated,
    // OPEventMemberCellAdd,
    // OPEventMemberCellUpdate,
    // field
    OPEventFieldUpdated: field_updated_1.OPEventFieldUpdated,
    // Record
    OPEventRecordDeleted: record_deleted_1.OPEventRecordDeleted,
    OPEventRecordUpdated: record_updated_1.OPEventRecordUpdated,
    OPEventRecordCommentUpdated: record_updated_1.OPEventRecordCommentUpdated,
    OPEventRecordMetaUpdated: record_updated_1.OPEventRecordMetaUpdated,
    OPEventRecordCreated: record_created_1.OPEventRecordCreated,
};


/***/ }),

/***/ 44265:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventRecordCreated = void 0;
const event_manager_1 = __webpack_require__(30485);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const helper_1 = __webpack_require__(7087);
const interface_1 = __webpack_require__(49073);
const const_1 = __webpack_require__(3221);
class OPEventRecordCreated extends interface_1.IAtomEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.RecordCreated;
        this.realType = const_1.EventRealTypeEnums.REAL;
        this.scope = types_1.ResourceType.Datasheet;
    }
    test({ action, resourceId, op }) {
        const { pass, recordId } = (0, event_manager_1.testPath)(action.p, ['recordMap', ':recordId'], ('oi' in action));
        if (!pass) {
            return {
                pass: false,
                context: null
            };
        }
        // fill phase will overwrite diffFields
        const diffFields = Object.keys(action['oi'].data);
        return {
            pass,
            context: {
                datasheetId: resourceId,
                recordId,
                op,
                fields: action['oi'].data,
                diffFields
            }
        };
    }
    /**
     * Complete event context
     */
    fill(events, state) {
        return events.map(event => {
            var _a;
            if (event.eventName === const_1.OPEventNameEnums.RecordCreated) {
                const { datasheetId, recordId } = event.context;
                const fieldMap = store_1.Selectors.getFieldMap(state, datasheetId);
                const fieldKeys = Object.keys(fieldMap);
                event.context.datasheetName = (_a = store_1.Selectors.getDatasheet(state, datasheetId)) === null || _a === void 0 ? void 0 : _a.name;
                event.context.state = state;
                const { fields, eventFields } = (0, helper_1.transformOpFields)({
                    recordData: event.context.fields,
                    state: state,
                    datasheetId,
                    recordId,
                });
                event.context.eventFields = eventFields;
                event.context.fields = fields;
                // When a new record is added, all fields are changed from scratch. This diffFields should contain all fields.
                event.context.diffFields = fieldKeys;
            }
            return event;
        });
    }
}
exports.OPEventRecordCreated = OPEventRecordCreated;


/***/ }),

/***/ 7613:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventRecordDeleted = void 0;
const const_1 = __webpack_require__(3221);
const helper_1 = __webpack_require__(7087);
const resource_types_1 = __webpack_require__(27722);
const interface_1 = __webpack_require__(49073);
class OPEventRecordDeleted extends interface_1.IAtomEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.RecordDeleted;
        this.realType = const_1.EventRealTypeEnums.REAL;
        this.scope = resource_types_1.ResourceType.Datasheet;
    }
    test(args) {
        const { action, resourceId } = args;
        const { pass, recordId } = (0, helper_1.testPath)(action.p, ['recordMap', ':recordId'], action.n === 'OD');
        return {
            pass,
            context: {
                datasheetId: resourceId,
                recordId,
            }
        };
    }
}
exports.OPEventRecordDeleted = OPEventRecordDeleted;


/***/ }),

/***/ 80894:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventRecordUpdated = exports.OPEventRecordCommentUpdated = exports.OPEventRecordMetaUpdated = void 0;
const event_manager_1 = __webpack_require__(30485);
const lodash_1 = __webpack_require__(46517);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const interface_1 = __webpack_require__(49073);
const const_1 = __webpack_require__(3221);
class OPEventRecordMetaUpdated extends interface_1.IAtomEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.RecordMetaUpdated;
        this.realType = event_manager_1.EventRealTypeEnums.REAL;
        this.scope = types_1.ResourceType.Datasheet;
    }
    test({ action, resourceId }) {
        const { pass, recordId } = (0, event_manager_1.testPath)(action.p, ['recordMap', ':recordId', 'recordMeta']);
        return {
            pass,
            context: {
                datasheetId: resourceId,
                recordId,
                action,
            }
        };
    }
}
exports.OPEventRecordMetaUpdated = OPEventRecordMetaUpdated;
class OPEventRecordCommentUpdated {
    constructor() {
        this.eventName = const_1.OPEventNameEnums.RecordCommentUpdated;
        this.realType = event_manager_1.EventRealTypeEnums.REAL;
        this.scope = types_1.ResourceType.Datasheet;
        this.atomType = event_manager_1.EventAtomTypeEnums.ATOM;
    }
    test(opContext, _sourceType) {
        const { action, resourceId } = opContext;
        const { pass, recordId } = (0, event_manager_1.testPath)(action.p, ['recordMap', ':recordId', 'comments', ':commentIndex']);
        return {
            pass: pass,
            context: {
                datasheetId: resourceId,
                recordId: recordId,
                action,
            }
        };
    }
}
exports.OPEventRecordCommentUpdated = OPEventRecordCommentUpdated;
class OPEventRecordUpdated extends interface_1.ICombEventType {
    constructor() {
        super(...arguments);
        this.eventName = const_1.OPEventNameEnums.RecordUpdated;
        this.realType = event_manager_1.EventRealTypeEnums.REAL;
        this.scope = types_1.ResourceType.Datasheet;
        this.acceptEventNames = [const_1.OPEventNameEnums.CellUpdated];
    }
    comb(events) {
        const res = [];
        const eventBuffer = events.filter(event => this.acceptEventNames.includes(event.eventName));
        const groupEvents = (0, lodash_1.groupBy)(eventBuffer, ({ context }) => {
            const { datasheetId, recordId } = context;
            return `${datasheetId}-${recordId}`;
        });
        Object.keys(groupEvents).forEach(dstRecordId => {
            const [datasheetId, recordId] = dstRecordId.split('-');
            // log all cell update events
            const events = groupEvents[dstRecordId];
            const recordChange = {};
            const diffFields = [];
            // console.log('comb events', events);
            events.forEach(event => {
                if (event.context.change) {
                    recordChange[event.context.fieldId] = event.context.change.to;
                }
                diffFields.push(event.context.fieldId);
            });
            res.push({
                eventName: const_1.OPEventNameEnums.RecordUpdated,
                context: {
                    datasheetId,
                    recordId,
                    fields: recordChange,
                    diffFields
                },
                scope: this.scope,
                realType: this.realType,
                atomType: this.atomType,
                sourceType: const_1.EventSourceTypeEnums.ALL,
            });
        });
        return res;
    }
    /**
     * When generating events through op, some fields need to be completed with the help of state context. Complete the event context here
     */
    fill(events, state) {
        return events.map(event => {
            var _a;
            if (event.eventName === const_1.OPEventNameEnums.RecordUpdated) {
                const { datasheetId, recordId } = event.context;
                event.context.datasheetName = (_a = store_1.Selectors.getDatasheet(state, datasheetId)) === null || _a === void 0 ? void 0 : _a.name;
                event.context.state = state;
                const { fields, eventFields } = (0, event_manager_1.transformOpFields)({
                    recordData: event.context.fields,
                    state: state,
                    datasheetId,
                    recordId
                });
                // This fields are used for trigger filter verification, where fieldValue is the cellValue from op
                event.context.fields = fields;
                // This eventFields is used for trigger output, where fieldValue is eventCV converted by cv
                event.context.eventFields = eventFields;
            }
            return event;
        });
    }
}
exports.OPEventRecordUpdated = OPEventRecordUpdated;


/***/ }),

/***/ 49073:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ICombEventType = exports.IAtomEventType = void 0;
const index_1 = __webpack_require__(23440);
class IAtomEventType {
    constructor() {
        this.atomType = index_1.EventAtomTypeEnums.ATOM;
    }
}
exports.IAtomEventType = IAtomEventType;
class ICombEventType {
    constructor() {
        this.atomType = index_1.EventAtomTypeEnums.COMB;
    }
}
exports.ICombEventType = ICombEventType;


/***/ }),

/***/ 7087:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transformOpFields = exports.shallowEqual = exports.testPath = exports.getResourceState = void 0;
const model_1 = __webpack_require__(61116);
// import 'reflect-metadata';
const store_1 = __webpack_require__(56791);
const resource_1 = __webpack_require__(37612);
const dashboard_1 = __webpack_require__(50101);
const form_1 = __webpack_require__(21532);
const widget_1 = __webpack_require__(86957);
const resource_types_1 = __webpack_require__(27722);
/**
 * Register event prototype decorator
 *
 * @EventMeta("RecordUpdated","ATOM")
 * class EventRecordUpdated {
 *  test(){
 *  }
 * }
 */
// export const EventMeta = (name: string, atomType: string = 'ATOM'): ClassDecorator => {
//   return (target: any) => {
//     Reflect.defineMetadata('name', name, target);
//     Reflect.defineMetadata('atomType', atomType, target);
//   };
// };
const getResourceState = (resourceId, resourceType, state) => {
    switch (resourceType) {
        case resource_types_1.ResourceType.Datasheet:
            return (0, resource_1.getDatasheet)(state, resourceId);
        case resource_types_1.ResourceType.Dashboard:
            return (0, dashboard_1.getDashboard)(state, resourceId);
        case resource_types_1.ResourceType.Widget:
            return (0, widget_1.getWidget)(state, resourceId);
        case resource_types_1.ResourceType.Form:
            return (0, form_1.getForm)(state, resourceId);
        default:
            return;
    }
};
exports.getResourceState = getResourceState;
/**
 * pathList = ["recordMap", "recGa2EHHKOTQ", "data", "fldBSXiPB3UQY"]
 * testPathList = ["recordMap", ":recordId", "data",":fieldId"]
 * return {
 *  pass:true,
 *  recordId:recGa2EHHKOTQ,
 *  fieldId:fldBSXiPB3UQY
 * }
 */
const testPath = (pathList, testPathList, flag = true) => {
    const NOT_PASS_RES = {
        pass: false,
    };
    if (!flag || pathList.length !== testPathList.length) {
        return NOT_PASS_RES;
    }
    const res = { pass: true };
    for (let i = 0; i < testPathList.length; i++) {
        if (testPathList[i].startsWith(':')) {
            const pathKey = testPathList[i].slice(1);
            res[pathKey] = pathList[i];
            continue;
        }
        if (pathList[i] !== testPathList[i]) {
            return NOT_PASS_RES;
        }
    }
    return res;
};
exports.testPath = testPath;
const shallowEqual = (objA, objB) => {
    if (objA === objB) {
        return true;
    }
    if (typeof objA !== 'object' || objA === null ||
        typeof objB !== 'object' || objB === null) {
        return false;
    }
    const keysA = Object.keys(objA);
    const keysB = Object.keys(objB);
    if (keysA.length !== keysB.length) {
        return false;
    }
    // Test for A's keys different from B.
    for (const key of keysA) {
        if (!Object.hasOwnProperty.call(objB, key) ||
            !Object.is(objA[key], objB[key])) {
            return false;
        }
    }
    return true;
};
exports.shallowEqual = shallowEqual;
const transformOpFields = (props) => {
    const { state, datasheetId, recordData, recordId } = props;
    const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
    const eventFields = {};
    const newFields = Object.assign({}, recordData);
    Object.keys(snapshot === null || snapshot === void 0 ? void 0 : snapshot.meta.fieldMap).forEach(fieldId => {
        const field = snapshot.meta.fieldMap[fieldId];
        let cellValue = recordData[fieldId];
        // FIXME: Only fill in what is not, there is a problem here. 
        // The change to of op is the latest, and the one obtained from the database search may be old. subject to op
        // There is no field value in recordData, indicating that it is a calculated field. 
        // Whether it is updated or created, it needs to be updated and recalculated.
        if (!recordData.hasOwnProperty(fieldId)) {
            cellValue = store_1.Selectors.getCellValue(state, snapshot, recordId, fieldId);
            newFields[fieldId] = cellValue;
        }
        const fieldEventValue = model_1.Field.bindContext(field, state).cellValueToOpenValue(cellValue);
        eventFields[fieldId] = fieldEventValue;
    });
    return {
        fields: newFields,
        eventFields
    };
};
exports.transformOpFields = transformOpFields;


/***/ }),

/***/ 30485:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(57155), exports);
__exportStar(__webpack_require__(51661), exports);
__exportStar(__webpack_require__(64633), exports);
__exportStar(__webpack_require__(7087), exports);
__exportStar(__webpack_require__(3221), exports);
__exportStar(__webpack_require__(90534), exports);
__exportStar(__webpack_require__(67995), exports);


/***/ }),

/***/ 59924:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 30112:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 57155:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(59924), exports);
__exportStar(__webpack_require__(92408), exports);
__exportStar(__webpack_require__(30112), exports);
__exportStar(__webpack_require__(71843), exports);


/***/ }),

/***/ 92408:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 71843:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 67995:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OP2Event = void 0;
const types_1 = __webpack_require__(73578);
const const_1 = __webpack_require__(3221);
class OP2Event {
    constructor(watchedEvents) {
        this.eventNameClsInstanceMap = watchedEvents.reduce((res, event) => {
            res[event] = new const_1.EventNameClsMap[event]();
            return res;
        }, {});
    }
    getOpsResources(events) {
        const res = new Map();
        events.forEach(event => {
            // datasheet resources
            if (event.scope === types_1.ResourceType.Datasheet) {
                const { datasheetId, recordId } = event.context;
                if (res.has(datasheetId)) {
                    recordId && res.get(datasheetId).push(recordId);
                }
                else {
                    recordId && res.set(datasheetId, [recordId]);
                }
            }
        });
        return res;
    }
    parseOps2Events(changesets) {
        const events = [];
        changesets.forEach(({ operations, resourceId, resourceType }) => {
            operations.forEach(op => {
                events.push(...this.parseOp2Event(op, resourceId, resourceType));
            });
        });
        return events;
    }
    makeVirtualEvents(events, state) {
        // For example: an update of field A causes an update of field B
        const virtualEvents = [];
        Object.keys(this.eventNameClsInstanceMap).forEach((eventName) => {
            const eventClsInstance = this.eventNameClsInstanceMap[eventName];
            const _events = events.filter(event => event.eventName === eventName);
            // The field update event only has the processing logic of the calculation event
            if (eventName === const_1.OPEventNameEnums.CellUpdated) {
                virtualEvents.push(...eventClsInstance.computeEvent(_events, state));
            }
        });
        return virtualEvents;
    }
    makeCombEvents(events) {
        const res = [];
        Object.entries(this.eventNameClsInstanceMap).forEach(eventCls => {
            const [, eventClsInstance] = eventCls;
            if (eventClsInstance.atomType === const_1.EventAtomTypeEnums.COMB) {
                res.push(...eventClsInstance.comb(events));
            }
        });
        return res;
    }
    fillEvents(events, state) {
        return Object.entries(this.eventNameClsInstanceMap).reduce((res, [, eventClsInstance]) => {
            if (eventClsInstance.fill) {
                res = eventClsInstance.fill(res, state);
            }
            return res;
        }, events);
    }
    /**
     * op to real atomic event
     */
    parseOp2Event(op, resourceId, resourceType) {
        const events = [];
        op.actions.forEach(action => {
            const opContext = { op, action, resourceId, resourceType };
            Object.keys(this.eventNameClsInstanceMap).forEach((eventName) => {
                const eventClsInstance = this.eventNameClsInstanceMap[eventName];
                if (eventClsInstance.scope !== resourceType || eventClsInstance.atomType !== const_1.EventAtomTypeEnums.ATOM) {
                    return;
                }
                const { pass, context } = eventClsInstance === null || eventClsInstance === void 0 ? void 0 : eventClsInstance.test(opContext);
                if (pass) {
                    events.push({
                        eventName,
                        realType: const_1.EventRealTypeEnums.REAL,
                        atomType: const_1.EventAtomTypeEnums.ATOM,
                        scope: resourceType,
                        context,
                        sourceType: op.cmd === const_1.REMOTE_NEW_CHANGES ? const_1.EventSourceTypeEnums.REMOTE : const_1.EventSourceTypeEnums.LOCAL,
                    });
                }
            });
        });
        return events;
    }
}
exports.OP2Event = OP2Event;


/***/ }),

/***/ 90534:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OPEventManager = void 0;
const event_manager_1 = __webpack_require__(51661);
class OPEventManager extends event_manager_1.EventManager {
    constructor(options) {
        super();
        this.options = options;
    }
    getAllEvents(realAtomEvents, virtualAtomEvents) {
        const { op2Event, options: { enableCombEvent } } = this.options;
        let combEvents = [];
        const atomEvents = [...realAtomEvents, ...virtualAtomEvents];
        if (enableCombEvent) {
            combEvents = op2Event.makeCombEvents(atomEvents);
        }
        const events = [...atomEvents, ...combEvents];
        // console.log('events', events);
        return events;
    }
    asyncHandleChangesets(changesets) {
        return __awaiter(this, void 0, void 0, function* () {
            const { op2Event, options: { enableVirtualEvent, enableEventComplete, enableCombEvent }, getState } = this.options;
            const realAtomEvents = op2Event.parseOps2Events(changesets);
            let virtualAtomEvents = [];
            let state;
            if (enableVirtualEvent) {
                const resourceMap = op2Event.getOpsResources(realAtomEvents);
                state = yield getState(resourceMap);
                virtualAtomEvents = op2Event.makeVirtualEvents(realAtomEvents, state);
            }
            if (enableEventComplete) {
                if (!state) {
                    const resourceMap = op2Event.getOpsResources(realAtomEvents);
                    state = yield getState(resourceMap);
                }
                let combEvents = [];
                const atomEvents = [...realAtomEvents, ...virtualAtomEvents];
                if (enableCombEvent) {
                    combEvents = op2Event.makeCombEvents(atomEvents);
                }
                const events = [...atomEvents, ...combEvents];
                return op2Event.fillEvents(events, state);
            }
            return this.getAllEvents(realAtomEvents, virtualAtomEvents);
        });
    }
    handleChangesets(changesets) {
        const { op2Event, options: { enableVirtualEvent }, getState } = this.options;
        const realAtomEvents = op2Event.parseOps2Events(changesets);
        let virtualAtomEvents = [];
        if (enableVirtualEvent) {
            const resourceMap = op2Event.getOpsResources(realAtomEvents);
            const state = getState(resourceMap);
            virtualAtomEvents = op2Event.makeVirtualEvents(realAtomEvents, state);
        }
        return this.getAllEvents(realAtomEvents, virtualAtomEvents);
    }
}
exports.OPEventManager = OPEventManager;


/***/ }),

/***/ 62625:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WidgetApiInterface = exports.ApiInterface = exports.WidgetApi = exports.FormApi = exports.IApi = exports.DatasheetApi = exports.Api = exports.Url = exports.DashboardApi = void 0;
// core/api is a compatible layer after modularize
const Api = __importStar(__webpack_require__(38987));
exports.Api = Api;
const Url = __importStar(__webpack_require__(28215));
exports.Url = Url;
const DatasheetApi = __importStar(__webpack_require__(68615));
exports.DatasheetApi = DatasheetApi;
const IApi = __importStar(__webpack_require__(82193));
exports.IApi = IApi;
const FormApi = __importStar(__webpack_require__(53403));
exports.FormApi = FormApi;
const WidgetApi = __importStar(__webpack_require__(25265));
exports.WidgetApi = WidgetApi;
const ApiInterface = __importStar(__webpack_require__(82193));
exports.ApiInterface = ApiInterface;
const WidgetApiInterface = __importStar(__webpack_require__(38856));
exports.WidgetApiInterface = WidgetApiInterface;
exports.DashboardApi = __importStar(__webpack_require__(82817));
__exportStar(__webpack_require__(22517), exports);


/***/ }),

/***/ 47511:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.t = exports.getLanguage = exports.Strings = void 0;
/*
 * read strings.auto.json,  go translation
 */
const i18n_1 = __webpack_require__(30180);
__exportStar(__webpack_require__(71920), exports);
// String.key will return key, for compatibility
exports.Strings = new Proxy({}, {
    get: function (_target, key) {
        return key;
    },
});
const _global = global || window;
function getLanguage() {
    var _a, _b;
    const language = typeof _global == 'object' && _global.__initialization_data__ && _global.__initialization_data__.locale;
    const defaultLang = (typeof _global == 'object' && ((_b = (_a = _global.__initialization_data__) === null || _a === void 0 ? void 0 : _a.envVars) === null || _b === void 0 ? void 0 : _b.SYSTEM_CONFIGURATION_DEFAULT_LANGUAGE)) || 'zh-CN';
    return language || defaultLang;
}
exports.getLanguage = getLanguage;
__webpack_require__(7226);
const rewriteI18nForEdition = () => {
    var _a;
    for (const k in _global.apitable_i18n) {
        if ((_a = _global.apitable_i18n_edition) === null || _a === void 0 ? void 0 : _a[k]) {
            _global.apitable_i18n[k] = Object.assign(Object.assign({}, _global.apitable_i18n[k]), _global.apitable_i18n_edition[k]);
        }
    }
};
rewriteI18nForEdition();
// global singleton of I18N
const i18n = i18n_1.I18N.createByLanguagePacks(_global.apitable_i18n, getLanguage());
function t(stringKey, options = null, isPlural = false) {
    return i18n.getText(stringKey, options, isPlural);
}
exports.t = t;


/***/ }),

/***/ 6021:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(17506), exports);
__exportStar(__webpack_require__(83739), exports);
__exportStar(__webpack_require__(25821), exports);
__exportStar(__webpack_require__(453), exports);
__exportStar(__webpack_require__(2187), exports);
__exportStar(__webpack_require__(78571), exports);
__exportStar(__webpack_require__(82155), exports);
__exportStar(__webpack_require__(97802), exports);
__exportStar(__webpack_require__(34885), exports);
__exportStar(__webpack_require__(32885), exports);
__exportStar(__webpack_require__(36628), exports);
__exportStar(__webpack_require__(5703), exports);
__exportStar(__webpack_require__(58937), exports);
__exportStar(__webpack_require__(43090), exports);
__exportStar(__webpack_require__(38512), exports);
__exportStar(__webpack_require__(77638), exports);
__exportStar(__webpack_require__(93270), exports);
__exportStar(__webpack_require__(34782), exports);
__exportStar(__webpack_require__(19835), exports);
__exportStar(__webpack_require__(66946), exports);
__exportStar(__webpack_require__(57851), exports);


/***/ }),

/***/ 56791:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StoreActions = exports.Selectors = exports.Reducers = exports.ActionConstants = void 0;
const ActionConstants = __importStar(__webpack_require__(86256));
exports.ActionConstants = ActionConstants;
const Reducers = __importStar(__webpack_require__(12214));
exports.Reducers = Reducers;
const Selectors = __importStar(__webpack_require__(964));
exports.Selectors = Selectors;
const StoreActions = __importStar(__webpack_require__(6021));
exports.StoreActions = StoreActions;
__exportStar(__webpack_require__(37848), exports);
__exportStar(__webpack_require__(12690), exports);


/***/ }),

/***/ 37848:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(68044), exports);
__exportStar(__webpack_require__(176), exports);
__exportStar(__webpack_require__(95537), exports);
__exportStar(__webpack_require__(75521), exports);
__exportStar(__webpack_require__(3860), exports);
__exportStar(__webpack_require__(9551), exports);
__exportStar(__webpack_require__(46827), exports);
__exportStar(__webpack_require__(55655), exports);
__exportStar(__webpack_require__(90856), exports);
__exportStar(__webpack_require__(94782), exports);
__exportStar(__webpack_require__(36628), exports);
__exportStar(__webpack_require__(10763), exports);
__exportStar(__webpack_require__(3195), exports);
__exportStar(__webpack_require__(94819), exports);
__exportStar(__webpack_require__(68044), exports);
__exportStar(__webpack_require__(80356), exports);
__exportStar(__webpack_require__(99855), exports);
__exportStar(__webpack_require__(4259), exports);
__exportStar(__webpack_require__(33130), exports);
__exportStar(__webpack_require__(67540), exports);
__exportStar(__webpack_require__(59509), exports);
__exportStar(__webpack_require__(39974), exports);
__exportStar(__webpack_require__(64455), exports);
__exportStar(__webpack_require__(76155), exports);


/***/ }),

/***/ 12214:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rootReducers = exports.onlyResourceReducers = exports.collaborators = exports.unitInfo = exports.pageParams = exports.mirrorMap = void 0;
const redux_1 = __webpack_require__(86695);
const resource_1 = __webpack_require__(99054);
const dashboard_1 = __webpack_require__(36935);
const page_params_1 = __webpack_require__(72503);
Object.defineProperty(exports, "pageParams", ({ enumerable: true, get: function () { return page_params_1.pageParams; } }));
const catalog_tree_1 = __webpack_require__(94004);
const user_1 = __webpack_require__(69837);
const space_1 = __webpack_require__(57754);
const share_1 = __webpack_require__(46601);
const address_list_1 = __webpack_require__(7551);
const space_member_manage_1 = __webpack_require__(22810);
const invite_1 = __webpack_require__(74283);
const space_permission_manage_1 = __webpack_require__(88909);
const notification_1 = __webpack_require__(83049);
// @ts-ignore
const enterprise_1 = __webpack_require__(36628);
const toolbar_1 = __webpack_require__(1025);
const right_pane_1 = __webpack_require__(68859);
const template_centre_1 = __webpack_require__(66072);
const unit_info_1 = __webpack_require__(42487);
Object.defineProperty(exports, "unitInfo", ({ enumerable: true, get: function () { return unit_info_1.unitInfo; } }));
const mirror_1 = __webpack_require__(48485);
Object.defineProperty(exports, "mirrorMap", ({ enumerable: true, get: function () { return mirror_1.mirrorMap; } }));
const labs_1 = __webpack_require__(40034);
const subscriptions_1 = __webpack_require__(73472);
const record_vision_mode_1 = __webpack_require__(62385);
const preview_file_1 = __webpack_require__(96515);
const embed_1 = __webpack_require__(27600);
const collaborators_1 = __webpack_require__(29305);
Object.defineProperty(exports, "collaborators", ({ enumerable: true, get: function () { return collaborators_1.collaborators; } }));
exports.onlyResourceReducers = (0, redux_1.combineReducers)({
    isStateRoot: () => true,
    datasheetMap: resource_1.datasheetMap,
    widgetMap: resource_1.widgetMap,
    dashboardMap: dashboard_1.dashboardMap,
    formMap: resource_1.formMap,
    pageParams: page_params_1.pageParams,
    space: space_1.space,
    unitInfo: unit_info_1.unitInfo,
    embedInfo: embed_1.embedInfo
});
exports.rootReducers = (0, redux_1.combineReducers)({
    isStateRoot: () => true,
    recordVision: record_vision_mode_1.recordVision,
    theme: resource_1.theme,
    datasheetMap: resource_1.datasheetMap,
    mirrorMap: mirror_1.mirrorMap,
    widgetMap: resource_1.widgetMap,
    dashboardMap: dashboard_1.dashboardMap,
    formMap: resource_1.formMap,
    pageParams: page_params_1.pageParams,
    catalogTree: catalog_tree_1.catalogTree,
    user: user_1.user,
    addressList: address_list_1.addressList,
    spaceMemberManage: space_member_manage_1.spaceMemberManage,
    space: space_1.space,
    share: share_1.share,
    invite: invite_1.invite,
    spacePermissionManage: space_permission_manage_1.spacePermissionManage,
    notification: notification_1.notification,
    hooks: enterprise_1.guide,
    toolbar: toolbar_1.toolbar,
    rightPane: right_pane_1.rightPane,
    billing: enterprise_1.billing,
    templateCentre: template_centre_1.templateCentre,
    unitInfo: unit_info_1.unitInfo,
    labs: labs_1.labs,
    subscriptions: subscriptions_1.subscriptions,
    previewFile: preview_file_1.previewFile,
    embedInfo: embed_1.embedInfo
});


/***/ }),

/***/ 964:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(74223), exports);
__exportStar(__webpack_require__(21711), exports);
__exportStar(__webpack_require__(35568), exports);
__exportStar(__webpack_require__(36628), exports);
__exportStar(__webpack_require__(38985), exports);
__exportStar(__webpack_require__(37612), exports);
__exportStar(__webpack_require__(42600), exports);
__exportStar(__webpack_require__(26383), exports);
__exportStar(__webpack_require__(96380), exports);
__exportStar(__webpack_require__(98735), exports);


/***/ }),

/***/ 32352:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ROLLUP_KEY_WORDS = void 0;
// reserved keyword: values are used to rollup the lookup field
exports.ROLLUP_KEY_WORDS = 'values';


/***/ }),

/***/ 56497:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ParamsCountError = exports.ParamsErrorType = void 0;
const i18n_1 = __webpack_require__(47511);
/**
 * Params Error Type, used to identify the error type and error message
 */
var ParamsErrorType;
(function (ParamsErrorType) {
    ParamsErrorType[ParamsErrorType["NotEquals"] = 0] = "NotEquals";
    ParamsErrorType[ParamsErrorType["AtLeastCount"] = 1] = "AtLeastCount";
})(ParamsErrorType = exports.ParamsErrorType || (exports.ParamsErrorType = {}));
class ParamsCountError extends Error {
    constructor(type, paramsName, paramsCount) {
        // ideally, don't translation in `super` constructor
        // for compatibility of front-end i18n messages
        super(ParamsCountError.parseI18NMessage(type, paramsName, paramsCount));
        // Set the prototype explicitly.
        Object.setPrototypeOf(this, ParamsCountError.prototype);
        this._type = type;
        this._paramsName = paramsName;
        this._paramsCount = paramsCount;
    }
    static parseI18NMessage(type, paramsName, paramsCount) {
        let errorMessage;
        switch (type) {
            case ParamsErrorType.NotEquals:
                errorMessage = (0, i18n_1.t)(i18n_1.Strings.function_validate_params_count_at_least, {
                    name: paramsName,
                    count: paramsCount
                });
                break;
            case ParamsErrorType.AtLeastCount:
                errorMessage = (0, i18n_1.t)(i18n_1.Strings.function_validate_params_count_at_least, {
                    name: paramsName,
                    count: paramsCount,
                });
                break;
        }
        return errorMessage;
    }
    get type() {
        return this._type;
    }
    get paramsName() {
        return this._paramsName;
    }
    get paramsCount() {
        return this._paramsCount;
    }
}
exports.ParamsCountError = ParamsCountError;


/***/ }),

/***/ 24777:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelfRefError = void 0;
const i18n_1 = __webpack_require__(47511);
/**
 * The error for formula expression parser
 * references the column itself.
 */
class SelfRefError extends Error {
    constructor() {
        // ideally, don't translation in `super` constructor
        // for compatibility of front-end i18n messages
        super(SelfRefError.parseI18NMessage());
        // Set the prototype explicitly.
        Object.setPrototypeOf(this, SelfRefError.prototype);
    }
    static parseI18NMessage() {
        return (0, i18n_1.t)(i18n_1.Strings.function_err_no_ref_self_column);
    }
}
exports.SelfRefError = SelfRefError;


/***/ }),

/***/ 80826:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UnitError = void 0;
const i18n_1 = __webpack_require__(47511);
class UnitError extends Error {
    constructor(unitStr) {
        // ideally, don't translation in `super` constructor
        // for compatibility of front-end i18n messages
        super(UnitError.parseI18NMessage(unitStr));
        // Set the prototype explicitly.
        Object.setPrototypeOf(this, UnitError.prototype);
        this._unitStr = unitStr;
    }
    static parseI18NMessage(unitStr) {
        return (0, i18n_1.t)(i18n_1.Strings.function_err_wrong_unit_str, {
            unitStr,
        });
    }
    get unitStr() {
        return this._unitStr;
    }
}
exports.UnitError = UnitError;


/***/ }),

/***/ 98844:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.expressionTransform = exports.evaluate = exports.parse = exports.ExpCache = void 0;
const parser_1 = __webpack_require__(83074);
const interpreter_1 = __webpack_require__(99139);
const store_1 = __webpack_require__(56791);
const lexer_1 = __webpack_require__(30996);
const selectors_1 = __webpack_require__(964);
const model_1 = __webpack_require__(61116);
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
const config_1 = __webpack_require__(77511);
const consts_1 = __webpack_require__(32352);
function resolverWrapper(context) {
    /**
     * The role of the resolver is, given a fieldId, get the value from the context according to the string
     *params
     * @value field ID
     * @originValue: whether to return the value of the original cell
     */
    return (fieldId) => {
        /**
         * Check for reserved keywords when formulas are run in the lookUp field.
         * When the keyword is hit, return LookUpField's cellValueArray instead of cellValue
         */
        const hostField = context.field;
        const state = context.state;
        // TODO: The first phase of column permissions,
        // because the middle layer does not actively push data,
        // and getFieldMap actively masks the data, so here we temporarily use the datasheet to get the fieldmap directly
        const datasheet = (0, selectors_1.getDatasheet)(state, context.field.property.datasheetId);
        const fieldMap = datasheet.snapshot.meta.fieldMap;
        // const fieldMap = getFieldMap(state, context.field.property.datasheetId)!;
        if (hostField.type === types_1.FieldType.LookUp && fieldId === consts_1.ROLLUP_KEY_WORDS) {
            const flatCellValue = model_1.LookUpField.bindContext(hostField, state).getFlatCellValue(context.record.id, true);
            return model_1.LookUpField.bindContext(hostField, state).cellValueToArray(flatCellValue);
        }
        const fieldPermissionMap = store_1.Selectors.getFieldPermissionMap(state, datasheet.id);
        const fieldRole = store_1.Selectors.getFieldRoleByFieldId(fieldPermissionMap, fieldId);
        const field = fieldMap[fieldId];
        if (!field && !fieldRole) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.view_field_search_not_found_tip, {
                value: fieldId,
            }));
        }
        const record = context.record;
        const recordSnapshot = { meta: { fieldMap: fieldMap }, recordMap: { [record.id]: record } };
        const cellValue = (0, selectors_1.getCellValue)(state, recordSnapshot, record.id, fieldId, false, datasheet.id, true);
        // TODO what if field is undefined?
        // String type fields need special treatment. Convert Segment|id type to pure string;
        const fieldBasicValueType = model_1.Field.bindContext(field, state).basicValueType;
        // Currently "", [], false will be converted to null when getCellValue,
        // in order to ensure the correct calculation result of the formula, the boolean type needs to be converted null => false
        if (fieldBasicValueType === types_1.BasicValueType.Boolean) {
            return Boolean(cellValue);
        }
        if (fieldBasicValueType === types_1.BasicValueType.String) {
            // TODO what if field is undefined?
            return model_1.Field.bindContext(field, state).cellValueToString(cellValue);
        }
        if (fieldBasicValueType === types_1.BasicValueType.Array) {
            // TODO what if field is undefined?
            return model_1.Field.bindContext(field, state).cellValueToArray(cellValue);
        }
        return cellValue;
    };
}
// The buffer for the calculation result of the formula field. The input value is unchanged and does not need to be recalculated
class ExpCache {
    static set(datasheetId, fieldId, exp, ast) {
        return this.cache.set(datasheetId + fieldId + exp, ast);
    }
    static get(datasheetId, fieldId, exp) {
        return this.cache.get(datasheetId + fieldId + exp);
    }
    static has(datasheetId, fieldId, exp) {
        return this.cache.has(datasheetId + fieldId + exp);
    }
    static del(datasheetId, fieldId, exp) {
        return this.cache.delete(datasheetId + fieldId + exp);
    }
    static clearAll() {
        return this.cache.clear();
    }
}
exports.ExpCache = ExpCache;
ExpCache.cache = new Map();
function parse(expression, context, updateCache) {
    if (!expression || !expression.trim()) {
        return {
            error: new Error((0, i18n_1.t)(i18n_1.Strings.function_content_empty)),
        };
    }
    const field = context.field;
    const datasheetId = (field && field.property && field.property.datasheetId) || '';
    if (!updateCache && ExpCache.has(datasheetId, field.id, expression)) {
        return ExpCache.get(datasheetId, field.id, expression);
    }
    const lexer = new lexer_1.FormulaExprLexer(expression);
    if (lexer.errors.length) {
        ExpCache.set(datasheetId, field.id, expression, { error: lexer.errors[0] });
    }
    else {
        try {
            const ast = new parser_1.FormulaExprParser(lexer, context).parse();
            ExpCache.set(datasheetId, field.id, expression, { lexer, ast });
        }
        catch (e) {
            ExpCache.set(datasheetId, field.id, expression, { error: e });
        }
    }
    return ExpCache.get(datasheetId, field.id, expression);
}
exports.parse = parse;
/**
 * Pass in the expression and context, enter row evaluation
 * rootNode is the root of the abstract syntax tree
 * The interpreter is used to access the abstract syntax tree
 * @export
 * @param {string} expression
 * @param {*} context
 * @param {Resolver} [resolver]
 * @returns {any}
 */
function evaluate(expression, context, shouldThrow, forceThrow) {
    if (!expression) {
        return null;
    }
    const state = context.state;
    const fieldMap = (0, selectors_1.getFieldMap)(state, context.field.property.datasheetId);
    const fExpr = parse(expression, { field: context.field, fieldMap, state });
    if ('error' in fExpr) {
        if (forceThrow) {
            throw fExpr.error;
        }
        return null;
    }
    // console.log(util.inspect(fExpr, { showHidden: false, depth: null }));
    try {
        const resolverFn = resolverWrapper(context);
        const interpreter = new interpreter_1.Interpreter(resolverFn, context);
        const result = interpreter.visit(fExpr.ast);
        // Error for NaN/Infinite/-Infinite values
        if ((0, lodash_1.isNumber)(result) && !(0, lodash_1.isFinite)(result)) {
            throw new basic_1.FormulaBaseError('NaN');
        }
        return result;
    }
    catch (e) {
        if (shouldThrow) {
            throw e;
        }
        return e;
    }
}
exports.evaluate = evaluate;
// Convert an expression with fieldName as variable name to an expression with fieldId as variable name
function expressionTransform(expression, { fieldMap, fieldPermissionMap }, to) {
    if (!expression) {
        return expression;
    }
    const lexer = new lexer_1.FormulaExprLexer(expression);
    if (!lexer) {
        return '';
    }
    // Convert fieldMap and use name as key
    let revertFieldMap = fieldMap;
    if (to === 'id') {
        revertFieldMap = {};
        for (const key in fieldMap) {
            const field = fieldMap[key];
            revertFieldMap[field.name] = field;
        }
    }
    return lexer.fullMatches.reduce((str, token) => {
        let tokenValue = token.value;
        function getPureTokenValue() {
            const pureTokenValue = token.value.replace(/\\(.)/g, '$1');
            const field = revertFieldMap[pureTokenValue];
            // Convert the variable name according to the to parameter
            if (!field) {
                return tokenValue;
            }
            if (to === 'id') {
                return field.id;
            }
            const name = field.name.replace(/[{}\\]/g, '\\$&');
            // When name contains illegal parameters, {} wrapping is required
            if (/[/+\-|=*/><()（）!&%'"“”‘’^`~,，\s]/.test(name)) {
                return `{${name}}`;
            }
            console.log((0, i18n_1.t)(i18n_1.Strings.not_found_field_the_name_as, {
                value: pureTokenValue,
            }));
            return name;
        }
        function getTokenValue() {
            const pureTokenValue = tokenValue.slice(1, -1).replace(/\\(.)/g, '$1');
            const field = revertFieldMap[pureTokenValue];
            const fieldRole = store_1.Selectors.getFieldRoleByFieldId(fieldPermissionMap, pureTokenValue);
            if (fieldRole === config_1.ConfigConstant.Role.None) {
                return `{${(0, i18n_1.t)(i18n_1.Strings.crypto_field)}}`;
            }
            // Convert the variable name according to the 'to' parameter
            if (field) {
                return to === 'id' ? `{${field.id}}` : `{${field.name.replace(/[{}\\]/g, '\\$&')}}`;
            }
            console.log((0, i18n_1.t)(i18n_1.Strings.not_found_field_the_name_as, {
                value: pureTokenValue,
            }));
            return tokenValue;
        }
        if (token.type === lexer_1.TokenType.PureValue) {
            tokenValue = getPureTokenValue();
        }
        if (token.type === lexer_1.TokenType.Value) {
            tokenValue = getTokenValue();
        }
        return str + tokenValue;
    }, '');
}
exports.expressionTransform = expressionTransform;


/***/ }),

/***/ 82382:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CountIf = exports.Countall = exports.Counta = exports.Count = exports.ArrayCompact = exports.ArrayFlatten = exports.ArrayUnique = exports.ArrayJoin = exports.flattenParams = void 0;
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const model_1 = __webpack_require__(61116);
const dayjs_1 = __importDefault(__webpack_require__(1635));
const i18n_1 = __webpack_require__(47511);
class ArrayFunc extends basic_1.FormulaFunc {
}
ArrayFunc.type = types_1.FormulaFuncType.Array;
ArrayFunc.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
function isArrayParam(params) {
    if (params.length !== 1) {
        return false;
    }
    if (params[0].node.valueType === types_1.BasicValueType.Array) {
        return true;
    }
    return false;
}
/**
 * Flatten the value of the parameter
 */
const flattenParams = (params) => {
    const value = params.reduce((prev, cur) => {
        const { value, node } = cur;
        if (cur.node.valueType === types_1.BasicValueType.Array) {
            const { field, context } = node;
            if (model_1.Field.bindContext(field, context.state).isComputed) {
                const v = model_1.Field.bindContext(field, context.state).arrayValueToArrayStringValueArray(value);
                return v != null ? [...prev, v] : prev;
            }
        }
        return value != null ? [...prev, value] : prev;
    }, []);
    return value.flat(Infinity);
};
exports.flattenParams = flattenParams;
var SymbolType;
(function (SymbolType) {
    SymbolType["Equal"] = "Equal";
    SymbolType["NotEqual"] = "NotEqual";
    SymbolType["Greater"] = "Greater";
    SymbolType["Less"] = "Less";
})(SymbolType || (SymbolType = {}));
class ArrayJoin extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func([valuesParam, separatorParam]) {
        const { value, node } = valuesParam;
        const separator = (separatorParam && separatorParam.value) || ', ';
        if (node.valueType === types_1.BasicValueType.Array) {
            const { field, context } = node;
            if (model_1.Field.bindContext(field, context.state).isComputed) {
                const v = model_1.Field.bindContext(field, context.state).arrayValueToArrayStringValueArray(value);
                return v === null || v === void 0 ? void 0 : v.join(separator);
            }
            return value === null || value === void 0 ? void 0 : value.join(separator);
        }
        return value;
    }
}
exports.ArrayJoin = ArrayJoin;
class ArrayUnique extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Array;
    }
    static func(params) {
        const flattenValue = (0, exports.flattenParams)(params);
        return [...new Set(flattenValue)];
    }
}
exports.ArrayUnique = ArrayUnique;
class ArrayFlatten extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Array;
    }
    static func(params) {
        return (0, exports.flattenParams)(params);
    }
}
exports.ArrayFlatten = ArrayFlatten;
class ArrayCompact extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Array;
    }
    static func(params) {
        const flattenValue = (0, exports.flattenParams)(params);
        return flattenValue.filter(v => v !== '');
    }
}
exports.ArrayCompact = ArrayCompact;
class Count extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const calc = (v) => typeof v === 'number' && !isNaN(v);
        if (isArrayParam(params)) {
            const innerValueType = params[0].node.innerValueType;
            if (innerValueType && innerValueType === types_1.BasicValueType.DateTime) {
                return 0;
            }
            if (!params[0].value) {
                return 0;
            }
            return params[0].value.filter(calc).length;
        }
        return params.filter(param => calc(param.value)).length;
    }
}
exports.Count = Count;
Count.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class Counta extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        // Due to how other platforms handle this function, false is also included in the range of nulls
        const calc = (v) => v != null && v !== '' && v !== false;
        if (isArrayParam(params)) {
            if (!params[0].value) {
                return 0;
            }
            return params[0].value.filter(calc).length;
        }
        return params.filter(param => calc(param.value)).length;
    }
}
exports.Counta = Counta;
class Countall extends ArrayFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        if (isArrayParam(params)) {
            if (params[0].value == null) {
                return 0;
            }
            return params[0].value.length;
        }
        return params.length;
    }
}
exports.Countall = Countall;
class CountIf extends ArrayFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.function_validate_params_count_at_least, {
                name: 'COUNTIF',
                count: 2,
            }));
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        var _a;
        const [{ node: rangeNode, value: range }, { node: conditionNode, value: condition }] = params;
        const symbol = ((_a = params[2]) === null || _a === void 0 ? void 0 : _a.value) || '=';
        const reg = /^(=)|(!=|！=)|(>)|(<)$/g;
        const finalSymbol = symbol.replace(reg, (_m, $1, $2, $3, $4) => {
            return ($1 && SymbolType.Equal) ||
                ($2 && SymbolType.NotEqual) ||
                ($3 && SymbolType.Greater) ||
                ($4 && SymbolType.Less) ||
                SymbolType.Equal;
        });
        if (range == null)
            return 0;
        if (rangeNode.valueType === types_1.BasicValueType.Array) {
            const filterTypes = [types_1.BasicValueType.String, types_1.BasicValueType.Number]; // special convertible type
            switch (finalSymbol) {
                case SymbolType.Equal: {
                    if (filterTypes.includes(rangeNode.innerValueType) && filterTypes.includes(conditionNode.valueType)) {
                        return range.filter(v => v == condition).length;
                    }
                    if (rangeNode.innerValueType !== conditionNode.valueType) {
                        return 0;
                    }
                    if (rangeNode.innerValueType === types_1.BasicValueType.DateTime && conditionNode.valueType === types_1.BasicValueType.DateTime) {
                        return range.filter(v => (0, dayjs_1.default)(v).valueOf() === (0, dayjs_1.default)(condition).valueOf()).length;
                    }
                    return range.filter(v => v === condition).length;
                }
                case SymbolType.NotEqual: {
                    if (filterTypes.includes(rangeNode.innerValueType) && filterTypes.includes(conditionNode.valueType)) {
                        return range.filter(v => v != condition).length;
                    }
                    if (rangeNode.innerValueType !== conditionNode.valueType) {
                        return range.length;
                    }
                    if (rangeNode.innerValueType === types_1.BasicValueType.DateTime && conditionNode.valueType === types_1.BasicValueType.DateTime) {
                        return range.filter(v => (0, dayjs_1.default)(v).valueOf() !== (0, dayjs_1.default)(condition).valueOf()).length;
                    }
                    return range.filter(v => v !== condition).length;
                }
                case SymbolType.Greater: {
                    if (filterTypes.includes(rangeNode.innerValueType) && filterTypes.includes(conditionNode.valueType)) {
                        return range.filter(v => v > condition).length;
                    }
                    if (rangeNode.innerValueType !== conditionNode.valueType) {
                        return 0;
                    }
                    if (rangeNode.innerValueType === types_1.BasicValueType.DateTime && conditionNode.valueType === types_1.BasicValueType.DateTime) {
                        return range.filter(v => (0, dayjs_1.default)(v).valueOf() > (0, dayjs_1.default)(condition).valueOf()).length;
                    }
                    return range.filter(v => v > condition).length;
                }
                case SymbolType.Less: {
                    if (filterTypes.includes(rangeNode.innerValueType) && filterTypes.includes(conditionNode.valueType)) {
                        return range.filter(v => v < condition).length;
                    }
                    if (rangeNode.innerValueType !== conditionNode.valueType) {
                        return 0;
                    }
                    if (rangeNode.innerValueType === types_1.BasicValueType.DateTime && conditionNode.valueType === types_1.BasicValueType.DateTime) {
                        return range.filter(v => (0, dayjs_1.default)(v).valueOf() < (0, dayjs_1.default)(condition).valueOf()).length;
                    }
                    return range.filter(v => v < condition).length;
                }
            }
        }
        else if (rangeNode.valueType === types_1.BasicValueType.String) {
            switch (finalSymbol) {
                case SymbolType.Equal: {
                    const filterTypes = [types_1.BasicValueType.String, types_1.BasicValueType.Number]; // special convertible type
                    if (filterTypes.includes(conditionNode.valueType)) {
                        return range.split(condition).length - 1;
                    }
                    return 0;
                }
                case SymbolType.NotEqual:
                    return 1;
                default:
                    return 0;
            }
        }
        return 0;
    }
}
exports.CountIf = CountIf;


/***/ }),

/***/ 51965:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isArrayTypeParam = exports.FormulaFunc = exports.getBlankValueByType = exports.FormulaBaseError = void 0;
const types_1 = __webpack_require__(73578);
// Equation error base class, error reporting mechanism for unified equations
class FormulaBaseError extends Error {
    constructor(message) {
        super();
        this.message = message ? '#Error: ' + message : '#Error!';
    }
}
exports.FormulaBaseError = FormulaBaseError;
const getBlankValueByType = function (type, value) {
    if (value == null) {
        return null;
    }
    switch (type) {
        case types_1.BasicValueType.Number: {
            return 0;
        }
        case types_1.BasicValueType.String: {
            return '';
        }
        case types_1.BasicValueType.Boolean: {
            return false;
        }
        default: {
            return null;
        }
    }
};
exports.getBlankValueByType = getBlankValueByType;
class FormulaFunc {
    /**
     * The function needs to check the parameter type and number in the stage of parsing the AST tree.
     * If it does not meet the needs of the function, directly throw new Error and bring a friendly prompt
     * Error throwing principle:
     * 1. If there are fewer required parameters, an error will be thrown, and if there are too many parameters, it will be ignored
     * 2. If the parameter type cannot be converted and ignored, throw an error
     * 3. The function name needs to be explicitly given in the error message
     * 4. The numbers in the error message need to use Arabic numerals such as: "3" instead of "three"
     */
    static validateParams(_params) {
        //
    }
    /**
       * @param params The parameter is optional.
       * When the parameter is not passed, the static default type is returned.
       * When passing parameters, different functions dynamically calculate the return type based on the parameter types.
       * Function return type, inferred directly from AstNode, no need to get the actual value
       */
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    // function body implementation
    static func(_params, _context) { return null; }
}
exports.FormulaFunc = FormulaFunc;
/**
  * The value type that the function parameter can accept.
  * If the parameter type is not in acceptValueType, it will be uniformly converted to string type by the interpreter.
  * If the parameter type is in acceptValueType, the original value will be returned, which will be handled by the function implementation.
  */
FormulaFunc.acceptValueType = new Set([types_1.BasicValueType.Boolean, types_1.BasicValueType.Number, types_1.BasicValueType.String]);
const isArrayTypeParam = (params) => {
    return params.length === 1 && Array.isArray(params[0].value);
};
exports.isArrayTypeParam = isArrayTypeParam;


/***/ }),

/***/ 6137:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LastModifiedTime = exports.CreatedTime = exports.SetTimeZone = exports.SetLocale = exports.DateTimeFormat = exports.DateTimeParse = exports.IsSame = exports.WeekNum = exports.DateStr = exports.TimeStr = exports.WorkDayDiff = exports.WorkDay = exports.IsAfter = exports.IsBefore = exports.ToNow = exports.FromNow = exports.Now = exports.Today = exports.DatetimeDiff = exports.DatetimeDiffUtil = exports.Dateadd = exports.Weekday = exports.Second = exports.Minute = exports.Hour = exports.Day = exports.Month = exports.Year = exports.getDayjs = void 0;
// TODO(remove eslint disable)
/* eslint-disable @typescript-eslint/naming-convention */
const dayjs_1 = __importStar(__webpack_require__(1635));
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const string_1 = __webpack_require__(92901);
const lexer_1 = __webpack_require__(30996);
const params_count_error_1 = __webpack_require__(56497);
const unit_error_1 = __webpack_require__(80826);
const quarterOfYear_1 = __importDefault(__webpack_require__(59205));
const weekOfYear_1 = __importDefault(__webpack_require__(59912));
const weekYear_1 = __importDefault(__webpack_require__(80130));
const dayOfYear_1 = __importDefault(__webpack_require__(98577));
const customParseFormat_1 = __importDefault(__webpack_require__(84125));
const localizedFormat_1 = __importDefault(__webpack_require__(67424));
const isoWeek_1 = __importDefault(__webpack_require__(89983));
const utc_1 = __importDefault(__webpack_require__(36619));
// list of supported internationalization (i18n)
__webpack_require__(4413);
__webpack_require__(95468);
__webpack_require__(26489);
__webpack_require__(15831);
__webpack_require__(17688); // French
__webpack_require__(48578); // Spanish
__webpack_require__(53178); // portuguese
__webpack_require__(19161); // Russian
__webpack_require__(17097); // Arabic
__webpack_require__(60226); // german
__webpack_require__(37123); // Japanese
__webpack_require__(83590); // Korean
__webpack_require__(13820); // Hindi
dayjs_1.default.extend(quarterOfYear_1.default);
dayjs_1.default.extend(weekOfYear_1.default);
dayjs_1.default.extend(weekYear_1.default);
dayjs_1.default.extend(dayOfYear_1.default);
dayjs_1.default.extend(customParseFormat_1.default);
dayjs_1.default.extend(localizedFormat_1.default);
dayjs_1.default.extend(utc_1.default);
dayjs_1.default.extend(isoWeek_1.default);
var Units;
(function (Units) {
    Units["milliseconds"] = "milliseconds";
    Units["seconds"] = "seconds";
    Units["minutes"] = "minutes";
    Units["hours"] = "hours";
    Units["days"] = "days";
    Units["weeks"] = "weeks";
    Units["months"] = "months";
    Units["quarters"] = "quarters";
    Units["years"] = "years";
})(Units || (Units = {}));
var WeekdayUnits;
(function (WeekdayUnits) {
    WeekdayUnits[WeekdayUnits["sunday"] = 0] = "sunday";
    WeekdayUnits[WeekdayUnits["monday"] = 1] = "monday";
    WeekdayUnits[WeekdayUnits["tuesday"] = 2] = "tuesday";
    WeekdayUnits[WeekdayUnits["wednesday"] = 3] = "wednesday";
    WeekdayUnits[WeekdayUnits["thursday"] = 4] = "thursday";
    WeekdayUnits[WeekdayUnits["friday"] = 5] = "friday";
    WeekdayUnits[WeekdayUnits["saturday"] = 6] = "saturday";
})(WeekdayUnits || (WeekdayUnits = {}));
const UnitMapBase = new Map([
    [Units.milliseconds, [Units.milliseconds, 'ms']],
    [Units.seconds, [Units.seconds, 's']],
    [Units.minutes, [Units.minutes, 'm']],
    [Units.hours, [Units.hours, 'h']],
    [Units.days, [Units.days, 'd']],
    [Units.weeks, [Units.weeks, 'w']],
    [Units.months, [Units.months, 'M']],
    [Units.quarters, [Units.quarters, 'Q']],
    [Units.years, [Units.years, 'y']],
]);
const UnitMap = new Map();
UnitMapBase.forEach((v, k) => {
    UnitMap.set(v[0], k);
    UnitMap.set(v[1], k);
});
const getPureUnit = (unitStr) => {
    const unit = UnitMap.get(String(unitStr));
    if (!unit) {
        throw new unit_error_1.UnitError(unitStr);
    }
    return UnitMapBase.get(unit)[1];
};
const getDayjs = (timeStamp) => {
    // TODO follow-up and lookup synchronous transformation (the timeStamp of string should not be passed in)
    if (timeStamp == null) {
        throw new basic_1.FormulaBaseError('');
    }
    // If the input parameter is already a dayjs object, return directly
    if ((0, dayjs_1.isDayjs)(timeStamp)) {
        return timeStamp;
    }
    const isString = typeof timeStamp === 'string';
    const isTimeStamp = !isString || !Number.isNaN(Number(timeStamp)); // timestamp format check
    const date = isTimeStamp ? (0, dayjs_1.default)(Number(timeStamp)).locale('en') : (0, dayjs_1.default)((0, string_1.dateStrReplaceCN)(timeStamp)).locale('en');
    // Add a unified legal time check, if it fails, throw an error
    if (!date.isValid()) {
        throw new basic_1.FormulaBaseError('');
    }
    return date;
};
exports.getDayjs = getDayjs;
const getStartOfDay = (timeStamp) => {
    return (0, exports.getDayjs)(timeStamp).hour(0).minute(0).second(0).millisecond(0);
};
// Convert the day of the week and the first letter of the month in the date string to uppercase,
// This is compatible with the localization of dayjs
const formatDateTimeStr = (dateStr) => {
    if (typeof dateStr === 'number') {
        return dateStr;
    }
    const reg = /(mon)|(tue)|(wed)|(thu)|(fri)|(sat)|(sun)|(jan)|(feb)|(mar)|(apr)|(may )|(jun)|(jul)|(aug)|(sep)|(oct)|(nov)|(dec)/g;
    return dateStr.replace(reg, (_, $1) => $1.charAt(0).toUpperCase() + $1.slice(1));
};
const DEFAULT_LOCALE = 'zh-cn'; // default localization language
class DateFunc extends basic_1.FormulaFunc {
}
DateFunc.type = types_1.FormulaFuncType.DateTime;
DateFunc.acceptValueType = new Set([types_1.BasicValueType.DateTime, ...basic_1.FormulaFunc.acceptValueType]);
class Year extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'YEAR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).year();
    }
}
exports.Year = Year;
class Month extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'MONTH', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).month() + 1;
    }
}
exports.Month = Month;
class Day extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'DAY', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).date();
    }
}
exports.Day = Day;
class Hour extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'HOUR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).hour();
    }
}
exports.Hour = Hour;
class Minute extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'MINUTE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).minute();
    }
}
exports.Minute = Minute;
class Second extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'SECOND', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return (0, exports.getDayjs)(params[0].value).second();
    }
}
exports.Second = Second;
class Weekday extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'WEEKDAY', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        if (params[0].value == null) {
            return null;
        }
        const startDayOfWeek = params[1] && params[1].value;
        const day = (0, exports.getDayjs)(params[0].value).day();
        if (String(startDayOfWeek).toLowerCase() === 'monday') {
            return day === 0 ? 6 : day - 1;
        }
        return day;
    }
}
exports.Weekday = Weekday;
class Dateadd extends DateFunc {
    static validateParams(params) {
        if (params.length < 3) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'DATEADD', 3);
        }
        const unit = params[2].token.value.slice(1, -1);
        if (params[2].token.type === lexer_1.TokenType.String && !UnitMap.get(unit)) {
            throw new unit_error_1.UnitError(unit);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params) {
        const [{ value: date }, { value: count }, { value: unitStr }] = params;
        const unit = getPureUnit(unitStr);
        const day = (0, exports.getDayjs)(date);
        return day.add(Number(count), unit).valueOf();
    }
}
exports.Dateadd = Dateadd;
class DatetimeDiffUtil extends DateFunc {
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static calc(params, float) {
        var _a;
        const [{ value: dateFrom }, { value: dateTo }] = params;
        if (dateFrom == null || dateTo == null) {
            return null;
        }
        const unitStr = ((_a = params[2]) === null || _a === void 0 ? void 0 : _a.value) || Units.days;
        const unit = getPureUnit(unitStr);
        const day1 = (0, exports.getDayjs)(dateFrom);
        const day2 = (0, exports.getDayjs)(dateTo);
        return day1.diff(day2, unit, float);
    }
}
exports.DatetimeDiffUtil = DatetimeDiffUtil;
class DatetimeDiff extends DatetimeDiffUtil {
    static validateParams(params) {
        var _a, _b;
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'DATETIME_DIFF', 2);
        }
        const unit = (_a = params[2]) === null || _a === void 0 ? void 0 : _a.token.value.slice(1, -1);
        if (((_b = params[2]) === null || _b === void 0 ? void 0 : _b.token.type) === lexer_1.TokenType.String && unit && !UnitMap.get(unit)) {
            throw new unit_error_1.UnitError(unit);
        }
    }
    static func(params) {
        const diff = this.calc(params, true);
        return diff;
    }
}
exports.DatetimeDiff = DatetimeDiff;
class Today extends DateFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func() {
        const timeStamp = new Date().setHours(0, 0, 0, 0);
        return timeStamp;
    }
}
exports.Today = Today;
class Now extends DateFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func() {
        return Date.now();
    }
}
exports.Now = Now;
class FromNow extends DatetimeDiffUtil {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'FROMNOW', 2);
        }
    }
    static func(params) {
        const diff = this.calc([{ value: Date.now() }, ...params]);
        return Math.abs(Number(diff));
    }
}
exports.FromNow = FromNow;
/**
  * Here FromNow and ToNow have the same function,
  * Separately written just to remind the text and modify the relevant logic later to be better differentiated
  */
class ToNow extends DatetimeDiffUtil {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'TONOW', 2);
        }
    }
    static func(params) {
        const diff = this.calc([{ value: Date.now() }, ...params]);
        return Math.abs(Number(diff));
    }
}
exports.ToNow = ToNow;
class IsBefore extends DateFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'IS_BEFORE', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        if (params === null || params === void 0 ? void 0 : params.some(v => v.value == null)) {
            return null;
        }
        const date1 = (0, exports.getDayjs)(params[0].value);
        const date2 = (0, exports.getDayjs)(params[1].value);
        return date1.isBefore(date2);
    }
}
exports.IsBefore = IsBefore;
class IsAfter extends DateFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'IS_AFTER', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        if (params === null || params === void 0 ? void 0 : params.some(v => v.value == null)) {
            return null;
        }
        const date1 = (0, exports.getDayjs)(params[0].value);
        const date2 = (0, exports.getDayjs)(params[1].value);
        return date1.isAfter(date2);
    }
}
exports.IsAfter = IsAfter;
class WorkDay extends DateFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'WORKDAY', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params) {
        let startDate = (0, exports.getDayjs)(params[0].value);
        const startDay = startDate.day();
        // Specify which days the weekend is
        const weekends = [0, 6];
        // number of working days elapsed
        const totalWorkDays = Number(params[1].value);
        if (typeof totalWorkDays !== 'number') {
            return null;
        }
        if (totalWorkDays > 10000000 || Number.isNaN(totalWorkDays)) {
            throw new Error('NaN');
        }
        /**
          * Ideas:
          * Take WORKDAY('2021-10-15',8) as an example, 2021-10-15 is Friday, add 8 days to get 2021-10-23,
          * and check the difference between the two dates through the dayjs.diff method One week, that is to say on 2021-10-23
          * Add 2 days to the base (with two days off a week) to get 2021-10-25
          * At this time, take 2021-10-23 as the start date and the revised 2021-10-25 as the end date to do a diff check,
          * you will find that there is another week, repeat the above process,
          * until the start date and end date are in the same week , and the end date is not in
          * The calculation ends on Saturday and Sunday
          */
        if (weekends.includes(startDay)) {
            const startDayDiff = totalWorkDays >= 0 ? (startDay === 6 ? -1 : -2) : (startDay === 6 ? 2 : 1);
            startDate = startDate.add(startDayDiff, 'day');
        }
        let endDate = startDate.add(totalWorkDays, 'day');
        const getDiffWeek = () => endDate.week() === startDate.week() ? 0 : endDate.startOf('week').diff(startDate.startOf('week'), 'week');
        // handle the case where the end date encounters a weekend
        const skipWeekends = (date) => {
            const dayDiff = totalWorkDays >= 0 ? 2 : -2;
            return weekends.includes(date.day()) ? date.add(dayDiff, 'day') : date;
        };
        let diffWeek = getDiffWeek();
        while (diffWeek != 0) {
            startDate = endDate;
            endDate = endDate.add(diffWeek * 2, 'day');
            diffWeek = getDiffWeek();
        }
        let finalDate = skipWeekends(endDate);
        // holiday list
        const holidayStrList = params.length > 2 ? String(params[2].value).split(',') : [];
        const holidays = holidayStrList.filter(v => v !== 'null').map(v => (0, exports.getDayjs)(v.trim()));
        // calculate holidays
        for (let i = 0; i < holidays.length; i++) {
            const holiday = holidays[i];
            const [_start, _end] = totalWorkDays >= 0 ? [(0, exports.getDayjs)(params[0].value), finalDate] : [finalDate, (0, exports.getDayjs)(params[0].value)];
            if (holiday.isBefore(_start, 'date') || holiday.isSame(totalWorkDays >= 0 ? _start : _end, 'date') || holiday.isAfter(_end, 'date')) {
                continue;
            }
            finalDate = totalWorkDays >= 0 ? finalDate.add(1, 'day') : finalDate.add(-1, 'day');
            finalDate = skipWeekends(finalDate);
        }
        return finalDate.valueOf();
    }
}
exports.WorkDay = WorkDay;
class WorkDayDiff extends DateFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'WORKDAY_DIFF', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        let startDate = getStartOfDay(params[0].value);
        let endDate = getStartOfDay(params[1].value);
        const isMinus = startDate.valueOf() > endDate.valueOf(); // Whether with a negative sign
        isMinus && ([startDate, endDate] = [endDate, startDate]);
        const holidayStrList = params.length > 2 ? String(params[2].value).split(',') : [];
        const holidays = holidayStrList.filter(v => v !== 'null').map(v => (0, exports.getDayjs)(v.trim()));
        const weekends = [0, 6]; // specify which days are the weekends
        const startDay = startDate.day();
        const endDay = endDate.day();
        // for size comparison
        const calcStartDay = startDay === 0 ? 7 : startDay;
        const calcEndDay = endDay === 0 ? 7 : endDay;
        const realStartDay = weekends.includes(startDay) ? 5 : startDay;
        const realEndDay = weekends.includes(endDay) ? 5 : endDay;
        let diffDay = 0;
        if (calcStartDay === calcEndDay) {
            diffDay = weekends.includes(startDay) ? 0 : 1;
        }
        if (calcStartDay < calcEndDay && calcStartDay !== 6) {
            diffDay = realEndDay - realStartDay + 1;
        }
        if (calcStartDay > calcEndDay) {
            diffDay = weekends.includes(startDay) ? 5 + realEndDay - realStartDay : 5 + realEndDay - realStartDay + 1;
        }
        const diffWeekCount = endDate.diff(startDate, 'week');
        let finalCount = diffWeekCount * 5 + diffDay;
        // calculate holidays
        for (let i = 0; i < holidays.length; i++) {
            const holiday = holidays[i];
            const holidayDay = holiday.day();
            if (endDate.isAfter(holiday, 'date') &&
                (startDate.isBefore(holiday, 'date') ||
                    startDate.isSame(holiday, 'date')) &&
                !weekends.includes(holidayDay)) {
                finalCount--;
            }
        }
        return isMinus ? -finalCount : finalCount;
    }
}
exports.WorkDayDiff = WorkDayDiff;
class TimeStr extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'TIMESTR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const date = (0, exports.getDayjs)(params[0].value);
        return date.format('HH:mm:ss');
    }
}
exports.TimeStr = TimeStr;
class DateStr extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'DATESTR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const date = (0, exports.getDayjs)(params[0].value);
        return date.format('YYYY-MM-DD');
    }
}
exports.DateStr = DateStr;
class WeekNum extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'WEEKNUM', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        var _a;
        const currentDate = (0, exports.getDayjs)(params[0].value);
        const startDayOfWeek = String((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value).toLowerCase();
        const startOfWeek = startDayOfWeek === 'undefined' ? 0 : WeekdayUnits[startDayOfWeek];
        if (![0, 1].includes(startOfWeek)) {
            throw new Error('NaN');
        }
        if (currentDate.weekYear() !== currentDate.year() && currentDate.week() === 1) {
            const weekOffset = startOfWeek === 0 ? 1 : (currentDate.day() === 0 ? 0 : 1);
            return currentDate.add(-1, 'week').week() + weekOffset;
        }
        if (currentDate.add(-startOfWeek, 'day').startOf('week').year() !== currentDate.year()) {
            return 1;
        }
        if (startOfWeek === 1 && currentDate.day() === 0) {
            return currentDate.week() - 1;
        }
        return currentDate.week();
    }
}
exports.WeekNum = WeekNum;
class IsSame extends DateFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'IS_SAME', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        var _a;
        const [{ value: dateFrom }, { value: dateTo }] = params;
        const unitStr = ((_a = params[2]) === null || _a === void 0 ? void 0 : _a.value) || 'ms';
        const unit = getPureUnit(unitStr);
        const day1 = (0, exports.getDayjs)(dateFrom);
        const day2 = (0, exports.getDayjs)(dateTo);
        return day1.isSame(day2, unit);
    }
}
exports.IsSame = IsSame;
class DateTimeParse extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'DATETIME_PARSE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params) {
        var _a;
        const dateStr = formatDateTimeStr(params[0].value);
        // If it is a timestamp, don't pass this parameter directly, let dayjs convert it by itself
        const formatStr = typeof dateStr === 'number' ? '' : String((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value);
        const length = params.length;
        if (length >= 2) {
            return (0, dayjs_1.default)(dateStr, formatStr).valueOf();
        }
        return (0, dayjs_1.default)(dateStr).valueOf();
    }
}
exports.DateTimeParse = DateTimeParse;
class DateTimeFormat extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'DATETIME_FORMAT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        var _a;
        const date = (0, exports.getDayjs)(params[0].value);
        const formatStr = String(((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value) || 'YYYY-MM-DD HH:mm');
        return date.format(formatStr);
    }
}
exports.DateTimeFormat = DateTimeFormat;
class SetLocale extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SET_LOCALE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params) {
        var _a;
        const localeDate = params[0].value;
        const locale = ((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value) || DEFAULT_LOCALE;
        return (0, exports.getDayjs)(localeDate).locale(locale);
    }
}
exports.SetLocale = SetLocale;
class SetTimeZone extends DateFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SET_TIMEZONE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params) {
        var _a;
        const date = (0, exports.getDayjs)(params[0].value);
        let timezoneOffset = Number((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value);
        if (!timezoneOffset && timezoneOffset !== 0) {
            timezoneOffset = 8; // The default time zone is +8 District —— "Asia/Singapore"
        }
        return date.utcOffset(timezoneOffset);
    }
}
exports.SetTimeZone = SetTimeZone;
class CreatedTime extends DateFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(_params, context) {
        var _a, _b;
        const createdAt = (_b = (_a = context.record) === null || _a === void 0 ? void 0 : _a.recordMeta) === null || _b === void 0 ? void 0 : _b.createdAt;
        return createdAt == null ? null : createdAt;
    }
}
exports.CreatedTime = CreatedTime;
class LastModifiedTime extends DateFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.DateTime;
    }
    static func(params, context) {
        var _a;
        const record = context.record;
        const updatedMap = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.fieldUpdatedMap;
        if (!updatedMap) {
            return null;
        }
        const fieldIds = !params.length ? Object.keys(updatedMap) : params.map(param => { var _a; return (_a = param.node.field) === null || _a === void 0 ? void 0 : _a.id; });
        const timestamps = fieldIds.map(fieldId => { var _a; return (_a = updatedMap[fieldId]) === null || _a === void 0 ? void 0 : _a.at; }).filter(v => v);
        return timestamps.length ? Math.max(...timestamps) : null;
    }
}
exports.LastModifiedTime = LastModifiedTime;


/***/ }),

/***/ 28693:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Functions = exports.FunctionExample = exports.FormulaBaseError = void 0;
const array = __importStar(__webpack_require__(82382));
const logical = __importStar(__webpack_require__(11885));
const numeric = __importStar(__webpack_require__(4385));
const text = __importStar(__webpack_require__(9363));
const record = __importStar(__webpack_require__(95817));
const dateTime = __importStar(__webpack_require__(6137));
const basic_1 = __webpack_require__(51965);
Object.defineProperty(exports, "FormulaBaseError", ({ enumerable: true, get: function () { return basic_1.FormulaBaseError; } }));
const i18n_1 = __webpack_require__(47511);
exports.FunctionExample = {
    name: (0, i18n_1.t)(i18n_1.Strings.formula_example_title),
    func: {},
    definition: (0, i18n_1.t)(i18n_1.Strings.function_example_usage),
    summary: (0, i18n_1.t)(i18n_1.Strings.function_example_summary),
    example: (0, i18n_1.t)(i18n_1.Strings.function_example_example),
};
exports.Functions = new Map([
    // Numeric
    ['SUM', {
            name: 'SUM',
            func: numeric.Sum,
            definition: 'SUM(number1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_sum_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_sum_example),
        }],
    ['AVERAGE', {
            name: 'AVERAGE',
            func: numeric.Average,
            definition: 'AVERAGE(number1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_average_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_average_example),
        }],
    ['MAX', {
            name: 'MAX',
            func: numeric.Max,
            definition: 'MAX(number1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_max_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_max_example),
        }],
    ['MIN', {
            name: 'MIN',
            func: numeric.Min,
            definition: 'MIN(number1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_min_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_min_example),
        }],
    ['ROUND', {
            name: 'ROUND',
            func: numeric.Round,
            definition: 'ROUND(value, [precision])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_round_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_round_example),
        }],
    ['ROUNDUP', {
            name: 'ROUNDUP',
            func: numeric.RoundUp,
            definition: 'ROUNDUP(value, [precision])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_roundup_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_roundup_example),
        }],
    ['ROUNDDOWN', {
            name: 'ROUNDDOWN',
            func: numeric.RoundDown,
            definition: 'ROUNDDOWN(value, [precision])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_rounddown_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_rounddown_example),
        }],
    ['CEILING', {
            name: 'CEILING',
            func: numeric.Ceiling,
            definition: 'CEILING(value, [significance])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_ceiling_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_ceiling_example),
        }],
    ['FLOOR', {
            name: 'FLOOR',
            func: numeric.Floor,
            definition: 'FLOOR(value, [significance])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_floor_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_floor_example),
        }],
    ['EVEN', {
            name: 'EVEN',
            func: numeric.Even,
            definition: 'EVEN(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_even_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_even_example),
        }],
    ['ODD', {
            name: 'ODD',
            func: numeric.Odd,
            definition: 'ODD(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_odd_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_odd_example),
        }],
    ['INT', {
            name: 'INT',
            func: numeric.Int,
            definition: 'INT(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_int_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_int_example),
        }],
    ['ABS', {
            name: 'ABS',
            func: numeric.Abs,
            definition: 'ABS(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_abs_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_abs_example),
        }],
    ['SQRT', {
            name: 'SQRT',
            func: numeric.Sqrt,
            definition: 'SQRT(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_sqrt_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_sqrt_example),
        }],
    ['MOD', {
            name: 'MOD',
            func: numeric.Mod,
            definition: 'MOD(value, divisor)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_mod_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_mod_example),
        }],
    ['POWER', {
            name: 'POWER',
            func: numeric.Power,
            definition: 'POWER(base, power)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_power_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_power_example),
        }],
    ['EXP', {
            name: 'EXP',
            func: numeric.Exp,
            definition: 'EXP(power)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_exp_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_exp_example),
        }],
    ['LOG', {
            name: 'LOG',
            func: numeric.Log,
            definition: 'LOG(number, base=10))',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_log_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_log_example),
        }],
    ['VALUE', {
            name: 'VALUE',
            func: numeric.Value,
            definition: 'VALUE(text)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_value_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_value_example),
        }],
    // Text
    ['CONCATENATE', {
            name: 'CONCATENATE',
            func: text.Concatenate,
            definition: 'CONCATENATE(text1, [text2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_concatenate_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_concatenate_example),
        }],
    ['FIND', {
            name: 'FIND',
            func: text.Find,
            definition: 'FIND(stringToFind, whereToSearch, [startFromPosition])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_find_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_find_example),
        }],
    ['SEARCH', {
            name: 'SEARCH',
            func: text.Search,
            definition: 'SEARCH(stringToFind, whereToSearch, [startFromPosition])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_search_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_search_example),
        }],
    ['MID', {
            name: 'MID',
            func: text.Mid,
            definition: 'MID(string, whereToStart, count)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_mid_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_mid_example),
        }],
    ['REPLACE', {
            name: 'REPLACE',
            func: text.Replace,
            definition: 'REPLACE(string, whereToStart, count, replacement)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_replace_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_replace_example),
        }],
    ['SUBSTITUTE', {
            name: 'SUBSTITUTE',
            func: text.Substitute,
            definition: 'Substitute(string, oldText, newText, [index])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_substitute_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_substitute_example),
        }],
    ['LEN', {
            name: 'LEN',
            func: text.Len,
            definition: 'LEN(string)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_len_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_len_example),
        }],
    ['LEFT', {
            name: 'LEFT',
            func: text.Left,
            definition: 'LEFT(string, howMany)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_left_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_left_example),
        }],
    ['RIGHT', {
            name: 'RIGHT',
            func: text.Right,
            definition: 'RIGHT(string, howMany)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_right_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_right_example),
        }],
    ['LOWER', {
            name: 'LOWER',
            func: text.Lower,
            definition: 'LOWER(string)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_lower_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_lower_example),
        }],
    ['UPPER', {
            name: 'UPPER',
            func: text.Upper,
            definition: 'UPPER(string)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_upper_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_upper_example),
        }],
    ['REPT', {
            name: 'REPT',
            func: text.Rept,
            definition: 'REPT(string, number)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_rept_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_rept_example),
        }],
    ['T', {
            name: 'T',
            func: text.T,
            definition: 'T(value)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_t_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_t_example),
        }],
    ['TRIM', {
            name: 'TRIM',
            func: text.Trim,
            definition: 'TRIM(string)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_trim_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_trim_example),
        }],
    ['ENCODE_URL_COMPONENT', {
            name: 'ENCODE_URL_COMPONENT',
            func: text.EncodeUrlComponent,
            definition: 'ENCODE_URL_COMPONENT(component_string)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_encode_url_component_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_encode_url_component_example),
        }],
    // Logical
    ['IF', {
            name: 'IF',
            func: logical.If,
            definition: 'IF(logical, value1, value2)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_if_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_if_example),
        }],
    ['SWITCH', {
            name: 'SWITCH',
            func: logical.Switch,
            definition: 'SWITCH(expression, [pattern, result...], [default])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_switch_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_switch_example),
        }],
    ['TRUE', {
            name: 'TRUE',
            func: logical.True,
            definition: 'TRUE()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_true_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_true_example),
        }],
    ['FALSE', {
            name: 'FALSE',
            func: logical.False,
            definition: 'FALSE()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_false_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_false_example),
        }],
    ['AND', {
            name: 'AND',
            func: logical.And,
            definition: 'AND(logical1, [logical2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_and_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_and_example),
        }],
    ['OR', {
            name: 'OR',
            func: logical.Or,
            definition: 'OR(logical1, [logical2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_or_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_or_example),
        }],
    ['XOR', {
            name: 'XOR',
            func: logical.Xor,
            definition: 'XOR(logical1, [logical2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_xor_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_xor_example),
        }],
    ['BLANK', {
            name: 'BLANK',
            func: logical.Blank,
            definition: 'BLANK()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_blank_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_blank_example),
        }],
    ['ERROR', {
            name: 'ERROR',
            func: logical.FormulaError,
            definition: 'ERROR(message)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_error_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_error_example),
        }],
    // TODO: Do ISERROR compatibility here first, and delete the user data after brushing
    ['ISERROR', {
            name: 'ISERROR',
            func: logical.IsError,
            definition: 'ISERROR(expr)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_is_error_example),
            example: (0, i18n_1.t)(i18n_1.Strings.function_is_error_example),
        }],
    ['IS_ERROR', {
            name: 'IS_ERROR',
            func: logical.IsError,
            definition: 'IS_ERROR(expr)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_is_error_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_is_error_example),
        }],
    ['NOT', {
            name: 'NOT',
            func: logical.Not,
            definition: 'NOT(boolean)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_not_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_not_example),
        }],
    // DateTime
    ['TODAY', {
            name: 'TODAY',
            func: dateTime.Today,
            definition: 'TODAY()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_today_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_today_example),
        }],
    ['NOW', {
            name: 'NOW',
            func: dateTime.Now,
            definition: 'NOW()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_now_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_now_example),
        }],
    ['TONOW', {
            name: 'TONOW',
            func: dateTime.ToNow,
            definition: 'TONOW(date, units)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_tonow_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_tonow_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_tonow_url),
        }],
    ['FROMNOW', {
            name: 'FROMNOW',
            func: dateTime.FromNow,
            definition: 'FROMNOW(date, units)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_fromnow_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_fromnow_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_fromnow_url),
        }],
    ['DATEADD', {
            name: 'DATEADD',
            func: dateTime.Dateadd,
            definition: 'DATEADD(date, count, units)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_dateadd_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_dateadd_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_dateadd_url),
        }],
    ['DATETIME_DIFF', {
            name: 'DATETIME_DIFF',
            func: dateTime.DatetimeDiff,
            definition: 'DATETIME_DIFF(date1, date2, [units])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_datetime_diff_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_datetime_diff_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_datetime_diff_url),
        }],
    ['WORKDAY', {
            name: 'WORKDAY',
            func: dateTime.WorkDay,
            definition: 'WORKDAY(startDate, numDays, [holidays])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_workday_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_workday_example),
        }],
    ['WORKDAY_DIFF', {
            name: 'WORKDAY_DIFF',
            func: dateTime.WorkDayDiff,
            definition: 'WORKDAY_DIFF(startDate, endDate, [holidays])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_workday_diff_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_workday_diff_example),
        }],
    ['IS_AFTER', {
            name: 'IS_AFTER',
            func: dateTime.IsAfter,
            definition: 'IS_AFTER(date1, date2)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_is_after_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_is_after_example),
        }],
    ['IS_BEFORE', {
            name: 'IS_BEFORE',
            func: dateTime.IsBefore,
            definition: 'IS_BEFORE(date1, date2)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_is_before_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_is_before_example),
        }],
    ['IS_SAME', {
            name: 'IS_SAME',
            func: dateTime.IsSame,
            definition: 'IS_SAME(date1, date2, [units])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_is_same_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_is_same_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_is_same_url),
        }],
    ['DATETIME_FORMAT', {
            name: 'DATETIME_FORMAT',
            func: dateTime.DateTimeFormat,
            definition: 'DATETIME_FORMAT(date, [specified_output_format])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_datetime_format_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_datetime_format_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_datetime_format_url),
        }],
    ['DATETIME_PARSE', {
            name: 'DATETIME_PARSE',
            func: dateTime.DateTimeParse,
            definition: 'DATETIME_PARSE(date, [input_format])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_datetime_parse_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_datetime_parse_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_datetime_parse_url),
        }],
    ['DATESTR', {
            name: 'DATESTR',
            func: dateTime.DateStr,
            definition: 'DATESTR(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_datestr_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_datestr_example),
        }],
    ['TIMESTR', {
            name: 'TIMESTR',
            func: dateTime.TimeStr,
            definition: 'TIMESTR(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_timestr_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_timestr_example),
        }],
    ['YEAR', {
            name: 'YEAR',
            func: dateTime.Year,
            definition: 'YEAR(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_year_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_year_example),
        }],
    ['MONTH', {
            name: 'MONTH',
            func: dateTime.Month,
            definition: 'MONTH(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_month_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_month_example),
        }],
    ['WEEKDAY', {
            name: 'WEEKDAY',
            func: dateTime.Weekday,
            definition: 'WEEKDAY(date, [startDayOfWeek])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_weekday_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_weekday_example),
        }],
    ['WEEKNUM', {
            name: 'WEEKNUM',
            func: dateTime.WeekNum,
            definition: 'WEEKNUM(date, [startDayOfWeek])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_weeknum_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_weeknum_example),
        }],
    ['DAY', {
            name: 'DAY',
            func: dateTime.Day,
            definition: 'DAY(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_day_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_day_example),
        }],
    ['HOUR', {
            name: 'HOUR',
            func: dateTime.Hour,
            definition: 'HOUR(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_hour_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_hour_example),
        }],
    ['MINUTE', {
            name: 'MINUTE',
            func: dateTime.Minute,
            definition: 'MINUTE(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_minute_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_minute_example),
        }],
    ['SECOND', {
            name: 'SECOND',
            func: dateTime.Second,
            definition: 'SECOND(date)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_second_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_second_example),
        }],
    ['SET_LOCALE', {
            name: 'SET_LOCALE',
            func: dateTime.SetLocale,
            definition: 'SET_LOCALE(date, [locale_modifier])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_set_locale_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_set_locale_example),
            linkUrl: (0, i18n_1.t)(i18n_1.Strings.function_set_locale_url),
        }],
    ['SET_TIMEZONE', {
            name: 'SET_TIMEZONE',
            func: dateTime.SetTimeZone,
            definition: 'SET_TIMEZONE(date, [tz_identifier])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_set_timezone_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_set_timezone_example),
        }],
    ['CREATED_TIME', {
            name: 'CREATED_TIME',
            func: dateTime.CreatedTime,
            definition: 'CREATED_TIME()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_created_time_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_created_time_example),
        }],
    ['LAST_MODIFIED_TIME', {
            name: 'LAST_MODIFIED_TIME',
            func: dateTime.LastModifiedTime,
            definition: 'LAST_MODIFIED_TIME()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_last_modified_time_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_last_modified_time_example),
        }],
    // Array
    ['ARRAYCOMPACT', {
            name: 'ARRAYCOMPACT',
            func: array.ArrayCompact,
            definition: 'ARRAYCOMPACT([item1, item2, item3])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_arraycompact_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_arraycompact_example),
        }],
    ['ARRAYUNIQUE', {
            name: 'ARRAYUNIQUE',
            func: array.ArrayUnique,
            definition: 'ARRAYUNIQUE([item1, item2, item3])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_arrayunique_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_arrayunique_example),
        }],
    ['ARRAYJOIN', {
            name: 'ARRAYJOIN',
            func: array.ArrayJoin,
            definition: 'ARRAYJOIN([item1, item2, item3], separator)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_arrayjoin_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_arrayjoin_example),
        }],
    ['ARRAYFLATTEN', {
            name: 'ARRAYFLATTEN',
            func: array.ArrayFlatten,
            definition: 'ARRAYFLATTEN([item1, item2, item3])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_arrayflatten_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_arrayflatten_example),
        }],
    ['COUNT', {
            name: 'COUNT',
            func: array.Count,
            definition: 'COUNT(number1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_count_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_count_example),
        }],
    ['COUNTA', {
            name: 'COUNTA',
            func: array.Counta,
            definition: 'COUNTA(textOrNumber1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_counta_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_counta_example),
        }],
    ['COUNTIF', {
            name: 'COUNTIF',
            func: array.CountIf,
            definition: 'COUNTIF(values, keyword, operation)',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_countif_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_countif_example),
        }],
    ['COUNTALL', {
            name: 'COUNTALL',
            func: array.Countall,
            definition: 'COUNTALL(textOrNumber1, [number2, ...])',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_countall_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_countall_example),
        }],
    // Record
    ['RECORD_ID', {
            name: 'RECORD_ID',
            func: record.RecordId,
            definition: 'RECORD_ID()',
            summary: (0, i18n_1.t)(i18n_1.Strings.function_record_id_summary),
            example: (0, i18n_1.t)(i18n_1.Strings.function_record_id_example),
        }],
]);


/***/ }),

/***/ 11885:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IsError = exports.FormulaError = exports.Switch = exports.Not = exports.Xor = exports.And = exports.Or = exports.False = exports.True = exports.Blank = exports.If = void 0;
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const dayjs_1 = __importDefault(__webpack_require__(1635));
const helper_1 = __webpack_require__(67001);
const params_count_error_1 = __webpack_require__(56497);
class LogicalFunc extends basic_1.FormulaFunc {
}
LogicalFunc.type = types_1.FormulaFuncType.Logical;
function isArrayParam(params) {
    if (params.length !== 1) {
        return false;
    }
    if (params[0].node.valueType === types_1.BasicValueType.Array) {
        return true;
    }
    return false;
}
class If extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 3) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'IF', 3);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        if (!params) {
            return types_1.BasicValueType.String;
        }
        const [, value1Node, value2Node] = params;
        if ([value1Node.valueType, value2Node.valueType].some(v => v === types_1.BasicValueType.Array)) {
            return types_1.BasicValueType.String;
        }
        // If one of the two values is 'BLANK', the result type is determined by the type of the other
        if (value1Node.token.value.toUpperCase() === 'BLANK') {
            return value2Node.valueType;
        }
        if (value2Node.token.value.toUpperCase() === 'BLANK') {
            return value1Node.valueType;
        }
        // When both value parameters are Number/Boolean/DateTime/String, the return value of the corresponding type is inferred
        if (value1Node.valueType === value2Node.valueType) {
            return value1Node.valueType;
        }
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const [logical, value1Param, value2Param] = params;
        return logical.value ? value1Param.value : value2Param.value;
    }
}
exports.If = If;
If.acceptValueType = new Set([types_1.BasicValueType.Array, types_1.BasicValueType.DateTime, ...basic_1.FormulaFunc.acceptValueType]);
class Blank extends LogicalFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func() {
        return null;
    }
}
exports.Blank = Blank;
class True extends LogicalFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func() {
        return true;
    }
}
exports.True = True;
class False extends LogicalFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func() {
        return false;
    }
}
exports.False = False;
class Or extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'OR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        params = (0, helper_1.handleLookupNullValue)(params);
        if (isArrayParam(params)) {
            if (!params[0].value) {
                return false;
            }
            return params[0].value.some(v => Boolean(v));
        }
        return params.some(v => Boolean(v.value));
    }
}
exports.Or = Or;
Or.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class And extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'AND', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        params = (0, helper_1.handleLookupNullValue)(params);
        if (isArrayParam(params)) {
            if (!params[0].value) {
                return false;
            }
            return params[0].value.every(v => Boolean(v));
        }
        return params.every(v => Boolean(v.value));
    }
}
exports.And = And;
And.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class Xor extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'XOR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        let count;
        params = (0, helper_1.handleLookupNullValue)(params);
        if (isArrayParam(params)) {
            if (!params[0].value) {
                return false;
            }
            count = params[0].value.reduce((prev, cur) => cur ? prev + 1 : prev, 0);
        }
        else {
            count = params.reduce((prev, cur) => cur.value ? prev + 1 : prev, 0);
        }
        return Boolean(count & 1);
    }
}
exports.Xor = Xor;
Xor.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class Not extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'NOT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        params = (0, helper_1.handleLookupNullValue)(params);
        const logical1Param = params[0].value;
        return !logical1Param;
    }
}
exports.Not = Not;
class Switch extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SWITCH', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        if (!params) {
            return types_1.BasicValueType.String;
        }
        // Only when the return type of the value of all matched expressions is Number/Boolean/DateTime/String, 
        // it is inferred as the return value of the corresponding type
        const argsLength = params.length - 1;
        let resultType = argsLength & 1 ? params[argsLength].valueType : null;
        for (let i = 2; i <= argsLength; i += 2) {
            const curParams = params[i];
            // If the matched expression contains BLANK, it is determined by other return types
            if (curParams.token.value.toUpperCase() === 'BLANK')
                continue;
            if (resultType != null && resultType !== curParams.valueType) {
                return types_1.BasicValueType.String;
            }
            resultType = curParams.valueType;
        }
        resultType = resultType || types_1.BasicValueType.String;
        return resultType === types_1.BasicValueType.Array ? types_1.BasicValueType.String : resultType;
    }
    static func(params) {
        params = (0, helper_1.handleLookupNullValue)(params);
        let targetValue = params[0].value;
        const argsLength = params.length - 1;
        const switchCount = Math.floor(argsLength / 2);
        const defaultValue = argsLength & 1 ? params[argsLength].value : null;
        const isDateTimeType = params[0].node.innerValueType === types_1.BasicValueType.DateTime; // Do special handling for DateTime types
        // Specially handle the matching of Array type fields to BLANK
        const isEmptyArray = (param) => { var _a; return param.node.valueType === types_1.BasicValueType.Array && !((_a = param.value) === null || _a === void 0 ? void 0 : _a.length); };
        if (isDateTimeType) {
            targetValue = (0, dayjs_1.default)(targetValue).valueOf();
        }
        if (isEmptyArray(params[0])) {
            targetValue = null;
        }
        if (switchCount > 0) {
            for (let i = 0; i < switchCount; i++) {
                const currentParam = params[i * 2 + 1];
                let currentValue = currentParam.value;
                if (isDateTimeType) {
                    currentValue = (0, dayjs_1.default)(currentValue).valueOf();
                }
                if (isEmptyArray(currentParam)) {
                    currentValue = null;
                }
                if (targetValue === currentValue) {
                    return params[i * 2 + 2].value;
                }
            }
        }
        return defaultValue;
    }
}
exports.Switch = Switch;
Switch.acceptValueType = new Set([types_1.BasicValueType.DateTime, ...basic_1.FormulaFunc.acceptValueType]);
// All equations' running errors or manual triggers will inherit this class
class FormulaError extends LogicalFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        var _a;
        const errText = (_a = params[0]) === null || _a === void 0 ? void 0 : _a.value;
        throw new basic_1.FormulaBaseError(errText || '');
    }
}
exports.FormulaError = FormulaError;
class IsError extends LogicalFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.NotEquals, 'IS_ERROR', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Boolean;
    }
    static func(params) {
        const value = params[0].value;
        const isError = value instanceof basic_1.FormulaBaseError || isNaN(value) || value === Infinity || value === -Infinity;
        return isError;
    }
}
exports.IsError = IsError;


/***/ }),

/***/ 4385:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Value = exports.Mod = exports.Sqrt = exports.Power = exports.RoundDown = exports.RoundUp = exports.Even = exports.Odd = exports.Exp = exports.Int = exports.Log = exports.Min = exports.Max = exports.Round = exports.Floor = exports.Ceiling = exports.Average = exports.Abs = exports.Sum = exports.NumericUtilsFunc = void 0;
const lodash_1 = __webpack_require__(46517);
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const params_count_error_1 = __webpack_require__(56497);
class NumericFunc extends basic_1.FormulaFunc {
}
NumericFunc.type = types_1.FormulaFuncType.Numeric;
function isArrayParam(params) {
    if (params.length !== 1) {
        return false;
    }
    if (params[0].node.valueType === types_1.BasicValueType.Array) {
        return true;
    }
    return false;
}
function isArrayNodes(nodes) {
    if (!nodes || nodes.length !== 1) {
        return false;
    }
    if (nodes[0].valueType === types_1.BasicValueType.Array) {
        return true;
    }
    return false;
}
/**
  * Tool class for some public functions
  */
class NumericUtilsFunc extends NumericFunc {
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    /**
     * CEILING, FLOOR
     * The output result is aligned with Excel
     */
    static calc2RoundFC(params, calcFn) {
        var _a;
        if (params[0].value == null) {
            return null;
        }
        const value = Number(params[0].value);
        let sign = (_a = params[1]) === null || _a === void 0 ? void 0 : _a.value;
        if (sign != null) {
            sign = Number(sign);
            return (0, utils_1.times)(calcFn((0, utils_1.divide)(value, sign)), sign);
        }
        return calcFn(value);
    }
    // ROUNDUP、ROUNDDOWN
    static calc2RoundDU(params, calcFn1, calcFn2) {
        var _a;
        if (params[0].value == null) {
            return null;
        }
        const value = Number(params[0].value);
        const precision = Math.floor((_a = params[1]) === null || _a === void 0 ? void 0 : _a.value) || 0;
        const offset = Math.pow(10, precision);
        const roundFn = value > 0 ? calcFn1 : calcFn2;
        const rounded = roundFn(value * offset) / offset;
        return rounded;
    }
}
exports.NumericUtilsFunc = NumericUtilsFunc;
class Sum extends NumericFunc {
    static validateParams() {
        //
    }
    static getReturnType() {
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        let result = 0;
        // If there is only one parameter and it is an array, it means that the value of the array type field is summed
        if (isArrayParam(params)) {
            const innerValueType = params[0].node.innerValueType;
            if (innerValueType && innerValueType === types_1.BasicValueType.DateTime) {
                return 0;
            }
            if (!params[0].value) {
                return 0;
            }
            result = params[0].value.reduce((pre, cur) => {
                return (0, utils_1.plus)(pre, (0, utils_1.noNaN)(Number(cur)));
            }, 0);
        }
        else {
            result = params.reduce((pre, cur) => {
                return (0, utils_1.plus)(pre, (0, utils_1.noNaN)(Number(cur.value)));
            }, 0);
        }
        return result;
    }
}
exports.Sum = Sum;
Sum.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class Abs extends NumericFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return Math.abs(params[0] && params[0].value);
    }
}
exports.Abs = Abs;
class Average extends NumericFunc {
    static validateParams() {
        //
    }
    static getReturnType() {
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        // If there is only one parameter and it is an array, it means that the value of the array type field is summed
        if (isArrayParam(params)) {
            const innerValueType = params[0].node.innerValueType;
            if (innerValueType && innerValueType === types_1.BasicValueType.DateTime) {
                return 0;
            }
            if (!params[0].value) {
                return 0;
            }
            return params[0].value.reduce((pre, cur) => {
                return (0, utils_1.plus)(pre, (0, utils_1.noNaN)(Number(cur)));
            }, 0) / (params[0].value.length || 1);
        }
        const total = params.filter(cur => {
            // Product requirement, the cell is empty, the cell is not counted in the total
            if (cur.value == null) {
                return false;
            }
            return !Number.isNaN(Number(cur.value));
        }).length || 1;
        return params.reduce((pre, cur) => {
            return (0, utils_1.plus)(pre, (0, utils_1.noNaN)(Number(cur.value)));
        }, 0) / total;
    }
}
exports.Average = Average;
Average.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class Ceiling extends NumericUtilsFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'CEILING', 1);
        }
    }
    static func(params) {
        return this.calc2RoundFC(params, Math.ceil);
    }
}
exports.Ceiling = Ceiling;
class Floor extends NumericUtilsFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'FLOOR', 1);
        }
    }
    static func(params) {
        return this.calc2RoundFC(params, Math.floor);
    }
}
exports.Floor = Floor;
class Round extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'ROUND', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        const num = Number(value);
        const precision = params[1] && Math.floor(params[1].value) || 0;
        const offset = Math.pow(10, precision);
        return (0, utils_1.divide)(Math.round((0, utils_1.times)(num, offset)), offset);
    }
}
exports.Round = Round;
class Max extends NumericFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        if (!params) {
            return types_1.BasicValueType.Number;
        }
        if (isArrayNodes(params)) {
            const innerValueType = params[0].innerValueType;
            if (innerValueType === types_1.BasicValueType.DateTime) {
                return types_1.BasicValueType.DateTime;
            }
            return types_1.BasicValueType.Number;
        }
        // All parameters are date type, return date type
        if (params.every(node => node.valueType === types_1.BasicValueType.DateTime)) {
            return types_1.BasicValueType.DateTime;
        }
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        return this.calc(params, lodash_1.max);
    }
    static calc(params, calcFn) {
        // If there is only one parameter and it is an array, it means that the value of the array type field is summed
        if (isArrayParam(params)) {
            if (!params[0].value) {
                return null;
            }
            const v = calcFn(params[0].value.map(Number).filter(d => !isNaN(d)));
            return v == null ? null : Number(v);
        }
        // If the return value is DateTime, the node of DateTime type should be filtered out, 
        // otherwise the timestamp will be introduced to disturb the calculation result
        if (this.getReturnType(params.map(p => p.node)) !== types_1.BasicValueType.DateTime) {
            params = params.filter(p => p.node.valueType !== types_1.BasicValueType.DateTime);
        }
        const v = calcFn(params.map(p => Number(p.value)).filter(d => !isNaN(d)));
        return v == null ? 0 : Number(v);
    }
}
exports.Max = Max;
Max.acceptValueType = new Set([types_1.BasicValueType.DateTime, types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
// The Min function is different from Max only in the calculation method calcFn
class Min extends Max {
    static func(params) {
        return this.calc(params, lodash_1.min);
    }
}
exports.Min = Min;
class Log extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'LOG', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        const num = Number(value);
        const base = params[1] ? Number(params[1].value) : 10;
        return Math.log(num) / Math.log(base);
    }
}
exports.Log = Log;
class Int extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'INT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return Math.floor(value);
    }
}
exports.Int = Int;
class Exp extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'EXP', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return Math.exp(value);
    }
}
exports.Exp = Exp;
class Odd extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'ODD', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (params[0].value == null) {
            return null;
        }
        const num = Number(value);
        const rounded = value > 0 ? Math.ceil(num) : Math.floor(num);
        if (rounded % 2 !== 0) {
            return rounded;
        }
        return rounded >= 0 ? rounded + 1 : rounded - 1;
    }
}
exports.Odd = Odd;
class Even extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'EVEN', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (params[0].value == null) {
            return null;
        }
        const num = Number(params[0].value);
        const rounded = value > 0 ? Math.ceil(num) : Math.floor(num);
        if (rounded % 2 === 0) {
            return rounded;
        }
        return rounded > 0 ? rounded + 1 : rounded - 1;
    }
}
exports.Even = Even;
class RoundUp extends NumericUtilsFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'ROUNDUP', 1);
        }
    }
    static func(params) {
        return this.calc2RoundDU(params, Math.ceil, Math.floor);
    }
}
exports.RoundUp = RoundUp;
class RoundDown extends NumericUtilsFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'ROUNDDOWN', 1);
        }
    }
    static func(params) {
        return this.calc2RoundDU(params, Math.floor, Math.ceil);
    }
}
exports.RoundDown = RoundDown;
class Power extends NumericFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'POWER', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (params[0].value == null) {
            return null;
        }
        return Math.pow(value, params[1].value);
    }
}
exports.Power = Power;
class Sqrt extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SQRT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (params[0].value == null) {
            return null;
        }
        return Math.sqrt(value);
    }
}
exports.Sqrt = Sqrt;
class Mod extends NumericFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'MOD', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (params[0].value == null) {
            return null;
        }
        const num = Number(value);
        const divisor = Number(params[1].value);
        const mod = num % divisor;
        if ((num ^ divisor) < 0) {
            return mod * (-1);
        }
        return mod;
    }
}
exports.Mod = Mod;
class Value extends NumericFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'VALUE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const text = String(params[0].value);
        const regNumber = /[^0-9.+-]/g;
        const regSymbol = /(\+|-|\.)+/g;
        const value = text
            .replace(regNumber, '')
            .replace(regSymbol, '$1');
        return parseFloat(value);
    }
}
exports.Value = Value;


/***/ }),

/***/ 95817:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RecordId = void 0;
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
class RecordFunc extends basic_1.FormulaFunc {
}
RecordFunc.type = types_1.FormulaFuncType.Record;
class RecordId extends RecordFunc {
    static validateParams(_params) {
        //
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(_params, context) {
        return context ? context.record.id : '';
    }
}
exports.RecordId = RecordId;


/***/ }),

/***/ 9363:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Substitute = exports.Rept = exports.Trim = exports.T = exports.Replace = exports.Mid = exports.Upper = exports.Lower = exports.Len = exports.Right = exports.Left = exports.EncodeUrlComponent = exports.Concatenate = exports.Search = exports.Find = void 0;
const basic_1 = __webpack_require__(51965);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const lodash_1 = __webpack_require__(46517);
const array_1 = __webpack_require__(82382);
const params_count_error_1 = __webpack_require__(56497);
class TextFunc extends basic_1.FormulaFunc {
}
TextFunc.type = types_1.FormulaFuncType.Text;
class Find extends TextFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'FIND', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        var _a;
        const stringToFind = params[0].value;
        const whereToSearch = params[1].value;
        if (stringToFind == null || whereToSearch == null) {
            return 0;
        }
        if (!params[2] || params[2].value >= 0) {
            const startFromPosition = ((_a = params[2]) === null || _a === void 0 ? void 0 : _a.value) > 0 ? params[2].value - 1 : 0;
            return whereToSearch.indexOf(stringToFind, startFromPosition) + 1;
        }
        // positionIndex supports negative numbers, if a negative number is filled in, the position is calculated from the back to the front
        const startFromPosition = whereToSearch.length + params[2].value;
        return whereToSearch.lastIndexOf(stringToFind, startFromPosition) + 1;
    }
}
exports.Find = Find;
class Search extends TextFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SEARCH', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const stringToFind = params[0].value;
        const whereToSearch = params[1].value;
        if (stringToFind == null || whereToSearch == null) {
            return null;
        }
        const startFromPosition = params[2] ? (params[2].value > 0 ? params[2].value - 1 : 0) : 0;
        const result = whereToSearch.indexOf(stringToFind, startFromPosition) + 1;
        if (result === 0) {
            return null;
        }
        return result;
    }
}
exports.Search = Search;
class Concatenate extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'CONCATENATE', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const flattenValue = (0, array_1.flattenParams)(params);
        return flattenValue.join('');
    }
}
exports.Concatenate = Concatenate;
Concatenate.acceptValueType = new Set([types_1.BasicValueType.Array, ...basic_1.FormulaFunc.acceptValueType]);
class EncodeUrlComponent extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'ENCODE_URL_COMPONENT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return encodeURIComponent(String(value));
    }
}
exports.EncodeUrlComponent = EncodeUrlComponent;
class Left extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'LEFT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        const count = params[1] ? params[1].value : 1;
        return String(value).substring(0, count);
    }
}
exports.Left = Left;
class Right extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'RIGHT', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        const valueStr = String(value);
        const count = params[1] ? params[1].value : 1;
        const startIndex = valueStr.length - count;
        return valueStr.substring(startIndex);
    }
}
exports.Right = Right;
class Len extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'LEN', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.Number;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return String(value).length;
    }
}
exports.Len = Len;
class Lower extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'LOWER', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return String(value).toLowerCase();
    }
}
exports.Lower = Lower;
class Upper extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'UPPER', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const value = params[0].value;
        if (value == null) {
            return null;
        }
        return String(value).toUpperCase();
    }
}
exports.Upper = Upper;
class Mid extends TextFunc {
    static validateParams(params) {
        if (params.length < 3) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'MID', 3);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        let [{ value: str }, { value: whereToStart }, { value: count }] = params;
        if (str == null) {
            return null;
        }
        str = String(str);
        whereToStart = Number(whereToStart) - 1;
        count = Number(count);
        return str.slice(whereToStart, whereToStart + count);
    }
}
exports.Mid = Mid;
class Replace extends TextFunc {
    static validateParams(params) {
        if (params.length < 4) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'REPLACE', 4);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        let [{ value: str }, { value: whereToStart }, { value: count }, { value: replaceStr }] = params;
        if (str == null) {
            return null;
        }
        str = String(str);
        whereToStart = (0, utils_1.noNaN)(Number(whereToStart) - 1);
        count = (0, utils_1.noNaN)(Number(count));
        replaceStr = replaceStr == null ? '' : String(replaceStr);
        if (str.length <= whereToStart) {
            return str + replaceStr;
        }
        let ret = str.substring(0, whereToStart) + replaceStr;
        ret += str.substring(whereToStart + count);
        return ret;
    }
}
exports.Replace = Replace;
class T extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'T', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const str = params[0].value;
        if ((0, lodash_1.isString)(str)) {
            return str;
        }
        return null;
    }
}
exports.T = T;
T.acceptValueType = new Set([types_1.BasicValueType.DateTime, ...basic_1.FormulaFunc.acceptValueType]);
class Trim extends TextFunc {
    static validateParams(params) {
        if (params.length < 1) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'TRIM', 1);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const str = params[0].value;
        if (str == null) {
            return null;
        }
        return String(str).trim();
    }
}
exports.Trim = Trim;
Trim.acceptValueType = new Set([types_1.BasicValueType.Boolean, types_1.BasicValueType.String]);
class Rept extends TextFunc {
    static validateParams(params) {
        if (params.length < 2) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'REPT', 2);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        let [{ value: str }, { value: count }] = params;
        if (str == null) {
            return null;
        }
        str = String(str);
        count = (0, utils_1.noNaN)(Number(count));
        return str.repeat(count);
    }
}
exports.Rept = Rept;
Rept.acceptValueType = new Set([types_1.BasicValueType.Boolean, types_1.BasicValueType.String]);
class Substitute extends TextFunc {
    static validateParams(params) {
        if (params.length < 3) {
            throw new params_count_error_1.ParamsCountError(params_count_error_1.ParamsErrorType.AtLeastCount, 'SUBSTITUTE', 3);
        }
    }
    static getReturnType(params) {
        params && this.validateParams(params);
        return types_1.BasicValueType.String;
    }
    static func(params) {
        const [{ value: str }, { value: oldText }, { value: newText }] = params;
        const index = params[3] && (0, utils_1.noNaN)(Number(params[3].value) - 1);
        const splitArr = String(str).split(oldText);
        if (str == null) {
            return null;
        }
        if (index < 1 || index > splitArr.length - 2) { // When the starting position does not match the range value, return the original string directly
            return String(str);
        }
        if (index) {
            const substituter = [splitArr[index], splitArr[index + 1]].join(newText);
            splitArr.splice(index, 2, substituter);
            return splitArr.join(oldText);
        }
        return splitArr.join(newText);
    }
}
exports.Substitute = Substitute;
Substitute.acceptValueType = new Set([types_1.BasicValueType.Boolean, types_1.BasicValueType.String]);


/***/ }),

/***/ 67001:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.handleLookupNullValue = void 0;
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const parser_1 = __webpack_require__(83074);
const immer_1 = __webpack_require__(7133);
/**
 * lookup cv now leaves null by default.
 * When the formula refers to the lookup field as a parameter, some functions need to convert the null value to make it as expected.
 */
const handleLookupNullValue = (params) => {
    return (0, immer_1.produce)(params, draftParams => {
        draftParams.forEach(param => {
            if (param.node.name === parser_1.AstNodeType.ValueOperandNode
                && param.node.field.type === types_1.FieldType.LookUp
                && (0, model_1.handleNullArray)(param.value) == null) {
                param.value = null;
            }
        });
    });
};
exports.handleLookupNullValue = handleLookupNullValue;


/***/ }),

/***/ 51067:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(30996), exports);
__exportStar(__webpack_require__(83074), exports);
__exportStar(__webpack_require__(98844), exports);
__exportStar(__webpack_require__(32352), exports);
__exportStar(__webpack_require__(28693), exports);


/***/ }),

/***/ 99139:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Interpreter = void 0;
const ast_1 = __webpack_require__(29099);
const token_1 = __webpack_require__(94595);
const functions_1 = __webpack_require__(28693);
const basic_1 = __webpack_require__(51965);
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const util_1 = __webpack_require__(16464);
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
class Interpreter {
    constructor(resolver, scope) {
        this.resolver = resolver;
        this.context = scope;
    }
    transformNodeValue(node, value, tokenType) {
        // Nodes of field value types need to perform dedicated string conversion logic
        if (node.name === ast_1.AstNodeType.ValueOperandNode || node.name === ast_1.AstNodeType.PureValueOperandNode) {
            const field = node.field;
            const fieldBasicValueType = model_1.Field.bindContext(field, this.context.state).basicValueType;
            /**
             * DateTime type is for comparison operators and needs to be compared in timestamp format,
             * @example {start time} = TODAY()
             */
            if ([types_1.BasicValueType.Number, types_1.BasicValueType.Boolean, types_1.BasicValueType.String].includes(fieldBasicValueType) ||
                (fieldBasicValueType === types_1.BasicValueType.DateTime &&
                    [
                        token_1.TokenType.Equal,
                        token_1.TokenType.NotEqual,
                        token_1.TokenType.Less,
                        token_1.TokenType.LessEqual,
                        token_1.TokenType.Greater,
                        token_1.TokenType.GreaterEqual,
                    ].includes(tokenType))) {
                return value;
            }
            if (fieldBasicValueType === types_1.BasicValueType.Array) {
                if (!(value === null || value === void 0 ? void 0 : value.length))
                    return null;
                switch (node.innerValueType) {
                    // directly take the first value for calculation
                    case types_1.BasicValueType.Number: {
                        if (value.length > 1) {
                            throw new basic_1.FormulaBaseError('');
                        }
                        return Number(value[0]);
                    }
                    default:
                        return model_1.Field.bindContext(field, this.context.state).arrayValueToString(value);
                }
            }
            return model_1.Field.bindContext(field, this.context.state).cellValueToString(value);
        }
        return value;
    }
    /**
     * Evaluate by accessing the abstract syntax tree
     * @param {AstNode} node
     * @returns {any}
     * @memberof Interpreter
     */
    visit(node, isErrorScope = false) {
        if (!node) {
            throw new TypeError('A AST Node is required to visit');
        }
        try {
            switch (node.name) {
                case ast_1.AstNodeType.BinaryOperatorNode: {
                    return this.visitBinaryOperatorNode(node);
                }
                case ast_1.AstNodeType.StringOperandNode: {
                    return this.visitStringOperatorNode(node);
                }
                case ast_1.AstNodeType.CallOperandNode: {
                    return this.visitCallOperatorNode(node, isErrorScope);
                }
                case ast_1.AstNodeType.NumberOperandNode: {
                    return this.visitNumberOperatorNode(node);
                }
                case ast_1.AstNodeType.UnaryOperatorNode: {
                    return this.visitUnaryOperatorNode(node);
                }
                case ast_1.AstNodeType.ValueOperandNode: {
                    return this.visitValueOperandNode(node);
                }
                case ast_1.AstNodeType.PureValueOperandNode: {
                    return this.visitPureValueOperandNode(node);
                }
                default: return;
            }
        }
        catch (e) {
            if (isErrorScope) {
                return e;
            }
            throw e;
        }
        throw new TypeError(`Unexpected AST Node Type: ${node.name}`);
    }
    visitBinaryOperatorNode(node) {
        var _a, _b;
        const tokenType = node.token.type;
        let left = this.transformNodeValue(node.left, this.visit(node.left), tokenType);
        let right = this.transformNodeValue(node.right, this.visit(node.right), tokenType);
        // Perform value conversion processing on the BLANK function
        if (((_a = node.left.token) === null || _a === void 0 ? void 0 : _a.value.toUpperCase()) === 'BLANK') {
            left = (0, basic_1.getBlankValueByType)(node.right.valueType, right);
        }
        if (((_b = node.right.token) === null || _b === void 0 ? void 0 : _b.value.toUpperCase()) === 'BLANK') {
            right = (0, basic_1.getBlankValueByType)(node.left.valueType, left);
        }
        switch (tokenType) {
            case token_1.TokenType.And: {
                return Boolean(left && right);
            }
            case token_1.TokenType.Or: {
                return Boolean(left || right);
            }
            case token_1.TokenType.Add: {
                left = left == null ? 0 : left;
                right = right == null ? 0 : right;
                if ((0, util_1.isNumber)(left) && (0, util_1.isNumber)(right)) {
                    return (0, utils_1.plus)(left, right);
                }
                return left + right;
            }
            case token_1.TokenType.Minus: {
                left = left == null ? 0 : left;
                right = right == null ? 0 : right;
                return (0, utils_1.minus)(left, right);
            }
            case token_1.TokenType.Times: {
                left = left == null ? 0 : left;
                right = right == null ? 0 : right;
                return (0, utils_1.times)(left, right);
            }
            case token_1.TokenType.Div: {
                left = left == null ? 0 : left;
                right = right == null ? 0 : right;
                return (0, utils_1.divide)(left, right);
            }
            case token_1.TokenType.Mod: {
                left = left == null ? 0 : left;
                right = right == null ? 0 : right;
                return left % right;
            }
            case token_1.TokenType.Equal: {
                // tslint:disable-next-line: triple-equals
                return left == right; // eslint-disable-line eqeqeq
            }
            case token_1.TokenType.NotEqual: {
                // tslint:disable-next-line: triple-equals
                return left != right; // eslint-disable-line eqeqeq
            }
            case token_1.TokenType.Greater: {
                return left > right;
            }
            case token_1.TokenType.GreaterEqual: {
                return left >= right;
            }
            case token_1.TokenType.Less: {
                return left < right;
            }
            case token_1.TokenType.LessEqual: {
                return left <= right;
            }
            case token_1.TokenType.Concat: {
                return String(left == null ? '' : left) + String(right == null ? '' : right);
            }
            default: return;
        }
        throw new TypeError(`Visitor can't process AST Node Type: ${node.token.type}`);
    }
    visitUnaryOperatorNode(node) {
        if (node.token.type === token_1.TokenType.Not) {
            return !this.visit(node.child);
        }
        if (node.token.type === token_1.TokenType.Add) {
            return +this.visit(node.child);
        }
        if (node.token.type === token_1.TokenType.Minus) {
            return -this.visit(node.child);
        }
        throw new TypeError(`Visitor can't process AST Node Type: ${node.token.type}`);
    }
    visitValueOperandNode(node, originValue) {
        return this.resolver(node.value.slice(1, -1), originValue);
    }
    visitPureValueOperandNode(node, originValue) {
        return this.resolver(node.value, originValue);
    }
    visitStringOperatorNode(node) {
        return node.value.slice(1, -1);
    }
    visitCallOperatorNode(node, isErrorScope = false) {
        var _a;
        const fnName = node.value.toUpperCase();
        const fnClass = functions_1.Functions.get(fnName);
        if (!fnClass) {
            throw new TypeError((0, i18n_1.t)(i18n_1.Strings.function_err_not_found_function_name_as, {
                fnName,
            }));
        }
        // The IS_ERROR function needs to monitor whether the internal equation will report an error, 
        // and IF/SWITCH needs to execute until Error before reporting an error.
        // So here is a special mark for IS_ERROR/IF/SWITCH functions
        // TODO: Do ISERROR compatibility here first, and delete the user data after brushing
        if (fnName === 'ISERROR' || fnName === 'IS_ERROR' || fnName === 'IF' || fnName === 'SWITCH') {
            isErrorScope = true;
        }
        const params = node.params.map(param => {
            let value = this.visit(param, isErrorScope);
            let valueType = param.valueType;
            // Nodes of field value types need to perform dedicated string conversion logic
            if (param.name === ast_1.AstNodeType.ValueOperandNode || param.name === ast_1.AstNodeType.PureValueOperandNode) {
                const field = param.field;
                // If the parameter type is Array && is not accepted by the function parameter type
                if (!fnClass.func.acceptValueType.has(valueType) && valueType === types_1.BasicValueType.Array) {
                    const innerValueType = param.innerValueType;
                    // When the built-in type of the array is Number and there is only one item, the corresponding operation can be performed.
                    // If there are multiple items, in order to avoid user misunderstanding, take the form of direct error reporting
                    if (innerValueType === types_1.BasicValueType.Number) {
                        if ((value === null || value === void 0 ? void 0 : value.length) > 1) {
                            throw new basic_1.FormulaBaseError('');
                        }
                        value = value && value[0];
                    }
                    else {
                        // The built-in type of the array is not Number, directly converted to a string
                        value = (value === null || value === void 0 ? void 0 : value.length) && value.filter((v) => !(0, util_1.isNull)(v)).join(', ');
                    }
                    innerValueType && (valueType = innerValueType);
                }
                /**
                 * value value return rules (granularity is specific formula class):
                 * 1. If acceptValueType does not contain valueType, it will be processed uniformly by the cellValueToString method;
                 * 2. If you need to return the original value, you need to add the current valueType to acceptValueType;
                 */
                if (!fnClass.func.acceptValueType.has(valueType)) {
                    if ((0, lodash_1.isString)(value)) {
                        value = value.split(', ');
                    }
                    value = model_1.Field.bindContext(field, this.context.state).cellValueToString(value);
                }
            }
            else {
                // Convert array type value to string type. (In theory, only field values will have array types, so this will not take effect)
                if (!fnClass.func.acceptValueType.has(valueType) && valueType === types_1.BasicValueType.Array) {
                    value = String(value);
                }
                // Convert date type value to string type.
                if (!fnClass.func.acceptValueType.has(valueType) && valueType === types_1.BasicValueType.DateTime) {
                    value = value == null ? value : new Date(value).toISOString();
                }
            }
            return { node: param, value };
        });
        fnClass.func.validateParams(node.params);
        // pre-check for DateTime class functions
        // LAST_MODIFIED_TIME is calculated based on record.recordMeta without the value of other cells
        if (fnClass.func.type === types_1.FormulaFuncType.DateTime && params.length && ((_a = params[0]) === null || _a === void 0 ? void 0 : _a.value) == null && fnName !== 'LAST_MODIFIED_TIME') {
            return null;
        }
        return fnClass.func.func(params, this.context);
    }
    visitNumberOperatorNode(node) {
        return Number(node.value);
    }
}
exports.Interpreter = Interpreter;


/***/ }),

/***/ 30996:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(37818), exports);
__exportStar(__webpack_require__(94595), exports);


/***/ }),

/***/ 37818:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FormulaExprLexer = exports.EXPR_GRAMMAR = void 0;
const token_1 = __webpack_require__(94595);
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
exports.EXPR_GRAMMAR = [
    // The value in the record obtained by the field name constant
    { key: token_1.TokenType.Value, exp: /(\{\})|(\{(\\[{}])*[\s\S]*?[^\\]\})/ },
    // string literal
    { key: token_1.TokenType.String, exp: /(["”“](([^\\"“”])*?\\["”“])*.*?["”“])|(['‘’](([^\\'‘’])*?\\['‘’])*.*?['‘’])/ },
    // function name or field name constant
    { key: token_1.TokenType.Call, exp: /[^0-9.+\-|=*/><()（）!&%'"“”‘’^`~,，\s][^+\-|=*/><()（）!&%'"“”‘’^`~,，\s]*/ },
    // number literal
    { key: token_1.TokenType.Number, exp: /[0-9.]+/ },
    // not equal to
    { key: token_1.TokenType.NotEqual, exp: /!=/ },
    // and
    { key: token_1.TokenType.And, exp: /&&/ },
    // greater or equal to
    { key: token_1.TokenType.GreaterEqual, exp: />=/ },
    // less than or equal to
    { key: token_1.TokenType.LessEqual, exp: /<=/ },
    // or
    { key: token_1.TokenType.Or, exp: /\|\|/ },
    // comma, parameter separator
    { key: token_1.TokenType.Comma, exp: /[,，]/ },
    // Not
    { key: token_1.TokenType.Not, exp: /!/ },
    // add +
    { key: token_1.TokenType.Add, exp: /\+/ },
    // reduce -
    { key: token_1.TokenType.Minus, exp: /-/ },
    // take *
    { key: token_1.TokenType.Times, exp: /\*/ },
    // remove /
    { key: token_1.TokenType.Div, exp: /\// },
    // take remainder %
    { key: token_1.TokenType.Mod, exp: /%/ },
    // string concatenation
    { key: token_1.TokenType.Concat, exp: /&/ },
    // more than the
    { key: token_1.TokenType.Greater, exp: />/ },
    // less than
    { key: token_1.TokenType.Less, exp: /</ },
    // equal to
    { key: token_1.TokenType.Equal, exp: /=/ },
    // Left parenthesis
    { key: token_1.TokenType.LeftParen, exp: /[(（]/ },
    // closing parenthesis
    { key: token_1.TokenType.RightParen, exp: /[)）]/ },
    // whitespace characters
    { key: token_1.TokenType.Blank, exp: /\s+/ },
    // all other
    { key: token_1.TokenType.Unknown, exp: /.+/ },
];
// The lexical analyzer of the formula, according to the incoming expression, exper -> token
class FormulaExprLexer {
    constructor(expression) {
        this.errors = []; // The lexer does not throw errors directly, but temporarily stores the errors for the caller to handle
        this.expression = expression;
        this.fullMatches = this.getFullMatches();
        this.matches = this.filterUselessToken(this.fullMatches);
        this.currentIndex = -1;
    }
    get currentTokenIndex() {
        return this.currentIndex;
    }
    set currentTokenIndex(index) {
        if (!(0, lodash_1.isNumber)(index))
            return;
        this.currentIndex = index;
    }
    getNextToken() {
        this.currentIndex++;
        if (this.currentIndex > this.matches.length - 1) {
            return null;
        }
        const token = this.matches[this.currentIndex];
        return token;
    }
    getPrevToken() {
        this.currentIndex--;
        if (this.currentIndex < 0) {
            return null;
        }
        const token = this.matches[this.currentIndex];
        return token;
    }
    reset() {
        this.currentIndex = -1;
    }
    getFullMatches() {
        const matched = this.expression.match(this.pattern()) || [];
        let index = 0;
        return matched.map((str, i) => {
            const token = this.tokenizer(index, str, matched[i + 1]);
            index += token.value.length;
            return token;
        });
    }
    filterUselessToken(tokens) {
        return tokens.filter(token => {
            if (token.type === token_1.TokenType.Unknown) {
                this.errors.push(new Error((0, i18n_1.t)(i18n_1.Strings.function_err_unrecognized_operator, {
                    token: token.value,
                })));
            }
            return token.type !== token_1.TokenType.Blank && token.type !== token_1.TokenType.Unknown;
        });
    }
    tokenizer(index, str, nextStr) {
        for (let i = 0; i < exports.EXPR_GRAMMAR.length; i++) {
            const key = exports.EXPR_GRAMMAR[i].key;
            const regex = exports.EXPR_GRAMMAR[i].exp;
            const type = key;
            if (regex.test(str)) {
                // When the tokenType matches Call, it is necessary to judge whether there is a left bracket, if not,
                // it means a pureValue without curly brackets
                if (type === token_1.TokenType.Call) {
                    if (!nextStr || this.tokenizer(index, nextStr).type !== token_1.TokenType.LeftParen) {
                        return new token_1.Token(token_1.TokenType.PureValue, index, str);
                    }
                }
                return new token_1.Token(type, index, str);
            }
        }
        throw new Error(`Unexpected token: ${str}`);
    }
    pattern() {
        const pattern = exports.EXPR_GRAMMAR.map(g => `(${g.exp.source})`).join('|');
        return new RegExp(pattern, 'g');
    }
}
exports.FormulaExprLexer = FormulaExprLexer;


/***/ }),

/***/ 94595:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Token = exports.TokenType = void 0;
var TokenType;
(function (TokenType) {
    TokenType["Call"] = "Call";
    TokenType["PureValue"] = "PureValue";
    TokenType["Value"] = "Value";
    TokenType["And"] = "And";
    TokenType["Comma"] = "Comma";
    TokenType["Number"] = "Number";
    TokenType["String"] = "String";
    TokenType["Less"] = "Less";
    TokenType["LessEqual"] = "LessEqual";
    TokenType["Greater"] = "Greater";
    TokenType["GreaterEqual"] = "GreaterEqual";
    TokenType["Equal"] = "Equal";
    TokenType["NotEqual"] = "NotEqual";
    TokenType["Add"] = "Add";
    TokenType["Minus"] = "Minus";
    TokenType["Times"] = "Times";
    TokenType["Mod"] = "Mod";
    TokenType["Div"] = "Div";
    TokenType["Concat"] = "Concat";
    TokenType["Or"] = "Or";
    TokenType["Not"] = "Not";
    TokenType["LeftParen"] = "LeftParen";
    TokenType["RightParen"] = "RightParen";
    TokenType["Blank"] = "Blank";
    TokenType["Unknown"] = "Unknown";
})(TokenType = exports.TokenType || (exports.TokenType = {}));
class Token {
    constructor(type, index, value) {
        this.type = type;
        this.index = index;
        this.value = value;
        // String and Value need to remove quotes and braces
        this.value = value;
    }
    toString() {
        return `${this.type}::${this.value}`;
    }
}
exports.Token = Token;


/***/ }),

/***/ 29099:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.StringOperandNode = exports.NumberOperandNode = exports.CallOperandNode = exports.PureValueOperandNode = exports.ValueOperandNode = exports.ValueOperandNodeBase = exports.UnaryOperatorNode = exports.BinaryOperatorNode = exports.AstNode = exports.AstNodeType = void 0;
const token_1 = __webpack_require__(94595);
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const consts_1 = __webpack_require__(32352);
const i18n_1 = __webpack_require__(47511);
var AstNodeType;
(function (AstNodeType) {
    AstNodeType["BinaryOperatorNode"] = "BinaryOperatorNode";
    AstNodeType["UnaryOperatorNode"] = "UnaryOperatorNode";
    AstNodeType["ValueOperandNode"] = "ValueOperandNode";
    AstNodeType["PureValueOperandNode"] = "PureValueOperandNode";
    AstNodeType["CallOperandNode"] = "CallOperandNode";
    AstNodeType["StringOperandNode"] = "StringOperandNode";
    AstNodeType["NumberOperandNode"] = "NumberOperandNode";
})(AstNodeType = exports.AstNodeType || (exports.AstNodeType = {}));
class AstNode {
    constructor(token) {
        this.token = token;
    }
    get numNodes() {
        return 1;
    }
    toString() {
        return `AstNode: ${this.token}::${this.name}`;
    }
}
exports.AstNode = AstNode;
class BinaryOperatorNode extends AstNode {
    constructor(left, token, right) {
        super(token);
        this.name = AstNodeType.BinaryOperatorNode;
        this.left = left;
        this.right = right;
        // TokenType.And, TokenType.Or, TokenType.Add,
        // TokenType.Times, TokenType.Div, TokenType.Minus,
        // TokenType.Mod, TokenType.Concat,
        switch (token.type) {
            // Addition, subtraction, multiplication and division operator symbols are calculated correctly only when both sides are numbers.
            case token_1.TokenType.Add: {
                const isNumberType = ({ valueType, innerValueType, token }) => {
                    return valueType === types_1.BasicValueType.Number || innerValueType === types_1.BasicValueType.Number || token.value.toUpperCase() === 'BLANK';
                };
                if ([left, right].every(isNumberType)) {
                    this.valueType = types_1.BasicValueType.Number;
                    return;
                }
                this.valueType = types_1.BasicValueType.String;
                return;
            }
            case token_1.TokenType.Minus:
            case token_1.TokenType.Times:
            case token_1.TokenType.Mod:
            case token_1.TokenType.Div: {
                this.valueType = types_1.BasicValueType.Number;
                return;
            }
            case token_1.TokenType.Or:
            case token_1.TokenType.And:
            case token_1.TokenType.Equal:
            case token_1.TokenType.NotEqual:
            case token_1.TokenType.Greater:
            case token_1.TokenType.GreaterEqual:
            case token_1.TokenType.Less:
            case token_1.TokenType.LessEqual: {
                this.valueType = types_1.BasicValueType.Boolean;
                return;
            }
            case token_1.TokenType.Concat: {
                this.valueType = types_1.BasicValueType.String;
                return;
            }
            default: {
                throw new TypeError((0, i18n_1.t)(i18n_1.Strings.function_err_unknown_operator, {
                    type: token.type,
                }));
            }
        }
    }
    get numNodes() {
        return 1 + this.left.numNodes + this.right.numNodes;
    }
}
exports.BinaryOperatorNode = BinaryOperatorNode;
class UnaryOperatorNode extends AstNode {
    constructor(child, token) {
        super(token);
        this.name = AstNodeType.UnaryOperatorNode;
        this.child = child;
        switch (token.type) {
            case token_1.TokenType.Minus:
                this.valueType = types_1.BasicValueType.Number;
                break;
            case token_1.TokenType.Not:
                this.valueType = types_1.BasicValueType.Boolean;
                break;
            case token_1.TokenType.Add:
                this.valueType = child.valueType;
                break;
            default:
                throw new Error(`unreachable ${token.value}`);
        }
    }
    get numNodes() {
        return 1 + this.child.numNodes;
    }
}
exports.UnaryOperatorNode = UnaryOperatorNode;
class ValueOperandNodeBase extends AstNode {
    constructor(token) {
        super(token);
        this.value = token.value.replace(/\\(.)/g, '$1');
    }
    init(fieldId, context, hostField) {
        this.context = context;
        fieldId = fieldId.replace(/\\(.)/g, '$1');
        if (fieldId === consts_1.ROLLUP_KEY_WORDS && hostField) {
            this.field = hostField;
            this.valueType = types_1.BasicValueType.Array;
        }
        else {
            const field = context.fieldMap[fieldId];
            if (!field) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_invalid_field_name, {
                    fieldId,
                }));
            }
            this.field = field;
            this.valueType = model_1.Field.bindContext(field, context.state).basicValueType;
        }
        const innerValueType = model_1.Field.bindContext(this.field, context.state).innerBasicValueType;
        this.innerValueType = innerValueType || types_1.BasicValueType.String;
    }
}
exports.ValueOperandNodeBase = ValueOperandNodeBase;
class ValueOperandNode extends ValueOperandNodeBase {
    constructor(token, context, hostField) {
        super(token);
        this.name = AstNodeType.ValueOperandNode;
        const fieldId = token.value.slice(1, -1);
        this.init(fieldId, context, hostField);
    }
}
exports.ValueOperandNode = ValueOperandNode;
class PureValueOperandNode extends ValueOperandNodeBase {
    constructor(token, context, hostField) {
        super(token);
        this.name = AstNodeType.PureValueOperandNode;
        const fieldId = token.value;
        this.init(fieldId, context, hostField);
    }
}
exports.PureValueOperandNode = PureValueOperandNode;
class CallOperandNode extends AstNode {
    constructor(token) {
        super(token);
        this.name = AstNodeType.CallOperandNode;
        this.params = [];
        this.value = token.value;
    }
    get numNodes() {
        return this.params.reduce((num, node) => num + node.numNodes, 1);
    }
}
exports.CallOperandNode = CallOperandNode;
class NumberOperandNode extends AstNode {
    constructor(token) {
        super(token);
        this.name = AstNodeType.NumberOperandNode;
        this.valueType = types_1.BasicValueType.Number;
        this.value = token.value;
    }
}
exports.NumberOperandNode = NumberOperandNode;
class StringOperandNode extends AstNode {
    constructor(token) {
        super(token);
        this.name = AstNodeType.StringOperandNode;
        this.valueType = types_1.BasicValueType.String;
        let tokenValue = token.value;
        const terminatorMap = new Map([
            [/\\n/g, '\n'],
            [/\\r/g, '\r'],
            [/\\t/g, '\t'], // tab 
        ]);
        terminatorMap.forEach((v, k) => {
            tokenValue = tokenValue.replace(k, v);
        });
        tokenValue = tokenValue.replace(/\\(.)/g, '$1');
        this.value = tokenValue;
    }
}
exports.StringOperandNode = StringOperandNode;


/***/ }),

/***/ 83074:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(29099), exports);
__exportStar(__webpack_require__(45252), exports);


/***/ }),

/***/ 45252:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FormulaExprParser = void 0;
const token_1 = __webpack_require__(94595);
const ast_1 = __webpack_require__(29099);
const functions_1 = __webpack_require__(28693);
const i18n_1 = __webpack_require__(47511);
const self_ref_error_1 = __webpack_require__(24777);
/**
  * operator precedence
  * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence
  * In the array below, the priority is sorted from high to low. The same line has the same priority.
  */
const PriorityMap = new Map();
[
    [token_1.TokenType.Times, token_1.TokenType.Div, token_1.TokenType.Mod],
    [token_1.TokenType.Add, token_1.TokenType.Minus],
    [token_1.TokenType.Greater, token_1.TokenType.GreaterEqual, token_1.TokenType.Less, token_1.TokenType.LessEqual],
    [token_1.TokenType.Equal, token_1.TokenType.NotEqual],
    [token_1.TokenType.And],
    [token_1.TokenType.Or],
    [token_1.TokenType.Concat],
].forEach((arr, index) => arr.forEach(type => PriorityMap.set(type, index)));
class FormulaExprParser {
    constructor(lexer, context) {
        this.lexer = lexer;
        this.context = context;
        this.currentToken = this.lexer.getNextToken();
    }
    parse() {
        const node = this.expr();
        if (this.currentToken != null) {
            console.error(this.currentToken);
            throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_unrecognized_char, {
                value: this.currentToken.value,
            }));
        }
        return node;
    }
    next(type) {
        if (this.currentToken == null) {
            return null;
        }
        if (this.currentToken.type === type) {
            this.currentToken = this.lexer.getNextToken();
        }
        else {
            switch (type) {
                case token_1.TokenType.LeftParen:
                    throw new SyntaxError((0, i18n_1.t)(i18n_1.Strings.function_err_no_left_bracket));
                case token_1.TokenType.RightParen:
                    throw new SyntaxError((0, i18n_1.t)(i18n_1.Strings.function_err_end_of_right_bracket));
            }
            throw new SyntaxError((0, i18n_1.t)(i18n_1.Strings.function_err_unable_parse_char, {
                value: this.currentToken.value,
            }));
        }
        return this.currentToken;
    }
    factor() {
        // factor : VALUE | LEFT_PAREN expr RIGHT_PAREN | NOT expr
        const token = this.currentToken;
        if (!token) {
            throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_wrong_function_suffix));
        }
        switch (token.type) {
            // field variable: {value}
            case token_1.TokenType.Value: {
                this.next(token_1.TokenType.Value);
                const tokenValue = token.value.slice(1, -1);
                if (tokenValue === this.context.field.id) {
                    throw new self_ref_error_1.SelfRefError();
                }
                return new ast_1.ValueOperandNode(token, this.context);
            }
            // field variable: value (without curly braces)
            case token_1.TokenType.PureValue: {
                this.next(token_1.TokenType.PureValue);
                const tokenValue = token.value;
                if (tokenValue === this.context.field.id) {
                    throw new self_ref_error_1.SelfRefError();
                }
                return new ast_1.PureValueOperandNode(token, this.context, this.context.field);
            }
            // Preset functions: Sum/Average ...
            case token_1.TokenType.Call: {
                this.next(token_1.TokenType.Call);
                const node = new ast_1.CallOperandNode(token);
                const FuncClass = functions_1.Functions.get(node.value.toUpperCase());
                if (!FuncClass) {
                    throw new TypeError((0, i18n_1.t)(i18n_1.Strings.function_err_not_definition, {
                        name: node.value,
                    }));
                }
                this.next(token_1.TokenType.LeftParen);
                if (!this.currentToken) {
                    throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_end_of_right_bracket));
                }
                while (this.currentToken.type !== token_1.TokenType.RightParen) {
                    node.params.push(this.expr());
                    if (!this.currentToken) {
                        throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_end_of_right_bracket));
                    }
                    // Exclude multiple parameters without commas
                    if (this.currentToken.type !== token_1.TokenType.Comma) {
                        break;
                    }
                }
                const valueType = FuncClass.func.getReturnType(node.params);
                node.valueType = valueType;
                this.next(token_1.TokenType.RightParen);
                return node;
            }
            // number: 123.333
            case token_1.TokenType.Number: {
                this.next(token_1.TokenType.Number);
                return new ast_1.NumberOperandNode(token);
            }
            // string: 'xyz'
            case token_1.TokenType.String: {
                this.next(token_1.TokenType.String);
                return new ast_1.StringOperandNode(token);
            }
            // Left parenthesis: '('
            case token_1.TokenType.LeftParen: {
                this.next(token_1.TokenType.LeftParen);
                const node = this.expr();
                this.next(token_1.TokenType.RightParen);
                return node;
            }
            // Negate sign (unary arithmetic sign): '!'
            case token_1.TokenType.Not: {
                this.next(token_1.TokenType.Not);
                const node = this.factor();
                return new ast_1.UnaryOperatorNode(node, token);
            }
            // + sign (unary arithmetic sign): '+'
            case token_1.TokenType.Add: {
                this.next(token_1.TokenType.Add);
                const node = this.factor();
                return new ast_1.UnaryOperatorNode(node, token);
            }
            // -sign (unary arithmetic sign): '-'
            case token_1.TokenType.Minus: {
                this.next(token_1.TokenType.Minus);
                const node = this.factor();
                return new ast_1.UnaryOperatorNode(node, token);
            }
            case token_1.TokenType.Comma: {
                this.next(token_1.TokenType.Comma);
                const node = this.expr();
                return node;
            }
            case token_1.TokenType.Blank: {
                this.next(token_1.TokenType.Blank);
                return this.factor();
            }
            default:
                throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_unknown_operator, {
                    type: token.value,
                }));
        }
    }
    expr(inner) {
        // expr   : factor ((&& | ||) factor)*
        // factor : Number | String | Call | VALUE | LEFT_PAREN expr RIGHT_PAREN | NOT expr
        let node = this.factor();
        while (this.currentToken &&
            [
                token_1.TokenType.And, token_1.TokenType.Or, token_1.TokenType.Add, token_1.TokenType.Times, token_1.TokenType.Div, token_1.TokenType.Minus,
                token_1.TokenType.Mod, token_1.TokenType.Concat, token_1.TokenType.Equal, token_1.TokenType.NotEqual, token_1.TokenType.Greater, token_1.TokenType.GreaterEqual,
                token_1.TokenType.Less, token_1.TokenType.LessEqual,
            ].includes(this.currentToken.type)) {
            const token = this.currentToken;
            this.next(token.type);
            if (!this.currentToken) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.function_err_wrong_function_suffix));
            }
            let right;
            let nextToken = null;
            const currentToken = this.currentToken;
            const currentTokenIndex = this.lexer.currentTokenIndex;
            /**
              * Take a step forward, get the token and go back
              *
              * 1. If you encounter a function or left parenthesis, go forward to test the entire function or parenthesis content,
              * get the following operator and then fall back
              *
              * 2. If it is not a function, just try a token forward, get the operator and then fall back
              */
            if ([token_1.TokenType.Call, token_1.TokenType.LeftParen].includes(currentToken.type)) {
                this.factor();
                nextToken = this.currentToken;
                this.currentToken = currentToken;
                this.lexer.currentTokenIndex = currentTokenIndex;
            }
            else {
                nextToken = this.lexer.getNextToken();
                this.lexer.getPrevToken();
            }
            const currentOpIndex = PriorityMap.get(token.type);
            if (nextToken) {
                const nextOpIndex = PriorityMap.get(nextToken.type);
                if (currentOpIndex != null && nextOpIndex != null && nextOpIndex < currentOpIndex) {
                    right = this.expr(true);
                }
                // When operators with different priorities are encountered in the loop, the recursion must be exited;
                if (inner && currentOpIndex != null && nextOpIndex != null && nextOpIndex > currentOpIndex) {
                    return new ast_1.BinaryOperatorNode(node, token, right || this.factor());
                }
            }
            node = new ast_1.BinaryOperatorNode(node, token, right || this.factor());
        }
        // 1 + (1 + 3) * 2
        return node;
    }
}
exports.FormulaExprParser = FormulaExprParser;


/***/ }),

/***/ 23440:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JOTApply = exports.databus = exports.api = void 0;
__exportStar(__webpack_require__(65654), exports);
__exportStar(__webpack_require__(97018), exports);
__exportStar(__webpack_require__(39036), exports);
__exportStar(__webpack_require__(89434), exports);
__exportStar(__webpack_require__(61116), exports);
__exportStar(__webpack_require__(8336), exports);
__exportStar(__webpack_require__(73578), exports);
__exportStar(__webpack_require__(26854), exports);
__exportStar(__webpack_require__(77511), exports);
__exportStar(__webpack_require__(47511), exports);
__exportStar(__webpack_require__(51067), exports);
__exportStar(__webpack_require__(40806), exports);
__exportStar(__webpack_require__(30485), exports);
__exportStar(__webpack_require__(73374), exports);
__exportStar(__webpack_require__(97154), exports);
__exportStar(__webpack_require__(94204), exports);
__exportStar(__webpack_require__(97093), exports);
__exportStar(__webpack_require__(63325), exports);
__exportStar(__webpack_require__(62625), exports);
__exportStar(__webpack_require__(56791), exports);
__exportStar(__webpack_require__(99054), exports);
exports.api = __importStar(__webpack_require__(86978));
const databus = __importStar(__webpack_require__(83866));
exports.databus = databus;
var resource_1 = __webpack_require__(99054);
Object.defineProperty(exports, "JOTApply", ({ enumerable: true, get: function () { return resource_1.JOTApply; } }));


/***/ }),

/***/ 89434:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(58802), exports);


/***/ }),

/***/ 58802:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.IO = void 0;
const player_1 = __webpack_require__(63325);
const types_1 = __webpack_require__(22919);
const async_1 = __webpack_require__(47063);
class IO {
    constructor(roomId, socket) {
        this.roomId = roomId;
        this.socket = socket;
        this.abort = false; // abort link
        this.callbackCache = new Map();
    }
    waitToConnect() {
        return __awaiter(this, void 0, void 0, function* () {
            this.abort = false;
            while (!this.socket.connected) {
                console.log(`waiting for ${this.roomId} socket connection...`);
                if (this.abort) {
                    console.error('Connection cancelled: ', this.roomId);
                    return false;
                }
                yield (0, async_1.wait)(500);
            }
            return true;
        });
    }
    watch(roomId, shareId, embedId, params) {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.waitToConnect();
            return new Promise((resolve, reject) => {
                if (!this.socket.connected) {
                    resolve();
                    return;
                }
                let retryTimes = 3;
                const emit = (interval) => {
                    this.socket.emit(types_1.SyncRequestTypes.WATCH_ROOM, Object.assign(Object.assign({}, params), { roomId, shareId, embedLinkId: embedId }), (msg) => {
                        interval && clearInterval(interval);
                        if ('success' in msg && msg.success) {
                            console.log('watched in ', roomId, this.socket.id, 'msg:', msg);
                            resolve(msg);
                        }
                        else {
                            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                                error: new Error(`watchRoom failed: ${msg.message}`),
                                metaData: {
                                    socketConnected: this.socket.connected
                                },
                            });
                            reject(msg);
                        }
                    });
                };
                const interval = setInterval(() => {
                    if (retryTimes < 0) {
                        clearInterval(interval);
                        reject('The link with the server has not been established successfully, please refresh and try again. \
                  If you have any questions, please scan the QR code on the right to add customer service, and let us help you solve');
                    }
                    retryTimes--;
                    emit(interval);
                }, 5 * 1000);
                emit(interval);
            });
        });
    }
    request(params) {
        if (!this.socket) {
            throw new Error('socket didn\'t prepared');
        }
        // console.log('Send data:', params);
        return new Promise((resolve) => {
            this.socket.emit(params.type, params, (responseData) => {
                resolve(responseData);
            });
        });
    }
    unWatch() {
        this.abort = true;
        return new Promise((resolve) => {
            this.socket.emit(types_1.SyncRequestTypes.LEAVE_ROOM, { roomId: this.roomId }, (msg) => {
                console.log('unwatch: ', this.roomId, 'msg:', msg);
                this.offAll();
                resolve(msg);
            });
        });
    }
    offAll() {
        this.callbackCache.forEach((cb, name) => {
            this.socket.off(name, cb);
        });
        this.callbackCache.clear();
    }
    on(name, cb) {
        if (this.callbackCache.has(name)) {
            throw new Error(`Do not bind socket events repeatedly: ${name}`);
        }
        this.callbackCache.set(name, cb);
        this.socket.on(name, cb);
    }
}
exports.IO = IO;


/***/ }),

/***/ 89838:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkIntegrityChecker = void 0;
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
// resolve one-way association
class LinkIntegrityChecker {
    constructor(store) {
        this.store = store;
    }
    parse(actions, datasheetId, linkedActions) {
        if (linkedActions === null || linkedActions === void 0 ? void 0 : linkedActions.length) {
            return actions;
        }
        const state = this.store.getState();
        for (const action of actions) {
            if (!action.p.includes('fieldMap')) {
                continue;
            }
            const data = (action['oi'] || action['od']);
            const currentField = store_1.Selectors.getField(state, data.id, datasheetId);
            if (currentField.type !== types_1.FieldType.Link) {
                continue;
            }
            return [];
        }
        return actions;
    }
}
exports.LinkIntegrityChecker = LinkIntegrityChecker;


/***/ }),

/***/ 39221:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.COLOR_MAP = void 0;
// WARN: this color file is generated and synced by script, DO NOT modify it manually!!!
exports.COLOR_MAP = {
    black: '#8C8C8C',
    blackBlue: '#9FA1BB',
    blue: '#55CDFF',
    brown: '#6E382D',
    deepPurple: '#7B67EE',
    green: '#52C41B',
    indigo: '#5586FF',
    orange: '#FFAB00',
    pink: '#FF708B',
    purple: '#B35FF5',
    red: '#E33E38',
    tangerine: '#FF7A00',
    teal: '#30C28B',
    yellow: '#FFD43A',
};


/***/ }),

/***/ 87987:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getColorNames = exports.getFieldOptionColor = void 0;
const color_1 = __importDefault(__webpack_require__(39105));
const _colors_1 = __webpack_require__(39221);
const COLOR_INDEX_NAME = [
    'deepPurple',
    'indigo',
    'blue',
    'teal',
    'green',
    'yellow',
    'orange',
    'tangerine',
    'pink',
    'red',
];
// five level alpha transparency
const COLOR_LEVEL_ALPHA = [0.2, 0.4, 0.6, 0.8, 1];
const rgba2hex = (foregroundColor, backgroundColor = '#FFFFFF') => {
    const getAdjustedChannel = (fValue, bValue, opacity) => opacity * fValue + (1 - opacity) * bValue;
    const fc = (0, color_1.default)(foregroundColor);
    const bc = (0, color_1.default)(backgroundColor);
    const opacity = fc.alpha();
    const adjustedColor = (0, color_1.default)([
        getAdjustedChannel(fc.red(), bc.red(), opacity),
        getAdjustedChannel(fc.green(), bc.green(), opacity),
        getAdjustedChannel(fc.blue(), bc.blue(), opacity),
    ]);
    return adjustedColor.hex();
};
const getColorValue = (color, alpha) => {
    return rgba2hex((0, color_1.default)(color).alpha(alpha).string());
};
/**
 * get single or multiple color object, transformed by color number
 *
 * 0 => deepPurple_1
 * 10 => deepPurple_2
 * 11 => indigo_2
 * @param index option.color
 */
function getFieldOptionColor(index) {
    const hue = COLOR_INDEX_NAME[index % COLOR_INDEX_NAME.length];
    const level = Math.floor(index / COLOR_INDEX_NAME.length);
    const baseColorValue = _colors_1.COLOR_MAP[hue];
    const value = getColorValue(baseColorValue, COLOR_LEVEL_ALPHA[level]);
    return {
        name: `${hue}_${level}`,
        value,
    };
}
exports.getFieldOptionColor = getFieldOptionColor;
/**
 * get all color name array, index is color number
 */
const getColorNames = () => {
    const colorNames = [];
    const colorNumMax = COLOR_INDEX_NAME.length * COLOR_LEVEL_ALPHA.length;
    for (let i = 0; i < colorNumMax; i++) {
        const hue = COLOR_INDEX_NAME[i % COLOR_INDEX_NAME.length];
        const level = Math.floor(i / COLOR_INDEX_NAME.length);
        colorNames.push(`${hue}_${level}`);
    }
    return colorNames;
};
exports.getColorNames = getColorNames;


/***/ }),

/***/ 31923:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ValueTypeMap = exports.DEFAULT_TIME_ZONE = exports.NO_COVER_FIELD_ID = void 0;
const types_1 = __webpack_require__(73578);
const env_1 = __webpack_require__(13799);
// album(gallery) view has no cover field ID
exports.NO_COVER_FIELD_ID = 'NO_COVER_FIELD_ID';
exports.DEFAULT_TIME_ZONE = (0, env_1.isServer)() && (process.env.TZ || process.env.TIMEZONE) || 'America/Toronto';
exports.ValueTypeMap = {
    [types_1.BasicValueType.Number]: 'number',
    [types_1.BasicValueType.String]: 'string',
    [types_1.BasicValueType.Boolean]: 'boolean',
    [types_1.BasicValueType.Array]: 'array',
    [types_1.BasicValueType.DateTime]: 'string',
};


/***/ }),

/***/ 89085:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DashboardAction = void 0;
const ot_1 = __webpack_require__(65315);
class DashboardAction {
    // install widget
    static addWidget2Action(snapshot, options) {
        var _a;
        const widgetInstallations = snapshot.widgetInstallations;
        const widgetCount = (_a = widgetInstallations.layout) === null || _a === void 0 ? void 0 : _a.length;
        const { layout } = options;
        if (!widgetCount) {
            // first join
            return [
                {
                    n: ot_1.OTActionName.ObjectInsert,
                    p: ['widgetInstallations', 'layout'],
                    oi: layout,
                },
            ];
        }
        const action = [];
        layout.forEach((widget, index) => {
            action.push({
                n: ot_1.OTActionName.ListInsert,
                p: ['widgetInstallations', 'layout', widgetCount + index],
                li: widget,
            });
        });
        return action;
    }
    // delete widget
    static deleteWidget2Action(snapshot, widgetId) {
        const layout = snapshot.widgetInstallations.layout;
        const layoutIndex = layout.findIndex(item => item.id === widgetId);
        return [
            {
                n: ot_1.OTActionName.ListDelete,
                p: ['widgetInstallations', 'layout', layoutIndex],
                ld: layout[layoutIndex],
            },
        ];
    }
    // change the layout of widgets
    static changeWidgetLayout2Action(snapshot, options) {
        const oldLayout = snapshot.widgetInstallations.layout;
        const { layout } = options;
        if (layout.length !== (oldLayout === null || oldLayout === void 0 ? void 0 : oldLayout.length)) {
            return null;
        }
        const actions = [];
        oldLayout.map((oldPosition, index) => {
            const newPosition = layout[index];
            for (const k in oldPosition) {
                actions.push({
                    n: ot_1.OTActionName.ObjectReplace,
                    p: ['widgetInstallations', 'layout', index, k],
                    oi: newPosition[k],
                    od: oldPosition[k],
                });
            }
        });
        return actions;
    }
}
exports.DashboardAction = DashboardAction;


/***/ }),

/***/ 55384:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DatasheetActions = void 0;
const compensator_1 = __webpack_require__(40806);
const engine_1 = __webpack_require__(39036);
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const utils_2 = __webpack_require__(26854);
const field_1 = __webpack_require__(46559);
const views_1 = __webpack_require__(58009);
const view_derivate_1 = __webpack_require__(21852);
// TODO: all fields should be checked, not only the first one
function validateFilterInfo(filterInfo) {
    if (filterInfo == null) {
        return true;
    }
    if (!Array.isArray(filterInfo.conditions)) {
        return false;
    }
    if (filterInfo.conjunction == null) {
        return false;
    }
    return true;
}
function getDefaultNewRecordDataByGroup(groupInfos, groupCellValues) {
    const recordData = {};
    if (groupInfos.length === 0 || !groupCellValues) {
        return recordData;
    }
    groupInfos.forEach((group, i) => {
        recordData[group.fieldId] = groupCellValues[i];
    });
    return recordData;
}
function getDefaultNewRecordDataByFilter(state, datasheetId, filterInfo, fieldMap, userInfo) {
    const { conditions } = filterInfo;
    const recordData = {};
    // Or combination, there are multiple filter conditions, no default data fill in,
    // and there is only one filter condition, then it is processed according to the `and` logic
    if (filterInfo.conjunction === types_1.FilterConjunction.Or && filterInfo.conditions.length !== 1) {
        return recordData;
    }
    // And combination
    // 1. Group filter conditions by fieldId
    const conditionGroups = conditions.reduce((prev, condition) => {
        const { fieldId } = condition;
        let group = prev[fieldId];
        if (!group) {
            group = prev[fieldId] = [];
        }
        group.push(condition);
        return prev;
    }, {});
    // 2. Determine the final `And` fill value, for each field corresponding to the filter condition
    for (const fieldId in conditionGroups) {
        const field = fieldMap[fieldId];
        if (!field) {
            continue;
        }
        const isComputedField = field_1.Field.bindContext(field, state).isComputed;
        if (isComputedField) {
            // the cell of calc field, no need to fill in default value
            continue;
        }
        const conditionGroup = conditionGroups[fieldId];
        const isMultiValueField = field_1.Field.bindContext(field, state).isMultiValueField();
        const candidate = new Set();
        // 2.1. Collect all candidate values of all conditions
        for (let i = 0, ii = conditionGroup.length; i < ii; i++) {
            const condition = conditionGroup[i];
            const currentValue = field_1.Field.bindContext(field, state).defaultValueForCondition(condition);
            if (currentValue == null) {
                continue;
            }
            // multi-value type field, need to split the value "unique"
            // TODO: currently multi-value type field is basic type, so use "Set".
            // In the future, if reference type, optimize this
            if (isMultiValueField && Array.isArray(currentValue)) {
                currentValue.forEach(v => {
                    if (field.type === field_types_1.FieldType.Member && v === field_1.OtherTypeUnitId.Self) {
                        userInfo && candidate.add(userInfo.unitId);
                        return;
                    }
                    candidate.add(v);
                });
            }
            else {
                candidate.add(currentValue);
            }
        }
        // no candidate values
        if (candidate.size === 0) {
            continue;
        }
        let result;
        if (isMultiValueField) {
            // multi value field, can put all candidate values together
            result = [...candidate];
        }
        else if (candidate.size === 1) {
            // single value field, only one value can meet the `And` condition
            result = candidate.values().next().value;
        }
        else {
            // single value field, more than one value can meet the `And` condition, which is not allowed
            continue;
        }
        /**
         * candidate default value must be able to pass all filter conditions.
         * assume that there are two filter conditions for the numeric field, =1 And < 0.
         * candidate value logic is 1, calc by the above.
         * and 1 cannot pass =1 and <0, default fill in this value does not meet user expectations.
         */
        const viewFilterDerivate = new view_derivate_1.ViewFilterDerivate(state, datasheetId);
        const pass = conditionGroup.every(condition => viewFilterDerivate.doFilter(condition, field, result));
        if (pass) {
            // different fields of `And`, only need to assign the values that have values to them.
            recordData[fieldId] = result;
        }
    }
    return recordData;
}
class DatasheetActions {
    /**
     * add `view` to table
     */
    static addView2Action(snapshot, payload) {
        const { view } = payload;
        let { startIndex } = payload;
        const views = snapshot.meta.views;
        if (views.length >= (0, utils_1.getMaxViewCountPerSheet)()) {
            return null;
        }
        if (!views.every(viw => viw.id !== view.id)) {
            return null;
        }
        if (!(startIndex !== undefined && startIndex >= 0 && startIndex <= views.length)) {
            startIndex = views.length;
        }
        // when add new datasheet view, set default summary value of the analysis bar
        const setDefaultFieldStat = (view) => {
            if (view.type !== store_1.ViewType.Grid)
                return view;
            const newView = Object.assign(Object.assign({}, view), { columns: view.columns.map((col, i) => {
                    var _a, _b;
                    if (i < 1)
                        return Object.assign(Object.assign({}, col), { statType: field_1.StatType.CountAll });
                    if ([field_types_1.FieldType.Number, field_types_1.FieldType.Currency].includes((_b = (_a = snapshot.meta.fieldMap) === null || _a === void 0 ? void 0 : _a[col.fieldId]) === null || _b === void 0 ? void 0 : _b.type)) {
                        return Object.assign(Object.assign({}, col), { statType: field_1.StatType.Sum });
                    }
                    return col;
                }) });
            return newView;
        };
        return {
            n: engine_1.OTActionName.ListInsert,
            p: ['meta', 'views', startIndex],
            li: setDefaultFieldStat(view),
        };
    }
    /**
     * delete view based viewID,
     *
     * @param {string} viewId
     */
    static deleteView2Action(snapshot, payload) {
        const views = snapshot.meta.views;
        const viewId = payload.viewId;
        // check whether current is activeView
        const viewIndex = (0, lodash_1.findIndex)(views, viw => viw.id === viewId);
        if (viewIndex < 0) {
            return null;
        }
        return {
            n: engine_1.OTActionName.ListDelete,
            p: ['meta', 'views', viewIndex],
            ld: views[viewIndex],
        };
    }
    /**
     * update view based viewID
     *
     * @param {string} viewId
     */
    static modifyView2Action(snapshot, payload) {
        const views = snapshot.meta.views;
        const { viewId, key, value } = payload;
        // check whether current is activeView
        const viewIndex = (0, lodash_1.findIndex)(views, viw => viw.id === viewId);
        if (viewIndex < 0) {
            return null;
        }
        if (key === 'columns' && Array.isArray(value)) {
            const rlt = [];
            value.forEach(item => {
                const fieldId = item.fieldId;
                const view = views[viewIndex];
                const columns = view['columns'];
                const modifyColumnIndex = columns.findIndex(column => column.fieldId === fieldId);
                const oldItem = columns[modifyColumnIndex];
                if (!(0, lodash_1.isEqual)(oldItem, item)) {
                    rlt.push({
                        n: engine_1.OTActionName.ListReplace,
                        p: ['meta', 'views', viewIndex, 'columns', modifyColumnIndex],
                        ld: oldItem,
                        li: item,
                    });
                }
            });
            return rlt;
        }
        return [
            {
                n: engine_1.OTActionName.ObjectReplace,
                p: ['meta', 'views', viewIndex, key],
                od: views[viewIndex][key],
                oi: value,
            },
        ];
    }
    /**
     * add Field to table
     */
    static addField2Action(snapshot, payload) {
        const fieldMap = snapshot.meta.fieldMap;
        const views = snapshot.meta.views;
        const { field, viewId, fieldId, offset, index, hiddenColumn } = payload;
        const actions = views.reduce((pre, cur, viewIndex) => {
            let columnIndex = cur.columns.length;
            if (cur.columns.some(column => column.fieldId === field.id)) {
                return pre;
            }
            // as new columns with duplicate operation, pass in `index` to take precedence
            if (viewId && index && viewId === cur.id) {
                columnIndex = index;
            }
            // only under specified view, if fieldId exists, calc index by every view's fieldId
            if (fieldId) {
                const fieldIdIndex = cur.columns.findIndex(column => column.fieldId === fieldId);
                columnIndex = fieldIdIndex + (offset !== null && offset !== void 0 ? offset : 0);
            }
            const newColumn = {
                fieldId: field.id,
            };
            if ([field_types_1.FieldType.Number, field_types_1.FieldType.Currency].includes(field.type)) {
                newColumn.statType = field_1.StatType.Sum;
            }
            // handler of new column in view
            function viewColumnHandler() {
                let hiddenKey = 'hidden';
                switch (cur.type) {
                    case store_1.ViewType.Gantt:
                        hiddenKey = 'hiddenInGantt';
                        break;
                    case store_1.ViewType.Calendar:
                        hiddenKey = 'hiddenInCalendar';
                        break;
                    case store_1.ViewType.OrgChart:
                        hiddenKey = 'hiddenInOrgChart';
                        break;
                    default:
                        // current view default display or view has no hidden column
                        if ((viewId && viewId === cur.id) || cur.columns.every(column => !column.hidden)) {
                            newColumn.hidden = Boolean(hiddenColumn);
                            return;
                        }
                        break;
                }
                const isGanttView = viewId === cur.id && cur.type === store_1.ViewType.Gantt;
                newColumn.hidden = !isGanttView || hiddenColumn;
                newColumn[hiddenKey] = true;
            }
            viewColumnHandler();
            pre.push({
                n: engine_1.OTActionName.ListInsert,
                p: ['meta', 'views', viewIndex, 'columns', columnIndex],
                li: newColumn,
            });
            return pre;
        }, []);
        if (!fieldMap[field.id]) {
            actions.push({
                n: engine_1.OTActionName.ObjectInsert,
                p: ['meta', 'fieldMap', field.id],
                oi: field,
            });
        }
        return actions;
    }
    /**
     * delete field
     */
    static deleteField2Action(snapshot, payload) {
        const fieldMap = snapshot.meta.fieldMap;
        const views = snapshot.meta.views;
        const { fieldId, datasheetId, viewId } = payload;
        // delete all columns related attributes in all view
        const actions = views.reduce((action, view, index) => {
            const columnIndex = view.columns.findIndex(column => column.fieldId === fieldId);
            if (columnIndex < 0) {
                return action;
            }
            const deleteGroupOrSortInfo = (type) => {
                var _a;
                const info = type === 'groupInfo' ? view.groupInfo : (_a = view.sortInfo) === null || _a === void 0 ? void 0 : _a.rules;
                if (info) {
                    const infoIndex = info.findIndex(gp => gp.fieldId === fieldId);
                    if (infoIndex > -1 && info.length > 1) {
                        if (type === 'groupInfo') {
                            action.push({
                                n: engine_1.OTActionName.ListDelete,
                                p: ['meta', 'views', index, type, infoIndex],
                                ld: info[infoIndex],
                            });
                            compensator_1.compensator.setLastGroupInfoIfNull(info);
                        }
                        else {
                            action.push({
                                n: engine_1.OTActionName.ListDelete,
                                p: ['meta', 'views', index, type, 'rules', infoIndex],
                                ld: info[infoIndex],
                            });
                        }
                    }
                    // remain the last one, need to delete the group/sort field directly
                    if (infoIndex > -1 && info.length === 1) {
                        action.push({
                            n: engine_1.OTActionName.ObjectDelete,
                            p: ['meta', 'views', index, type],
                            od: type === 'groupInfo' ? info : view.sortInfo,
                        });
                    }
                }
            };
            const deleteKanbanFieldId = () => {
                const isKanbanView = view.type === store_1.ViewType.Kanban && view.style.kanbanFieldId === fieldId;
                if (isKanbanView) {
                    action.push({
                        n: engine_1.OTActionName.ObjectDelete,
                        p: ['meta', 'views', index, 'style', 'kanbanFieldId'],
                        od: fieldId,
                    });
                }
            };
            const deleteGanttFieldId = () => {
                if (view.type !== store_1.ViewType.Gantt) {
                    return;
                }
                const isStartField = view.style.startFieldId === fieldId;
                const isEndField = view.style.endFieldId === fieldId;
                if (isStartField) {
                    action.push({
                        n: engine_1.OTActionName.ObjectDelete,
                        p: ['meta', 'views', index, 'style', 'startFieldId'],
                        od: fieldId,
                    });
                }
                if (isEndField) {
                    action.push({
                        n: engine_1.OTActionName.ObjectDelete,
                        p: ['meta', 'views', index, 'style', 'endFieldId'],
                        od: fieldId,
                    });
                }
            };
            const setFrozenColumnCount = () => {
                const frozenColumnCount = view === null || view === void 0 ? void 0 : view.frozenColumnCount;
                if (frozenColumnCount && columnIndex < frozenColumnCount) {
                    action.push({
                        n: engine_1.OTActionName.ObjectReplace,
                        p: ['meta', 'views', index, 'frozenColumnCount'],
                        oi: frozenColumnCount - 1,
                        od: frozenColumnCount,
                    });
                }
            };
            if (datasheetId !== snapshot.datasheetId || !(view.lockInfo && view.id !== viewId)) {
                // judgement here is for the permissions tips of lock view.
                // for example, `view 2` set field A's filter condition, I delete field A in `view 1`,
                // because `view 2`'s view lock will make me operation failed,
                // from user's point of view, he may not delete one field before check all views, and close view lock
                // so, judgement here is to delete field, and at the same time, doesn't delete the information in lock view,
                // just show exception tips only
                // what's special, is the relation table operation, verifications of relation table in middle server(room-server) is not strict,
                // only require editable permission, therefor, relation table operation can go pass directly.
                // the dependencies in filter's field, also need to be deleted
                if (view.filterInfo) {
                    const newConditions = view.filterInfo.conditions.filter(condition => {
                        if (condition.fieldId === fieldId) {
                            return false;
                        }
                        return true;
                    });
                    if (newConditions.length === 0) {
                        action.push({
                            n: engine_1.OTActionName.ObjectDelete,
                            p: ['meta', 'views', index, 'filterInfo'],
                            od: view.filterInfo,
                        });
                    }
                    else if (newConditions.length !== view.filterInfo.conditions.length) {
                        action.push({
                            n: engine_1.OTActionName.ObjectReplace,
                            p: ['meta', 'views', index, 'filterInfo', 'conditions'],
                            od: view.filterInfo.conditions,
                            oi: newConditions,
                        });
                    }
                }
                deleteGroupOrSortInfo('groupInfo');
                deleteGroupOrSortInfo('sortInfo');
                deleteKanbanFieldId();
                deleteGanttFieldId();
                setFrozenColumnCount();
            }
            // delete columns
            action.push({
                n: engine_1.OTActionName.ListDelete,
                p: ['meta', 'views', index, 'columns', columnIndex],
                ld: view.columns[columnIndex],
            });
            return action;
        }, []);
        const field = fieldMap[fieldId];
        if (field) {
            // when delete date column, remove alarm
            const recordMap = snapshot.recordMap;
            Object.keys(recordMap).forEach(recordId => {
                const alarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, recordId, field.id);
                if (alarm) {
                    const alarmActions = DatasheetActions.setDateTimeCellAlarm(snapshot, {
                        recordId,
                        fieldId: field.id,
                        alarm: null,
                    });
                    if (alarmActions) {
                        actions.push(...alarmActions);
                    }
                }
            });
            actions.push({
                n: engine_1.OTActionName.ObjectDelete,
                p: ['meta', 'fieldMap', fieldId],
                od: field,
            });
        }
        return actions;
    }
    /**
     * add record to table
     */
    static addRecord2Action(snapshot, payload) {
        const recordMap = snapshot.recordMap;
        const views = snapshot.meta.views;
        const { record, index, viewId } = payload;
        const actions = views.reduce((pre, cur, viewIndex) => {
            let rowIndex = cur.rows.length;
            if (cur.rows.some(row => row.recordId === record.id)) {
                return pre;
            }
            // only add to index when view is active
            if (viewId === cur.id) {
                rowIndex = index;
            }
            pre.push({
                n: engine_1.OTActionName.ListInsert,
                p: ['meta', 'views', viewIndex, 'rows', rowIndex],
                li: { recordId: record.id },
            });
            return pre;
        }, []);
        if (!recordMap[record.id]) {
            actions.push({
                n: engine_1.OTActionName.ObjectInsert,
                p: ['recordMap', record.id],
                oi: record,
            });
        }
        return actions;
    }
    /**
     * update record, when return null, it means record does not exist and current table's value has not changed
     */
    static setRecord2Action(snapshot, payload) {
        const { recordId, fieldId, value } = payload;
        // recordId, not exist in data
        if (!snapshot.recordMap[recordId]) {
            return null;
        }
        // oldCellValue, don't use `getCellValue`, because it may be a computed field
        const cv = snapshot.recordMap[recordId].data[fieldId];
        const oldCellValue = cv == null ? null : cv;
        // non-computed field, check whether value has changed
        if ((0, lodash_1.isEqual)(oldCellValue, value)) {
            return null;
        }
        // when value is empty(empty array), we should delete the key to avoid redundancy
        if (value == null || (Array.isArray(value) && value.length === 0)) {
            return {
                n: engine_1.OTActionName.ObjectDelete,
                p: ['recordMap', recordId, 'data', fieldId],
                od: oldCellValue,
            };
        }
        // when origin cellValue is empty, in fact it need insert one fieldId key
        if (oldCellValue == null) {
            return {
                n: engine_1.OTActionName.ObjectInsert,
                p: ['recordMap', recordId, 'data', fieldId],
                oi: value,
            };
        }
        return {
            n: engine_1.OTActionName.ObjectReplace,
            p: ['recordMap', recordId, 'data', fieldId],
            od: oldCellValue,
            oi: value,
        };
    }
    /**
     * delete record by record id
     */
    static deleteRecords(snapshot, payload) {
        const recordMap = snapshot.recordMap;
        const recordSize = Object.keys(recordMap).length;
        const views = snapshot.meta.views;
        const fieldMap = snapshot.meta.fieldMap;
        const { recordIds, getFieldByFieldId, state } = payload;
        const waitDeleteRecordSet = new Set(recordIds);
        compensator_1.compensator.addWillRemoveRecords(recordIds);
        let actions = [];
        /**
         *
         * depends on records count to delete,  and the percent of delete count and total count to judge
         * delete one by one (ld) ,  or total replace(or)
         *
         * when the number of records to delete larger than 500,
         * or delete records / total records percent larger thant 50%,
         * and total records larger than 160,
         * then total replace
         * otherwise delete one by one
         *
         */
        // delete all rows in views
        const rate = waitDeleteRecordSet.size / recordSize;
        if ((rate > 0.5 && recordSize > 100) || waitDeleteRecordSet.size > 500) {
            // delete related records in views
            actions = views.map((curView, index) => {
                const nextViewRows = curView.rows.reduce((pre, row) => {
                    if (!waitDeleteRecordSet.has(row.recordId)) {
                        pre.push(row);
                    }
                    return pre;
                }, []);
                return {
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['meta', 'views', index, 'rows'],
                    od: curView.rows,
                    oi: nextViewRows,
                };
            });
        }
        else {
            // delete one by one
            actions = views.reduce((pre, cur, index) => {
                const toDelete = cur.rows
                    .reduce((pre, row, i) => {
                    if (waitDeleteRecordSet.has(row.recordId)) {
                        pre.push({
                            recordId: row.recordId,
                            index: i,
                        });
                    }
                    return pre;
                }, [])
                    .map((item, i) => {
                    return {
                        n: engine_1.OTActionName.ListDelete,
                        p: ['meta', 'views', index, 'rows', item.index - i],
                        ld: cur.rows[item.index],
                    };
                });
                pre.push(...toDelete);
                return pre;
            }, []);
        }
        recordIds.forEach(recordId => {
            const record = recordMap[recordId];
            if (record) {
                const data = {};
                for (const k in record.data) {
                    const field = getFieldByFieldId(k);
                    if (field_1.Field.bindContext(field, state).recordEditable()) {
                        data[k] = record.data[k];
                    }
                }
                const _record = Object.assign(Object.assign({}, record), { data: data });
                // when delete date, remove alarm
                // TODO(kailang) ObjectDelete has did this
                Object.keys(fieldMap).forEach(fieldId => {
                    if (fieldMap[fieldId].type === field_types_1.FieldType.DateTime) {
                        const alarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, recordId, fieldId);
                        if (alarm) {
                            const alarmActions = DatasheetActions.setDateTimeCellAlarm(snapshot, {
                                recordId,
                                fieldId,
                                alarm: null,
                            });
                            if (alarmActions) {
                                actions.push(...alarmActions);
                            }
                        }
                    }
                });
                actions.push({
                    n: engine_1.OTActionName.ObjectDelete,
                    p: ['recordMap', recordId],
                    od: _record,
                });
            }
        });
        return actions;
    }
    /**
     * set alarm by record
     */
    static setDateTimeCellAlarm(snapshot, payload) {
        var _a, _b, _c;
        const { recordId, fieldId, alarm } = payload;
        const oldAlarm = store_1.Selectors.getDateTimeCellAlarm(snapshot, recordId, fieldId);
        // new alarm
        if (!oldAlarm) {
            const fieldExtraMap = (_b = (_a = snapshot.recordMap[recordId]) === null || _a === void 0 ? void 0 : _a.recordMeta) === null || _b === void 0 ? void 0 : _b.fieldExtraMap;
            // compensate snapshot fieldExtraMap default data
            let defaultAction;
            // without fieldExtraMap
            if (!fieldExtraMap) {
                defaultAction = {
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['recordMap', recordId, 'recordMeta', 'fieldExtraMap'],
                    oi: {
                        [fieldId]: {},
                    },
                };
            }
            else if (!fieldExtraMap[fieldId]) {
                // already have fieldExtraMap, but still have no fieldExtraMap[fieldId]
                defaultAction = {
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['recordMap', recordId, 'recordMeta', 'fieldExtraMap', fieldId],
                    oi: {},
                };
            }
            const alarmAction = {
                n: engine_1.OTActionName.ObjectInsert,
                p: ['recordMap', recordId, 'recordMeta', 'fieldExtraMap', fieldId, 'alarm'],
                oi: alarm,
            };
            return defaultAction ? [defaultAction, alarmAction] : [alarmAction];
        }
        if ((0, lodash_1.isEqual)(oldAlarm, alarm)) {
            return null;
        }
        // delete alarm
        if (!alarm) {
            return [
                {
                    n: engine_1.OTActionName.ObjectDelete,
                    p: ['recordMap', recordId, 'recordMeta', 'fieldExtraMap', fieldId, 'alarm'],
                    od: oldAlarm,
                },
            ];
        }
        /**
         * found a situation, alarm.alarmUsers length equals 0,
         * TODO: wait for debug, here just place the check
         */
        if (!((_c = alarm.alarmUsers) === null || _c === void 0 ? void 0 : _c.length)) {
            return null;
        }
        // edit alarm
        return [
            {
                n: engine_1.OTActionName.ObjectReplace,
                p: ['recordMap', recordId, 'recordMeta', 'fieldExtraMap', fieldId, 'alarm'],
                od: oldAlarm,
                oi: alarm,
            },
        ];
    }
    static setViewSort2Action(state, snapshot, payload) {
        const { viewId, sortInfo, applySort } = payload;
        const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
        if (viewIndex < 0) {
            return null;
        }
        const view = snapshot.meta.views[viewIndex];
        // when clear sorts, delete sort field directly
        if (!sortInfo) {
            return [
                {
                    n: engine_1.OTActionName.ObjectDelete,
                    p: ['meta', 'views', viewIndex, 'sortInfo'],
                    od: view.sortInfo,
                },
            ];
        }
        if (applySort) {
            // sort method will mutate the array, so here duplicate the array first
            const rows = (0, selectors_1.sortRowsBySortInfo)(state, view.rows, sortInfo.rules, snapshot);
            return [
                {
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['meta', 'views', viewIndex, 'sortInfo'],
                    oi: sortInfo,
                    od: view.sortInfo,
                },
                {
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['meta', 'views', viewIndex, 'rows'],
                    oi: rows,
                    od: view.rows,
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ObjectReplace,
                p: ['meta', 'views', viewIndex, 'sortInfo'],
                oi: sortInfo,
                od: view.sortInfo,
            },
        ];
    }
    /*
     * generate new viewId
     *
     * @returns {string}
     */
    static getNewViewId(views) {
        return (0, utils_2.getNewId)(utils_2.IDPrefix.View, views.map(view => view.id));
    }
    /**
     * generate new recordId
     * @returns {string}
     * @memberof Table
     */
    static getNewRecordId(recordMap) {
        return (0, utils_2.getNewId)(utils_2.IDPrefix.Record, Object.keys(recordMap));
    }
    /**
     * generate new field id
     * @returns {string}
     * @memberof Table
     */
    static getNewFieldId(fieldMap) {
        return (0, utils_2.getNewId)(utils_2.IDPrefix.Field, fieldMap && Object.keys(fieldMap));
    }
    /**
     * return new record with default value in table
     */
    static getDefaultNewRecord(state, snapshot, recordId, viewId, groupCellValues, userInfo) {
        const fieldMap = (0, selectors_1.getFieldMap)(state, snapshot.datasheetId);
        const record = {
            id: recordId,
            data: {},
            commentCount: 0,
            comments: [],
            recordMeta: {},
        };
        if (!fieldMap) {
            return record;
        }
        for (const fieldId in fieldMap) {
            const field = fieldMap[fieldId];
            const defaultValue = field_1.Field.bindContext(field, state).defaultValue();
            if (defaultValue != null) {
                record.data[field.id] = defaultValue;
            }
        }
        if (!viewId) {
            return record;
        }
        const view = (0, selectors_1.getViewById)(snapshot, viewId);
        if (!view) {
            return record;
        }
        const curMirrorId = state.pageParams.mirrorId;
        let _groupInfo = [];
        let filterInfo;
        if (curMirrorId) {
            _groupInfo = (0, selectors_1.getActiveViewGroupInfo)(state);
            filterInfo = (0, selectors_1.getFilterInfo)(state);
        }
        if (view.groupInfo) {
            const curGroupInfo = (0, selectors_1.getGroupInfoWithPermission)(state, view.groupInfo, snapshot.datasheetId);
            _groupInfo = (0, lodash_1.unionWith)(_groupInfo, curGroupInfo, lodash_1.isEqual);
        }
        if (_groupInfo.length > 0) {
            const dataByGroup = getDefaultNewRecordDataByGroup(_groupInfo, groupCellValues);
            Object.assign(record.data, dataByGroup);
        }
        const curFilterInfo = (0, selectors_1.getFilterInfoExceptInvalid)(state, snapshot.datasheetId, view.filterInfo);
        if (filterInfo && curFilterInfo) {
            filterInfo = {
                conjunction: curFilterInfo.conjunction,
                conditions: curFilterInfo.conditions.concat(filterInfo.conditions),
            };
        }
        else if (curFilterInfo) {
            filterInfo = curFilterInfo;
        }
        if (filterInfo) {
            const dataByFilter = getDefaultNewRecordDataByFilter(state, snapshot.datasheetId, filterInfo, fieldMap, userInfo);
            Object.assign(record.data, dataByFilter);
        }
        return record;
    }
    static getDefaultFieldName(fieldMap) {
        const names = [];
        for (const id in fieldMap) {
            names.push(fieldMap[id].name);
        }
        return (0, utils_2.getUniqName)(utils_2.NamePrefix.Field, names);
    }
    /**
     * return new generated view name
     *
     * @param {ViewType} type
     * @returns {string}
     */
    static getDefaultViewName(views, type) {
        let prefix;
        switch (type) {
            case store_1.ViewType.Grid:
                prefix = utils_2.NamePrefix.GridView;
                break;
            case store_1.ViewType.Gallery:
                prefix = utils_2.NamePrefix.GalleryView;
                break;
            case store_1.ViewType.Kanban:
                prefix = utils_2.NamePrefix.KanbanView;
                break;
            case store_1.ViewType.Form:
                prefix = utils_2.NamePrefix.FormView;
                break;
            case store_1.ViewType.Calendar:
                prefix = utils_2.NamePrefix.CalendarView;
                break;
            case store_1.ViewType.Gantt:
                prefix = utils_2.NamePrefix.GanttView;
                break;
            case store_1.ViewType.OrgChart:
                prefix = utils_2.NamePrefix.OrgChartView;
                break;
            case store_1.ViewType.NotSupport:
                prefix = utils_2.NamePrefix.View;
                break;
            default:
                (0, utils_2.assertNever)(type);
                prefix = utils_2.NamePrefix.View;
        }
        return (0, utils_2.getUniqName)(prefix, views.map(view => view.name));
    }
    /**
     * get default view property with stable row and column order
     */
    static deriveDefaultViewProperty(snapshot, viewType, activeViewId) {
        const defaultProperty = (0, views_1.getViewClass)(viewType).generateDefaultProperty(snapshot, activeViewId);
        if (!defaultProperty) {
            throw Error(`Unexpected view type ${viewType}!`);
        }
        return defaultProperty;
    }
    /**
     * get View's all Records' FieldId data
     * @param {string} fieldId
     * @returns {ICellValue[]}
     * @memberof Table
     */
    static getCellValuesByFieldId(state, snapshot, fieldId, view, isEntity) {
        const fieldMap = snapshot.meta.fieldMap;
        const recordMap = snapshot.recordMap;
        if (!fieldMap[fieldId]) {
            return [];
        }
        const cellValues = [];
        let recordIds = Object.keys(recordMap);
        if (view) {
            switch (view.type) {
                case store_1.ViewType.Grid:
                case store_1.ViewType.Gantt: {
                    recordIds = view.rows.map(view => view.recordId);
                }
            }
        }
        for (let i = 0; i < recordIds.length; i++) {
            const record = recordMap[recordIds[i]];
            const cellValue = (0, selectors_1.getCellValue)(state, snapshot, record.id, fieldId);
            if (isEntity || cellValue != null) {
                cellValues.push(cellValue);
            }
        }
        return cellValues;
    }
    // generate new comment's action
    static insertComment2Action(state, options) {
        const { recordId, datasheetId, insertComments } = options;
        const recordMap = store_1.Selectors.getSnapshot(state, datasheetId).recordMap;
        const record = recordMap[recordId];
        const { comments = [] } = record;
        if (insertComments) {
            return [
                {
                    n: engine_1.OTActionName.ListInsert,
                    p: ['recordMap', recordId, 'comments', comments.length],
                    li: insertComments[0],
                },
                {
                    n: engine_1.OTActionName.NumberAdd,
                    p: ['recordMap', recordId, 'commentCount'],
                    na: 1,
                },
            ];
        }
        return null;
    }
    static updateComment2Action(options) {
        const { recordId, updateComments, emojiAction } = options;
        const actions = [];
        if (emojiAction) {
            // new
            actions.push({
                n: engine_1.OTActionName.ListInsert,
                // p, only verify update comment's emoji, no use in other place
                p: ['recordMap', recordId, 'comments', 'emojis'],
                li: updateComments[0],
            });
        }
        else {
            // cancel
            actions.push({
                n: engine_1.OTActionName.ListDelete,
                // p, only verify update comment's emoji, no use in other place
                p: ['recordMap', recordId, 'comments', 'emojis'],
                ld: updateComments[0],
            });
        }
        return actions;
    }
    static deleteComment2Action(options) {
        const { recordId, comments } = options;
        const actions = [];
        actions.push({
            n: engine_1.OTActionName.ListDelete,
            p: ['recordMap', recordId, 'comments', 0],
            ld: comments[0],
        }, {
            n: engine_1.OTActionName.NumberAdd,
            p: ['recordMap', recordId, 'commentCount'],
            na: -1,
        });
        return actions;
    }
    static deleteWidgetPanel2Action(_state, panelId, widgetPanels, resourceType) {
        if (!widgetPanels) {
            return null;
        }
        const index = widgetPanels.findIndex(item => {
            return item.id === panelId;
        });
        if (index < 0) {
            return null;
        }
        if (resourceType === types_1.ResourceType.Mirror) {
            return [
                {
                    n: engine_1.OTActionName.ListDelete,
                    p: ['widgetPanels', index],
                    ld: widgetPanels[index],
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ListDelete,
                p: ['meta', 'widgetPanels', index],
                ld: widgetPanels[index],
            },
        ];
    }
    static movePanel2Action(targetIndex, sourceIndex, resourceType) {
        if (resourceType === types_1.ResourceType.Mirror) {
            return [
                {
                    n: engine_1.OTActionName.ListMove,
                    p: ['widgetPanels', sourceIndex],
                    lm: targetIndex,
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ListMove,
                p: ['meta', 'widgetPanels', sourceIndex],
                lm: targetIndex,
            },
        ];
    }
    static addWidgetPanel2Action(snapshot, panel) {
        const widgetPanels = snapshot.meta.widgetPanels;
        if (!Array.isArray(widgetPanels)) {
            return [
                {
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['meta', 'widgetPanels'],
                    oi: [panel],
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ListInsert,
                p: ['meta', 'widgetPanels', widgetPanels.length + 1],
                li: panel,
            },
        ];
    }
    static addWidgetPanelWithMirror2Action(snapshot, panel) {
        const widgetPanels = snapshot.widgetPanels;
        if (!Array.isArray(widgetPanels)) {
            return [
                {
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['widgetPanels'],
                    oi: [panel],
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ListInsert,
                p: ['widgetPanels', widgetPanels.length + 1],
                li: panel,
            },
        ];
    }
    static modifyPanelName2Acton(_state, newPanel, widgetPanels, resourceType) {
        if (!widgetPanels) {
            return null;
        }
        const index = widgetPanels.findIndex(item => {
            return item.id === newPanel.id;
        });
        if (index < 0) {
            return null;
        }
        if (resourceType === types_1.ResourceType.Mirror) {
            return [
                {
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['widgetPanels', index, 'name'],
                    od: widgetPanels[index].name,
                    oi: newPanel.name,
                },
            ];
        }
        return [
            {
                n: engine_1.OTActionName.ObjectReplace,
                p: ['meta', 'widgetPanels', index, 'name'],
                od: widgetPanels[index].name,
                oi: newPanel.name,
            },
        ];
    }
    static addWidgetToPanel2Action(_state, { installationIndex, panelIndex, widgetId }) {
        const newWidget = {
            id: widgetId,
            height: 6.2,
            y: Number.MAX_SAFE_INTEGER,
        };
        return [
            {
                n: engine_1.OTActionName.ListInsert,
                p: ['meta', 'widgetPanels', panelIndex, 'widgets', installationIndex],
                li: newWidget,
            },
        ];
    }
    static addWidgetToPanelWithMirror2Action(_state, { installationIndex, panelIndex, widgetId }) {
        const newWidget = {
            id: widgetId,
            height: 6.2,
            y: Number.MAX_SAFE_INTEGER,
        };
        return [
            {
                n: engine_1.OTActionName.ListInsert,
                p: ['widgetPanels', panelIndex, 'widgets', installationIndex],
                li: newWidget,
            },
        ];
    }
    static deleteWidget2Action(_state, options) {
        const { widgetPanelIndex, widgetIndex, widget } = options;
        return [
            {
                n: engine_1.OTActionName.ListDelete,
                p: ['meta', 'widgetPanels', widgetPanelIndex, 'widgets', widgetIndex],
                ld: widget,
            },
        ];
    }
    static deleteMirrorWidget2Action(_state, options) {
        const { widgetPanelIndex, widgetIndex, widget } = options;
        return [
            {
                n: engine_1.OTActionName.ListDelete,
                p: ['widgetPanels', widgetPanelIndex, 'widgets', widgetIndex],
                ld: widget,
            },
        ];
    }
    static changeWidgetHeight2Action(state, { widgetPanelIndex, widgetIndex, widgetHeight, resourceId, resourceType, }) {
        const activeWidgetPanel = (0, selectors_1.getResourceActiveWidgetPanel)(state, resourceId, resourceType);
        const widget = activeWidgetPanel.widgets[widgetIndex];
        const path = resourceType === types_1.ResourceType.Datasheet
            ? ['meta', 'widgetPanels', widgetPanelIndex, 'widgets', widgetIndex, 'height']
            : ['widgetPanels', widgetPanelIndex, 'widgets', widgetIndex, 'height'];
        return [
            {
                n: engine_1.OTActionName.ObjectReplace,
                p: path,
                oi: widgetHeight,
                od: widget.height,
            },
        ];
    }
    static moveWidget2Action(state, { widgetPanelIndex, layout, resourceType, resourceId, }) {
        var _a;
        const widgetPanel = (0, selectors_1.getResourceWidgetPanels)(state, resourceId, resourceType);
        const oldLayout = (_a = widgetPanel === null || widgetPanel === void 0 ? void 0 : widgetPanel[widgetPanelIndex]) === null || _a === void 0 ? void 0 : _a.widgets;
        if (!oldLayout || layout.length !== oldLayout.length) {
            return null;
        }
        const actions = [];
        const getPath = (widgetPanelIndex, index, key) => {
            const basePath = ['widgetPanels', widgetPanelIndex, 'widgets', index, key];
            return resourceType === types_1.ResourceType.Mirror ? basePath : ['meta', ...basePath];
        };
        oldLayout.forEach((oldPosition, index) => {
            const newPosition = layout[index];
            for (const k in newPosition) {
                const oldValue = oldPosition[k];
                const newValue = newPosition[k];
                if (oldValue !== newValue) {
                    // compatible with the old mini program panel, set the y coordinate attribute for the first time, use oi
                    const isFirstSetY = k === 'y' && oldValue === undefined;
                    const replaceAction = {
                        n: engine_1.OTActionName.ObjectReplace,
                        p: getPath(widgetPanelIndex, index, k),
                        oi: newValue,
                        od: oldValue,
                    };
                    const insertAction = {
                        n: engine_1.OTActionName.ObjectInsert,
                        p: getPath(widgetPanelIndex, index, k),
                        oi: newValue,
                    };
                    actions.push(isFirstSetY ? insertAction : replaceAction);
                }
            }
        });
        return actions;
    }
    static manualSaveView2Action(snapshot, payload) {
        const { viewId, viewProperty: serverView } = payload;
        const viewIndex = snapshot.meta.views.findIndex(view => view.id === viewId);
        if (viewIndex == null) {
            return null;
        }
        const localView = snapshot.meta.views[viewIndex];
        const action = [];
        const integrationView = Object.assign(Object.assign({}, (0, lodash_1.omit)(serverView, engine_1.ViewPropertyFilter.ignoreViewProperty)), (0, lodash_1.omit)(localView, engine_1.ViewPropertyFilter.ignoreViewProperty));
        for (const key in integrationView) {
            if (localView[key] === serverView[key]) {
                continue;
            }
            if (localView.hasOwnProperty(key) && serverView.hasOwnProperty(key)) {
                action.push({
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['meta', 'views', viewIndex, key],
                    oi: localView[key],
                    od: serverView[key],
                });
            }
            if (localView.hasOwnProperty(key) && !serverView.hasOwnProperty(key)) {
                action.push({
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['meta', 'views', viewIndex, key],
                    oi: localView[key],
                });
            }
            if (!localView.hasOwnProperty(key) && serverView.hasOwnProperty(key)) {
                action.push({
                    n: engine_1.OTActionName.ObjectDelete,
                    p: ['meta', 'views', viewIndex, key],
                    od: serverView[key],
                });
            }
        }
        return action;
    }
    static resetView2Action(snapshot, payload) {
        const { viewId, viewProperty: serverView } = payload;
        const viewIndex = snapshot.meta.views.findIndex(view => view.id === viewId);
        if (viewIndex == null) {
            return null;
        }
        const localView = snapshot.meta.views[viewIndex];
        const action = [];
        const integrationView = Object.assign(Object.assign({}, (0, lodash_1.omit)(localView, engine_1.ViewPropertyFilter.ignoreViewProperty)), (0, lodash_1.omit)(serverView, engine_1.ViewPropertyFilter.ignoreViewProperty));
        for (const key in integrationView) {
            if (localView[key] === serverView[key]) {
                continue;
            }
            if (localView[key] && serverView[key]) {
                action.push({
                    n: engine_1.OTActionName.ObjectReplace,
                    p: ['meta', 'views', viewIndex, key],
                    oi: serverView[key],
                    od: localView[key],
                });
            }
            if (localView[key] && !serverView[key]) {
                action.push({
                    n: engine_1.OTActionName.ObjectDelete,
                    p: ['meta', 'views', viewIndex, key],
                    od: localView[key],
                });
            }
            if (!localView[key] && serverView[key]) {
                action.push({
                    n: engine_1.OTActionName.ObjectInsert,
                    p: ['meta', 'views', viewIndex, key],
                    oi: serverView[key],
                });
            }
        }
        return action;
    }
    static setViewAutoSave2Action(snapshot, { viewId, autoSave }) {
        const views = snapshot.meta.views;
        const viewIndex = views.findIndex(view => view.id === viewId);
        if (viewIndex == null) {
            return null;
        }
        const view = views[viewIndex];
        if (view.autoSave == null) {
            return {
                n: engine_1.OTActionName.ObjectInsert,
                p: ['meta', 'views', viewIndex, 'autoSave'],
                oi: autoSave,
            };
        }
        return {
            n: engine_1.OTActionName.ObjectReplace,
            p: ['meta', 'views', viewIndex, 'autoSave'],
            oi: autoSave,
            od: view['autoSave'],
        };
    }
    /**
     * edit single relation dstID
     *
     * @param snapshot
     * @param payload
     */
    static changeOneWayLinkDstId2Action(snapshot, payload) {
        const fieldMap = snapshot.meta.fieldMap;
        const { fieldId, newField } = payload;
        if (!fieldMap[fieldId]) {
            return null;
        }
        return {
            n: engine_1.OTActionName.ObjectReplace,
            p: ['meta', 'fieldMap', fieldId],
            od: fieldMap[fieldId],
            oi: newField,
        };
    }
}
exports.DatasheetActions = DatasheetActions;
/**
 * move views
 * @param {string} viewId
 */
DatasheetActions.moveView2Action = (snapshot, payload) => {
    const { viewId, target } = payload;
    const views = snapshot.meta.views;
    let index = -1;
    for (let i = 0, l = views.length; i < l; i++) {
        if (views[i].id === viewId) {
            index = i;
            break;
        }
    }
    if (index === -1) {
        return null;
    }
    // moveArrayElement(views, index, target);
    return {
        n: engine_1.OTActionName.ListMove,
        p: ['meta', 'views', index],
        lm: target,
    };
};
DatasheetActions.setColumnWidth2Action = (snapshot, payload) => {
    const { viewId, fieldId, width } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    const columnIndex = view.columns.findIndex(column => column.fieldId === fieldId);
    const column = view.columns[columnIndex];
    if (columnIndex < 0 || ![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type) || column.width === width) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'columns', columnIndex, 'width'],
        oi: width,
        od: column.width,
    };
};
DatasheetActions.moveColumns2Action = (snapshot, payload) => {
    const { fieldId, target, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    const columnIndex = view.columns.findIndex(column => column.fieldId === fieldId);
    if (columnIndex < 0 || columnIndex === target) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ListMove,
        p: ['meta', 'views', viewIndex, 'columns', columnIndex],
        lm: target,
    };
};
/**
 * set grid view's column's statistic dimension
 */
DatasheetActions.setColumnStatType2Action = (snapshot, payload) => {
    const { fieldId, statType, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    const columnIndex = view.columns.findIndex(column => column.fieldId === fieldId);
    const column = view.columns[columnIndex];
    if (columnIndex < 0 || ![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type) || column.statType === statType) {
        return null;
    }
    if (!statType) {
        return {
            n: engine_1.OTActionName.ObjectDelete,
            p: ['meta', 'views', viewIndex, 'columns', columnIndex, 'statType'],
            od: column.statType,
        };
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'columns', columnIndex, 'statType'],
        oi: statType,
        od: column.statType,
    };
};
/**
 * set the row height of gridview View
 */
DatasheetActions.setRowHeightLevel2Action = (snapshot, payload) => {
    const { level, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type) || view.rowHeightLevel === level) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'rowHeightLevel'],
        oi: level,
        od: view.rowHeightLevel,
    };
};
/**
 * set Grid/Gantt view's column whether auto word wrap
 */
DatasheetActions.setAutoHeadHeight2Action = (snapshot, payload) => {
    const { isAuto, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type) || view.autoHeadHeight === isAuto) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'autoHeadHeight'],
        oi: isAuto,
        od: view.autoHeadHeight,
    };
};
DatasheetActions.setFrozenColumnCount2Action = (snapshot, payload) => {
    const { count, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (![store_1.ViewType.Grid, store_1.ViewType.Gantt].includes(view.type) || view.frozenColumnCount === count) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'frozenColumnCount'],
        oi: count,
        od: view.frozenColumnCount,
    };
};
DatasheetActions.moveRow2Action = (snapshot, payload) => {
    const { recordId, target, viewId } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    const recordIndex = view.rows.findIndex(row => row.recordId === recordId);
    if (recordIndex < 0) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ListMove,
        p: ['meta', 'views', viewIndex, 'rows', recordIndex],
        lm: target,
    };
};
/**
 * update Field, replace field directly
 */
DatasheetActions.setFieldAttr2Action = (snapshot, payload) => {
    const fieldMap = snapshot.meta.fieldMap;
    const field = payload.field;
    if (!fieldMap[field.id] || (0, lodash_1.isEqual)(field, fieldMap[field.id])) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'fieldMap', field.id],
        oi: field,
        od: fieldMap[field.id],
    };
};
/**
 * set view filter  filterInfo
 */
DatasheetActions.setFilterInfo2Action = (snapshot, payload) => {
    const viewId = payload.viewId;
    let filterInfo = payload.filterInfo;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (!validateFilterInfo(filterInfo)) {
        console.error('illegal filter condition!');
        filterInfo = undefined;
    }
    if ((0, lodash_1.isEqual)(view.filterInfo, filterInfo)) {
        return null;
    }
    /**
     * when clear filter, delete filter field directly
     */
    if (!filterInfo) {
        return {
            n: engine_1.OTActionName.ObjectDelete,
            p: ['meta', 'views', viewIndex, 'filterInfo'],
            od: view.filterInfo,
        };
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'filterInfo'],
        oi: filterInfo,
        od: view.filterInfo,
    };
};
DatasheetActions.setViewLockInfo2Action = (snapshot, payload) => {
    const viewId = payload.viewId;
    const viewLock = payload.viewLockInfo;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (viewLock === null) {
        return {
            n: engine_1.OTActionName.ObjectDelete,
            p: ['meta', 'views', viewIndex, 'lockInfo'],
            od: view.lockInfo,
        };
    }
    return {
        n: engine_1.OTActionName.ObjectInsert,
        p: ['meta', 'views', viewIndex, 'lockInfo'],
        oi: viewLock,
    };
};
DatasheetActions.setGroupInfoField2Action = (snapshot, payload) => {
    const { viewId, groupInfo } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if ((0, lodash_1.isEqual)(view.groupInfo, groupInfo)) {
        return null;
    }
    compensator_1.compensator.setLastGroupInfoIfNull(view.groupInfo);
    /**
     * when clear grouping, delete grouping field directly
     */
    if (!groupInfo) {
        return {
            n: engine_1.OTActionName.ObjectDelete,
            p: ['meta', 'views', viewIndex, 'groupInfo'],
            od: view.groupInfo,
        };
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'groupInfo'],
        oi: groupInfo,
        od: view.groupInfo,
    };
};


/***/ }),

/***/ 34155:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AttachmentField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_1 = __webpack_require__(55808);
const view_types_1 = __webpack_require__(88471);
const lodash_1 = __webpack_require__(46517);
const datasheet_1 = __webpack_require__(55384);
const field_types_1 = __webpack_require__(80360);
const utils_1 = __webpack_require__(26854);
const i18n_1 = __webpack_require__(47511);
const utils_2 = __webpack_require__(46214);
const validate_schema_1 = __webpack_require__(62903);
const baseAttachmentFieldSchema = {
    id: joi_1.default.string().required(),
    name: joi_1.default.string().required(),
    mimeType: joi_1.default.string().required(),
    token: joi_1.default.string().required(),
    bucket: joi_1.default.string().required(),
    size: joi_1.default.number().required(),
    width: joi_1.default.number(),
    height: joi_1.default.number(),
    preview: joi_1.default.string()
};
class AttachmentField extends field_1.ArrayValueField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
    }
    get apiMetaProperty() {
        return null;
    }
    get openValueJsonSchema() {
        return {
            type: 'array',
            title: this.field.name,
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_IDs),
                    },
                    name: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_names),
                    },
                    mimeType: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_mime_types),
                    },
                    token: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_upload_token),
                    },
                    bucket: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_storage_locations),
                    },
                    size: {
                        type: 'number',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_sizes),
                    },
                    width: {
                        type: 'number',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_widths)
                    },
                    height: {
                        type: 'number',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_heights)
                    },
                    preview: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_preview_image_token),
                    },
                    previewUrl: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_thumbnail_URLs),
                    },
                    url: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_attachment_URLs),
                    }
                }
            }
        };
    }
    get canGroup() {
        return false;
    }
    get acceptFilterOperators() {
        return [
            view_types_1.FOperator.IsEmpty,
            view_types_1.FOperator.IsNotEmpty,
        ];
    }
    get basicValueType() {
        return field_types_1.BasicValueType.Array;
    }
    get innerBasicValueType() {
        return field_types_1.BasicValueType.String;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Attachment,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: null,
        };
    }
    validateProperty() {
        return AttachmentField.propertySchema.validate(this.field.property);
    }
    validateCellValue(cv) {
        return AttachmentField.cellValueSchema.validate(cv);
    }
    validateOpenWriteValue(owv) {
        return AttachmentField.openWriteValueValueSchema.validate(owv);
    }
    static defaultProperty() {
        return null;
    }
    eq(cv1, cv2) {
        if (cv1 == null || cv2 == null) {
            return cv1 === cv2;
        }
        return (0, lodash_1.isEqual)([cv1].flat().map(item => item.token), [cv2].flat().map(item => item.token));
    }
    validate(value) {
        return (0, lodash_1.isArray)(value) && value.every((attachment) => {
            return Boolean(attachment &&
                (0, lodash_1.isString)(attachment.id) &&
                (0, lodash_1.isString)(attachment.bucket) &&
                (0, lodash_1.isString)(attachment.token) &&
                (0, lodash_1.isString)(attachment.mimeType) &&
                (0, lodash_1.isString)(attachment.name) &&
                (0, lodash_1.isNumber)(attachment.size));
        });
    }
    cellValueToArray(cellValue) {
        if (this.validate(cellValue)) {
            return cellValue.map(cur => {
                const filePath = (0, utils_1.cellValueToImageSrc)(cur);
                return `${cur.name} (${filePath})`;
            });
        }
        return null;
    }
    // most of arrayValueToString's field just join, except number dataTime's with format
    arrayValueToString(cellValues) {
        return cellValues && cellValues.length ? cellValues.join(', ') : null;
    }
    cellValueToString(cellValue) {
        return this.arrayValueToString(this.cellValueToArray(cellValue));
    }
    cellValueToStdValue(val) {
        const stdVal = {
            sourceType: field_types_1.FieldType.Attachment,
            data: [],
        };
        if (val != null) {
            stdVal.data = val.map(attach => {
                return Object.assign({ text: this.cellValueToString([attach]) || '' }, attach);
            });
        }
        return stdVal;
    }
    stdValueToCellValue(stdVal) {
        if (stdVal.data.length === 0) {
            return null;
        }
        const cellValue = stdVal.data.map(val => {
            const { text } = val, v = __rest(val, ["text"]);
            console.log(text);
            return v;
        });
        if (this.validate(cellValue)) {
            return cellValue;
        }
        return null;
    }
    defaultValueForCondition(_condition) {
        return null;
    }
    cellValueToApiStandardValue(cellValue) {
        if (this.validate(cellValue)) {
            return cellValue.map(value => {
                return {
                    id: value.id,
                    name: value.name,
                    size: value.size,
                    mimeType: value.mimeType,
                    token: value.token,
                    width: value === null || value === void 0 ? void 0 : value.width,
                    height: value === null || value === void 0 ? void 0 : value.height,
                    preview: value.preview ? (0, utils_1.cellValueToImageSrc)(value, { isPreview: true }) : undefined,
                    url: (0, utils_1.cellValueToImageSrc)(value),
                };
            });
        }
        return null;
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        if (!(0, utils_2.isNullValue)(cellValue)) {
            return cellValue.map(value => {
                return Object.assign(Object.assign({}, value), { 
                    // addon value
                    previewUrl: value.preview ? (0, utils_1.cellValueToImageSrc)(value, { isPreview: true }) : undefined, url: (0, utils_1.cellValueToImageSrc)(value) });
            });
        }
        return null;
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_2.isNullValue)(openWriteValue)) {
            return null;
        }
        return openWriteValue.map(v => ({
            id: v.id,
            name: v.name,
            mimeType: v.mimeType,
            token: v.token,
            bucket: v.bucket,
            size: v.size,
            width: v === null || v === void 0 ? void 0 : v.width,
            height: v === null || v === void 0 ? void 0 : v.height,
            preview: v === null || v === void 0 ? void 0 : v.preview
        }));
    }
    validateAddOpenFieldProperty(updateProperty) {
        if (updateProperty === null) {
            return { error: undefined, value: null };
        }
        return this.validateUpdateOpenProperty(updateProperty);
    }
    filterValueToOpenFilterValue() {
        return null;
    }
    openFilterValueToFilterValue() {
        return null;
    }
    validateOpenFilterValue(value) {
        if (value) {
            return (0, validate_schema_1.joiErrorResult)('The attachment field does not need to set the filter criteria value');
        }
        return joi_1.default.allow(null).validate(value);
    }
}
exports.AttachmentField = AttachmentField;
AttachmentField.propertySchema = joi_1.default.equal(null);
AttachmentField.cellValueSchema = joi_1.default.array().items(joi_1.default.object(baseAttachmentFieldSchema).required()).allow(null).required();
AttachmentField.openWriteValueValueSchema = joi_1.default.array().items(joi_1.default.object(Object.assign(Object.assign({}, baseAttachmentFieldSchema), { url: joi_1.default.string(), previewUrl: joi_1.default.string() })).required()).allow(null).required();


/***/ }),

/***/ 66387:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AutoNumberField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const number_base_field_1 = __webpack_require__(11639);
const types_1 = __webpack_require__(73578);
const validate_schema_1 = __webpack_require__(62903);
class AutoNumberField extends number_base_field_1.NumberBaseField {
    get apiMetaProperty() {
        return null;
    }
    get acceptFilterOperators() {
        return AutoNumberField._acceptFilterOperators;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.AutoNumber,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            nextId: 0,
            viewIdx: 0,
            datasheetId: '',
        };
    }
    get isComputed() {
        return true;
    }
    recordEditable() {
        return false;
    }
    stdValueToCellValue() {
        return null;
    }
    cellValueToString(cellValue) {
        if (this.validate(cellValue)) {
            return String(cellValue);
        }
        return null;
    }
    validateProperty() {
        return AutoNumberField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    getCellValue(record, fieldId) {
        var _a, _b;
        const cellValue = record.data[fieldId];
        const fieldUpdatedMap = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.fieldUpdatedMap;
        if (!fieldUpdatedMap) {
            return null;
        }
        return ((_b = fieldUpdatedMap[fieldId]) === null || _b === void 0 ? void 0 : _b.autoNumber) || cellValue || null;
    }
    validateAddOpenFieldProperty(updateProperty) {
        if (updateProperty === null) {
            return { error: undefined, value: null };
        }
        return this.validateUpdateOpenProperty(updateProperty);
    }
}
exports.AutoNumberField = AutoNumberField;
AutoNumberField.propertySchema = joi_1.default.object({
    nextId: joi_1.default.number().integer().min(0).required(),
    viewIdx: joi_1.default.number().integer().min(0).required(),
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
}).required();
AutoNumberField._acceptFilterOperators = [
    types_1.FOperator.Is,
    types_1.FOperator.IsNot,
    types_1.FOperator.IsGreater,
    types_1.FOperator.IsGreaterEqual,
    types_1.FOperator.IsLess,
    types_1.FOperator.IsLessEqual,
    types_1.FOperator.IsEmpty,
    types_1.FOperator.IsNotEmpty,
];


/***/ }),

/***/ 68877:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CheckboxField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_1 = __webpack_require__(55808);
const view_types_1 = __webpack_require__(88471);
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const lodash_1 = __webpack_require__(46517);
const stat_1 = __webpack_require__(90519);
const i18n_1 = __webpack_require__(47511);
const utils_1 = __webpack_require__(46214);
const emojis_config_1 = __webpack_require__(1975);
const validate_schema_1 = __webpack_require__(62903);
const trueText = ['1', 'true', (0, i18n_1.t)(i18n_1.Strings.stat_checked)];
const falseText = ['0', 'false', (0, i18n_1.t)(i18n_1.Strings.stat_un_checked)];
class CheckboxField extends field_1.Field {
    get apiMetaProperty() {
        return {
            icon: (0, utils_1.getEmojiIconNativeString)(this.field.property.icon),
        };
    }
    get openValueJsonSchema() {
        return {
            title: this.field.name,
            type: 'boolean',
        };
    }
    get statTypeList() {
        return CheckboxField._statTypeList;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.Boolean;
    }
    get acceptFilterOperators() {
        return CheckboxField._acceptFilterOperators;
    }
    static _isMeetFilter(operator, cellValue, conditionValue) {
        switch (operator) {
            case view_types_1.FOperator.Is:
                return Boolean(conditionValue) === Boolean(cellValue);
            default: {
                console.warn('Method should be overwrite!');
                return true;
            }
        }
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        return CheckboxField._isMeetFilter(operator, cellValue, conditionValue);
    }
    static defaultProperty() {
        return {
            icon: 'white_check_mark',
        };
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Checkbox,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    validateProperty() {
        return CheckboxField.propertySchema.validate(this.field.property);
    }
    validateCellValue(cv) {
        return CheckboxField.cellValueSchema.validate(cv);
    }
    validateOpenWriteValue(owv) {
        return CheckboxField.openWriteValueValueSchema.validate(owv);
    }
    cellValueToStdValue(cellValue) {
        return {
            sourceType: this.field.type,
            data: [{
                    text: this.cellValueToString(cellValue) || '',
                }],
        };
    }
    stdValueToCellValue(stdValue) {
        if ((0, lodash_1.isEmpty)(stdValue) || (0, lodash_1.isEmpty)(stdValue.data)) {
            return null;
        }
        if (trueText.includes(stdValue.data[0].text)) {
            return true;
        }
        if (falseText.includes(stdValue.data[0].text)) {
            return null;
        }
        if (stdValue.data[0].text) {
            return true;
        }
        return null;
    }
    validate(value) {
        if (value == null || typeof value === 'boolean') {
            return true;
        }
        return false;
    }
    cellValueToString(cellValue) {
        return cellValue ? '1' : '0';
    }
    defaultValueForCondition(_condition) {
        return true;
    }
    static _compare(cellValue1, cellValue2, _orderInCellValueSensitive) {
        return Boolean(cellValue1) === Boolean(cellValue2) ? 0 : (Boolean(cellValue1) > Boolean(cellValue2) ? 1 : -1);
    }
    compare(cellValue1, cellValue2, orderInCellValueSensitive) {
        return CheckboxField._compare(cellValue1, cellValue2, orderInCellValueSensitive);
    }
    cellValueToApiStandardValue(cellValue) {
        if (cellValue === true) {
            return true;
        }
        return null;
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        if (cellValue === true) {
            return true;
        }
        return null;
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        return openWriteValue;
    }
    get openFieldProperty() {
        return {
            icon: (0, utils_1.getEmojiIconNativeString)(this.field.property.icon),
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        const result = CheckboxField.propertySchema.validate(updateProperty);
        if (!result.error && !emojis_config_1.EmojisConfig[updateProperty.icon]) {
            return (0, validate_schema_1.joiErrorResult)('icon is not Emoji slug');
        }
        return result;
    }
    static _filterValueToOpenFilterValue(value) {
        return value;
    }
    filterValueToOpenFilterValue(value) {
        return CheckboxField._filterValueToOpenFilterValue(value);
    }
    static _openFilterValueToFilterValue(value) {
        return value;
    }
    openFilterValueToFilterValue(value) {
        return CheckboxField._openFilterValueToFilterValue(value);
    }
    static _validateOpenFilterValue(value) {
        return CheckboxField.validateOpenFilterSchema.validate(value);
    }
    validateOpenFilterValue(value) {
        return CheckboxField._validateOpenFilterValue(value);
    }
}
exports.CheckboxField = CheckboxField;
CheckboxField.propertySchema = joi_1.default.object({
    icon: joi_1.default.string().required(),
}).required();
CheckboxField.cellValueSchema = joi_1.default.boolean().allow(null).required();
CheckboxField.openWriteValueValueSchema = joi_1.default.boolean().allow(null).required();
CheckboxField._statTypeList = [
    stat_1.StatType.None,
    stat_1.StatType.CountAll,
    stat_1.StatType.Checked,
    stat_1.StatType.UnChecked,
    stat_1.StatType.PercentChecked,
    stat_1.StatType.PercentUnChecked,
];
CheckboxField._acceptFilterOperators = [view_types_1.FOperator.Is];
CheckboxField.validateOpenFilterSchema = joi_1.default.boolean().allow(null);


/***/ }),

/***/ 2799:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreatedByField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const datasheet_1 = __webpack_require__(55384);
const utils_1 = __webpack_require__(46214);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const member_base_field_1 = __webpack_require__(78319);
const validate_schema_1 = __webpack_require__(62903);
const i18n_1 = __webpack_require__(47511);
class CreatedByField extends member_base_field_1.MemberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static defaultProperty() {
        return {
            uuids: [],
            datasheetId: '',
        };
    }
    validateProperty() {
        return CreatedByField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validate(cv) {
        return cv == null;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: types_1.FieldType.CreatedBy,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    get apiMetaProperty() {
        const userMap = store_1.Selectors.getUserMap(this.state);
        return (0, utils_1.getApiMetaUserProperty)(this.field.property.uuids, userMap);
    }
    get openValueJsonSchema() {
        return {
            type: 'object',
            title: this.field.name,
            properties: {
                id: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_creator_ID),
                },
                name: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_creator_name),
                },
                avatar: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_creator_avatar),
                },
            }
        };
    }
    get isComputed() {
        return true;
    }
    get basicValueType() {
        return types_1.BasicValueType.String;
    }
    recordEditable() {
        return false;
    }
    // CreatedBy is read-only field, no need to implement this method
    stdValueToCellValue() {
        return null;
    }
    getCellValue(record) {
        var _a;
        const createdBy = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.createdBy;
        return createdBy == null ? member_base_field_1.OtherTypeUnitId.Alien : createdBy;
    }
    // get all records uuid
    getUuidsByRecordMap(recordMap) {
        const uuids = Object.values(recordMap)
            .reduce((ids, record) => {
            var _a, _b;
            if ((_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.createdBy) {
                ids.push((_b = record.recordMeta) === null || _b === void 0 ? void 0 : _b.createdBy);
            }
            return ids;
        }, []);
        return [...new Set(uuids)];
    }
    getUnitNames(cellValue) {
        const userMap = store_1.Selectors.getUserMap(this.state);
        if (!userMap) {
            return null;
        }
        return cellValue.map(uuid => {
            if (!userMap[uuid]) {
                return '';
            }
            return userMap[uuid].name;
        });
    }
    eq(cv1, cv2) {
        if (cv1 == null || cv2 == null) {
            return cv1 === cv2;
        }
        return (0, lodash_1.isEqual)(cv1, cv2);
    }
    getUnitIds(cellValue) {
        if (!cellValue) {
            return null;
        }
        return [cellValue].flat();
    }
    getUnits(cellValue) {
        const userMap = store_1.Selectors.getUserMap(this.state);
        if (!userMap) {
            return null;
        }
        return cellValue.reduce((res, uuid) => {
            if (userMap[uuid]) {
                res.push(userMap[uuid]);
            }
            return res;
        }, []);
    }
    validateAddOpenFieldProperty(updateProperty) {
        if (updateProperty === null) {
            return { error: undefined, value: null };
        }
        return this.validateUpdateOpenProperty(updateProperty);
    }
}
exports.CreatedByField = CreatedByField;
CreatedByField.propertySchema = joi_1.default.object({
    uuids: joi_1.default.array().items(joi_1.default.string()).required(),
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
}).required();


/***/ }),

/***/ 91233:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CreatedTimeField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const dayjs_1 = __importDefault(__webpack_require__(1635));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const date_time_base_field_1 = __webpack_require__(35370);
const validate_schema_1 = __webpack_require__(62903);
class CreatedTimeField extends date_time_base_field_1.DateTimeBaseField {
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.CreatedTime,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            datasheetId: '',
            dateFormat: field_types_1.DateFormat['YYYY/MM/DD'],
            timeFormat: field_types_1.TimeFormat['hh:mm'],
            includeTime: false,
        };
    }
    get isComputed() {
        return true;
    }
    recordEditable() {
        return false;
    }
    validateProperty() {
        return CreatedTimeField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    stdValueToCellValue() {
        return null;
    }
    getCellValue(record) {
        var _a;
        const createdAt = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.createdAt;
        return createdAt == null ? null : (0, dayjs_1.default)(createdAt).valueOf();
    }
    get openFieldProperty() {
        const { includeTime, dateFormat, timeFormat } = this.field.property;
        return {
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: field_types_1.TimeFormat[timeFormat],
            includeTime
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return CreatedTimeField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { dateFormat, timeFormat, includeTime } = openFieldProperty;
        const defaultProperty = CreatedTimeField.defaultProperty();
        return {
            datasheetId: this.field.property.datasheetId,
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: timeFormat ? field_types_1.TimeFormat[timeFormat] : defaultProperty.timeFormat,
            includeTime: includeTime !== null && includeTime !== void 0 ? includeTime : defaultProperty.includeTime
        };
    }
}
exports.CreatedTimeField = CreatedTimeField;
CreatedTimeField.propertySchema = joi_1.default.object({
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
    dateFormat: joi_1.default.string().allow(...(0, validate_schema_1.enumToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.string().allow(...(0, validate_schema_1.enumToArray)(field_types_1.TimeFormat)).required(),
    includeTime: joi_1.default.boolean().required(),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();
CreatedTimeField.defaultDateFormat = field_types_1.DateFormat[0];
CreatedTimeField.defaultTimeFormat = field_types_1.TimeFormat[0];
CreatedTimeField.openUpdatePropertySchema = joi_1.default.object({
    dateFormat: joi_1.default.valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.TimeFormat)),
    includeTime: joi_1.default.boolean(),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();


/***/ }),

/***/ 10662:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CurrencyField = exports.getSymbolAlignStr = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const datasheet_1 = __webpack_require__(55384);
const number_base_field_1 = __webpack_require__(11639);
const utils_1 = __webpack_require__(26854);
const field_types_1 = __webpack_require__(80360);
const validate_schema_1 = __webpack_require__(62903);
const types_1 = __webpack_require__(73578);
const getSymbolAlignStr = (symbolAlign) => {
    if (symbolAlign == null) {
        return undefined;
    }
    const alignMap = ['Default', 'Left', 'Right'];
    if (![1, 2].includes(symbolAlign)) {
        symbolAlign = 0;
    }
    return alignMap[symbolAlign];
};
exports.getSymbolAlignStr = getSymbolAlignStr;
class CurrencyField extends number_base_field_1.NumberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    get apiMetaProperty() {
        const { defaultValue, precision, symbol, symbolAlign } = this.field.property;
        return {
            defaultValue: defaultValue || undefined,
            precision,
            symbol,
            symbolAlign: (0, exports.getSymbolAlignStr)(symbolAlign),
        };
    }
    // the data of preview, includes (positive or negative sign) + currency symbol + scientific notation number or normal number + thousand separator
    cellValueToString(cellValue, cellToStringOption) {
        if (this.validate(cellValue)) {
            const { symbol, precision, symbolAlign } = this.field.property;
            let cellString;
            cellString = (0, utils_1.numberToShow)(cellValue, precision);
            const { hideUnit } = cellToStringOption || {};
            if (!hideUnit) {
                cellString = (0, utils_1.str2Currency)(cellString, symbol, 3, field_types_1.DefaultCommaStyle, symbolAlign);
            }
            return cellString || null;
        }
        return null;
    }
    // return new records' default value of field attributes
    defaultValue() {
        const { defaultValue } = this.field.property;
        return defaultValue ? (0, utils_1.str2number)(defaultValue) : null;
    }
    compareCellValue(cellValue) {
        const cellValue2Str = this.cellValueToString(cellValue, { hideUnit: true });
        return cellValue2Str === null ? null : (0, utils_1.str2number)(cellValue2Str);
    }
    compare(cellValue1, cellValue2) {
        return number_base_field_1.NumberBaseField._compare(this.compareCellValue(cellValue1), this.compareCellValue(cellValue2));
    }
    validateProperty() {
        return CurrencyField.propertySchema.validate(this.field.property);
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Currency,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            symbol: '$',
            precision: 2,
            symbolAlign: field_types_1.SymbolAlign.default
        };
    }
    get openFieldProperty() {
        const { defaultValue, symbol, precision, symbolAlign } = this.field.property;
        return {
            defaultValue,
            symbol,
            precision,
            symbolAlign: (0, exports.getSymbolAlignStr)(symbolAlign)
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return CurrencyField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { defaultValue, symbolAlign: symbolAlignStr, symbol, precision } = openFieldProperty;
        const defaultProperty = CurrencyField.defaultProperty();
        const symbolAlign = symbolAlignStr === undefined ? defaultProperty.symbolAlign : field_types_1.SymbolAlign[symbolAlignStr.toLocaleLowerCase()];
        return {
            defaultValue,
            symbol: symbol || defaultProperty.symbol,
            precision: precision || defaultProperty.precision,
            symbolAlign: symbolAlign
        };
    }
}
exports.CurrencyField = CurrencyField;
CurrencyField.propertySchema = joi_1.default.object({
    symbol: joi_1.default.string().allow('').required(),
    precision: joi_1.default.number().integer().min(0).max(10).required(),
    defaultValue: joi_1.default.string().allow(''),
    symbolAlign: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.SymbolAlign)),
}).required();
CurrencyField.openUpdatePropertySchema = joi_1.default.object({
    symbol: joi_1.default.string().allow(''),
    precision: joi_1.default.number().integer().min(0).max(10),
    defaultValue: joi_1.default.string().allow(''),
    symbolAlign: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(types_1.TSymbolAlign)),
}).required();


/***/ }),

/***/ 35370:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DateTimeBaseField = exports.dateTimeFormat = exports.getDateTimeFormat = void 0;
const dayjs_1 = __importDefault(__webpack_require__(1635));
__webpack_require__(95468);
__webpack_require__(26489);
__webpack_require__(15831);
const timezone_1 = __importDefault(__webpack_require__(53291));
// timezone
const utc_1 = __importDefault(__webpack_require__(36619));
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const utils_2 = __webpack_require__(26854);
const field_1 = __webpack_require__(55808);
const stat_1 = __webpack_require__(90519);
const config_1 = __webpack_require__(77511);
const joi_1 = __importDefault(__webpack_require__(48506));
const model_1 = __webpack_require__(61116);
const env_1 = __webpack_require__(13799);
const patchDayjsTimezone = (timezone) => {
    // The original version of the functions `getDateTimeFormat` and `tz` comes from
    // https://github.com/iamkun/dayjs/blob/dev/src/plugin/timezone/index.js
    // which is published under the MIT license. See https://github.com/iamkun/dayjs/blob/dev/LICENSE for more information.
    const dtfCache = {};
    const getDateTimeFormat = (timezone, options = {}) => {
        const timeZoneName = options.timeZoneName || 'short';
        const key = `${timezone}|${timeZoneName}`;
        let dtf = dtfCache[key];
        if (!dtf) {
            dtf = new Intl.DateTimeFormat('en-US', {
                // hour12: false,
                hour12: true,
                timeZone: timezone,
                year: 'numeric',
                month: '2-digit',
                day: '2-digit',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                // timeZoneName
            });
            dtfCache[key] = dtf;
        }
        return dtf;
    };
    const MS = 'millisecond';
    const MIN = 'minute';
    return (o, c, d) => {
        let defaultTimezone;
        timezone(o, c, d);
        // The following function integrates a performance tuning from https://github.com/iamkun/dayjs/issues/1236#issuecomment-1262907180
        c.prototype.tz = function (timezone = defaultTimezone, keepLocalTime = undefined) {
            const oldOffset = this.utcOffset();
            const date = this.toDate();
            const target = getDateTimeFormat(timezone).format(date);
            const diff = Math.round((+date - +new Date(target)) / 1000 / 60);
            let ins = d(target).$set(MS, this.$ms)
                .utcOffset((-Math.round(date.getTimezoneOffset() / 15) * 15) - diff, true);
            if (keepLocalTime) {
                const newOffset = ins.utcOffset();
                ins = ins.add(oldOffset - newOffset, MIN);
            }
            ins.$x.$timezone = timezone;
            return ins;
        };
        const setDefaultTimezone = d.tz.setDefault;
        d.tz.setDefault = (timezone) => {
            setDefaultTimezone(timezone);
            defaultTimezone = timezone;
        };
    };
};
// plugin before import, prevent circular import
dayjs_1.default.extend(utc_1.default);
dayjs_1.default.extend(patchDayjsTimezone(timezone_1.default));
const defaultProps = {
    dateFormat: field_types_1.DateFormat['YYYY/MM/DD'],
    timeFormat: field_types_1.TimeFormat['HH:mm'],
    includeTime: false,
    timeZone: Intl.DateTimeFormat().resolvedOptions().timeZone
};
const getDateTimeFormat = (props) => {
    const dateFormat = field_types_1.DateFormat[props.dateFormat || defaultProps.dateFormat];
    const timeFormat = field_types_1.TimeFormat[props.timeFormat || defaultProps.timeFormat];
    return dateFormat + (props.includeTime ? ' ' + timeFormat : '');
};
exports.getDateTimeFormat = getDateTimeFormat;
const dateTimeFormat = (timestamp, props, userTimeZone) => {
    if (!timestamp) {
        return null;
    }
    props = props || defaultProps;
    const dateFormat = field_types_1.DateFormat[props.dateFormat || defaultProps.dateFormat];
    const timeFormat = field_types_1.TimeFormat[props.timeFormat || defaultProps.timeFormat];
    let format = dateFormat + (props.includeTime ? ' ' + timeFormat : '');
    if (props.includeTime && timeFormat === 'hh:mm') {
        const locale = (0, i18n_1.getLanguage)();
        const formatLocale = locale.toLowerCase().split('_').join('-');
        dayjs_1.default.locale(formatLocale);
        format += ' a';
    }
    let timeZone = props.timeZone || userTimeZone;
    if ((0, env_1.isServer)()) {
        timeZone = timeZone || model_1.DEFAULT_TIME_ZONE;
    }
    if (props.includeTimeZone) {
        timeZone = timeZone || defaultProps.timeZone;
        const abbr = (0, config_1.getTimeZoneAbbrByUtc)(timeZone);
        return `${(0, dayjs_1.default)(Number(timestamp)).tz(timeZone).format(format)} (${abbr})`;
    }
    if (!props.includeTimeZone && timeZone) {
        return (0, dayjs_1.default)(Number(timestamp)).tz(timeZone).format(format);
    }
    return (0, dayjs_1.default)(Number(timestamp)).format(format);
};
exports.dateTimeFormat = dateTimeFormat;
class DateTimeBaseField extends field_1.Field {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    showFOperatorDesc(type) {
        return DateTimeBaseField.FOperatorDescMap[type];
    }
    get apiMetaProperty() {
        const res = {
            format: (0, exports.getDateTimeFormat)(this.field.property),
            includeTime: this.field.property.includeTime,
            timeZone: this.field.property.timeZone,
            includeTimeZone: this.field.property.includeTimeZone
        };
        if (this.field.property.autoFill) {
            res.autoFill = true;
        }
        return res;
    }
    get openValueJsonSchema() {
        return {
            type: 'string',
            title: this.field.name,
        };
    }
    get statTypeList() {
        return DateTimeBaseField._statTypeList;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.DateTime;
    }
    get acceptFilterOperators() {
        return DateTimeBaseField._acceptFilterOperators;
    }
    get dateFormat() {
        return field_types_1.DateFormat[this.field.property.dateFormat];
    }
    get timeFormat() {
        return field_types_1.TimeFormat[this.field.property.timeFormat];
    }
    get mergeFormat() {
        return this.dateFormat + (this.field.property.includeTime ? ' ' + this.timeFormat : '');
    }
    static _validate(value) {
        return (0, lodash_1.isNumber)(value) && !Number.isNaN(value);
    }
    validate(value) {
        return DateTimeBaseField._validate(value);
    }
    static _defaultValueForCondition(condition) {
        if (condition.operator !== view_types_1.FOperator.Is) {
            return null;
        }
        const { value } = condition;
        if (!value || value.length === 0) {
            return null;
        }
        const duration = value[0];
        if (duration === view_types_1.FilterDuration.ExactDate) {
            const timestamp = value[1];
            if (DateTimeBaseField._validate(timestamp)) {
                return timestamp;
            }
            return null;
        }
        if (duration === view_types_1.FilterDuration.Today) {
            const today = (0, utils_2.getToday)();
            return today.getTime();
        }
        if (duration === view_types_1.FilterDuration.Tomorrow) {
            const day = (0, utils_2.getToday)();
            day.setDate(day.getDate() + 1);
            return day.getTime();
        }
        if (duration === view_types_1.FilterDuration.Yesterday) {
            const day = (0, utils_2.getToday)();
            day.setDate(day.getDate() - 1);
            return day.getTime();
        }
        return null;
    }
    defaultValueForCondition(condition) {
        return DateTimeBaseField._defaultValueForCondition(condition);
    }
    defaultValue() {
        return null;
    }
    static _compare(cv1, cv2, property, onlyCompareOriginValue) {
        if (cv1 === cv2) {
            return 0;
        }
        if (cv1 === null) {
            return -1;
        }
        if (cv2 === null) {
            return 1;
        }
        const dateFormat = field_types_1.DateFormat[(property === null || property === void 0 ? void 0 : property.dateFormat) || defaultProps.dateFormat];
        const hasYear = dateFormat.includes('YYYY');
        // In the case of sorting and including the year, just use the original timestamp to compare
        if (onlyCompareOriginValue && hasYear) {
            return cv1 > cv2 ? 1 : -1;
        }
        const dateTimeStr1 = (0, exports.dateTimeFormat)(cv1, property);
        const dateTimeStr2 = (0, exports.dateTimeFormat)(cv2, property);
        // The product requirement is to use the displayed value (that is, the value seen by the cell) to be sorted uniformly. 
        // In theory, all of them can be compared using str.
        // But there is a variant of the year-month-day format: day-month-year, 
        // if you use str to compare the order at this time, there will be an error,
        // So the format containing the year, month and day uses timestamp comparison uniformly
        if (hasYear) {
            return dateTimeStr1 === dateTimeStr2 ?
                0 : (cv1 > cv2 ? 1 : -1);
        }
        // Fill in a uniform year, then compare the timestamps
        const timestamp1 = (0, dayjs_1.default)(cv1).year(2000).valueOf();
        const timestamp2 = (0, dayjs_1.default)(cv2).year(2000).valueOf();
        return dateTimeStr1 === dateTimeStr2 ?
            0 : (timestamp1 > timestamp2 ? 1 : -1);
    }
    compare(cellValue1, cellValue2, onlyCompareOriginValue) {
        return DateTimeBaseField._compare(cellValue1, cellValue2, this.field.property, onlyCompareOriginValue);
    }
    eq(cv1, cv2) {
        return (0, lodash_1.isEqual)((0, exports.dateTimeFormat)(cv1, this.field.property), (0, exports.dateTimeFormat)(cv2, this.field.property));
    }
    cellValueToString(cellValue, options) {
        return (0, exports.dateTimeFormat)(cellValue, this.field.property, options === null || options === void 0 ? void 0 : options.userTimeZone);
    }
    cellValueToStdValue(cellValue) {
        const stdVal = {
            sourceType: this.field.type,
            data: [],
        };
        if (cellValue != null) {
            /*
              * Data pasted or dragged from a date field should be saved twice
              * text is text, such as 11/02 2020-11-1, used to write data when pasting to non-date fields
              * originValue is a timestamp, which is used to paste or fill data into the date field.
              * The biggest difference from text is that all the time information is saved, which can be used according to
              * The format of the target date field is displayed freely
              */
            stdVal.data.push({
                text: this.cellValueToString(cellValue) || '',
                originValue: cellValue,
            });
        }
        return stdVal;
    }
    stdValueToCellValue(stdVal) {
        if (stdVal.data.length === 0) {
            return null;
        }
        let value = stdVal.data[0].text;
        if (!value) {
            return null;
        }
        const isOperateFromDate = stdVal.sourceType === field_types_1.FieldType.DateTime && stdVal.data[0].originValue;
        if (isOperateFromDate) {
            value = stdVal.data[0].originValue;
        }
        const _value = isOperateFromDate ? value : (0, utils_2.dateStrReplaceCN)(value);
        let datetime = (0, dayjs_1.default)(_value);
        if (datetime.isValid()) {
            /**
              * automatically fills the date with the year
              * If the data is pasted from a cell of a time field,
              * it will not be processed, but for strings pasted from text or Excel, two judgments will be made
              *
              * 1. Perform pattern matching according to the given format, check if there is a possible year,
              * if there is, use the given year
              *
              * 2. If the above conditions are not satisfied, check whether the final formatted year is 2001,
              * if it is satisfied, it will be directed to the current year
              *
              * @type {boolean}
              */
            const isIncludesYear = (0, dayjs_1.default)(_value, ['Y-M-D', 'D/M/Y']).isValid();
            if (datetime.year() === 2001 && !isIncludesYear) {
                datetime = datetime.year((0, dayjs_1.default)().year());
            }
            const timestamp = datetime.toDate().getTime();
            // When the type is switched, the illegal data is set to null
            if ((0, utils_2.notInTimestampRange)(timestamp)) {
                return null;
            }
            return timestamp;
        }
        return null;
    }
    /**
      * Assuming it is now Feb 8 01:56:55 UTC+8
      * Today: [Today 00:00, Tomorrow 23:59] UTC+8
      * Tomorrow: [Tomorrow 00:00, The day after tomorrow 23:59] UTC+8
      * Yesterday: [yesterday 00:00, today 23:59] UTC+8
      * Next 7 days: [Today 00:00, Feb 16 23:59] UTC+8
      * Last 7 days: [February 1st 00:00, today 23:59] UTC+8
      * In the next 30 days: [Today 00:00, March 9th 23:59] UTC+8
      * In the past 30 days: [January 8th 00:00, today 23:59] UTC+8
      * This week: Monday to Friday of the current week
      * Last week: Monday to Friday of the previous week
      * This month: [February 1st 00:00, February 28th 23:59] UTC+8
      * Last month: [January 1st 00:00, January 31st 23:59] UTC+8
      * This year: [January 1st 00:00, December 31st 23:59] UTC+8
      */
    static getTimeRange(filterDuration, time) {
        switch (filterDuration) {
            case view_types_1.FilterDuration.ExactDate: {
                if (time != undefined) {
                    return [
                        (0, dayjs_1.default)(time).startOf('day').valueOf(),
                        (0, dayjs_1.default)(time).endOf('day').valueOf()
                    ];
                }
                throw new Error('ExactDate has to calculate with timestamp');
            }
            case view_types_1.FilterDuration.DateRange: {
                if (typeof time === 'string') {
                    const [startDate, endDate] = time.split('-');
                    return [Number(startDate), Number(endDate)];
                }
                throw new Error('ExactDate has to calculate with timestamp');
            }
            case view_types_1.FilterDuration.Today: {
                return [
                    (0, dayjs_1.default)().startOf('day').valueOf(),
                    (0, dayjs_1.default)().endOf('day').valueOf()
                ];
            }
            case view_types_1.FilterDuration.Tomorrow: {
                return [
                    (0, dayjs_1.default)().add(1, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(1, 'day').endOf('day').valueOf()
                ];
            }
            case view_types_1.FilterDuration.Yesterday: {
                return [
                    (0, dayjs_1.default)().add(-1, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(-1, 'day').endOf('day').valueOf()
                ];
            }
            case view_types_1.FilterDuration.TheNextWeek: {
                return [
                    (0, dayjs_1.default)().add(1, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(7, 'day').endOf('day').valueOf()
                ];
            }
            case view_types_1.FilterDuration.TheLastWeek: {
                return [
                    (0, dayjs_1.default)().add(-7, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(-1, 'day').endOf('day').valueOf(),
                ];
            }
            // 1/29 plus one month equals March 1st
            case view_types_1.FilterDuration.TheNextMonth: {
                return [
                    (0, dayjs_1.default)().add(1, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(30, 'day').endOf('day').valueOf()
                ];
            }
            case view_types_1.FilterDuration.TheLastMonth: {
                return [
                    (0, dayjs_1.default)().add(-30, 'day').startOf('day').valueOf(),
                    (0, dayjs_1.default)().add(-1, 'day').endOf('day').valueOf(),
                ];
            }
            case view_types_1.FilterDuration.ThisWeek: {
                return [
                    (0, dayjs_1.default)().startOf('week').valueOf(),
                    (0, dayjs_1.default)().endOf('week').valueOf()
                ];
            }
            case view_types_1.FilterDuration.PreviousWeek: {
                return [
                    (0, dayjs_1.default)().add(-1, 'week').startOf('week').valueOf(),
                    (0, dayjs_1.default)().add(-1, 'week').endOf('week').valueOf()
                ];
            }
            case view_types_1.FilterDuration.ThisMonth: {
                return [
                    (0, dayjs_1.default)().startOf('month').valueOf(),
                    (0, dayjs_1.default)().endOf('month').valueOf()
                ];
            }
            case view_types_1.FilterDuration.PreviousMonth: {
                return [
                    (0, dayjs_1.default)().add(-1, 'month').startOf('month').valueOf(),
                    (0, dayjs_1.default)().add(-1, 'month').endOf('month').valueOf()
                ];
            }
            case view_types_1.FilterDuration.ThisYear: {
                return [
                    (0, dayjs_1.default)().startOf('year').valueOf(),
                    (0, dayjs_1.default)().endOf('year').valueOf()
                ];
            }
            case view_types_1.FilterDuration.SomeDayBefore: {
                if (typeof time === 'number') {
                    return [
                        (0, dayjs_1.default)().add(-time, 'day').startOf('day').valueOf(),
                        (0, dayjs_1.default)().add(-time, 'day').endOf('day').valueOf()
                    ];
                }
                throw new Error('SomeDayBefore has to calculate with number');
            }
            case view_types_1.FilterDuration.SomeDayAfter: {
                if (typeof time === 'number') {
                    return [
                        (0, dayjs_1.default)().add(time, 'day').startOf('day').valueOf(),
                        (0, dayjs_1.default)().add(time, 'day').endOf('day').valueOf()
                    ];
                }
                throw new Error('SomeDayAfter has to calculate with number');
            }
            default: {
                (0, utils_2.assertNever)(filterDuration);
                throw new Error('Wrong FilterDuration');
            }
        }
    }
    static _isMeetFilter(operator, cellValue, conditionValue) {
        // The logic to judge in advance that it is empty or not.
        if (operator === view_types_1.FOperator.IsEmpty) {
            return cellValue == null;
        }
        if (operator === view_types_1.FOperator.IsNotEmpty) {
            return cellValue != null;
        }
        const [filterDuration] = conditionValue;
        let timestamp;
        if (filterDuration === view_types_1.FilterDuration.ExactDate ||
            filterDuration === view_types_1.FilterDuration.DateRange ||
            filterDuration === view_types_1.FilterDuration.SomeDayBefore ||
            filterDuration === view_types_1.FilterDuration.SomeDayAfter) {
            timestamp = conditionValue[1];
            /**
             * When there is no timestamp, it means that time selection has not been performed, and no filtering is performed at this time
             */
            if (timestamp == null) {
                return true;
            }
        }
        /**
         * When the cell value is empty, it will be hidden
         * There is no need to consider the operation condition of whether it is empty or not, this condition has been processed externally
         */
        if (cellValue == null) {
            return false;
        }
        const [left, right] = this.getTimeRange(filterDuration, timestamp);
        switch (operator) {
            case view_types_1.FOperator.Is: {
                return left <= cellValue && cellValue < right;
            }
            case view_types_1.FOperator.IsGreater: {
                return cellValue > right;
            }
            case view_types_1.FOperator.IsGreaterEqual: {
                return cellValue >= left;
            }
            case view_types_1.FOperator.IsLess: {
                return cellValue < left;
            }
            case view_types_1.FOperator.IsLessEqual: {
                return cellValue <= right;
            }
            default: {
                return false;
                // return this.isMeetFilter(operator, cellValue, conditionValue);
            }
        }
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        return DateTimeBaseField._isMeetFilter(operator, cellValue, conditionValue);
    }
    static _statType2text(type) {
        if (type === stat_1.StatType.Max) {
            return (0, i18n_1.t)(i18n_1.Strings.stat_max_date);
        }
        if (type === stat_1.StatType.Min) {
            return (0, i18n_1.t)(i18n_1.Strings.stat_min_date);
        }
        return stat_1.StatTranslate[type];
    }
    /**
     * @description convert the statistical parameters into Chinese
     */
    statType2text(type) {
        return DateTimeBaseField._statType2text(type);
    }
    cellValueToApiStandardValue(cellValue) {
        return cellValue;
    }
    cellValueToApiStringValue(cellValue, options) {
        return cellValue ? this.cellValueToString(cellValue, { userTimeZone: options === null || options === void 0 ? void 0 : options.userTimeZone }) : null;
    }
    cellValueToOpenValue(cellValue) {
        return cellValue ? this.cellValueToString(cellValue) : null;
    }
    openWriteValueToCellValue(openWriteValue) {
        return (0, utils_1.isNullValue)(openWriteValue) ? null : new Date(openWriteValue).getTime();
    }
    static _filterValueToOpenFilterValue(value) {
        if (!value || !Array.isArray(value)) {
            return null;
        }
        const operator = value[0];
        const _value = value[1];
        if (operator === view_types_1.FilterDuration.DateRange) {
            const range = typeof _value === 'string' ? _value.split('-').map(v => Number(v)) : [];
            return range.length === 2 ? [operator, range[0], range[1]] : [operator, null];
        }
        if (operator === view_types_1.FilterDuration.ExactDate) {
            return [operator, _value];
        }
        if (operator === view_types_1.FilterDuration.SomeDayBefore || operator === view_types_1.FilterDuration.SomeDayAfter) {
            return [operator, _value == null ? null : Number(_value)];
        }
        return [operator];
    }
    filterValueToOpenFilterValue(value) {
        return DateTimeBaseField._filterValueToOpenFilterValue(value);
    }
    static _openFilterValueToFilterValue(value) {
        if (!value || !Array.isArray(value)) {
            return null;
        }
        const [operator, ..._value] = value;
        if (operator === view_types_1.FilterDuration.DateRange) {
            return _value.length === 2 ? [operator, _value.join('-')] : [operator, null];
        }
        if (operator === view_types_1.FilterDuration.ExactDate) {
            return [operator, _value.length === 1 ? _value[0] : null];
        }
        if (operator === view_types_1.FilterDuration.SomeDayBefore || operator === view_types_1.FilterDuration.SomeDayAfter) {
            return [operator, _value.length === 1 ? _value[0] : null];
        }
        return [operator];
    }
    openFilterValueToFilterValue(value) {
        return DateTimeBaseField._openFilterValueToFilterValue(value);
    }
    static _validateOpenFilterValue(value) {
        if (!value) {
            return joi_1.default.allow(null).validate(value);
        }
        const [op, ..._value] = value;
        if (op === view_types_1.FilterDuration.DateRange) {
            return joi_1.default.array().items(joi_1.default.number().allow(null)).min(2).max(2).allow(null).validate(_value);
        }
        if (op === view_types_1.FilterDuration.ExactDate) {
            return joi_1.default.array().items(joi_1.default.number().allow(null)).max(1).allow(null).validate(_value);
        }
        if (op === view_types_1.FilterDuration.SomeDayBefore || op === view_types_1.FilterDuration.SomeDayAfter) {
            return joi_1.default.array().items(joi_1.default.number().allow(null)).max(1).allow(null).validate(_value);
        }
        return joi_1.default.array().max(0).validate(_value);
    }
    validateOpenFilterValue(value) {
        return DateTimeBaseField._validateOpenFilterValue(value);
    }
}
exports.DateTimeBaseField = DateTimeBaseField;
DateTimeBaseField._statTypeList = [
    stat_1.StatType.None,
    stat_1.StatType.CountAll,
    stat_1.StatType.Empty,
    stat_1.StatType.Filled,
    stat_1.StatType.Unique,
    stat_1.StatType.PercentEmpty,
    stat_1.StatType.PercentFilled,
    stat_1.StatType.PercentUnique,
    stat_1.StatType.Min,
    stat_1.StatType.Max,
    stat_1.StatType.DateRangeOfDays,
    stat_1.StatType.DateRangeOfMonths,
];
DateTimeBaseField._acceptFilterOperators = [
    view_types_1.FOperator.Is,
    view_types_1.FOperator.IsGreater,
    view_types_1.FOperator.IsGreaterEqual,
    view_types_1.FOperator.IsLess,
    view_types_1.FOperator.IsLessEqual,
    view_types_1.FOperator.IsEmpty,
    view_types_1.FOperator.IsNotEmpty,
    view_types_1.FOperator.IsRepeat,
];
DateTimeBaseField.FOperatorDescMap = {
    [view_types_1.FOperator.Is]: (0, i18n_1.t)(i18n_1.Strings.equal),
    [view_types_1.FOperator.IsNot]: (0, i18n_1.t)(i18n_1.Strings.not_equal),
    [view_types_1.FOperator.IsGreater]: (0, i18n_1.t)(i18n_1.Strings.function_date_time_after),
    [view_types_1.FOperator.IsGreaterEqual]: (0, i18n_1.t)(i18n_1.Strings.date_after_or_equal),
    [view_types_1.FOperator.IsLess]: (0, i18n_1.t)(i18n_1.Strings.function_date_time_before),
    [view_types_1.FOperator.IsLessEqual]: (0, i18n_1.t)(i18n_1.Strings.date_before_or_equal),
    [view_types_1.FOperator.IsEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_empty),
    [view_types_1.FOperator.IsNotEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_not_empty),
    [view_types_1.FOperator.IsRepeat]: (0, i18n_1.t)(i18n_1.Strings.is_repeat),
};


/***/ }),

/***/ 22389:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DateTimeField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const datasheet_1 = __webpack_require__(55384);
const date_time_base_field_1 = __webpack_require__(35370);
const field_types_1 = __webpack_require__(80360);
const validate_schema_1 = __webpack_require__(62903);
const dayjs_1 = __importDefault(__webpack_require__(1635));
class DateTimeField extends date_time_base_field_1.DateTimeBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.DateTime,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            dateFormat: field_types_1.DateFormat['YYYY/MM/DD'],
            timeFormat: field_types_1.TimeFormat['hh:mm'],
            includeTime: false,
            autoFill: false,
        };
    }
    defaultValue() {
        if (this.field.property.autoFill) {
            return Date.now();
        }
        return null;
    }
    /* Due to the need to traverse the DateTimeFormat enumeration value,
    but DateTimeFormat will have the form of keyValue and valueKey after compilation
      Need to filter out the case of number key */
    validateProperty() {
        return DateTimeField.propertySchema.validate(this.field.property);
    }
    validateCellValue(cv) {
        return DateTimeField.cellValueSchema.validate(cv);
    }
    validateOpenWriteValue(owv) {
        return DateTimeField.openWriteValueSchema.validate(owv);
    }
    get includeTimeZone() {
        var _a;
        return (_a = this.field.property) === null || _a === void 0 ? void 0 : _a.includeTimeZone;
    }
    get timeZone() {
        return this.field.property.timeZone;
    }
    get openFieldProperty() {
        const { autoFill, includeTime, dateFormat, timeFormat } = this.field.property;
        return {
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: field_types_1.TimeFormat[timeFormat],
            autoFill,
            includeTime
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return DateTimeField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { dateFormat, timeFormat, autoFill, includeTime } = openFieldProperty;
        const defaultProperty = DateTimeField.defaultProperty();
        return {
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: timeFormat ? field_types_1.TimeFormat[timeFormat] : defaultProperty.timeFormat,
            autoFill: autoFill !== null && autoFill !== void 0 ? autoFill : defaultProperty.autoFill,
            includeTime: includeTime !== null && includeTime !== void 0 ? includeTime : defaultProperty.includeTime
        };
    }
}
exports.DateTimeField = DateTimeField;
DateTimeField.propertySchema = joi_1.default.object({
    dateFormat: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.TimeFormat)).required(),
    includeTime: joi_1.default.boolean().required(),
    autoFill: joi_1.default.boolean().required(),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();
DateTimeField.cellValueSchema = joi_1.default.number().custom((value, helpers) => {
    if ((0, dayjs_1.default)(value).isValid()) {
        return value;
    }
    return helpers.error('valid date');
}, 'custom validation').allow(null).required();
DateTimeField.openWriteValueSchema = joi_1.default.custom((value, helpers) => {
    if ((0, dayjs_1.default)(value).isValid()) {
        return value;
    }
    return helpers.error('valid date');
}).allow(null).required();
DateTimeField.defaultDateFormat = field_types_1.DateFormat[0];
DateTimeField.defaultTimeFormat = field_types_1.TimeFormat[0];
DateTimeField.openUpdatePropertySchema = joi_1.default.object({
    dateFormat: joi_1.default.valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.TimeFormat)),
    includeTime: joi_1.default.boolean(),
    autoFill: joi_1.default.boolean(),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();


/***/ }),

/***/ 57924:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EmailField = void 0;
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const text_base_field_1 = __webpack_require__(36722);
class EmailField extends text_base_field_1.TextBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    get apiMetaProperty() {
        return null;
    }
    static defaultProperty() {
        return null;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            type: field_types_1.FieldType.Email,
            property: this.defaultProperty(),
        };
    }
}
exports.EmailField = EmailField;


/***/ }),

/***/ 55808:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ArrayValueField = exports.Field = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const store_1 = __webpack_require__(56791);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const index_1 = __webpack_require__(61116);
const stat_1 = __webpack_require__(90519);
const validate_schema_1 = __webpack_require__(62903);
// China sensitive string comparison `collators` constructor.
const zhIntlCollator = typeof Intl !== 'undefined' ? new Intl.Collator('zh-CN') : undefined;
/**
 * The business class should not become a complex container, it is better to be just a pipeline of data flow
 * Here we use the form of classes to build business calculation methods,
 * but do not use new to initialize directly, but only bind the data that needs to be processed to the instance, and leave after use.
 * Suppose we want to call cellValueToString
 *
 * Example:
 * const field: ITextField = // Assuming there is a column attribute data for a text column;
 * const value = Field.bindContext(field, state).cellValueToString();
 *
 * As you can see, every time you use the methods on the Field class,
 * you only need bindContext for data binding, and then call the calculation method to get the desired return value.
 * No need to hold a concrete Field instance. This is very useful when we use it with redux immutable data.
 * Because immutable data is managed by reducer, it may be updated at any time, and we cannot hold data in our method class,
 * Instead, get the latest data from the latest state every time you use it to participate in the calculation.
 */
class Field {
    constructor(field, state) {
        this.field = field;
        this.state = state;
    }
    /**
     * the meta information of API return fields
     *
     * @param dstId
     * @returns
     */
    getApiMeta(dstId) {
        const views = store_1.Selectors.getViewsList(this.state, dstId);
        const firstFieldId = views[0].columns[0].fieldId;
        const res = {
            id: this.field.id,
            name: this.field.name,
            type: (0, index_1.getFieldTypeString)(this.field.type),
            property: this.apiMetaProperty || undefined,
            editable: this.recordEditable(),
        };
        if (this.field.id === firstFieldId) {
            res.isPrimary = true;
        }
        if (this.field.desc) {
            res.desc = this.field.desc;
        }
        return res;
    }
    // not includes basic value type in Array
    get valueType() {
        if (this.basicValueType === field_types_1.BasicValueType.Array) {
            return this.innerBasicValueType;
        }
        return this.basicValueType;
    }
    // default String, Array type field override
    get innerBasicValueType() {
        return field_types_1.BasicValueType.String;
    }
    showFOperatorDesc(type) {
        return view_types_1.FOperatorDescMap[type];
    }
    /**
     * whether the field support grouping
     */
    get canGroup() {
        return true;
    }
    /**
     * whether the calc field error
     */
    get hasError() {
        return false;
    }
    /**
     * calc field exception info
     */
    get warnText() {
        return '';
    }
    /**
     * current field analytic bar options
     */
    get statTypeList() {
        return [
            stat_1.StatType.None,
            stat_1.StatType.CountAll,
            stat_1.StatType.Empty,
            stat_1.StatType.Filled,
            stat_1.StatType.Unique,
            stat_1.StatType.PercentEmpty,
            stat_1.StatType.PercentFilled,
            stat_1.StatType.PercentUnique,
        ];
    }
    /**
     * The value of each cell is calculated through the field record relationship in the snapshot.
     * But the calculation here refers to fields such as LookUp, RollUp, Formula, etc.
     * The calculation of the cell value depends on the value of other basic cells.
     * Such fields are called "calculated fields" and need to override this method.
     * @readonly
     * @memberof Field
     */
    get isComputed() {
        return false;
    }
    /**
     * judge the filter, which FieldType belongs to?
     *
     * @template T
     * @param {T} t
     * @param {IFilterCondition<FieldType>} v
     * @returns {v is Extract<IFilterCondition<T>, IFilterCondition<FieldType>>}
     * @memberof Field
     */
    static isFilterBelongFieldType(t, v) {
        return v.fieldType === t;
    }
    isEmptyOrNot(operator, cellValue) {
        switch (operator) {
            /**
             * The logic of isEmpty and isNotEmpty is basically common use
             */
            case view_types_1.FOperator.IsEmpty: {
                return cellValue == null;
            }
            case view_types_1.FOperator.IsNotEmpty: {
                return cellValue != null;
            }
            default: {
                throw new Error('compare operator type error');
            }
        }
    }
    /**
     * Whether the current field can be edited
     * Not all fields allow users to edit. If it is a calculated field, such as rollUp, lookup, formula fields, users are not allowed to edit
     * In addition, related fields are only allowed to be edited
     * if the user has the editing permission of the table associated with the current related field.
     */
    recordEditable(datasheetId, mirrorId) {
        return store_1.Selectors.getPermissions(this.state, datasheetId, this.field.id, mirrorId).cellEditable;
    }
    /**
     * Whether the properties of the current field are allowed to be edited
     * Here it is judged according to the permission factor, and the edit field is allowed to be true.
     */
    propertyEditable() {
        return store_1.Selectors.getPermissions(this.state, undefined, this.field.id).fieldPropertyEditable;
    }
    /**
     * compare two cell value whether equal
     * by default, use deep comparison,
     * complicated cell value need to override this method
     *
     * TODO: make the logic of `eq` and the logic of `compare` together, delete `eq`
     *
     */
    eq(cv1, cv2) {
        return (0, lodash_1.isEqual)(cv1, cv2);
    }
    /**
     * on this field, compare 2 cell value size, for sorting
     * by default, compare with string conversion, if not, please implement it yourself.
     * @orderInCellValueSensitive {boolean}
     * when grouping, the sort of cells are insensitive, grouping them together.
     * when sorting, the sort of cells are sensitive.
     * when testing, multiple-choices, members, relations keep same logic.
     * @returns {number} negative number => smaller than | 0 => equals | positive number => larger than
     */
    compare(cellValue1, cellValue2, orderInCellValueSensitive) {
        if (this.eq(cellValue1, cellValue2)) {
            return 0;
        }
        if (cellValue1 == null) {
            return -1;
        }
        if (cellValue2 == null) {
            return 1;
        }
        let str1 = this.cellValueToString(cellValue1, { orderInCellValueSensitive });
        let str2 = this.cellValueToString(cellValue2, { orderInCellValueSensitive });
        if (str1 === str2) {
            return 0;
        }
        if (str1 == null) {
            return -1;
        }
        if (str2 == null) {
            return 1;
        }
        str1 = str1.trim();
        str2 = str2.trim();
        // test pinyin sort
        return str1 === str2 ? 0 :
            zhIntlCollator ? zhIntlCollator.compare(str1, str2) : (str1.localeCompare(str2, 'zh-CN') > 0 ? 1 : -1);
    }
    /**
     *
     * beside the operator calc function  that check whether empty,
     * other functions need to implement themselves
     * when no inheritance is needed, the default is true, which means no filtering
     *
     */
    isMeetFilter(operator, cellValue, _) {
        switch (operator) {
            case view_types_1.FOperator.IsEmpty:
            case view_types_1.FOperator.IsNotEmpty: {
                return this.isEmptyOrNot(operator, cellValue);
            }
            default: {
                console.warn('Method should be overwrite!');
                return true;
            }
        }
    }
    stringInclude(str, searchStr) {
        return str.toLowerCase().includes(searchStr.trim().toLowerCase());
    }
    // used for copy-paste/type conversion before getting a new record, according to the
    // Data fills the properties in Field, such as options in single/multi
    enrichProperty(_stdVals) {
        return this.field.property;
    }
    /**
     * Whether to multi-select fields of value type.
     * For multiple selections, the collaborator field will return true.
     * NOTE: Fields that are guaranteed to return true, value is an array.
     */
    isMultiValueField() {
        return false;
    }
    /**
     * Returns the default value of the field attribute configuration when adding a record
     */
    defaultValue() {
        return null;
    }
    /**
     * @description convert the statistical parameters into Chinese/English
     */
    statType2text(type) {
        const result = stat_1.StatTranslate[type];
        return result;
    }
    /**
     * Get property (widget, robot, api)
     */
    get openFieldProperty() {
        return null;
    }
    /**
     * Check update field property
     * @returns {Joi.ValidationResult}
     */
    validateUpdateOpenProperty(_updateProperty, _effectOption) {
        return (0, validate_schema_1.joiErrorResult)(`${(0, index_1.getFieldTypeString)(this.field.type)} not support set property`);
    }
    /**
     * Return field information externally
     * @param dstId
     */
    getOpenField(dstId) {
        const views = store_1.Selectors.getViewsList(this.state, dstId);
        const firstFieldId = views[0].columns[0].fieldId;
        const { id, name, desc: description, type, required } = this.field;
        const res = {
            id,
            name,
            description,
            type: (0, index_1.getFieldTypeString)(type),
            property: this.openFieldProperty,
            editable: this.recordEditable(),
            required
        };
        if (this.field.id === firstFieldId) {
            res.isPrimary = true;
        }
        return res;
    }
    /**
     * Check the property when creating the field
     */
    validateAddOpenFieldProperty(addProperty) {
        return this.validateUpdateOpenProperty(addProperty);
    }
    /**
     * Check whether the delete field parameter is qualified
     * @param deleteFieldSchema delete field parameter
     */
    validateOpenDeleteField(deleteFieldSchema) {
        return joi_1.default.object({
            id: joi_1.default.string().required(),
            conversion: joi_1.default.boolean(),
        }).required().validate(deleteFieldSchema);
    }
    /**
     *
     * For the time being, all fields are created and updated the same,
     * except that there is an additional conversion when the associated field is updated, so the conversion at the time of update is used directly
     *
     * Add a new field to convert the incoming property into a structure that can be sent with cmd
     * Note: This step will not verify the incoming parameters, and the verification is passed by default
     * @param openFieldProperty
     */
    addOpenFieldPropertyTransformProperty(addOpenFieldProperty) {
        return this.updateOpenFieldPropertyTransformProperty(addOpenFieldProperty);
    }
    /**
     * Update the field properties and convert the incoming property into a structure that can be sent with cmd
     * Note: This step will not verify the incoming parameters, and the verification is passed by default
     * @param openFieldProperty
     */
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        return openFieldProperty;
    }
    /**
     * Converting internal filter structures to external data structures.
     * @param _value
     */
    filterValueToOpenFilterValue(_value) {
        throw new Error(`${(0, index_1.getFieldTypeString)(this.field.type)} not support filterValueToOpenFilterValue`);
    }
    /**
     * Converting external filter structures to internal data structures.
     * @param value
     */
    openFilterValueToFilterValue(_value) {
        throw new Error(`${(0, index_1.getFieldTypeString)(this.field.type)} not support filterValueToOpenFilterValue`);
    }
    /**
     * Verify that the incoming external filter data structure is secure.
     * @param value
     */
    validateOpenFilterValue(_value) {
        return (0, validate_schema_1.joiErrorResult)(`${(0, index_1.getFieldTypeString)(this.field.type)} not support validateOpenFilterValue`);
    }
}
exports.Field = Field;
class ArrayValueField extends Field {
    get acceptFilterOperators() {
        return ArrayValueField._acceptFilterOperators;
    }
}
exports.ArrayValueField = ArrayValueField;
// Who sets the value of the field need to specify the value type in the array
ArrayValueField._acceptFilterOperators = [
    view_types_1.FOperator.Is,
    view_types_1.FOperator.IsNot,
    view_types_1.FOperator.Contains,
    view_types_1.FOperator.DoesNotContain,
    view_types_1.FOperator.IsEmpty,
    view_types_1.FOperator.IsNotEmpty,
    view_types_1.FOperator.IsRepeat,
];


/***/ }),

/***/ 55980:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FormulaField = void 0;
const compute_manager_1 = __webpack_require__(73374);
const formula_parser_1 = __webpack_require__(51067);
const joi_1 = __importDefault(__webpack_require__(48506));
const constants_1 = __webpack_require__(31923);
const utils_1 = __webpack_require__(46214);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const env_1 = __webpack_require__(13799);
const checkbox_field_1 = __webpack_require__(68877);
const date_time_base_field_1 = __webpack_require__(35370);
const field_1 = __webpack_require__(55808);
const number_base_field_1 = __webpack_require__(11639);
const stat_1 = __webpack_require__(90519);
const text_base_field_1 = __webpack_require__(36722);
const validate_schema_1 = __webpack_require__(62903);
class FormulaField extends field_1.ArrayValueField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    validateProperty() {
        return FormulaField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    get apiMetaPropertyFormat() {
        return (0, utils_1.getApiMetaPropertyFormat)(this);
    }
    get apiMetaProperty() {
        const res = {
            expression: this.field.property.expression,
            valueType: this.basicValueType,
            hasError: this.hasError,
        };
        if (this.apiMetaPropertyFormat) {
            res.format = this.apiMetaPropertyFormat;
        }
        return res;
    }
    get openValueJsonSchema() {
        switch (this.basicValueType) {
            case field_types_1.BasicValueType.Number:
            case field_types_1.BasicValueType.String:
            case field_types_1.BasicValueType.DateTime:
            case field_types_1.BasicValueType.Boolean:
                return {
                    type: constants_1.ValueTypeMap[this.basicValueType],
                    title: this.field.name,
                };
            case field_types_1.BasicValueType.Array:
                const innerBasicValueType = this.innerBasicValueType;
                return {
                    type: 'array',
                    title: this.field.name,
                    items: {
                        type: constants_1.ValueTypeMap[innerBasicValueType],
                        title: 'sub project'
                    }
                };
            default:
                // By default, it is processed as string
                return {
                    type: 'string',
                    title: this.field.name,
                };
        }
    }
    getParseResult() {
        const snapshot = (0, selectors_1.getSnapshot)(this.state, this.field.property.datasheetId);
        const fieldMap = snapshot === null || snapshot === void 0 ? void 0 : snapshot.meta.fieldMap;
        return (0, formula_parser_1.parse)(this.field.property.expression, { field: this.field, fieldMap, state: this.state });
    }
    get hasError() {
        const { datasheetId, expression } = this.field.property;
        const cacheResult = formula_parser_1.ExpCache.get(datasheetId, this.field.id, expression);
        if ((0, env_1.isClient)()) {
            const computeRefManager = (0, compute_manager_1.getComputeRefManager)(this.state);
            if (!computeRefManager.checkRef(`${datasheetId}-${this.field.id}`)) {
                return true;
            }
        }
        return Boolean(cacheResult && 'error' in cacheResult);
    }
    get statTypeList() {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._statTypeList;
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._statTypeList;
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._statTypeList;
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._statTypeList;
            default:
                return text_base_field_1.TextBaseField._statTypeList;
        }
    }
    get basicValueType() {
        const formulaExpr = this.getParseResult();
        if ('error' in formulaExpr) {
            return field_types_1.BasicValueType.String;
        }
        return formulaExpr.ast.valueType;
    }
    get innerBasicValueType() {
        const formulaExpr = this.getParseResult();
        if ('error' in formulaExpr) {
            return field_types_1.BasicValueType.String;
        }
        return formulaExpr.ast.innerValueType || field_types_1.BasicValueType.String;
    }
    showFOperatorDesc(type) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField.FOperatorDescMap[type];
            case field_types_1.BasicValueType.Boolean:
                return types_1.FOperatorDescMap[type];
            case field_types_1.BasicValueType.String:
                return types_1.FOperatorDescMap[type];
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField.FOperatorDescMap[type];
            default:
                return '';
        }
    }
    get acceptFilterOperators() {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._acceptFilterOperators;
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._acceptFilterOperators;
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._acceptFilterOperators;
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._acceptFilterOperators;
            default:
                return [];
        }
    }
    get isComputed() {
        return true;
    }
    // getExpression2Display() {
    //   const
    //   this.field.property.expression;
    // }
    static defaultProperty() {
        return {
            expression: '',
            datasheetId: ''
        };
    }
    compare(cv1, cv2, orderInCellValueSensitive) {
        // Compatible with sorting formula error
        const isCv1Error = cv1 instanceof formula_parser_1.FormulaBaseError;
        const isCv2Error = cv2 instanceof formula_parser_1.FormulaBaseError;
        if (isCv1Error && isCv2Error) {
            return 0;
        }
        if (isCv1Error && !isCv2Error) {
            return -1;
        }
        if (!isCv1Error && isCv2Error) {
            return 1;
        }
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._compare(cv1, cv2);
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._compare(cv1, cv2, this.field.property.formatting);
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._compare(cv1, cv2, orderInCellValueSensitive);
            default:
                return super.compare(cv1, cv2, orderInCellValueSensitive);
        }
    }
    recordEditable() {
        return false;
    }
    cellValueToStdValue(cellValue) {
        const stdValue = {
            sourceType: this.field.type,
            data: [],
        };
        if (cellValue != null) {
            stdValue.data.push({
                text: this.cellValueToString(cellValue) || '',
                value: cellValue
            });
        }
        return stdValue;
    }
    cellValueToArray(cellValue) {
        return cellValue;
    }
    arrayValueToString(cellValue, options) {
        if (Array.isArray(cellValue)) {
            const vArray = this.arrayValueToArrayStringValueArray(cellValue, options);
            return vArray == null ? null : vArray.join(', ');
        }
        return String(cellValue);
    }
    arrayValueToArrayStringValueArray(cellValue, options) {
        return cellValue.map(cv => {
            var _a;
            switch (this.innerBasicValueType) {
                case field_types_1.BasicValueType.Number:
                case field_types_1.BasicValueType.Boolean: {
                    return (0, number_base_field_1.numberFormat)(cv, (_a = this.field.property) === null || _a === void 0 ? void 0 : _a.formatting);
                }
                case field_types_1.BasicValueType.DateTime:
                    return (0, date_time_base_field_1.dateTimeFormat)(cv, this.field.property.formatting, options === null || options === void 0 ? void 0 : options.userTimeZone);
                case field_types_1.BasicValueType.String:
                    return String(cv);
                default:
                    return String(cv);
            }
        });
    }
    stdValueToCellValue(_stdField) {
        return null;
    }
    validate(_value) {
        return true;
    }
    defaultValueForCondition(_condition) {
        return null;
    }
    cellValueToString(cellValue, options) {
        var _a;
        if (cellValue == null) {
            return null;
        }
        switch (this.basicValueType) {
            case field_types_1.BasicValueType.Number:
            case field_types_1.BasicValueType.Boolean: {
                return (0, number_base_field_1.numberFormat)(cellValue, (_a = this.field.property) === null || _a === void 0 ? void 0 : _a.formatting);
            }
            case field_types_1.BasicValueType.DateTime:
                return (0, date_time_base_field_1.dateTimeFormat)(cellValue, this.field.property.formatting, options === null || options === void 0 ? void 0 : options.userTimeZone);
            case field_types_1.BasicValueType.String:
                return String(cellValue);
            case field_types_1.BasicValueType.Array: {
                return this.arrayValueToString(cellValue, options);
            }
            default:
                return null;
        }
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        const innerBasicValueTypeFilter = (cv) => {
            switch (this.innerBasicValueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._isMeetFilter(operator, cv, conditionValue);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._isMeetFilter(operator, cv, conditionValue);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._isMeetFilter(operator, cv, conditionValue);
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._isMeetFilter(operator, this.cellValueToString(cv), conditionValue);
                default:
                    return false;
            }
        };
        switch (this.basicValueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._isMeetFilter(operator, cellValue, conditionValue);
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._isMeetFilter(operator, cellValue, conditionValue);
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._isMeetFilter(operator, cellValue, conditionValue);
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._isMeetFilter(operator, this.cellValueToString(cellValue), conditionValue);
            case field_types_1.BasicValueType.Array:
                switch (operator) {
                    // The filter operation of negative semantics requires that each item in the array satisfies
                    case types_1.FOperator.DoesNotContain:
                    case types_1.FOperator.IsNot:
                    case types_1.FOperator.IsEmpty:
                        return cellValue.every(innerBasicValueTypeFilter);
                    default:
                        return cellValue.some(innerBasicValueTypeFilter);
                }
            default:
                return false;
        }
    }
    statType2text(type) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._statType2text(type);
            case field_types_1.BasicValueType.Number:
            case field_types_1.BasicValueType.Boolean:
            case field_types_1.BasicValueType.String:
                return stat_1.StatTranslate[type];
            default:
                return '';
        }
    }
    cellValueToApiStandardValue(cellValue) {
        return cellValue;
    }
    cellValueToApiStringValue(cellValue, options) {
        return this.cellValueToString(cellValue, { userTimeZone: options === null || options === void 0 ? void 0 : options.userTimeZone });
    }
    cellValueToOpenValue(cellValue) {
        return cellValue;
    }
    openWriteValueToCellValue() {
        return null;
    }
    get openFieldProperty() {
        const res = {
            expression: this.field.property.expression,
            valueType: this.basicValueType,
            hasError: this.hasError,
        };
        if (this.apiMetaPropertyFormat) {
            res.format = this.apiMetaPropertyFormat;
        }
        return res;
    }
    validateUpdateOpenProperty(updateProperty) {
        return FormulaField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { expression, format } = openFieldProperty;
        const formatting = format ? (0, utils_1.computedFormattingToFormat)(format) : undefined;
        return {
            datasheetId: this.field.property.datasheetId,
            expression: expression || '',
            formatting
        };
    }
    filterValueToOpenFilterValue(value) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._filterValueToOpenFilterValue(value);
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._filterValueToOpenFilterValue(value);
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._filterValueToOpenFilterValue(value);
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._filterValueToOpenFilterValue(value);
            default:
                return null;
        }
    }
    openFilterValueToFilterValue(value) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._openFilterValueToFilterValue(value);
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._openFilterValueToFilterValue(value);
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._openFilterValueToFilterValue(value);
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._openFilterValueToFilterValue(value);
            default:
                return null;
        }
    }
    validateOpenFilterValue(value) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.Number:
                return number_base_field_1.NumberBaseField._validateOpenFilterValue(value);
            case field_types_1.BasicValueType.Boolean:
                return checkbox_field_1.CheckboxField._validateOpenFilterValue(value);
            case field_types_1.BasicValueType.String:
                return text_base_field_1.TextBaseField._validateOpenFilterValue(value);
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._validateOpenFilterValue(value);
            default:
                return (0, validate_schema_1.joiErrorResult)('formula no support Array filter');
        }
    }
}
exports.FormulaField = FormulaField;
FormulaField.propertySchema = joi_1.default.object({
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
    expression: joi_1.default.string().allow('').required(),
    formatting: (0, validate_schema_1.computedFormatting)(),
}).required();
FormulaField.openUpdatePropertySchema = joi_1.default.object({
    expression: joi_1.default.string(),
    format: (0, validate_schema_1.computedFormattingStr)(),
}).required();


/***/ }),

/***/ 46559:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.bindContext = exports.bindModel = exports.injectStore = exports.getFieldClass = exports.OtherTypeUnitId = exports.numberThresholdValue = void 0;
const text_field_1 = __webpack_require__(55842);
const attachment_field_1 = __webpack_require__(34155);
const date_time_field_1 = __webpack_require__(22389);
const created_time_field_1 = __webpack_require__(91233);
const last_modified_time_field_1 = __webpack_require__(44833);
const number_field_1 = __webpack_require__(57774);
const currency_field_1 = __webpack_require__(10662);
const percent_field_1 = __webpack_require__(88163);
const auto_number_field_1 = __webpack_require__(66387);
const select_field_1 = __webpack_require__(47142);
const link_field_1 = __webpack_require__(36201);
const url_field_1 = __webpack_require__(25757);
const virtual_field_1 = __webpack_require__(61902);
const field_types_1 = __webpack_require__(80360);
const field_1 = __webpack_require__(55808);
const email_field_1 = __webpack_require__(57924);
const phone_field_1 = __webpack_require__(65316);
const rating_field_1 = __webpack_require__(36647);
const checkbox_field_1 = __webpack_require__(68877);
const formula_field_1 = __webpack_require__(55980);
const lookup_field_1 = __webpack_require__(22633);
const member_field_1 = __webpack_require__(83009);
const created_by_field_1 = __webpack_require__(2799);
const last_modified_by_field_1 = __webpack_require__(20421);
const single_text_field_1 = __webpack_require__(80873);
__exportStar(__webpack_require__(55808), exports);
__exportStar(__webpack_require__(90519), exports);
__exportStar(__webpack_require__(55842), exports);
__exportStar(__webpack_require__(57774), exports);
__exportStar(__webpack_require__(47142), exports);
__exportStar(__webpack_require__(22389), exports);
__exportStar(__webpack_require__(61902), exports);
__exportStar(__webpack_require__(34155), exports);
__exportStar(__webpack_require__(36201), exports);
__exportStar(__webpack_require__(25757), exports);
__exportStar(__webpack_require__(57924), exports);
__exportStar(__webpack_require__(65316), exports);
__exportStar(__webpack_require__(36647), exports);
__exportStar(__webpack_require__(83009), exports);
__exportStar(__webpack_require__(55980), exports);
__exportStar(__webpack_require__(22633), exports);
__exportStar(__webpack_require__(10662), exports);
__exportStar(__webpack_require__(80873), exports);
__exportStar(__webpack_require__(91233), exports);
__exportStar(__webpack_require__(44833), exports);
__exportStar(__webpack_require__(2799), exports);
__exportStar(__webpack_require__(20421), exports);
__exportStar(__webpack_require__(36722), exports);
var number_base_field_1 = __webpack_require__(11639);
Object.defineProperty(exports, "numberThresholdValue", ({ enumerable: true, get: function () { return number_base_field_1.numberThresholdValue; } }));
var member_base_field_1 = __webpack_require__(78319);
Object.defineProperty(exports, "OtherTypeUnitId", ({ enumerable: true, get: function () { return member_base_field_1.OtherTypeUnitId; } }));
const getFieldClass = (type) => {
    switch (type) {
        case field_types_1.FieldType.Text: {
            return text_field_1.TextField;
        }
        case field_types_1.FieldType.Number: {
            return number_field_1.NumberField;
        }
        case field_types_1.FieldType.Currency: {
            return currency_field_1.CurrencyField;
        }
        case field_types_1.FieldType.Percent: {
            return percent_field_1.PercentField;
        }
        case field_types_1.FieldType.AutoNumber: {
            return auto_number_field_1.AutoNumberField;
        }
        case field_types_1.FieldType.SingleSelect: {
            return select_field_1.SingleSelectField;
        }
        case field_types_1.FieldType.MultiSelect: {
            return select_field_1.MultiSelectField;
        }
        case field_types_1.FieldType.DateTime: {
            return date_time_field_1.DateTimeField;
        }
        case field_types_1.FieldType.CreatedTime: {
            return created_time_field_1.CreatedTimeField;
        }
        case field_types_1.FieldType.LastModifiedTime: {
            return last_modified_time_field_1.LastModifiedTimeField;
        }
        case field_types_1.FieldType.Attachment: {
            return attachment_field_1.AttachmentField;
        }
        case field_types_1.FieldType.Link: {
            return link_field_1.LinkField;
        }
        case field_types_1.FieldType.URL: {
            return url_field_1.URLField;
        }
        case field_types_1.FieldType.Email: {
            return email_field_1.EmailField;
        }
        case field_types_1.FieldType.Phone: {
            return phone_field_1.PhoneField;
        }
        case field_types_1.FieldType.Rating: {
            return rating_field_1.RatingField;
        }
        case field_types_1.FieldType.Checkbox: {
            return checkbox_field_1.CheckboxField;
        }
        case field_types_1.FieldType.Member: {
            return member_field_1.MemberField;
        }
        case field_types_1.FieldType.CreatedBy: {
            return created_by_field_1.CreatedByField;
        }
        case field_types_1.FieldType.LastModifiedBy: {
            return last_modified_by_field_1.LastModifiedByField;
        }
        case field_types_1.FieldType.LookUp: {
            return lookup_field_1.LookUpField;
        }
        case field_types_1.FieldType.Formula: {
            return formula_field_1.FormulaField;
        }
        case field_types_1.FieldType.SingleText: {
            return single_text_field_1.SingleTextField;
        }
        case field_types_1.FieldType.DeniedField: {
            return virtual_field_1.DeniedField;
        }
        default: {
            return virtual_field_1.NotSupportField;
        }
    }
};
exports.getFieldClass = getFieldClass;
/**
 * Static store for injection to external callers (web-side).
 * Before calling Field on the web side, inject the store instance first, then you don't need to pass in the store again every time you bindModel
 */
let storeCache;
const injectStore = (store) => { storeCache = store; };
exports.injectStore = injectStore;
/**
 * Bind the field model data to get an instance of the field calculation method.
 * A cache is done here. Prevent unnecessary memory consumption caused by new instances when called frequently.
 */
exports.bindModel = (() => {
    const cache = {};
    return (field, inState, newInstance) => {
        if (!inState && !storeCache) {
            throw new Error('Please pass in the store data source');
        }
        const state = inState || storeCache.getState();
        // Force initialize a new instance
        if (newInstance) {
            const FieldClass = (0, exports.getFieldClass)(field.type);
            return new FieldClass(field, state);
        }
        if (cache[field.type]) {
            // When the instance already exists, you only need to modify the this.field property to meet the data initialization requirements.
            cache[field.type].field = field;
            cache[field.type].state = state;
            return cache[field.type];
        }
        const FieldClass = (0, exports.getFieldClass)(field.type);
        const fieldInstance = new FieldClass(field, state);
        cache[field.type] = fieldInstance;
        return fieldInstance;
    };
})();
const bindContext = (field, state) => {
    const FieldClass = (0, exports.getFieldClass)(field.type);
    return new FieldClass(field, state);
};
exports.bindContext = bindContext;
field_1.Field.bindModel = exports.bindModel;
// The difference between bindContext and bindModel is that 
// bindContext creates a new Field object every time, and it is mandatory to pass in the store.
field_1.Field.bindContext = exports.bindContext;


/***/ }),

/***/ 20421:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LastModifiedByField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const datasheet_1 = __webpack_require__(55384);
const utils_1 = __webpack_require__(46214);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const member_base_field_1 = __webpack_require__(78319);
const validate_schema_1 = __webpack_require__(62903);
const i18n_1 = __webpack_require__(47511);
class LastModifiedByField extends member_base_field_1.MemberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    get apiMetaProperty() {
        const userMap = store_1.Selectors.getUserMap(this.state);
        return (0, utils_1.getApiMetaUserProperty)(this.field.property.uuids, userMap);
    }
    get openValueJsonSchema() {
        return {
            type: 'object',
            title: this.field.name,
            properties: {
                id: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_editor_ID),
                },
                name: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_editor_name),
                },
                avatar: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_editor_avatar),
                },
            }
        };
    }
    static defaultProperty() {
        return {
            uuids: [],
            datasheetId: '',
            collectType: types_1.CollectType.AllFields,
            fieldIdCollection: [],
        };
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: types_1.FieldType.LastModifiedBy,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    get isComputed() {
        return true;
    }
    get basicValueType() {
        return types_1.BasicValueType.String;
    }
    recordEditable() {
        return false;
    }
    stdValueToCellValue() {
        return null;
    }
    validate(cv) {
        if (cv) {
            return false;
        }
        return true;
    }
    validateProperty() {
        return LastModifiedByField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    getUuidByFieldUpdatedMap(fieldUpdatedMap, rangeIds) {
        const fieldUpdateInfo = rangeIds.reduce((prev, fieldId) => {
            const info = fieldUpdatedMap[fieldId];
            if (!(info === null || info === void 0 ? void 0 : info.at) || !(info === null || info === void 0 ? void 0 : info.by) || ((prev === null || prev === void 0 ? void 0 : prev.at) > (info === null || info === void 0 ? void 0 : info.at))) {
                return prev;
            }
            return { at: info.at, by: info.by };
        }, { at: 0, by: null });
        return (fieldUpdateInfo === null || fieldUpdateInfo === void 0 ? void 0 : fieldUpdateInfo.by) || null;
    }
    getCellValue(record) {
        var _a;
        const { collectType, fieldIdCollection } = this.field.property;
        const updatedMap = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.fieldUpdatedMap;
        // Depends on fieldUpdatedMap, otherwise returns null
        if (!updatedMap) {
            return null;
        }
        const isAllField = collectType === types_1.CollectType.AllFields;
        const fieldIds = isAllField ? Object.keys(updatedMap) : fieldIdCollection;
        const updatedBy = this.getUuidByFieldUpdatedMap(updatedMap, fieldIds);
        return updatedBy == null ? null : updatedBy;
    }
    // Get the uuid involved in all records
    getUuidsByRecordMap(recordMap) {
        const fieldUuids = [];
        const uuids = Object.values(recordMap)
            .reduce((acc, record) => {
            var _a, _b;
            const fieldUpdatedMap = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.fieldUpdatedMap;
            fieldUpdatedMap && Object.values(fieldUpdatedMap).forEach(updatedInfo => {
                (updatedInfo === null || updatedInfo === void 0 ? void 0 : updatedInfo.by) && fieldUuids.push(updatedInfo.by);
            });
            if ((_b = record.recordMeta) === null || _b === void 0 ? void 0 : _b.updatedBy) {
                acc.push(record.recordMeta.updatedBy);
            }
            return acc;
        }, []);
        return [...new Set([...uuids, ...fieldUuids])];
    }
    getUnitNames(cellValue) {
        const userMap = store_1.Selectors.getUserMap(this.state);
        if (!userMap)
            return null;
        return cellValue.map(uuid => {
            if (!userMap[uuid]) {
                return '';
            }
            return userMap[uuid].name;
        });
    }
    eq(cv1, cv2) {
        if (cv1 == null || cv2 == null)
            return cv1 === cv2;
        return (0, lodash_1.isEqual)(cv1, cv2);
    }
    getUnitIds(cellValue) {
        if (!cellValue) {
            return null;
        }
        return [cellValue].flat();
    }
    getUnits(cellValue) {
        const userMap = store_1.Selectors.getUserMap(this.state);
        if (!userMap)
            return null;
        return cellValue.reduce((ids, uuid) => {
            if (userMap[uuid]) {
                ids.push(userMap[uuid]);
            }
            return ids;
        }, []);
    }
    get openFieldProperty() {
        const { collectType, fieldIdCollection } = this.field.property;
        return {
            collectType,
            fieldIdCollection
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return LastModifiedByField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { collectType, fieldIdCollection } = openFieldProperty;
        const { uuids, datasheetId } = this.field.property;
        const defaultProperty = LastModifiedByField.defaultProperty();
        return {
            uuids: uuids || [],
            datasheetId,
            collectType: collectType !== null && collectType !== void 0 ? collectType : defaultProperty.collectType,
            fieldIdCollection: fieldIdCollection || []
        };
    }
}
exports.LastModifiedByField = LastModifiedByField;
LastModifiedByField.propertySchema = joi_1.default.object({
    uuids: joi_1.default.array().items(joi_1.default.string()).required(),
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
    // dependent field collection type
    collectType: joi_1.default.valid(types_1.CollectType.AllFields, types_1.CollectType.SpecifiedFields).required(),
    // dependent fields
    fieldIdCollection: joi_1.default.array().items(joi_1.default.string()).required(),
}).required();
LastModifiedByField.openUpdatePropertySchema = joi_1.default.object({
    collectType: joi_1.default.number().valid(types_1.CollectType.AllFields, types_1.CollectType.SpecifiedFields),
    fieldIdCollection: joi_1.default.array().items(joi_1.default.string())
}).required();


/***/ }),

/***/ 44833:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LastModifiedTimeField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const date_time_base_field_1 = __webpack_require__(35370);
const validate_schema_1 = __webpack_require__(62903);
class LastModifiedTimeField extends date_time_base_field_1.DateTimeBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.LastModifiedTime,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            dateFormat: field_types_1.DateFormat['YYYY/MM/DD'],
            timeFormat: field_types_1.TimeFormat['hh:mm'],
            includeTime: false,
            collectType: field_types_1.CollectType.AllFields,
            fieldIdCollection: [],
            datasheetId: '',
        };
    }
    get isComputed() {
        return true;
    }
    recordEditable() {
        return false;
    }
    validateProperty() {
        return LastModifiedTimeField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    stdValueToCellValue() {
        return null;
    }
    getCellValue(record) {
        var _a;
        const { collectType, fieldIdCollection } = this.field.property;
        const updatedMap = (_a = record.recordMeta) === null || _a === void 0 ? void 0 : _a.fieldUpdatedMap;
        // Depends on fieldUpdatedMap, otherwise returns null
        if (!updatedMap) {
            return null;
        }
        const isAllField = collectType === field_types_1.CollectType.AllFields;
        const fieldIds = isAllField ? Object.keys(updatedMap) : fieldIdCollection;
        const timestamps = fieldIds.reduce((acc, fieldId) => {
            var _a;
            if ((_a = updatedMap[fieldId]) === null || _a === void 0 ? void 0 : _a.at) {
                acc.push(updatedMap[fieldId].at);
            }
            return acc;
        }, []);
        return timestamps.length ? Math.max(...timestamps) : null;
    }
    get openFieldProperty() {
        const { includeTime, dateFormat, timeFormat, collectType, fieldIdCollection } = this.field.property;
        return {
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: field_types_1.TimeFormat[timeFormat],
            includeTime,
            collectType,
            fieldIdCollection
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return LastModifiedTimeField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { dateFormat, timeFormat, includeTime, collectType, fieldIdCollection } = openFieldProperty;
        const defaultProperty = LastModifiedTimeField.defaultProperty();
        return {
            datasheetId: this.field.property.datasheetId,
            dateFormat: field_types_1.DateFormat[dateFormat],
            timeFormat: timeFormat ? field_types_1.TimeFormat[timeFormat] : defaultProperty.timeFormat,
            collectType: collectType !== null && collectType !== void 0 ? collectType : defaultProperty.collectType,
            fieldIdCollection: fieldIdCollection || [],
            includeTime: includeTime !== null && includeTime !== void 0 ? includeTime : defaultProperty.includeTime
        };
    }
}
exports.LastModifiedTimeField = LastModifiedTimeField;
LastModifiedTimeField.propertySchema = joi_1.default.object({
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
    collectType: joi_1.default.number().allow(field_types_1.CollectType.AllFields, field_types_1.CollectType.SpecifiedFields).required(),
    fieldIdCollection: joi_1.default.array().items(joi_1.default.string()).required(),
    dateFormat: joi_1.default.string().allow(...(0, validate_schema_1.enumToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.string().allow(...(0, validate_schema_1.enumToArray)(field_types_1.TimeFormat)).required(),
    includeTime: joi_1.default.boolean().required(),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();
LastModifiedTimeField.defaultDateFormat = field_types_1.DateFormat[0];
LastModifiedTimeField.defaultTimeFormat = field_types_1.TimeFormat[0];
LastModifiedTimeField.openUpdatePropertySchema = joi_1.default.object({
    dateFormat: joi_1.default.string().valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.DateFormat)).required(),
    timeFormat: joi_1.default.valid(...(0, validate_schema_1.enumKeyToArray)(field_types_1.TimeFormat)),
    includeTime: joi_1.default.boolean(),
    collectType: joi_1.default.number().valid(field_types_1.CollectType.AllFields, field_types_1.CollectType.SpecifiedFields),
    fieldIdCollection: joi_1.default.array().items(joi_1.default.string()),
    timeZone: joi_1.default.string(),
    includeTimeZone: joi_1.default.boolean(),
}).required();


/***/ }),

/***/ 36201:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkField = exports.getTextRecordMap = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const i18n_1 = __webpack_require__(47511);
const reselect_1 = __webpack_require__(96814);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const field_1 = __webpack_require__(55808);
const stat_1 = __webpack_require__(90519);
const utils_1 = __webpack_require__(46214);
const open_field_write_types_1 = __webpack_require__(97408);
const validate_schema_1 = __webpack_require__(62903);
const text_base_field_1 = __webpack_require__(36722);
exports.getTextRecordMap = (0, reselect_1.createSelector)([state => state, (state, datasheetId) => (0, selectors_1.getSnapshot)(state, datasheetId)], (state, snapshot) => {
    if (!snapshot) {
        return {};
    }
    const fieldId = snapshot.meta.views[0].columns[0].fieldId;
    const field = snapshot.meta.fieldMap[fieldId];
    const textRecordMap = {};
    Object.values(snapshot.recordMap).forEach(record => {
        const value = (0, selectors_1.getCellValue)(state, snapshot, record.id, fieldId);
        const text = field_1.Field.bindContext(field, state).cellValueToString(value);
        if (text) {
            textRecordMap[text] = record.id;
        }
    });
    return textRecordMap;
});
class LinkField extends field_1.ArrayValueField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static defaultProperty() {
        return {};
    }
    get apiMetaProperty() {
        const { limitToView, foreignDatasheetId, brotherFieldId, limitSingleRecord } = this.field.property;
        return {
            foreignDatasheetId,
            brotherFieldId,
            limitToViewId: limitToView,
            limitSingleRecord,
        };
    }
    get openValueJsonSchema() {
        return {
            title: this.field.name,
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    recordId: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_linked_record_IDs),
                    },
                    title: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_linked_record_titles),
                    }
                }
            }
        };
    }
    get statTypeList() {
        return [
            stat_1.StatType.None,
            stat_1.StatType.Empty,
            stat_1.StatType.Filled,
            stat_1.StatType.PercentEmpty,
            stat_1.StatType.PercentFilled,
        ];
    }
    get basicValueType() {
        return field_types_1.BasicValueType.Array;
    }
    get innerBasicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get acceptFilterOperators() {
        return [
            types_1.FOperator.Contains,
            types_1.FOperator.DoesNotContain,
            types_1.FOperator.IsEmpty,
            types_1.FOperator.IsNotEmpty,
            types_1.FOperator.IsRepeat,
        ];
    }
    validate(value) {
        const snapshot = (0, selectors_1.getSnapshot)(this.state, this.field.property.foreignDatasheetId);
        if (!snapshot) {
            return false;
        }
        if (Array.isArray(value)) {
            return value.every(recordId => {
                if (snapshot.recordMap[recordId]) {
                    return true;
                }
                return false;
            });
        }
        return false;
    }
    validateProperty() {
        return LinkField.propertySchema.validate(this.field.property, { context: { reduxState: this.state } });
    }
    validateCellValue(cellValue) {
        return LinkField.cellValueSchema.validate(cellValue);
    }
    validateOpenWriteValue(owv) {
        return LinkField.openWriteValueSchema.validate(owv);
    }
    getForeignPrimaryField() {
        const foreignDatasheetId = this.field.property.foreignDatasheetId;
        const view = (0, selectors_1.getCurrentView)(this.state, foreignDatasheetId);
        if (!view) {
            return;
        }
        const fieldId = view.columns[0].fieldId;
        const foreignPrimaryField = (0, selectors_1.getFieldMap)(this.state, foreignDatasheetId);
        return foreignPrimaryField[fieldId];
    }
    getLinkedCellValue(recordId) {
        if (!recordId) {
            return null;
        }
        const field = this.getForeignPrimaryField();
        const snapshot = (0, selectors_1.getSnapshot)(this.state, this.field.property.foreignDatasheetId);
        if (!snapshot || !field) {
            return null;
        }
        const cellValue = (0, selectors_1.getCellValue)(this.state, snapshot, recordId, field.id);
        return cellValue;
    }
    cellValue2TextArray(cellValue) {
        return cellValue ? cellValue.map(recordId => this.getLinkedRecordCellString(recordId) || '') : [];
    }
    /**
     * @orderInCellValueSensitive {boolean} optional parameter,
     * to determine whether to only do normal sorting for the associated field, without preprocessing the cell content
     */
    compare(cellValue1, cellValue2, orderInCellValueSensitive) {
        const rowIndexMap = (0, selectors_1.getRowsIndexMap)(this.state, this.field.property.foreignDatasheetId);
        if (!orderInCellValueSensitive) {
            cellValue1 = this.sortValueByForeignRowOrder(cellValue1, rowIndexMap);
            cellValue2 = this.sortValueByForeignRowOrder(cellValue2, rowIndexMap);
        }
        return super.compare(cellValue1, cellValue2);
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        if (operator === types_1.FOperator.IsEmpty) {
            return cellValue == null;
        }
        if (operator === types_1.FOperator.IsNotEmpty) {
            return cellValue != null;
        }
        const cellTextArray = this.cellValue2TextArray(cellValue);
        const [filterValue] = conditionValue;
        switch (operator) {
            case types_1.FOperator.Contains: {
                return cellValue != null && cellTextArray.some(text => this.stringInclude(text, filterValue));
            }
            case types_1.FOperator.DoesNotContain: {
                return cellValue == null || !cellTextArray.some(text => this.stringInclude(text, filterValue));
            }
            default: {
                return super.isMeetFilter(operator, cellValue, conditionValue);
            }
        }
    }
    // Sort the relation records according to their order in view.rows specified by the relation table.
    sortValueByForeignRowOrder(value, rowIndexMap) {
        if (!value) {
            return null;
        }
        return Array.from(value).sort((id1, id2) => {
            var _a, _b;
            return ((_a = rowIndexMap.get(id1)) !== null && _a !== void 0 ? _a : 0) - ((_b = rowIndexMap.get(id2)) !== null && _b !== void 0 ? _b : 0);
        });
    }
    stdValueToCellValue(stdValue) {
        // If it is data from the current field, write it directly.
        if (stdValue.data[0] && stdValue.data[0].datasheetId === this.field.property.foreignDatasheetId) {
            return stdValue.data.map(val => {
                return val.recordId;
            });
        }
        // Try to find the same value as the primary key text from the association table, if found, create the association.
        const textRecordMap = (0, exports.getTextRecordMap)(this.state, this.field.property.foreignDatasheetId);
        let texts = [stdValue.data.map(d => d.text).join(', ')];
        // Determine whether the current configuration item allows adding multiple associated records, 
        // and if it is allowed, cut it according to ","
        if (!this.field.property.limitSingleRecord) {
            const splitText = texts[0].split(/, ?/);
            if (splitText.length > 1) {
                // Both before and after the split are added to the candidate array to try to match
                texts = [texts[0], ...splitText];
            }
        }
        const cellValue = texts.reduce((pre, text) => {
            const recordId = textRecordMap[text];
            if (recordId) {
                pre.push(recordId);
            }
            return pre;
        }, []);
        return cellValue.length ? Array.from(new Set(cellValue)) : null;
    }
    cellValueToStdValue(recordIds) {
        const stdVal = {
            sourceType: field_types_1.FieldType.Link,
            data: [],
        };
        if (recordIds) {
            stdVal.data = recordIds.map(recordId => {
                const text = this.getLinkedRecordCellString(recordId) || (0, i18n_1.t)(i18n_1.Strings.record_unnamed);
                return {
                    text,
                    recordId,
                    datasheetId: this.field.property.foreignDatasheetId,
                };
            });
        }
        return stdVal;
    }
    /**
     * Obtains the content of the first column in the associated table through the `recordId` recorded in the associated field cell,
     * and the content is processed by cellValue2String.
     * @param {(string[] | null)} recordIds
     * @returns {(string[] | null)}
     */
    cellValueToArray(recordIds) {
        if (!this.validate(recordIds)) {
            return null;
        }
        const valueArray = recordIds.map(recordId => {
            return this.getLinkedRecordCellString(recordId) || (0, i18n_1.t)(i18n_1.Strings.record_unnamed);
        });
        return valueArray;
    }
    /**
     * @description concatenates the strings obtained by recordId.
     * Several records may be associated with one associated cell at the same time
     * @param {(any[] | null)} cellValues
     * @returns
     */
    arrayValueToString(cellValues) {
        return cellValues && cellValues.length ? cellValues.join(', ') : null;
    }
    cellValueToString(recordIds) {
        if (!recordIds) {
            return null;
        }
        return this.arrayValueToString(this.cellValueToArray([recordIds].flat()));
    }
    getLinkedRecordCellString(recordId) {
        const field = this.getForeignPrimaryField();
        if (!field) {
            return null;
        }
        return field_1.Field.bindContext(field, this.state).cellValueToString(this.getLinkedCellValue(recordId));
    }
    defaultValueForCondition(_condition) {
        return null;
    }
    cellValueToApiStandardValue(recordIds) {
        return recordIds;
    }
    cellValueToApiStringValue(recordIds) {
        return this.cellValueToString(recordIds);
    }
    cellValueToOpenValue(recordIds) {
        if (!this.validate(recordIds)) {
            return null;
        }
        const valueArray = recordIds.map(recordId => {
            return {
                recordId,
                title: this.getLinkedRecordCellString(recordId) || (0, i18n_1.t)(i18n_1.Strings.record_unnamed)
            };
        });
        return valueArray;
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        const isSimple = openWriteValue.length && typeof openWriteValue[0] === 'string';
        return (isSimple ? openWriteValue : openWriteValue.map(v => v.recordId));
    }
    get openFieldProperty() {
        const { limitToView: limitToViewId, foreignDatasheetId, brotherFieldId, limitSingleRecord } = this.field.property;
        return {
            foreignDatasheetId,
            brotherFieldId,
            limitToViewId,
            limitSingleRecord,
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return LinkField.openUpdatePropertySchema.validate(updateProperty);
    }
    validateOpenAddFieldProperty(addProperty) {
        return LinkField.openAddPropertySchema.validate(addProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { foreignDatasheetId, limitToViewId: limitToView, limitSingleRecord } = openFieldProperty;
        return {
            foreignDatasheetId,
            limitToView,
            limitSingleRecord
        };
    }
    filterValueToOpenFilterValue(value) {
        return text_base_field_1.TextBaseField._filterValueToOpenFilterValue(value);
    }
    openFilterValueToFilterValue(value) {
        return text_base_field_1.TextBaseField._openFilterValueToFilterValue(value);
    }
    validateOpenFilterValue(value) {
        return text_base_field_1.TextBaseField._validateOpenFilterValue(value);
    }
}
exports.LinkField = LinkField;
LinkField.propertySchema = joi_1.default.object({
    foreignDatasheetId: joi_1.default.custom((foreignDatasheetId, helpers) => {
        var _a;
        const foreignDatasheet = (0, selectors_1.getDatasheet)((_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['reduxState'], foreignDatasheetId);
        // If foreignDatasheet is not loaded, the relationship has been destroyed.
        if (!foreignDatasheet) {
            return helpers.message({ en: (0, i18n_1.t)(i18n_1.Strings.link_data_error) });
        }
        return foreignDatasheetId;
    }).required(),
    brotherFieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId'),
    limitToView: joi_1.default.string().pattern(/^viw.+/, 'viewId'),
    limitSingleRecord: joi_1.default.boolean(),
}).required();
LinkField.cellValueSchema = joi_1.default.array().items(joi_1.default.string().pattern(/^rec.+/).required()).allow(null).required();
LinkField.openWriteValueSchema = joi_1.default.array().custom((value, helpers) => {
    if (value.map((item) => (/^rec.+/.test(item.recordId || item)))) {
        return value;
    }
    return helpers.error('valid date');
}).allow(null).required();
LinkField.openUpdatePropertySchema = joi_1.default.object({
    foreignDatasheetId: joi_1.default.string().required(),
    limitToViewId: joi_1.default.string().pattern(/^viw.+/, 'viewId'),
    limitSingleRecord: joi_1.default.boolean(),
    conversion: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(open_field_write_types_1.Conversion))
}).required();
LinkField.openAddPropertySchema = joi_1.default.object({
    foreignDatasheetId: joi_1.default.string().required(),
    limitToViewId: joi_1.default.string().pattern(/^viw.+/, 'viewId'),
    limitSingleRecord: joi_1.default.boolean()
}).required();


/***/ }),

/***/ 22633:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LookUpField = exports.NOT_FORMAT_FUNC_SET = exports.LOOKUP_VALUE_FUNC_SET = exports.ORIGIN_VALUES_FUNC_SET = void 0;
const compute_manager_1 = __webpack_require__(73374);
const evaluate_1 = __webpack_require__(98844);
const consts_1 = __webpack_require__(32352);
const functions_1 = __webpack_require__(28693);
const i18n_1 = __webpack_require__(47511);
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const constants_1 = __webpack_require__(31923);
const utils_1 = __webpack_require__(46214);
const utils_2 = __webpack_require__(26854);
const env_1 = __webpack_require__(13799);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const checkbox_field_1 = __webpack_require__(68877);
const date_time_base_field_1 = __webpack_require__(35370);
const field_1 = __webpack_require__(55808);
const number_base_field_1 = __webpack_require__(11639);
const stat_1 = __webpack_require__(90519);
const text_base_field_1 = __webpack_require__(36722);
const validate_schema_1 = __webpack_require__(62903);
const view_filter_derivate_1 = __webpack_require__(29733);
// function that needs to output as-is
exports.ORIGIN_VALUES_FUNC_SET = new Set([
    field_types_1.RollUpFuncType.VALUES,
    field_types_1.RollUpFuncType.ARRAYUNIQUE,
    field_types_1.RollUpFuncType.ARRAYCOMPACT,
]);
// Functions that need to be displayed by string concatenation
exports.LOOKUP_VALUE_FUNC_SET = new Set([
    field_types_1.RollUpFuncType.ARRAYJOIN,
    field_types_1.RollUpFuncType.CONCATENATE,
]);
// Functions that don't require number formatting
exports.NOT_FORMAT_FUNC_SET = new Set([
    field_types_1.RollUpFuncType.ARRAYJOIN,
    field_types_1.RollUpFuncType.CONCATENATE,
    field_types_1.RollUpFuncType.ARRAYUNIQUE,
    field_types_1.RollUpFuncType.ARRAYCOMPACT,
]);
class LookUpField extends field_1.ArrayValueField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    validateProperty() {
        return LookUpField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    validateOpenWriteValue() {
        return (0, validate_schema_1.joiErrorResult)("computed field shouldn't validate cellValue");
    }
    get apiMetaPropertyFormat() {
        return (0, utils_1.getApiMetaPropertyFormat)(this);
    }
    get apiMetaProperty() {
        const res = {
            relatedLinkFieldId: this.field.property.relatedLinkFieldId,
            targetFieldId: this.field.property.lookUpTargetFieldId,
            rollupFunction: this.rollUpType,
        };
        if (this.hasError) {
            res.hasError = this.hasError;
            return res;
        }
        res.valueType = this.basicValueType;
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo();
        if (lookUpEntityFieldInfo) {
            res.entityField = {
                datasheetId: lookUpEntityFieldInfo.datasheetId,
                field: field_1.Field.bindContext(lookUpEntityFieldInfo.field, this.state).getApiMeta(lookUpEntityFieldInfo.datasheetId)
            };
        }
        if (this.apiMetaPropertyFormat) {
            res.format = this.apiMetaPropertyFormat;
        }
        return res;
    }
    /**
     * Has the value type changed? (Is it still an array of entity field values?)
     * - unchanged: Calculated according to entity field openValue JsonSchema
     * - changed: push down jsonSchema by output value type
     */
    get openValueJsonSchema() {
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return {
                type: 'string',
                title: this.field.name,
                disabled: true,
            };
        }
        const expression = this.getExpression();
        if (expression) {
            // When there is an expression, the output value type base type
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                case field_types_1.BasicValueType.Boolean:
                case field_types_1.BasicValueType.DateTime:
                case field_types_1.BasicValueType.String:
                    return {
                        type: constants_1.ValueTypeMap[this.basicValueType],
                        title: this.field.name,
                    };
                default:
                    return {
                        type: 'string',
                        title: this.field.name,
                    };
            }
        }
        if (exports.LOOKUP_VALUE_FUNC_SET.has(this.rollUpType)) {
            return {
                type: 'string',
                title: this.field.name,
            };
        }
        const entityFieldSchema = field_1.Field.bindContext(entityField, this.state).openValueJsonSchema;
        return {
            type: 'array',
            title: this.field.name,
            items: entityFieldSchema
        };
    }
    get canGroup() {
        if (this.hasError) {
            return false;
        }
        const lookUpEntityField = field_1.Field.bindContext(this.field, this.state).getLookUpEntityField();
        if (!lookUpEntityField) {
            return false;
        }
        return field_1.Field.bindContext(lookUpEntityField, this.state).canGroup;
    }
    get hasError() {
        const { datasheetId } = this.field.property;
        if ((0, env_1.isClient)()) {
            const computeRefManager = (0, compute_manager_1.getComputeRefManager)(this.state);
            if (!computeRefManager.checkRef(`${datasheetId}-${this.field.id}`)) {
                return true;
            }
        }
        if (!this.getLookUpEntityField()) {
            return true;
        }
        const { error: isFilterError } = this.checkFilterInfo();
        return isFilterError;
    }
    get warnText() {
        const { typeSwitch: isFilterTypeSwitch } = this.checkFilterInfo();
        return isFilterTypeSwitch ? (0, i18n_1.t)(i18n_1.Strings.lookup_filter_waring) : '';
    }
    // statistic options
    get statTypeList() {
        const expression = this.getExpression();
        const rollUpType = this.field.property.rollUpType;
        if (expression) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._statTypeList;
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._statTypeList;
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._statTypeList;
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._statTypeList;
            }
        }
        if (exports.LOOKUP_VALUE_FUNC_SET.has(rollUpType)) {
            return text_base_field_1.TextBaseField._statTypeList;
        }
        const lookUpEntityField = field_1.Field.bindContext(this.field, this.state).getLookUpEntityField();
        if (!lookUpEntityField) {
            return [];
        }
        return field_1.Field.bindContext(lookUpEntityField, this.state).statTypeList;
    }
    get basicValueType() {
        const expression = this.getExpression();
        if (expression) {
            const fieldMap = (0, selectors_1.getFieldMap)(this.state, this.field.property.datasheetId);
            const fExp = (0, evaluate_1.parse)(expression, { field: this.field, fieldMap, state: this.state });
            if (!('error' in fExp)) {
                return fExp.ast.valueType;
            }
        }
        if (exports.LOOKUP_VALUE_FUNC_SET.has(this.rollUpType)) {
            return field_types_1.BasicValueType.String;
        }
        return field_types_1.BasicValueType.Array;
    }
    // When the underlying type is Array, get the underlying type of the elements in the Array
    get innerBasicValueType() {
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return field_types_1.BasicValueType.String;
        }
        const valueType = field_1.Field.bindContext(entityField, this.state).basicValueType;
        // The array in the array is still an array, 
        // indicating that it is a multi-select field, and it can be specified as a string directly.
        return valueType === field_types_1.BasicValueType.Array ? field_types_1.BasicValueType.String : valueType;
    }
    static defaultProperty() {
        return {
            datasheetId: '',
            relatedLinkFieldId: '',
            lookUpTargetFieldId: '',
        };
    }
    get isComputed() {
        return true;
    }
    get rollUpType() {
        return this.field.property.rollUpType || field_types_1.RollUpFuncType.VALUES;
    }
    showFOperatorDesc(type) {
        const expression = this.getExpression();
        if (expression) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField.FOperatorDescMap[type];
                case field_types_1.BasicValueType.Boolean:
                    return view_types_1.FOperatorDescMap[type];
                case field_types_1.BasicValueType.String:
                    return view_types_1.FOperatorDescMap[type];
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField.FOperatorDescMap[type];
            }
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return [];
        }
        return field_1.Field.bindContext(entityField, this.state).showFOperatorDesc(type);
    }
    // filter options
    get acceptFilterOperators() {
        const expression = this.getExpression();
        if (expression) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._acceptFilterOperators;
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._acceptFilterOperators;
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._acceptFilterOperators;
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._acceptFilterOperators;
            }
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return [];
        }
        return field_1.Field.bindContext(entityField, this.state).acceptFilterOperators.filter(item => item !== view_types_1.FOperator.IsRepeat);
    }
    getLinkFields() {
        const snapshot = (0, selectors_1.getSnapshot)(this.state, this.field.property.datasheetId);
        const fieldMap = snapshot === null || snapshot === void 0 ? void 0 : snapshot.meta.fieldMap;
        return fieldMap ? Object.values(fieldMap).filter(field => field.type === field_types_1.FieldType.Link) : [];
    }
    getRelatedLinkField() {
        return this.getLinkFields().find(field => field.id === this.field.property.relatedLinkFieldId);
    }
    getLookUpEntityFieldDepth(visitedFields, depth) {
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo(visitedFields, depth);
        if (!lookUpEntityFieldInfo) {
            return 0;
        }
        return lookUpEntityFieldInfo.depth;
    }
    // Allow lookup lookup lookup fields, but there will always be an entity field in the end. 
    // Returns entity fields and the depth of the fields.
    getLookUpEntityFieldInfo(visitedFields, depth) {
        const _visitedFields = visitedFields || new Set();
        const _depth = depth || 0;
        const nextTargetInfo = this.getLookUpTargetFieldAndDatasheet();
        if (!nextTargetInfo) {
            return;
        }
        const { field, datasheetId } = nextTargetInfo;
        if (field && datasheetId && _visitedFields.has(`${datasheetId}-${field.id}`)) {
            throw Error('LookUp Circle!');
        }
        if (field && field.type === field_types_1.FieldType.LookUp) {
            _visitedFields.add(`${datasheetId}-${field.id}`);
            return field_1.Field.bindContext(field, this.state).getLookUpEntityFieldInfo(_visitedFields, _depth + 1);
        }
        return {
            field,
            datasheetId: nextTargetInfo.datasheetId,
            depth: _depth,
        };
    }
    // Allow lookup lookup lookup fields, but there will always be an entity field in the end.
    getLookUpEntityField(visitedFields, depth) {
        try {
            const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo(visitedFields, depth);
            if (!lookUpEntityFieldInfo) {
                return;
            }
            return lookUpEntityFieldInfo.field;
        }
        catch (error) {
            return;
        }
    }
    // Check whether the column corresponding to the filter condition is deleted, 
    // check whether the column corresponding to the filter condition switches the type
    /**
     * Check whether the column corresponding to the filter condition is deleted
     * Check whether the column corresponding to the filter condition switches the type
     */
    checkFilterInfo() {
        const { filterInfo } = this.field.property;
        let error = false;
        let typeSwitch = false;
        if (filterInfo) {
            const relatedLinkField = this.getRelatedLinkField();
            if (!relatedLinkField) {
                return {
                    error: true,
                    typeSwitch: false
                };
            }
            const { foreignDatasheetId } = relatedLinkField.property;
            const foreignSnapshot = (0, selectors_1.getSnapshot)(this.state, foreignDatasheetId);
            const foreignFieldMap = foreignSnapshot.meta.fieldMap;
            const { conditions } = filterInfo;
            conditions.forEach(c => {
                if (!error) {
                    error = !foreignFieldMap[c.fieldId];
                }
                if (!typeSwitch) {
                    typeSwitch = (0, utils_2.checkTypeSwitch)(c, foreignFieldMap[c.fieldId]);
                }
            });
        }
        return { error, typeSwitch };
    }
    /**
     * Get the information of the search target field, return the field and datasheetId information
     *
     * @param {string} [datasheetId]
     * @returns {({ field: IField; datasheetId: string } | undefined)}
     * @memberof LookUpField
     */
    getLookUpTargetFieldAndDatasheet() {
        const relatedLinkField = this.getRelatedLinkField();
        if (!relatedLinkField) {
            return;
        }
        const { foreignDatasheetId } = relatedLinkField.property;
        const { lookUpTargetFieldId } = this.field.property;
        const foreignSnapshot = (0, selectors_1.getSnapshot)(this.state, foreignDatasheetId);
        if (!foreignSnapshot) {
            return;
        }
        const field = foreignSnapshot.meta.fieldMap[lookUpTargetFieldId];
        return {
            field,
            datasheetId: foreignDatasheetId,
        };
    }
    getLookUpTargetField() {
        const nextTargetFieldInfo = this.getLookUpTargetFieldAndDatasheet();
        if (!nextTargetFieldInfo) {
            return;
        }
        return nextTargetFieldInfo.field;
    }
    getExpression() {
        const rollUpType = this.rollUpType;
        if (!exports.ORIGIN_VALUES_FUNC_SET.has(rollUpType) && !exports.LOOKUP_VALUE_FUNC_SET.has(rollUpType)) {
            const formulaFunc = functions_1.Functions.get(rollUpType);
            if (!formulaFunc) {
                return null;
            }
            return `${formulaFunc.name}(${consts_1.ROLLUP_KEY_WORDS})`;
        }
        return null;
    }
    getCellValue(recordId, withError) {
        const expression = this.getExpression();
        const { datasheetId } = this.field.property;
        if (expression) {
            const snapshot = (0, selectors_1.getSnapshot)(this.state, datasheetId);
            const record = snapshot.recordMap[recordId];
            return (0, evaluate_1.evaluate)(expression, { field: this.field, record, state: this.state }, withError);
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return null;
        }
        const flatCellValue = this.getFlatCellValue(recordId, true); // The underlying cv value should remain empty.
        if (Array.isArray(flatCellValue) && flatCellValue.length) {
            // Fields of text type store all character fragments, flat needs to retain the original information and cannot be completely flattened
            const _flatCellValue = (0, utils_2.isTextBaseType)(entityField.type) ? flatCellValue : flatCellValue === null || flatCellValue === void 0 ? void 0 : flatCellValue.flat(1);
            switch (this.rollUpType) {
                case field_types_1.RollUpFuncType.VALUES:
                case field_types_1.RollUpFuncType.ARRAYJOIN:
                case field_types_1.RollUpFuncType.CONCATENATE:
                    return _flatCellValue;
                case field_types_1.RollUpFuncType.ARRAYUNIQUE:
                    return (0, lodash_1.uniqWith)(_flatCellValue, (cv1, cv2) => field_1.Field.bindContext(entityField, this.state).eq(cv1, cv2));
                case field_types_1.RollUpFuncType.ARRAYCOMPACT:
                    return _flatCellValue.filter(v => v !== '' || v != null);
                default:
                    return flatCellValue;
            }
        }
        return flatCellValue;
    }
    // Get the flat lookup cell data
    // For non-text concatenated data,
    getFlatCellValue(recordId, withEmpty) {
        // Starting from the current record, recursively search the lookup tree.
        const recordCellValues = this.getLookUpTreeValue(recordId);
        if ((0, lodash_1.isEmpty)(recordCellValues)) {
            return null;
        }
        const field = new LookUpField(this.field, this.state).getLookUpEntityField();
        if (!field) {
            return null;
        }
        const flatCellValues = [];
        const getRealCellValue = (values) => {
            values.forEach(value => {
                if (value && value.field) {
                    if (value.field.type === field_types_1.FieldType.LookUp) {
                        getRealCellValue(value.cellValue);
                    }
                    else {
                        flatCellValues.push(value.cellValue);
                    }
                }
            });
        };
        getRealCellValue(recordCellValues);
        return withEmpty ? flatCellValues : flatCellValues.filter(item => item !== null);
    }
    /**
     * getLookUpTreeValue getCellvalue Recursively query the data of entity fields and combine them into tree-structured data
     *
     * @param {string} recordId
     * @param {string} [datasheetId]
     * @returns {ILookUpTreeValue[]}
     * @memberof LookUpField
     */
    getLookUpTreeValue(recordId) {
        // The column corresponding to the filter condition is deleted and the result is not displayed
        const { error: isFilterError } = this.checkFilterInfo();
        if (isFilterError) {
            return [];
        }
        const relatedLinkField = this.getRelatedLinkField();
        if (!relatedLinkField) {
            // console.log('Cannot find foreign key field', relatedLinkField);
            return [];
        }
        const { lookUpTargetFieldId, datasheetId, filterInfo, openFilter } = this.field.property;
        const thisSnapshot = (0, selectors_1.getSnapshot)(this.state, datasheetId);
        // IDs of the associated table records
        let recordIDs = store_1.Selectors.getCellValue(this.state, thisSnapshot, recordId, relatedLinkField.id, true, datasheetId, true);
        if (!recordIDs) {
            return [];
        }
        const { foreignDatasheetId } = relatedLinkField.property;
        const foreignSnapshot = (0, selectors_1.getSnapshot)(this.state, foreignDatasheetId);
        if (!foreignSnapshot) {
            return [];
        }
        const lookUpTargetField = this.getLookUpTargetField();
        if (openFilter) {
            // magic reference filter
            recordIDs = new view_filter_derivate_1.ViewFilterDerivate(this.state, foreignDatasheetId).getFilteredRecords({
                linkFieldRecordIds: recordIDs,
                filterInfo,
            });
        }
        return recordIDs && recordIDs.length ? recordIDs.map((recordId) => {
            const cellValue = (0, selectors_1._getLookUpTreeValue)(this.state, foreignSnapshot, recordId, lookUpTargetFieldId, foreignDatasheetId);
            return {
                field: lookUpTargetField,
                recordId,
                cellValue,
                datasheetId: foreignDatasheetId,
            };
        }) : [];
    }
    isEmptyOrNot(operator, cellValue) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        switch (operator) {
            /**
             * The logic of isEmpty and isNotEmpty is basically common
             */
            case view_types_1.FOperator.IsEmpty: {
                return cellValue == null;
            }
            case view_types_1.FOperator.IsNotEmpty: {
                return cellValue != null;
            }
        }
    }
    // lookup does not allow editing cells
    recordEditable() {
        return false;
    }
    static getFirstItem(item) {
        if (Array.isArray(item)) {
            return item[0];
        }
        return item;
    }
    /**
     *
     * Compare the size of the two cellValues on the field for sorting
     * The default is to convert to string comparison, if it is not this logic, please implement it yourself
     *
     * @orderInCellValueSensitive {boolean} optional parameter, to determine whether to only do normal sorting for the associated field,
     * without preprocessing the cell content
     *
     * @returns {number} negative => less than, 0 => equal, positive => greater than
     */
    compare(cv1, cv2, orderInCellValueSensitive) {
        const expression = this.getExpression();
        cv1 = (0, utils_1.handleNullArray)(cv1);
        cv2 = (0, utils_1.handleNullArray)(cv2);
        if (expression) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._compare(cv1, cv2);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._compare(cv1, cv2, this.field.property.formatting);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._compare(cv1, cv2, orderInCellValueSensitive);
                default:
                    return super.compare(cv1, cv2, orderInCellValueSensitive);
            }
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return 1;
        }
        if (field_1.Field.bindContext(entityField, this.state).basicValueType === field_types_1.BasicValueType.Array) {
            return field_1.Field.bindContext(entityField, this.state).compare(cv1, cv2, orderInCellValueSensitive);
        }
        if (!orderInCellValueSensitive) {
            cv1 = [cv1].flat().sort((a, b) => field_1.Field.bindContext(entityField, this.state).compare(a, b));
            cv2 = [cv2].flat().sort((a, b) => field_1.Field.bindContext(entityField, this.state).compare(a, b));
        }
        const zipCellValue = (0, lodash_1.zip)([cv1].flat(), [cv2].flat());
        let res = 0;
        for (let index = 0; index < zipCellValue.length; index++) {
            const [cv1, cv2] = zipCellValue[index];
            res = field_1.Field.bindContext(entityField, this.state).compare(cv1, cv2);
            if (index === zipCellValue.length - 1) {
                return res;
            }
            if (res === 0) {
                continue;
            }
            return res;
        }
        return res;
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        const expr = this.getExpression();
        if (expr) {
            switch (this.basicValueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._isMeetFilter(operator, cellValue, conditionValue);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._isMeetFilter(operator, cellValue, conditionValue);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._isMeetFilter(operator, cellValue, conditionValue);
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._isMeetFilter(operator, this.cellValueToString(cellValue), conditionValue);
                case field_types_1.BasicValueType.Array:
                    switch (operator) {
                        // The filter operation of negative semantics requires that each item in the array satisfies
                        case view_types_1.FOperator.DoesNotContain:
                        case view_types_1.FOperator.IsNot:
                        case view_types_1.FOperator.IsEmpty:
                            return cellValue.every(cv => {
                                switch (this.innerBasicValueType) {
                                    case field_types_1.BasicValueType.Number:
                                        return number_base_field_1.NumberBaseField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.Boolean:
                                        return checkbox_field_1.CheckboxField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.DateTime:
                                        return date_time_base_field_1.DateTimeBaseField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.String:
                                        return text_base_field_1.TextBaseField._isMeetFilter(operator, this.cellValueToString(cv), conditionValue);
                                    default:
                                        return false;
                                }
                            });
                        default:
                            return cellValue.some(cv => {
                                switch (this.innerBasicValueType) {
                                    case field_types_1.BasicValueType.Number:
                                        return number_base_field_1.NumberBaseField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.Boolean:
                                        return checkbox_field_1.CheckboxField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.DateTime:
                                        return date_time_base_field_1.DateTimeBaseField._isMeetFilter(operator, cv, conditionValue);
                                    case field_types_1.BasicValueType.String:
                                        return text_base_field_1.TextBaseField._isMeetFilter(operator, this.cellValueToString(cv), conditionValue);
                                    default:
                                        return false;
                                }
                            });
                    }
            }
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return false;
        }
        const judge = (cv) => {
            return field_1.Field.bindContext(entityField, this.state).isMeetFilter(operator, cv, conditionValue);
        };
        // The cv of the lookup is already the value after flat, and the original field value is an array, using common comparison logic.
        if (field_1.Field.bindContext(entityField, this.state).basicValueType === field_types_1.BasicValueType.Array && operator !== view_types_1.FOperator.IsRepeat) {
            // Due to the existence of the "me" filter item, cellValue and conditionValue are not congruent,
            // For Member type directly use isMeetFilter for calculation, it will convert the 'Self' tag into the corresponding UnitId for comparison
            if (entityField.type === field_types_1.FieldType.Member) {
                return field_1.Field.bindContext(entityField, this.state).isMeetFilter(operator, cellValue, conditionValue);
            }
            switch (operator) {
                case view_types_1.FOperator.Is:
                    return field_1.Field.bindContext(entityField, this.state).eq(cellValue, conditionValue);
                case view_types_1.FOperator.IsNot:
                    return !field_1.Field.bindContext(entityField, this.state).eq(cellValue, conditionValue);
                default:
                    return field_1.Field.bindContext(entityField, this.state).isMeetFilter(operator, cellValue, conditionValue);
            }
        }
        switch (operator) {
            // The `filter` operation of negative semantics requires that each item in the array satisfies
            case view_types_1.FOperator.DoesNotContain:
            case view_types_1.FOperator.IsNot:
            case view_types_1.FOperator.IsEmpty:
                return Array.isArray(cellValue) ? cellValue
                    .every(cv => judge(cv)) : judge(cellValue);
            default:
                return Array.isArray(cellValue) ?
                    cellValue.some(cv => judge(cv)) : judge(cellValue);
        }
    }
    cellValueToString(cellValue, options) {
        var _a;
        if (cellValue == null) {
            return null;
        }
        const rollUpType = this.rollUpType;
        if (!exports.ORIGIN_VALUES_FUNC_SET.has(rollUpType) && !exports.LOOKUP_VALUE_FUNC_SET.has(rollUpType)) {
            try {
                switch (this.basicValueType) {
                    case field_types_1.BasicValueType.Number:
                    case field_types_1.BasicValueType.Boolean: {
                        return (0, number_base_field_1.numberFormat)(cellValue, (_a = this.field.property) === null || _a === void 0 ? void 0 : _a.formatting);
                    }
                    case field_types_1.BasicValueType.DateTime:
                        return (0, date_time_base_field_1.dateTimeFormat)(cellValue, this.field.property.formatting, options === null || options === void 0 ? void 0 : options.userTimeZone);
                    case field_types_1.BasicValueType.String:
                    case field_types_1.BasicValueType.Array:
                        return String(cellValue);
                }
            }
            catch (error) {
                return 'compute error';
            }
        }
        return this.arrayValueToString(this.cellValueToArray(cellValue));
    }
    cellValueToArray(cellValue) {
        // cellValue = handleNullArray(cellValue);
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return null;
        }
        const basicValueType = field_1.Field.bindContext(entityField, this.state).basicValueType;
        return cellValue == null ? null : cellValue.reduce((result, value) => {
            // number|boolean|datetime type does not need any conversion
            if (basicValueType === field_types_1.BasicValueType.Number ||
                basicValueType === field_types_1.BasicValueType.Boolean ||
                basicValueType === field_types_1.BasicValueType.DateTime) {
                result.push(value);
                return result;
            }
            if ((0, utils_2.isTextBaseType)(entityField.type)) {
                result.push(field_1.Field.bindContext(entityField, this.state).cellValueToString(value));
                return result;
            }
            // BasicValueType.Array & value is of Array type and needs to be processed
            if (Array.isArray(value) || (value != null && basicValueType === field_types_1.BasicValueType.Array)) {
                [value].flat(Infinity).forEach(v => {
                    result.push(field_1.Field.bindContext(entityField, this.state).cellValueToString([v]));
                });
                return result;
            }
            result.push(field_1.Field.bindContext(entityField, this.state).cellValueToString(value));
            return result;
        }, []);
    }
    arrayValueToString(cellValue, options) {
        const rollUpType = this.field.property.rollUpType;
        let vArray = this.arrayValueToArrayStringValueArray(cellValue, options);
        // Process ARRAYUNIQUE, ARRAYCOMPACT functions
        if (rollUpType === field_types_1.RollUpFuncType.ARRAYUNIQUE) {
            vArray = vArray && [...new Set(vArray)];
        }
        if (rollUpType === field_types_1.RollUpFuncType.ARRAYCOMPACT) {
            vArray = vArray && vArray.filter(v => v !== '');
        }
        if (rollUpType === field_types_1.RollUpFuncType.CONCATENATE) {
            return vArray == null ? null : vArray.join('');
        }
        return vArray == null ? null : vArray.join(', ');
    }
    arrayValueToArrayStringValueArray(cellValue, options) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return null;
        }
        const basicValueType = field_1.Field.bindContext(entityField, this.state).basicValueType;
        return cellValue == null ? null : cellValue.map(value => {
            if (value == null) {
                return null;
            }
            // Date type should use the format configured by the lookup field
            if (basicValueType === field_types_1.BasicValueType.DateTime) {
                const formatting = this.field.property.formatting || entityField.property;
                return (0, date_time_base_field_1.dateTimeFormat)(value, formatting, options === null || options === void 0 ? void 0 : options.userTimeZone);
            }
            // The number|boolean type should use the format configured by the lookup field
            if (basicValueType === field_types_1.BasicValueType.Number || basicValueType === field_types_1.BasicValueType.Boolean) {
                if (!exports.NOT_FORMAT_FUNC_SET.has(this.rollUpType)) {
                    const property = this.field.property.formatting || entityField.property;
                    return (0, number_base_field_1.numberFormat)(value, property);
                }
                return field_1.Field.bindContext(entityField, this.state).cellValueToString(Number(value));
            }
            return String(value);
        }).filter(i => i != null);
    }
    cellValueToStdValue(cellValue) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        const stdValue = {
            sourceType: this.field.type,
            data: [],
        };
        if (cellValue != null) {
            stdValue.data.push({ text: this.cellValueToString(cellValue) || '' });
        }
        return stdValue;
    }
    stdValueToCellValue(stdValue) {
        const lookUpEntityField = this.getLookUpEntityField();
        if (!lookUpEntityField) {
            return null;
        }
        const lookUpEntityFieldInstance = field_1.Field.bindContext(lookUpEntityField, this.state);
        return lookUpEntityFieldInstance.stdValueToCellValue(stdValue);
    }
    validate(value) {
        return value == null;
    }
    /**
     * Whether to multi-select fields of value type.
     * For multiple selections, the collaborator field will return true.
     * NOTE: Fields that are guaranteed to return true, value is an array.
     */
    isMultiValueField() {
        return true;
    }
    defaultValueForCondition(condition) {
        switch (this.valueType) {
            case field_types_1.BasicValueType.DateTime:
                return date_time_base_field_1.DateTimeBaseField._defaultValueForCondition(condition);
            default:
                return null;
        }
    }
    /**
     * Returns the default value of the field attribute configuration when adding a record
     */
    defaultValue() {
        return null;
    }
    /**
     * @description convert the statistical parameters into Chinese
     */
    statType2text(type) {
        const expression = this.getExpression();
        if (expression) {
            switch (this.basicValueType) {
                case field_types_1.BasicValueType.Number:
                case field_types_1.BasicValueType.Boolean:
                case field_types_1.BasicValueType.String:
                case field_types_1.BasicValueType.Array:
                    return stat_1.StatTranslate[type];
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._statType2text(type);
            }
        }
        const lookUpEntityField = field_1.Field.bindContext(this.field, this.state).getLookUpEntityField();
        if (!lookUpEntityField) {
            return stat_1.StatTranslate[type];
        }
        return field_1.Field.bindContext(lookUpEntityField, this.state).statType2text(type);
    }
    // Get the fields that the lookup field depends on, and only get one level of relationship
    getCurrentDatasheetRelatedFieldKeys(datasheetId) {
        const { relatedLinkFieldId, lookUpTargetFieldId, filterInfo, openFilter } = this.field.property;
        const allKeys = [];
        // Depends on the link field of the current table
        allKeys.push(`${datasheetId}-${relatedLinkFieldId}`);
        const relatedLinkField = this.getRelatedLinkField();
        if (relatedLinkField) {
            const { foreignDatasheetId } = relatedLinkField.property;
            allKeys.push(`${foreignDatasheetId}-${lookUpTargetFieldId}`);
            // filter field triggers magic app update
            if (openFilter && filterInfo) {
                const { conditions } = filterInfo;
                conditions.forEach(condition => {
                    allKeys.push(`${foreignDatasheetId}-${condition.fieldId}`);
                });
            }
        }
        return allKeys;
    }
    cellValueToApiStandardValue(cellValue) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        const entityField = this.getLookUpEntityField();
        if (!entityField || !cellValue) {
            return null;
        }
        if (Array.isArray(cellValue)) {
            const targetField = field_1.Field.bindContext(entityField, this.state);
            if (targetField.basicValueType === field_types_1.BasicValueType.Array) {
                return targetField.cellValueToApiStandardValue(cellValue);
            }
            const result = [];
            cellValue.forEach(item => {
                const value = targetField.cellValueToApiStandardValue(item);
                if (value != null) {
                    result.push(value);
                }
            });
            if (result.length) {
                return result;
            }
            return null;
        }
        return cellValue;
    }
    cellValueToApiStringValue(cellValue, options) {
        cellValue = (0, utils_1.handleNullArray)(cellValue);
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return null;
        }
        if (entityField.type == field_types_1.FieldType.Member || entityField.type == field_types_1.FieldType.CreatedBy || entityField.type == field_types_1.FieldType.LastModifiedBy) {
            return field_1.Field.bindContext(entityField, this.state).cellValueToApiStringValue(cellValue);
        }
        return this.cellValueToString(cellValue, { userTimeZone: options === null || options === void 0 ? void 0 : options.userTimeZone });
    }
    cellValueToOpenValue(cellValue) {
        var _a;
        if (cellValue == null) {
            return null;
        }
        const entityField = this.getLookUpEntityField();
        if (!entityField) {
            return null;
        }
        const expression = this.getExpression();
        if (expression) {
            // When there is an expression, the output value type is the basic type, which can be output directly
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                case field_types_1.BasicValueType.Boolean:
                case field_types_1.BasicValueType.DateTime:
                case field_types_1.BasicValueType.String:
                default:
                    return cellValue;
            }
        }
        // These two are functions that convert array to string.
        if (exports.LOOKUP_VALUE_FUNC_SET.has(this.rollUpType)) {
            return this.cellValueToString(cellValue);
        }
        // What comes in here is a one-dimensional array, first compatible with a two-dimensional array.
        if (Array.isArray(cellValue)) {
            const targetField = field_1.Field.bindContext(entityField, this.state);
            // TODO is temporarily compatible with the data structure (wait for getCellValue to be transformed to return an unflattened array)
            const isDoubleArray = ((_a = this.openValueJsonSchema.items) === null || _a === void 0 ? void 0 : _a.type) === 'array';
            // The expected two-dimensional array has been flattened at the time of cv, 
            // and it is packaged here and upgraded to a two-dimensional array. 
            // Now it is only a structural compatibility, which will affect the actual business logic.
            // In the robot scene, the values input by the UI are currently spliced into strings, so it doesn't matter much.
            const _cellValue = isDoubleArray ? [cellValue.filter(cv => cv != null)] : cellValue;
            const result = _cellValue
                .map(item => targetField.cellValueToOpenValue(item));
            if (result.length) {
                return result;
            }
            return null;
        }
        return cellValue;
    }
    // TODO
    openWriteValueToCellValue() {
        return null;
    }
    get openFieldProperty() {
        const res = {
            relatedLinkFieldId: this.field.property.relatedLinkFieldId,
            targetFieldId: this.field.property.lookUpTargetFieldId,
            rollupFunction: this.rollUpType,
        };
        if (this.hasError) {
            res.hasError = this.hasError;
            return res;
        }
        res.valueType = this.basicValueType;
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo();
        if (lookUpEntityFieldInfo) {
            res.entityField = {
                datasheetId: lookUpEntityFieldInfo.datasheetId,
                field: field_1.Field.bindContext(lookUpEntityFieldInfo.field, this.state).getOpenField(lookUpEntityFieldInfo.datasheetId)
            };
        }
        if (this.apiMetaPropertyFormat) {
            res.format = this.apiMetaPropertyFormat;
        }
        return res;
    }
    validateUpdateOpenProperty(updateProperty) {
        return LookUpField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { relatedLinkFieldId, targetFieldId: lookUpTargetFieldId, rollupFunction: rollUpType, format } = openFieldProperty;
        const formatting = format ? (0, utils_1.computedFormattingToFormat)(format) : undefined;
        return {
            datasheetId: this.field.property.datasheetId,
            relatedLinkFieldId,
            lookUpTargetFieldId,
            rollUpType,
            formatting
        };
    }
    filterValueToOpenFilterValue(value) {
        if (this.getExpression()) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._filterValueToOpenFilterValue(value);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._filterValueToOpenFilterValue(value);
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._filterValueToOpenFilterValue(value);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._filterValueToOpenFilterValue(value);
            }
        }
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo();
        if (!lookUpEntityFieldInfo) {
            return null;
        }
        const entityField = field_1.Field.bindContext(lookUpEntityFieldInfo.field, this.state);
        return entityField.filterValueToOpenFilterValue(value);
    }
    openFilterValueToFilterValue(value) {
        if (this.getExpression()) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._openFilterValueToFilterValue(value);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._openFilterValueToFilterValue(value);
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._openFilterValueToFilterValue(value);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._openFilterValueToFilterValue(value);
            }
        }
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo();
        if (!lookUpEntityFieldInfo) {
            return null;
        }
        const entityField = field_1.Field.bindContext(lookUpEntityFieldInfo.field, this.state);
        return entityField.openFilterValueToFilterValue(value);
    }
    validateOpenFilterValue(value) {
        if (this.getExpression()) {
            switch (this.valueType) {
                case field_types_1.BasicValueType.Number:
                    return number_base_field_1.NumberBaseField._validateOpenFilterValue(value);
                case field_types_1.BasicValueType.Boolean:
                    return checkbox_field_1.CheckboxField._validateOpenFilterValue(value);
                case field_types_1.BasicValueType.String:
                    return text_base_field_1.TextBaseField._validateOpenFilterValue(value);
                case field_types_1.BasicValueType.DateTime:
                    return date_time_base_field_1.DateTimeBaseField._validateOpenFilterValue(value);
            }
        }
        const lookUpEntityFieldInfo = this.getLookUpEntityFieldInfo();
        if (!lookUpEntityFieldInfo) {
            return (0, validate_schema_1.joiErrorResult)(`${this.field.name} look up has no entity field`);
        }
        const entityField = field_1.Field.bindContext(lookUpEntityFieldInfo.field, this.state);
        return entityField.openFilterValueToFilterValue(value);
    }
}
exports.LookUpField = LookUpField;
LookUpField.propertySchema = joi_1.default.object({
    datasheetId: (0, validate_schema_1.datasheetIdString)().required(),
    relatedLinkFieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId').required(),
    lookUpTargetFieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId').required(),
    rollUpType: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.RollUpFuncType)),
    formatting: (0, validate_schema_1.computedFormatting)(),
    filterInfo: joi_1.default.object({
        conjunction: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(view_types_1.FilterConjunction)).required(),
        conditions: joi_1.default.array().items(joi_1.default.object({
            conditionId: joi_1.default.string().required(),
            fieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId').required(),
            operator: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(view_types_1.FOperator)).required(),
            fieldType: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.FieldType)).required(),
            value: joi_1.default.any(),
        }))
    }),
    openFilter: joi_1.default.boolean(),
}).required();
LookUpField.openUpdatePropertySchema = joi_1.default.object({
    relatedLinkFieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId').required(),
    targetFieldId: joi_1.default.string().pattern(/^fld.+/, 'fieldId').required(),
    rollupFunction: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.RollUpFuncType)),
    format: (0, validate_schema_1.computedFormattingStr)(),
});


/***/ }),

/***/ 78319:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MemberBaseField = exports.OtherTypeUnitId = void 0;
const store_1 = __webpack_require__(56791);
const array_1 = __webpack_require__(92992);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const field_1 = __webpack_require__(55808);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(46214);
var OtherTypeUnitId;
(function (OtherTypeUnitId) {
    OtherTypeUnitId["Self"] = "Self";
    OtherTypeUnitId["Alien"] = "Alien";
})(OtherTypeUnitId = exports.OtherTypeUnitId || (exports.OtherTypeUnitId = {}));
class MemberBaseField extends field_1.ArrayValueField {
    get apiMetaProperty() {
        return null;
    }
    /**
     * The underlying type of the cell value of the current field.
     */
    get basicValueType() {
        return field_types_1.BasicValueType.Array;
    }
    get innerBasicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get acceptFilterOperators() {
        return [
            view_types_1.FOperator.Is,
            view_types_1.FOperator.IsNot,
            view_types_1.FOperator.Contains,
            view_types_1.FOperator.DoesNotContain,
            view_types_1.FOperator.IsEmpty,
            view_types_1.FOperator.IsNotEmpty,
            view_types_1.FOperator.IsRepeat,
        ];
    }
    /**
     * Get member unitIds, then sort and concatenate into strings
     */
    unitIdsToString(cellValue) {
        const unitIds = this.getUnitIds(cellValue);
        unitIds && unitIds.sort();
        return this.arrayValueToString(unitIds);
    }
    /**
     * Multiple members are grouped according to unitIds (orderInCellValueSensitive is false)
     * Solve problem 1: Many members have one-to-one correspondence but the order of members is different and they are divided into different groups
     * Solve problem 2: members with the same name but different unitId are assigned to the same group
     */
    compare(cellValue1, cellValue2, orderInCellValueSensitive) {
        if (!orderInCellValueSensitive) {
            if (this.eq(cellValue1, cellValue2))
                return 0;
            if (cellValue1 == null)
                return -1;
            if (cellValue2 == null)
                return 1;
            let str1 = this.unitIdsToString(cellValue1);
            let str2 = this.unitIdsToString(cellValue2);
            if (str1 === str2)
                return 0;
            if (str1 == null)
                return -1;
            if (str2 == null)
                return 1;
            str1 = str1.trim();
            str2 = str2.trim();
            return str1 === str2 ? 0 : (str1 > str2 ? 1 : -1);
        }
        return super.compare(cellValue1, cellValue2);
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        const cv4filter = cellValue ? this.getUnitIds(cellValue) : [];
        // If it is judged in advance that it is empty or not, it should be judged directly as null, which is compatible with old data. 
        // There is no guarantee that cv comes with null, not an empty array.
        if (operator === view_types_1.FOperator.IsEmpty) {
            return cv4filter.length === 0;
        }
        if (operator === view_types_1.FOperator.IsNotEmpty) {
            return cv4filter.length > 0;
        }
        const conditionValue4Filter = conditionValue ? this.getUnitIds(conditionValue) : [];
        switch (operator) {
            case view_types_1.FOperator.Is: {
                const realConditionValue = this.conditionValueToReal(conditionValue4Filter);
                return cellValue != null && (0, array_1.isSameSet)(cv4filter, realConditionValue);
            }
            case view_types_1.FOperator.IsNot: {
                const realConditionValue = this.conditionValueToReal(conditionValue4Filter);
                return cellValue == null || !(0, array_1.isSameSet)(cv4filter, realConditionValue);
            }
            case view_types_1.FOperator.Contains: {
                const realConditionValue = this.conditionValueToReal(conditionValue4Filter);
                return cellValue != null && (0, array_1.hasIntersect)(cv4filter, realConditionValue);
            }
            case view_types_1.FOperator.DoesNotContain: {
                const realConditionValue = this.conditionValueToReal(conditionValue4Filter);
                return cellValue == null || !(0, array_1.hasIntersect)(cv4filter, realConditionValue);
            }
            default: {
                return super.isMeetFilter(operator, cv4filter, conditionValue4Filter);
            }
        }
    }
    conditionValueToReal(value) {
        const conditionValue = value.slice();
        const selfIndex = conditionValue.indexOf(OtherTypeUnitId.Self);
        // Identify the current user options and restore unitId/uuid
        if (selfIndex > -1) {
            const { uuid, unitId } = this.state.user.info;
            const selfUnitId = this.field.type === types_1.FieldType.Member ? unitId : uuid;
            conditionValue.splice(selfIndex, 1, selfUnitId || '');
        }
        return conditionValue;
    }
    /**
     * Inherited classes need to implement this method
     * @desc Get uuids/unitIds according to cellValue
     */
    getUnitIds(_cellValue) {
        return null;
    }
    /**
     * Inherited classes need to implement this method
      * @desc Get an array of corresponding names according to uuids/unitIds
     */
    getUnitNames(_cellValue) {
        return null;
    }
    /**
     * Inherited classes need to implement this method
      * @desc Get an array of corresponding unit information according to uuids/unitIds
     */
    getUnits(_cellValue) {
        return null;
    }
    /**
     * Inherited classes need to implement this method
      * @desc Get an array of corresponding names according to uuids/unitIds
     */
    getUnitList(_cellValue) {
        return null;
    }
    /**
     * @desc Get an array of corresponding names according to cellValue
     */
    cellValueToArray(cellValue) {
        if (!cellValue)
            return null;
        const unitIds = this.getUnitIds(cellValue);
        return this.getUnitNames(unitIds);
    }
    arrayValueToString(cellValues) {
        return cellValues && cellValues.length ? cellValues.join(', ') : null;
    }
    /**
     * @desc Get the string concatenated with the corresponding name according to cellValue
     */
    cellValueToString(cellValue, _cellToStringOption) {
        if (!cellValue)
            return null;
        return this.arrayValueToString(this.cellValueToArray([cellValue].flat()));
    }
    cellValueToStdValue(cellValue) {
        const stdValue = {
            sourceType: this.field.type,
            data: [],
        };
        if (!cellValue)
            return stdValue;
        const nameValues = this.cellValueToArray(cellValue);
        if (!nameValues)
            return stdValue;
        nameValues.forEach(item => {
            stdValue.data.push({
                text: item,
            });
        });
        return stdValue;
    }
    stdValueToCellValue(_stdValue) {
        return null;
    }
    defaultValueForCondition(condition) {
        if (this.field.type !== types_1.FieldType.Member) {
            return null;
        }
        const isMulti = this.field.property.isMulti;
        if (isMulti) {
            if ([view_types_1.FOperator.Is, view_types_1.FOperator.Contains].includes(condition.operator)) {
                return condition.value;
            }
            return null;
        }
        if (condition.operator === view_types_1.FOperator.Is ||
            (condition.operator === view_types_1.FOperator.Contains &&
                condition.value &&
                condition.value.length === 1)) {
            return condition.value;
        }
        return null;
    }
    defaultValue() {
        return null;
    }
    /**
     * api returns basic user information
     * @param cellValues array of uuids or uuid
     * @return
     * @author Zoe Zheng
     * @date 2021/3/15 3:03 pm
     */
    cellValueToApiStandardValue(cellValues) {
        var _a;
        if (cellValues == null)
            return null;
        const userMap = store_1.Selectors.getUserMap(this.state);
        if (userMap == null)
            return null;
        const uuid = cellValues;
        if (userMap.hasOwnProperty(uuid)) {
            return {
                id: uuid,
                name: userMap[uuid].name,
                avatar: (_a = userMap[uuid]) === null || _a === void 0 ? void 0 : _a.avatar,
            };
        }
        return null;
    }
    cellValueToApiStringValue(cellValues) {
        return this.cellValueToString(cellValues);
    }
    cellValueToOpenValue(cellValues) {
        return this.cellValueToApiStandardValue(cellValues);
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        const isSimple = openWriteValue.length && typeof openWriteValue[0] === 'string';
        // user on redux in iframe is different from user in main thread
        const userInfo = this.state.user.info || this.state.user;
        const transUserId = (id) => {
            // For openWriteValue, it may be the userId of the current user, so try to determine whether it is the userId of the current user.
            if (id === (userInfo === null || userInfo === void 0 ? void 0 : userInfo.userId) && userInfo.unitId) {
                return userInfo.unitId;
            }
            return id;
        };
        if (isSimple) {
            return openWriteValue.map(v => transUserId(v));
        }
        return openWriteValue.map(v => transUserId(v.id));
    }
}
exports.MemberBaseField = MemberBaseField;


/***/ }),

/***/ 83009:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MemberField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const store_1 = __webpack_require__(56791);
const member_base_field_1 = __webpack_require__(78319);
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const i18n_1 = __webpack_require__(47511);
class MemberField extends member_base_field_1.MemberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    validateProperty() {
        return MemberField.propertySchema.validate(this.field.property);
    }
    validateCellValue(cellValue) {
        return MemberField.cellValueSchema.validate(cellValue);
    }
    validateOpenWriteValue(owv) {
        return MemberField.openWriteValueSchema.validate(owv);
    }
    get apiMetaProperty() {
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        const options = [];
        if (unitMap) {
            this.field.property.unitIds.forEach(unitId => {
                if (unitMap.hasOwnProperty(unitId)) {
                    const { name, type, avatar } = unitMap[unitId];
                    options.push({
                        id: unitId,
                        name,
                        type: (0, utils_1.getMemberTypeString)(type),
                        avatar,
                    });
                }
            });
        }
        return {
            options,
            isMulti: this.field.property.isMulti,
            shouldSendMsg: this.field.property.shouldSendMsg,
        };
    }
    get openValueJsonSchema() {
        return {
            type: 'array',
            title: this.field.name,
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_member_IDs),
                    },
                    type: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_member_types),
                    },
                    name: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_member_names),
                    },
                    avatar: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_member_avatars),
                    },
                },
            }
        };
    }
    static polyfillOldData(cellValue) {
        if (!cellValue) {
            return cellValue;
        }
        if (!Array.isArray(cellValue)) {
            return null;
        }
        return cellValue.map(item => {
            if (typeof item === 'object') {
                // old data only returns unitId
                return item.unitId;
            }
            return item;
        });
    }
    static defaultProperty() {
        return {
            isMulti: true,
            shouldSendMsg: true,
            unitIds: [],
        };
    }
    recordEditable(datasheetId, mirrorId) {
        if (!super.recordEditable(datasheetId, mirrorId)) {
            return false;
        }
        const { templateId } = this.state.pageParams;
        return templateId ? false : true;
    }
    isMultiValueField() {
        return true;
    }
    stdValueToCellValue(stdValue) {
        // Match matching member information with name text in redux.
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        if (!unitMap) {
            return null;
        }
        const unitValue = Object.values(unitMap);
        // The members of the space station may have the same name, so every time the data is converted, 
        // it is necessary to first find the members that are activated and not deleted, so all data must be checked
        const unitNames = Array.from(new Set(stdValue.data.map(d => d.text.split(/, ?/)).flat()));
        const cvMap = new Map();
        for (const name of unitNames) {
            for (const unit of unitValue) {
                if (unit.name !== name) {
                    continue;
                }
                cvMap.set(name, unit.unitId);
                if (unit.isActive && !unit.isDeleted) {
                    break;
                }
            }
        }
        return cvMap.size ? [...cvMap.values()] : null;
    }
    eq(cv1, cv2) {
        if (cv1 == null || cv2 == null) {
            return cv1 === cv2;
        }
        // Compatible with old data comparison
        return (0, lodash_1.isEqual)(MemberField.polyfillOldData([cv1].flat()), MemberField.polyfillOldData([cv2].flat()));
    }
    getUnitNames(cellValue) {
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        if (!unitMap) {
            return null;
        }
        return cellValue.map(id => {
            // There is unitId in the cell, but there is no corresponding user information in the space. Two situations need to be compatible here:
            // 1. Old data
            // 2. Data pasted from other spaces, or data stored in the dumped table
            if (!unitMap[id]) {
                return '';
            }
            return unitMap[id].name;
        });
    }
    getUnitIds(cellValue) {
        return MemberField.polyfillOldData(cellValue);
    }
    getUnits(cellValue) {
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        if (!unitMap) {
            return null;
        }
        return cellValue.map(unitId => {
            return unitMap[unitId];
        }).filter(item => item);
    }
    /**
     * API returns basic information of members
     * @param cellValues
     */
    cellValueToApiStandardValue(cellValues) {
        if ((0, lodash_1.isNil)(cellValues)) {
            return null;
        }
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        if ((0, lodash_1.isNil)(unitMap)) {
            return null;
        }
        const units = [];
        cellValues.forEach(unitId => {
            var _a;
            if (unitMap.hasOwnProperty(unitId)) {
                units.push({
                    id: unitId,
                    type: (0, utils_1.getMemberTypeString)(unitMap[unitId].type),
                    name: unitMap[unitId].name,
                    avatar: (_a = unitMap[unitId]) === null || _a === void 0 ? void 0 : _a.avatar,
                });
            }
        });
        return units;
    }
    enrichProperty(stdVals) {
        const cellValues = stdVals.map(stdVal => {
            const cv = this.stdValueToCellValue(stdVal);
            if (!cv) {
                return [];
            }
            return cv;
        }).flat();
        return Object.assign(Object.assign({}, this.field.property), { unitIds: [...new Set(cellValues)] });
    }
    validate(value) {
        if (value == null) {
            return true;
        }
        if (Array.isArray(value)) {
            return value.every(unitId => {
                return typeof unitId === 'string';
            });
        }
        return false;
    }
    get openFieldProperty() {
        const unitMap = store_1.Selectors.getUnitMap(this.state);
        const options = [];
        if (unitMap) {
            this.field.property.unitIds.forEach(unitId => {
                if (unitMap.hasOwnProperty(unitId)) {
                    const { name, type, avatar } = unitMap[unitId];
                    options.push({
                        id: unitId,
                        name,
                        type: (0, utils_1.getMemberTypeString)(type),
                        avatar,
                    });
                }
            });
        }
        const { isMulti, shouldSendMsg } = this.field.property;
        return {
            options,
            isMulti,
            shouldSendMsg
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return MemberField.openUpdatePropertySchema.validate(updateProperty);
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { isMulti, shouldSendMsg } = openFieldProperty;
        const { unitIds } = this.field.property;
        return {
            isMulti: Boolean(isMulti),
            shouldSendMsg: Boolean(shouldSendMsg),
            unitIds
        };
    }
    addOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { isMulti, shouldSendMsg } = openFieldProperty;
        const defaultProperty = MemberField.defaultProperty();
        return {
            isMulti: isMulti !== null && isMulti !== void 0 ? isMulti : defaultProperty.isMulti,
            shouldSendMsg: shouldSendMsg !== null && shouldSendMsg !== void 0 ? shouldSendMsg : defaultProperty.shouldSendMsg,
            unitIds: []
        };
    }
}
exports.MemberField = MemberField;
MemberField.propertySchema = joi_1.default.object({
    isMulti: joi_1.default.boolean().required(),
    unitIds: joi_1.default.array().items(joi_1.default.string()).required(),
    shouldSendMsg: joi_1.default.boolean(),
}).required();
MemberField.cellValueSchema = joi_1.default.array().items(joi_1.default.string().pattern(/^\d{10}/).required()).allow(null).required();
MemberField.openWriteValueSchema = joi_1.default.custom((owv, helpers) => {
    const memberIds = owv.map((v) => (0, lodash_1.isString)(v) ? v : v.id);
    if (!(memberIds === null || memberIds === void 0 ? void 0 : memberIds.length)) {
        return helpers.error('value format error');
    }
    for (const key of memberIds) {
        if (typeof key !== 'string') {
            return helpers.error(`memberId ${key} is must string`);
        }
    }
    return owv;
}).allow(null).required();
MemberField.openUpdatePropertySchema = joi_1.default.object({
    isMulti: joi_1.default.boolean(),
    shouldSendMsg: joi_1.default.boolean(),
}).required();


/***/ }),

/***/ 11639:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NumberBaseField = exports.numberFormat = exports.numberThresholdValue = exports.commonNumberFields = void 0;
const lodash_1 = __webpack_require__(46517);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const field_1 = __webpack_require__(55808);
const stat_1 = __webpack_require__(90519);
const i18n_1 = __webpack_require__(47511);
const utils_1 = __webpack_require__(26854);
const joi_1 = __importDefault(__webpack_require__(48506));
const utils_2 = __webpack_require__(46214);
exports.commonNumberFields = new Set([
    field_types_1.FieldType.Number,
    field_types_1.FieldType.Currency,
    field_types_1.FieldType.Percent,
    field_types_1.FieldType.Rating,
    field_types_1.FieldType.AutoNumber,
    field_types_1.FieldType.Formula,
]);
// scientific notation threshold
exports.numberThresholdValue = 1e+16;
const numberFormat = (cv, formatting) => {
    const { formatType, precision = 0, symbol, commaStyle } = formatting || {};
    if (formatType === field_types_1.FieldType.Currency) {
        const cellString = (0, utils_1.numberToShow)(cv, precision);
        return (0, utils_1.str2Currency)(cellString, symbol);
    }
    else if (formatType === field_types_1.FieldType.Percent) {
        if (cv == null) {
            return null;
        }
        const cellString = (0, utils_1.numberToShow)((0, utils_1.times)(cv, 100), precision);
        return cellString == null ? null : cellString + '%';
    }
    const cellString = (0, utils_1.numberToShow)(cv, precision);
    return commaStyle ? (0, utils_1.str2Currency)(cellString, '', 3, commaStyle) : cellString;
};
exports.numberFormat = numberFormat;
class NumberBaseField extends field_1.Field {
    constructor(field, state) {
        super(field, state);
        this.field = field;
    }
    get apiMetaProperty() {
        const { defaultValue, precision = 0, commaStyle, symbol } = this.field.property;
        return {
            defaultValue: defaultValue || undefined,
            precision,
            commaStyle: commaStyle || undefined,
            symbol: symbol || undefined
        };
    }
    get openValueJsonSchema() {
        return {
            type: 'number',
            title: this.field.name,
        };
    }
    showFOperatorDesc(type) {
        return NumberBaseField.FOperatorDescMap[type];
    }
    get acceptFilterOperators() {
        return NumberBaseField._acceptFilterOperators;
    }
    get statTypeList() {
        return NumberBaseField._statTypeList;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.Number;
    }
    cellValueToString(_cellValue) {
        return null;
    }
    static _compare(cellValue1, cellValue2) {
        if (cellValue1 === null && cellValue2 === null) {
            return 0;
        }
        if (cellValue1 === null) {
            return -1;
        }
        if (cellValue2 === null) {
            return 1;
        }
        return cellValue1 === cellValue2 ?
            0 : (cellValue1 > cellValue2 ? 1 : -1);
    }
    compare(cellValue1, cellValue2) {
        return NumberBaseField._compare(cellValue1, cellValue2);
    }
    cellValueToStdValue(val) {
        const stdVal = {
            sourceType: this.field.type,
            data: [],
        };
        if (val != null) {
            stdVal.data.push({
                // For fields related to Number type, ensure that the data source accuracy is accurate
                text: this.cellValueToString(val) || '',
                value: val,
            });
        }
        return stdVal;
    }
    // StandardValue -> CellValue needs to undergo data conversion, otherwise it will affect cell copying, filling and other operations
    stdValueToCellValue(stdVal) {
        const { data, sourceType } = stdVal;
        if (data.length === 0) {
            return null;
        }
        const { text, value } = data[0];
        // Convert from Number & Formula related fields
        if (exports.commonNumberFields.has(sourceType) && this.validate(value)) {
            return value;
        }
        // other fields
        const cellValue = (0, utils_1.str2NumericStr)(text);
        return cellValue == null ? null : (0, utils_1.str2number)(cellValue);
    }
    validate(value) {
        return (0, lodash_1.isNumber)(value) && !Number.isNaN(value);
    }
    defaultValueForCondition(condition) {
        if (condition.operator !== view_types_1.FOperator.Is) {
            return null;
        }
        const { value } = condition;
        if (value && value.length && value[0]) {
            return (0, utils_1.str2number)(value[0]);
        }
        return null;
    }
    static _isMeetFilter(operator, cellValue, conditionValue) {
        // TODO: Tidy up the logic here.
        // Field -> NumberBaseField -> [NumberField,RatingField,PercentField,CurrencyField] -> LookupField
        // + getVisibleRows will pre-validate if it is empty or not. Logically speaking, it should not be used, and all filter logic should go here.
        // + When implementing the field isMeetFilter, the unary operator should be judged in advance, 
        // and then the polynomial operator should be processed. In this way, 
        // the following processing of the comparison value will not affect the normal judgment logic.
        // + Now the field filter also needs to be provided to the single record of automation, and it is determined in advance if it is empty or not.
        if (operator === view_types_1.FOperator.IsEmpty) {
            return cellValue == null;
        }
        if (operator === view_types_1.FOperator.IsNotEmpty) {
            return cellValue != null;
        }
        if (conditionValue == null)
            return true;
        const filterValue = conditionValue[0].trim() === '' ? null : Number(conditionValue[0]);
        if (filterValue == null) {
            return true;
        }
        switch (operator) {
            case view_types_1.FOperator.Is: {
                return !Number.isNaN(filterValue) && cellValue != null && filterValue === cellValue;
            }
            case view_types_1.FOperator.IsNot: {
                return cellValue == null || Number.isNaN(filterValue) || cellValue !== filterValue;
            }
            case view_types_1.FOperator.IsGreater: {
                return cellValue != null && cellValue > filterValue;
            }
            case view_types_1.FOperator.IsGreaterEqual: {
                return cellValue != null && cellValue >= filterValue;
            }
            case view_types_1.FOperator.IsLess: {
                return cellValue != null && cellValue < filterValue;
            }
            case view_types_1.FOperator.IsLessEqual: {
                return cellValue != null && cellValue <= filterValue;
            }
            default: {
                return false;
            }
        }
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        return NumberBaseField._isMeetFilter(operator, cellValue, conditionValue);
    }
    cellValueToApiStandardValue(cellValue) {
        return cellValue;
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        return cellValue;
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_2.isNullValue)(openWriteValue)) {
            return null;
        }
        return openWriteValue;
    }
    validateCellValue(cellValue) {
        return NumberBaseField.cellValueSchema.validate(cellValue);
    }
    validateOpenWriteValue(owv) {
        return NumberBaseField.openWriteValueSchema.validate(owv);
    }
    static _filterValueToOpenFilterValue(value) {
        const num = Number(value === null || value === void 0 ? void 0 : value[0]);
        return isNaN(num) ? null : num;
    }
    filterValueToOpenFilterValue(value) {
        return NumberBaseField._filterValueToOpenFilterValue(value);
    }
    static _openFilterValueToFilterValue(value) {
        return value === null ? null : [value.toString()];
    }
    openFilterValueToFilterValue(value) {
        return NumberBaseField._openFilterValueToFilterValue(value);
    }
    static _validateOpenFilterValue(value) {
        return NumberBaseField.validateOpenFilterSchema.validate(value);
    }
    validateOpenFilterValue(value) {
        return NumberBaseField._validateOpenFilterValue(value);
    }
}
exports.NumberBaseField = NumberBaseField;
NumberBaseField._statTypeList = [
    stat_1.StatType.None,
    stat_1.StatType.CountAll,
    stat_1.StatType.Sum,
    stat_1.StatType.Average,
    stat_1.StatType.Max,
    stat_1.StatType.Min,
    stat_1.StatType.Empty,
    stat_1.StatType.Filled,
    stat_1.StatType.Unique,
    stat_1.StatType.PercentEmpty,
    stat_1.StatType.PercentFilled,
    stat_1.StatType.PercentUnique,
];
NumberBaseField._acceptFilterOperators = [
    view_types_1.FOperator.Is,
    view_types_1.FOperator.IsNot,
    view_types_1.FOperator.IsGreater,
    view_types_1.FOperator.IsGreaterEqual,
    view_types_1.FOperator.IsLess,
    view_types_1.FOperator.IsLessEqual,
    view_types_1.FOperator.IsEmpty,
    view_types_1.FOperator.IsNotEmpty,
    view_types_1.FOperator.IsRepeat,
];
NumberBaseField.FOperatorDescMap = {
    [view_types_1.FOperator.Is]: '=',
    [view_types_1.FOperator.IsNot]: '≠',
    [view_types_1.FOperator.IsGreater]: '>',
    [view_types_1.FOperator.IsGreaterEqual]: '≥',
    [view_types_1.FOperator.IsLess]: '<',
    [view_types_1.FOperator.IsLessEqual]: '≤',
    [view_types_1.FOperator.IsEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_empty),
    [view_types_1.FOperator.IsNotEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_not_empty),
    [view_types_1.FOperator.IsRepeat]: (0, i18n_1.t)(i18n_1.Strings.is_repeat),
};
NumberBaseField.cellValueSchema = joi_1.default.number().unsafe().allow(null).required();
NumberBaseField.openWriteValueSchema = joi_1.default.number().allow(null).required();
NumberBaseField.validateOpenFilterSchema = joi_1.default.number().allow(null);


/***/ }),

/***/ 57774:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NumberField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const number_base_field_1 = __webpack_require__(11639);
const utils_1 = __webpack_require__(26854);
const validate_schema_1 = __webpack_require__(62903);
class NumberField extends number_base_field_1.NumberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    cellValueToString(cellValue, cellToStringOption) {
        if (this.validate(cellValue)) {
            const { symbol, precision, symbolAlign = field_types_1.SymbolAlign.right, commaStyle } = this.field.property;
            const cellString = (0, utils_1.numberToShow)(cellValue, precision);
            const { hideUnit } = cellToStringOption || {};
            if ((!symbol && !commaStyle) || hideUnit) {
                return cellString;
            }
            if (!commaStyle) {
                return `${cellString}${symbol}`;
            }
            return (0, utils_1.str2Currency)(cellString, symbol, 3, commaStyle, symbolAlign);
        }
        return null;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Number,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            precision: 0,
            symbolAlign: field_types_1.SymbolAlign.right
        };
    }
    compareCellValue(cellValue) {
        const cellValue2Str = this.cellValueToString(cellValue, { hideUnit: true });
        return cellValue2Str === null ? null : (0, utils_1.str2number)(cellValue2Str);
    }
    compare(cellValue1, cellValue2) {
        return number_base_field_1.NumberBaseField._compare(this.compareCellValue(cellValue1), this.compareCellValue(cellValue2));
    }
    defaultValue() {
        const { defaultValue } = this.field.property;
        // Compatible with old data without the <default> attribute
        return defaultValue ? (0, utils_1.str2number)(defaultValue) : null;
    }
    validateProperty() {
        return NumberField.propertySchema.validate(this.field.property);
    }
    get openFieldProperty() {
        const { defaultValue, precision, symbol } = this.field.property;
        return { defaultValue, precision, symbol };
    }
    validateUpdateOpenProperty(updateProperty) {
        return NumberField.updateOpenPropertySchema.validate(updateProperty);
    }
}
exports.NumberField = NumberField;
NumberField.propertySchema = joi_1.default.object({
    precision: joi_1.default.number().min(0).max(1000).required(),
    defaultValue: joi_1.default.string().allow(''),
    commaStyle: joi_1.default.string().allow(''),
    symbol: joi_1.default.string().allow(''),
    symbolAlign: joi_1.default.valid(...(0, validate_schema_1.enumToArray)(field_types_1.SymbolAlign)),
}).required();
NumberField.updateOpenPropertySchema = joi_1.default.object({
    precision: joi_1.default.number().min(0).max(1000).required(),
    defaultValue: joi_1.default.string().allow(''),
    symbol: joi_1.default.string().allow('')
}).required();


/***/ }),

/***/ 88163:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PercentField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const number_base_field_1 = __webpack_require__(11639);
const utils_1 = __webpack_require__(26854);
class PercentField extends number_base_field_1.NumberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    // preview state data
    cellValueToString(cellValue, cellToStringOption) {
        if (this.validate(cellValue)) {
            const cellString = (0, utils_1.numberToShow)((0, utils_1.times)(cellValue, 100), this.field.property.precision);
            const { hideUnit } = cellToStringOption || {};
            return cellString == null ? null : `${cellString}${hideUnit ? '' : '%'}`;
        }
        return null;
    }
    // Return the default value of the field attribute configuration when adding a record
    defaultValue() {
        const { defaultValue } = this.field.property;
        return defaultValue ? (0, utils_1.str2number)(defaultValue) : null;
    }
    compareCellValue(cellValue) {
        const cellValue2Str = this.cellValueToString(cellValue, { hideUnit: true });
        return cellValue2Str === null ? null : (0, utils_1.str2number)(cellValue2Str);
    }
    compare(cellValue1, cellValue2) {
        return number_base_field_1.NumberBaseField._compare(this.compareCellValue(cellValue1), this.compareCellValue(cellValue2));
    }
    validateProperty() {
        return PercentField.propertySchema.validate(this.field.property);
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Percent,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return {
            precision: 0,
        };
    }
    get openFieldProperty() {
        const { defaultValue, precision } = this.field.property;
        return {
            defaultValue,
            precision
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        return PercentField.propertySchema.validate(updateProperty);
    }
}
exports.PercentField = PercentField;
PercentField.propertySchema = joi_1.default.object({
    precision: joi_1.default.number().min(0).max(10).required(),
    defaultValue: joi_1.default.string().allow('')
}).required();


/***/ }),

/***/ 65316:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PhoneField = void 0;
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const text_base_field_1 = __webpack_require__(36722);
class PhoneField extends text_base_field_1.TextBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
    }
    static defaultProperty() {
        return null;
    }
    get apiMetaProperty() {
        return null;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            type: field_types_1.FieldType.Phone,
            property: this.defaultProperty(),
        };
    }
}
exports.PhoneField = PhoneField;


/***/ }),

/***/ 36647:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RatingField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const field_types_1 = __webpack_require__(80360);
const convert_1 = __webpack_require__(44650);
const datasheet_1 = __webpack_require__(55384);
const number_base_field_1 = __webpack_require__(11639);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(46214);
const emojis_config_1 = __webpack_require__(1975);
const validate_schema_1 = __webpack_require__(62903);
class RatingField extends number_base_field_1.NumberBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
    }
    validateProperty() {
        return RatingField.propertySchema.validate(this.field.property);
    }
    get apiMetaProperty() {
        return {
            icon: (0, utils_1.getEmojiIconNativeString)(this.field.property.icon),
            max: this.field.property.max,
        };
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.Rating,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    static defaultProperty() {
        return { icon: 'star', max: 5 };
    }
    cellValueToString(cellValue) {
        if (this.validate(cellValue)) {
            return cellValue.toString();
        }
        return null;
    }
    stdValueToCellValue(stdVal) {
        const { data, sourceType } = stdVal;
        if (data.length === 0) {
            return null;
        }
        const cValue = number_base_field_1.commonNumberFields.has(sourceType) ? data[0].value : (0, convert_1.str2number)(data[0].text);
        if (!cValue)
            return null;
        if (cValue && cValue >= this.field.property.max)
            return this.field.property.max;
        if (cValue != null && cValue < 1)
            return null;
        return parseInt(cValue, 10);
    }
    /**
     * Cancel the verification of property.max, and call cellValueToString during statistics.
     * The result of the summation may be greater than max. Values exceeding max have been handled at the UI layer.
     */
    validate(value) {
        // && value <= this.field.property.max
        return (0, lodash_1.isNumber)(value) && !Number.isNaN(value) && value > 0;
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        if (conditionValue == null) {
            // Score filter null == 0
            const filterValue = 0;
            const cv = cellValue || 0;
            switch (operator) {
                case types_1.FOperator.Is:
                    return cellValue === conditionValue;
                case types_1.FOperator.IsNot:
                    return cellValue !== conditionValue;
                case types_1.FOperator.IsGreater:
                    return cv > filterValue;
                case types_1.FOperator.IsGreaterEqual:
                    return cv >= filterValue;
                case types_1.FOperator.IsLess:
                    return cv < filterValue;
                case types_1.FOperator.IsLessEqual:
                    return cv <= filterValue;
                default:
                    return number_base_field_1.NumberBaseField._isMeetFilter(operator, cellValue, conditionValue);
            }
        }
        return number_base_field_1.NumberBaseField._isMeetFilter(operator, cellValue, conditionValue);
    }
    get openFieldProperty() {
        const { max, icon } = this.field.property;
        return {
            icon: (0, utils_1.getEmojiIconNativeString)(icon),
            max,
        };
    }
    validateUpdateOpenProperty(updateProperty) {
        const result = RatingField.propertySchema.validate(updateProperty);
        if (!result.error && !emojis_config_1.EmojisConfig[updateProperty.icon]) {
            return (0, validate_schema_1.joiErrorResult)('icon is not Emoji slug');
        }
        return result;
    }
}
exports.RatingField = RatingField;
RatingField.propertySchema = joi_1.default.object({
    icon: joi_1.default.string().required(),
    max: joi_1.default.number().min(0).max(10).required(),
}).required();


/***/ }),

/***/ 54929:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SelectField = exports.isOptionId = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(26854);
const field_1 = __webpack_require__(55808);
const field_types_1 = __webpack_require__(80360);
const color_1 = __webpack_require__(87987);
const validate_schema_1 = __webpack_require__(62903);
const EFFECTIVE_OPTION_ID_LENGTH = 13;
const isOptionId = (optionId) => {
    return optionId && optionId.startsWith('opt') && optionId.length === EFFECTIVE_OPTION_ID_LENGTH;
};
exports.isOptionId = isOptionId;
class SelectField extends field_1.Field {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.getMapOption = (0, lodash_1.memoize)((options) => {
            const mapOptions = new Map();
            options.forEach((op, index) => {
                mapOptions.set(op.id, index);
            });
            return mapOptions;
        });
    }
    static defaultProperty() {
        return { options: [] };
    }
    get apiMetaProperty() {
        const options = this.field.property.options.map(option => {
            return {
                id: option.id,
                name: option.name,
                color: (0, color_1.getFieldOptionColor)(option.color),
            };
        });
        return { options };
    }
    validateProperty() {
        return SelectField.propertySchema.validate(this.field.property, { context: {
                fieldType: this.field.type,
            } });
    }
    static _createNewOption(option, existOptions) {
        const optionId = (0, utils_1.getNewId)(utils_1.IDPrefix.Option, existOptions.map(op => op.id));
        return {
            id: optionId,
            color: option.color || getOptionColor(existOptions.map(op => op.color)),
            name: option.name,
        };
    }
    static _getOption(option, existOptions) {
        for (const opt of existOptions) {
            const exist = option.color ? opt.name === option.name && opt.color === option.color : opt.name === option.name;
            if (exist) {
                return opt;
            }
        }
        return;
    }
    static getOrCreateNewOption(option, existOptions) {
        // get exist
        const opt = SelectField._getOption(option, existOptions);
        if (opt) {
            return {
                option: opt,
                isCreated: false,
            };
        }
        // create not exist
        const newOption = SelectField._createNewOption(option, existOptions);
        return {
            option: newOption,
            isCreated: true,
        };
    }
    createNewOption(name, color) {
        return SelectField._createNewOption({ name, color }, this.field.property.options);
    }
    /**
     * add new option to singleSelect
     *
     * @param {string} name
     * @memberof SingleSelectField
     */
    addOption(name, color) {
        const option = this.createNewOption(name, color);
        this.field.property.options.push(option);
        return option.id;
    }
    /**
     * find option by name
     * @param {string} name
     * @returns
     * @memberof SingleSelectField
     */
    findOptionByName(name) {
        return this.field.property.options.find(option => option.name === name) || null;
    }
    findOptionById(id) {
        return this.field.property.options.find(option => option.id === id) || null;
    }
    getOption(index) {
        return this.field.property.options[index];
    }
    compare(cellValue1, cellValue2) {
        if (cellValue1 === cellValue2) {
            return 0;
        }
        if (cellValue1 === null) {
            return 1;
        }
        if (cellValue2 === null) {
            return -1;
        }
        const arr1 = Array.isArray(cellValue1) ? cellValue1 : [cellValue1];
        const arr2 = Array.isArray(cellValue2) ? cellValue2 : [cellValue2];
        const maxLen = Math.max(arr1.length, arr2.length);
        const mapOptions = this.getMapOption(this.field.property.options);
        for (let i = 0; i < maxLen; i++) {
            if (!arr1[i]) {
                return -1;
            }
            if (!arr2[i]) {
                return 1;
            }
            const index1 = mapOptions.get(arr1[i]);
            const index2 = mapOptions.get(arr2[i]);
            if (index1 !== index2) {
                return index1 > index2 ? 1 : -1;
            }
        }
        return 0;
    }
    // Modify the current property according to StandardValue
    enrichProperty(stdVals) {
        if (!this.propertyEditable()) {
            // Filling non-existent values for single and multiple selection will be enriched by default, 
            // but if there is no manageable permission for the node, enrich will report an error
            // In addition, considering the column permissions, if there is no column editing permission, 
            // the user must not be manageable by the node, so there is no need to check the column permissions.
            return this.field.property;
        }
        // The two maps are because there are multiple options corresponding to one id
        const options = [...this.field.property.options];
        const optionColor = options.map(op => op.color);
        const optionNameMap = (0, lodash_1.keyBy)(this.field.property.options, 'name');
        const optionIdMap = (0, lodash_1.keyBy)(this.field.property.options, 'id');
        for (const stdVal of stdVals) {
            const sourceType = stdVal && stdVal.sourceType;
            const isSelect2Multi = (0, utils_1.isSelectType)(sourceType) &&
                this.field.type === field_types_1.FieldType.MultiSelect;
            const data = stdVal && stdVal.data;
            if (!data || data.length === 0) {
                continue;
            }
            data.forEach(d => {
                const { text, id } = d;
                let textList;
                if (isSelect2Multi) {
                    textList = [text];
                }
                else {
                    textList = this.field.type === field_types_1.FieldType.MultiSelect ? text.split(/, ?/) : [text];
                }
                textList.forEach(text => {
                    const existOption = optionNameMap[text];
                    // TODO: reuse ID and Color
                    // When there is a creation option, two cases with the same option have id, such as the color field added later
                    if ((0, lodash_1.isString)(text) && !existOption) {
                        const newColor = getOptionColor(optionColor);
                        const option = this.createNewOption(text, newColor);
                        if (id) {
                            // Create one more option, there may be duplicate text
                            // Subsequent reuse of color, such as option.color = color
                            option.id = id;
                        }
                        options.push(option);
                        optionNameMap[text] = option;
                        optionIdMap[id] = option;
                        optionColor.push(newColor);
                    }
                });
            });
        }
        // Keep the property of the current column, options are overwritten
        return Object.assign(Object.assign({}, this.field.property), { options: this.filterBlankOption(options) });
    }
    filterBlankOption(options) {
        return options.filter(item => item.name.trim().length);
    }
    get openFieldProperty() {
        const { defaultValue } = this.field.property;
        const options = this.field.property.options.map(option => {
            return {
                id: option.id,
                name: option.name,
                color: (0, color_1.getFieldOptionColor)(option.color),
            };
        });
        return { options, defaultValue };
    }
    validateWriteOpenOptionsEffect(updateProperty, effectOption) {
        // Not allowed to pass option parameter with ID but no color
        if (updateProperty.options.some(option => option.id && !option.color)) {
            return (0, validate_schema_1.joiErrorResult)('Option object is not supported. It has id but no color');
        }
        // Check if this update removes options
        const updateOptionIds = updateProperty.options.map(option => option.id);
        const isDeleteOption = this.field.property.options.some(option => !updateOptionIds.includes(option.id));
        if (isDeleteOption && !(effectOption === null || effectOption === void 0 ? void 0 : effectOption.enableSelectOptionDelete)) {
            return (0, validate_schema_1.joiErrorResult)('Removing options is not supported by default, '
                + 'When updating property, include all existing options or pass the `enableSelectOptionDelete` option to allow options to be deleted.');
        }
        return { error: undefined, value: undefined };
    }
    updateOpenFieldPropertyTransformProperty(openFieldProperty) {
        const { options, defaultValue } = openFieldProperty;
        const newOptions = [];
        let transformedDefaultValue = defaultValue;
        const transformedOptions = options.map(option => {
            if (!option.id || !option.color) {
                const color = option.color ? this.getOptionColorNumberByName(option.color) : undefined;
                // prevent duplicate option IDs
                const newOption = SelectField._createNewOption({ name: option.name, color }, [...this.field.property.options, ...newOptions]);
                transformedDefaultValue = this.transformDefaultValue(newOption, transformedDefaultValue);
                newOptions.push(newOption);
                return newOption;
            }
            return {
                id: option.id,
                name: option.name,
                color: this.getOptionColorNumberByName(option.color)
            };
        });
        return {
            defaultValue: transformedDefaultValue,
            options: transformedOptions
        };
    }
    /**
     * If the defaultValue is option.name, it needs to be processed as option.id
     */
    transformDefaultValue(option, defaultValue) {
        if (this.matchSingleSelectName(option.name, defaultValue)) {
            return option.id;
        }
        if (typeof defaultValue === 'object') { // for MultiSelect
            const idx = defaultValue.indexOf(option.name);
            if (idx > -1) {
                defaultValue[idx] = option.id;
            }
        }
        return defaultValue;
    }
    matchSingleSelectName(name, defaultValue) {
        return typeof defaultValue === 'string'
            && name === defaultValue;
    }
    /**
     * Convert the obtained color name to color number
     * @param name color name
     */
    getOptionColorNumberByName(name) {
        const colorNames = (0, color_1.getColorNames)();
        const colorNum = colorNames.findIndex(colorName => colorName === name);
        return colorNum > -1 ? colorNum : undefined;
    }
}
exports.SelectField = SelectField;
SelectField.propertySchema = joi_1.default.object({
    options: joi_1.default.array().items(joi_1.default.object({
        id: joi_1.default.string().required(),
        name: joi_1.default.string().required(),
        color: joi_1.default.number().integer().min(0).required(),
    })).required(),
    defaultValue: joi_1.default.custom((_prototype, helpers) => {
        var _a;
        if (((_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['fieldType']) === field_types_1.FieldType.SingleSelect) {
            return joi_1.default.string();
        }
        return joi_1.default.array().items(joi_1.default.string());
    })
}).required();
SelectField.openUpdatePropertySchema = joi_1.default.object({
    options: joi_1.default.array().items(joi_1.default.object({
        id: joi_1.default.string(),
        name: joi_1.default.string().required(),
        color: joi_1.default.string(),
    })).required(),
}).required();
// TODO: wait for PRD for specific logic
function getOptionColor(colors) {
    if (colors.length < 10) {
        const diffColors = (0, lodash_1.difference)((0, lodash_1.range)(10), colors);
        return diffColors[0];
    }
    return colors.length % 10;
}


/***/ }),

/***/ 47142:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(54929), exports);
__exportStar(__webpack_require__(73198), exports);
__exportStar(__webpack_require__(48722), exports);


/***/ }),

/***/ 48722:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MultiSelectField = void 0;
const i18n_1 = __webpack_require__(47511);
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const color_1 = __webpack_require__(87987);
const utils_1 = __webpack_require__(46214);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const utils_2 = __webpack_require__(26854);
const datasheet_1 = __webpack_require__(55384);
const common_select_field_1 = __webpack_require__(54929);
class MultiSelectField extends common_select_field_1.SelectField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.MultiSelect,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    validateCellValue(cv) {
        return MultiSelectField.cellValueSchema.validate(cv, { context: { field: this.field } });
    }
    validateOpenWriteValue(owv) {
        return MultiSelectField.openWriteValueSchema.validate(owv, { context: { field: this.field } });
    }
    defaultValue() {
        const defaultValue = this.field.property.defaultValue;
        if (!defaultValue || !defaultValue.length) {
            return null;
        }
        return defaultValue;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.Array;
    }
    get innerBasicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get acceptFilterOperators() {
        return [
            view_types_1.FOperator.Is,
            view_types_1.FOperator.IsNot,
            view_types_1.FOperator.Contains,
            view_types_1.FOperator.DoesNotContain,
            view_types_1.FOperator.IsEmpty,
            view_types_1.FOperator.IsNotEmpty,
            view_types_1.FOperator.IsRepeat,
        ];
    }
    get openValueJsonSchema() {
        return {
            type: 'array',
            items: {
                type: 'object',
                properties: {
                    id: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_option_IDs)
                    },
                    name: {
                        type: 'string',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_option_names),
                    },
                    color: {
                        type: 'object',
                        title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_option_colors),
                        properties: {
                            name: {
                                type: 'string',
                                title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_color_names),
                            },
                            value: {
                                type: 'string',
                                title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_color_values),
                            }
                        }
                    },
                },
            }
        };
    }
    isMultiValueField() {
        return true;
    }
    defaultValueForCondition(condition) {
        const { value } = condition;
        if (condition.operator === view_types_1.FOperator.Is) {
            if (!value || value.length === 0) {
                return null;
            }
            const result = value.reduce((prev, v) => {
                if (this.validate([v])) {
                    prev.push(v);
                }
                return prev;
            }, []);
            return result.length === value.length ? result : null;
        }
        if (condition.operator === view_types_1.FOperator.Contains) {
            // `contains` only fills in when there is only one value
            if (value && value.length === 1 && value[0] && this.validate([value[0]])) {
                return [value[0]];
            }
            return null;
        }
        return null;
    }
    compare(cellValue1, cellValue2, orderInCellValueSensitive) {
        // grouping sort
        if (!orderInCellValueSensitive) {
            const sortCellValue1 = this.sortValueByOptionOrder(cellValue1);
            const sortCellValue2 = this.sortValueByOptionOrder(cellValue2);
            return super.compare(sortCellValue1, sortCellValue2);
        }
        return super.compare(cellValue1, cellValue2);
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        switch (operator) {
            case view_types_1.FOperator.Is: {
                return cellValue != null && (0, utils_2.isSameSet)(cellValue, conditionValue);
            }
            case view_types_1.FOperator.IsNot: {
                return cellValue == null || !(0, utils_2.isSameSet)(cellValue, conditionValue);
            }
            case view_types_1.FOperator.Contains: {
                return cellValue != null && (0, utils_2.hasIntersect)(cellValue, conditionValue);
            }
            case view_types_1.FOperator.DoesNotContain: {
                return cellValue == null || !(0, utils_2.hasIntersect)(cellValue, conditionValue);
            }
            default: {
                return super.isMeetFilter(operator, cellValue, conditionValue);
            }
        }
    }
    cellValueToStdValue(val) {
        const stdVal = {
            sourceType: field_types_1.FieldType.MultiSelect,
            data: [],
        };
        if (Array.isArray(val)) {
            stdVal.data = val.map(currOptId => {
                const option = (0, lodash_1.find)(this.field.property.options, opt => {
                    return opt.id === currOptId;
                });
                return {
                    text: option.name,
                    id: option.id,
                };
            });
        }
        return stdVal;
    }
    stdValueToCellValue(stdValue) {
        // filter the empty text
        let data = stdValue.data.filter(d => d.text);
        data = (0, lodash_1.uniqBy)(data, 'text');
        const isSelect2multi = (0, utils_2.isSelectType)(stdValue.sourceType);
        const ids = data.reduce((ids, { text }) => {
            const textTmp = isSelect2multi ? [text] : (0, lodash_1.uniq)(text.split(/, ?/));
            textTmp.forEach(text => {
                const option = this.field.property.options.find(option => option.name === text);
                if (option) {
                    ids.push(option.id);
                }
            });
            return ids;
        }, []);
        return (0, utils_1.handleEmptyCellValue)(ids, this.basicValueType);
    }
    cellValueToString(cellValue) {
        return this.arrayValueToString(this.cellValueToArray(cellValue));
    }
    cellValueToArray(cellValue) {
        if (!cellValue) {
            return null;
        }
        const result = [];
        for (let i = 0, l = cellValue.length; i < l; i++) {
            const option = this.findOptionById(cellValue[i]);
            if (option) {
                result.push(option.name);
            }
        }
        return (0, utils_1.handleEmptyCellValue)(result, this.basicValueType);
    }
    arrayValueToString(cellValues) {
        return cellValues && cellValues.length ? cellValues.join(', ') : null;
    }
    // sort vales by option ascending order
    sortValueByOptionOrder(value) {
        if (!value) {
            return null;
        }
        const mapOptions = this.getMapOption(this.field.property.options);
        return Array.from(value).sort((id1, id2) => {
            const idx1 = mapOptions.get(id1);
            const idx2 = mapOptions.get(id2);
            return idx1 - idx2;
        });
    }
    validate(value) {
        return (0, lodash_1.isArray)(value) && value.every(id => this.field.property.options.some(option => option.id === id));
    }
    cellValueToApiStandardValue(cellValue) {
        return this.cellValueToArray(cellValue);
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        if (!cellValue) {
            return null;
        }
        const optionMap = this.getMapOption(this.field.property.options);
        return cellValue.reduce((prev, curr) => {
            if (optionMap.has(curr)) {
                const optionIndex = optionMap.get(curr);
                const option = this.field.property.options[optionIndex];
                prev.push({
                    id: option.id,
                    name: option.name,
                    color: (0, color_1.getFieldOptionColor)(option.color)
                });
            }
            return prev;
        }, []);
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        const isSimple = openWriteValue.length && typeof openWriteValue[0] === 'string';
        const writeValue = isSimple ? openWriteValue : openWriteValue.map(v => v.id || v.name);
        const optionIds = [];
        writeValue.forEach(value => {
            this.field.property.options.forEach(option => {
                if ((0, common_select_field_1.isOptionId)(value) && value === option.id) {
                    optionIds.push(option.id);
                }
                else if (value === option.name) {
                    optionIds.push(option.id);
                }
            });
        });
        return optionIds;
    }
    validateUpdateOpenProperty(updateProperty, effectOption) {
        const result = MultiSelectField.openUpdatePropertySchema.validate(updateProperty);
        if (result.error) {
            return result;
        }
        return this.validateWriteOpenOptionsEffect(updateProperty, effectOption);
    }
    filterValueToOpenFilterValue(value) {
        if (Array.isArray(value)) {
            const _value = value.filter(v => this.findOptionById(v));
            return _value.length ? _value : null;
        }
        return value;
    }
    openFilterValueToFilterValue(value) {
        if (Array.isArray(value)) {
            const _value = value.filter(v => this.findOptionById(v));
            return _value.length ? _value : null;
        }
        return value;
    }
    validateOpenFilterValue(value) {
        return MultiSelectField.validateOpenFilterSchema.validate(value);
    }
}
exports.MultiSelectField = MultiSelectField;
MultiSelectField.cellValueSchema = joi_1.default.custom((optionIds, helpers) => {
    var _a;
    const field = (_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['field'];
    if (!(0, lodash_1.isArray)(optionIds)) {
        return helpers.message({ en: 'cellValue is not array' });
    }
    if (!optionIds.every(id => field.property.options.some(option => option.id === id))) {
        return helpers.message({ en: 'option not exist field property' });
    }
    return optionIds;
}).allow(null).required();
MultiSelectField.openWriteValueSchema = joi_1.default.array().custom((owv, helpers) => {
    var _a;
    const field = (_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['field'];
    const optionIdsOrNames = owv.map((v) => (0, lodash_1.isString)(v) ? v : (v.id || v.name));
    if (!optionIdsOrNames) {
        return helpers.error('value format error');
    }
    if (field.property.options.every(option => option.id === optionIdsOrNames || option.name === optionIdsOrNames)) {
        return helpers.error('option not exist field property');
    }
    return optionIdsOrNames;
}).allow(null).required();
MultiSelectField.openUpdatePropertySchema = joi_1.default.object({
    options: joi_1.default.array().items(joi_1.default.object({
        id: joi_1.default.string(),
        name: joi_1.default.string().required(),
        color: joi_1.default.string(),
    })).required(),
    defaultValue: joi_1.default.array().items(joi_1.default.string())
}).required();
MultiSelectField.validateOpenFilterSchema = joi_1.default.array().items(joi_1.default.string()).allow(null);


/***/ }),

/***/ 73198:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SingleSelectField = void 0;
const i18n_1 = __webpack_require__(47511);
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const color_1 = __webpack_require__(87987);
const field_types_1 = __webpack_require__(80360);
const view_types_1 = __webpack_require__(88471);
const datasheet_1 = __webpack_require__(55384);
const common_select_field_1 = __webpack_require__(54929);
class SingleSelectField extends common_select_field_1.SelectField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            type: field_types_1.FieldType.SingleSelect,
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            property: this.defaultProperty(),
        };
    }
    validateCellValue(cv) {
        return SingleSelectField.cellValueSchema.validate(cv, { context: { field: this.field } });
    }
    validateOpenWriteValue(owv) {
        return SingleSelectField.openWriteValueSchema.validate(owv, { context: { field: this.field } });
    }
    defaultValue() {
        const defaultValue = this.field.property.defaultValue;
        if (!defaultValue || !defaultValue.trim().length) {
            return null;
        }
        return defaultValue;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get openValueJsonSchema() {
        return {
            type: 'object',
            properties: {
                id: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_option_ID),
                },
                name: {
                    type: 'string',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_option_name),
                },
                color: {
                    type: 'object',
                    title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_option_color),
                    properties: {
                        name: {
                            type: 'string',
                            title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_option_color_names),
                        },
                        value: {
                            type: 'string',
                            title: (0, i18n_1.t)(i18n_1.Strings.robot_variables_join_option_color_values),
                        }
                    }
                },
            }
        };
    }
    get acceptFilterOperators() {
        return [
            view_types_1.FOperator.Is,
            view_types_1.FOperator.IsNot,
            view_types_1.FOperator.Contains,
            view_types_1.FOperator.DoesNotContain,
            view_types_1.FOperator.IsEmpty,
            view_types_1.FOperator.IsNotEmpty,
            view_types_1.FOperator.IsRepeat,
        ];
    }
    defaultValueForCondition(condition) {
        const { operator, value } = condition;
        if (operator === view_types_1.FOperator.Is || operator === view_types_1.FOperator.Contains) {
            // only one value will auto fill
            if (value && value.length === 1 && value[0] && this.validate(value[0])) {
                return value[0];
            }
            return null;
        }
        return null;
    }
    cellValueToStdValue(val) {
        const stdVal = {
            sourceType: field_types_1.FieldType.SingleSelect,
            data: [],
        };
        if (val) {
            const option = (0, lodash_1.find)(this.field.property.options, opt => {
                return opt.id === val;
            });
            if (!option) {
                console.error(`option: ${val} is not in field property!`, this.field.property);
                return stdVal;
            }
            stdVal.data.push({
                text: option.name,
                id: option.id,
            });
        }
        return stdVal;
    }
    stdValueToCellValue(stdValue) {
        // filter empty text
        const data = stdValue.data.filter(d => d.text);
        if (data.length === 0) {
            return null;
        }
        const currentOptionText = data[0].text;
        const option = this.field.property.options.find(opt => opt.name === currentOptionText);
        return option ? option.id : null;
    }
    cellValueToString(cellValue) {
        if (!cellValue) {
            return null;
        }
        const value = this.findOptionById(cellValue);
        return value ? value.name : null;
    }
    validate(value) {
        return (0, lodash_1.isString)(value) && this.field.property.options.some(option => option.id === value);
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        if (operator === view_types_1.FOperator.IsEmpty) {
            return cellValue == null;
        }
        if (operator === view_types_1.FOperator.IsNotEmpty) {
            return cellValue != null;
        }
        const [filterValue] = conditionValue;
        switch (operator) {
            case view_types_1.FOperator.Is: {
                return cellValue === filterValue;
            }
            case view_types_1.FOperator.IsNot: {
                return cellValue !== filterValue;
            }
            case view_types_1.FOperator.Contains: {
                return conditionValue.some(value => value === cellValue);
            }
            case view_types_1.FOperator.DoesNotContain: {
                return !conditionValue.some(value => value === cellValue);
            }
            default: {
                return super.isMeetFilter(operator, cellValue, conditionValue);
            }
        }
    }
    cellValueToApiStandardValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        if (!cellValue) {
            return null;
        }
        const value = this.findOptionById(cellValue);
        if (!value) {
            return null;
        }
        // FIXME: here's color need to transfer
        return Object.assign(Object.assign({}, value), { color: (0, color_1.getFieldOptionColor)(value.color) });
    }
    openWriteValueToCellValue(openWriteValue) {
        var _a;
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        const fieldValue = typeof openWriteValue === 'string' ? openWriteValue : (openWriteValue.id || openWriteValue.name);
        const option = this.field.property.options.find(option => ((0, common_select_field_1.isOptionId)(fieldValue) && fieldValue === option.id || fieldValue === option.name));
        return (_a = option === null || option === void 0 ? void 0 : option.id) !== null && _a !== void 0 ? _a : null;
    }
    validateUpdateOpenProperty(updateProperty, effectOption) {
        const result = SingleSelectField.openUpdatePropertySchema.validate(updateProperty);
        if (result.error) {
            return result;
        }
        return this.validateWriteOpenOptionsEffect(updateProperty, effectOption);
    }
    filterValueToOpenFilterValue(value) {
        if (Array.isArray(value)) {
            const _value = value.filter(v => this.findOptionById(v));
            return _value.length ? _value[0] : null;
        }
        return null;
    }
    openFilterValueToFilterValue(value) {
        if (value) {
            return this.findOptionById(value) ? [value] : null;
        }
        return null;
    }
    validateOpenFilterValue(value) {
        return SingleSelectField.validateOpenFilterSchema.validate(value);
    }
}
exports.SingleSelectField = SingleSelectField;
SingleSelectField.cellValueSchema = joi_1.default.custom((optionId, helpers) => {
    var _a;
    const field = (_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['field'];
    if (!(0, lodash_1.isString)(optionId)) {
        return helpers.message({ en: 'option is not string' });
    }
    if (!field.property.options.some(option => option.id === optionId)) {
        return helpers.message({ en: 'option not exist field property' });
    }
    return optionId;
}).allow(null).required();
SingleSelectField.openWriteValueSchema = joi_1.default.custom((owv, helpers) => {
    var _a;
    const field = (_a = helpers.prefs['context']) === null || _a === void 0 ? void 0 : _a['field'];
    const optionIdOrName = (0, lodash_1.isString)(owv) ? owv : (owv.id || owv.name);
    if (!optionIdOrName) {
        return helpers.error('value format error');
    }
    if (!field.property.options.some(option => option.id === optionIdOrName || option.name === optionIdOrName)) {
        return helpers.error('option not exist field property');
    }
    return optionIdOrName;
}).allow(null).required();
SingleSelectField.openUpdatePropertySchema = joi_1.default.object({
    options: joi_1.default.array().items(joi_1.default.object({
        id: joi_1.default.string(),
        name: joi_1.default.string().required(),
        color: joi_1.default.string(),
    })).required(),
    defaultValue: joi_1.default.string()
}).required();
SingleSelectField.validateOpenFilterSchema = joi_1.default.string().allow(null);


/***/ }),

/***/ 80873:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SingleTextField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const text_base_field_1 = __webpack_require__(36722);
const field_types_1 = __webpack_require__(80360);
const model_1 = __webpack_require__(61116);
class SingleTextField extends text_base_field_1.TextBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static defaultProperty() {
        return {};
    }
    get apiMetaProperty() {
        return {
            defaultValue: this.field.property.defaultValue,
        };
    }
    validateProperty() {
        return SingleTextField.propertySchema.validate(this.field.property);
    }
    defaultValue() {
        const defaultValue = this.field.property.defaultValue;
        if (!defaultValue || !defaultValue.trim().length) {
            return null;
        }
        return [{ type: field_types_1.SegmentType.Text, text: defaultValue }];
    }
    static createDefault(fieldMap) {
        return {
            id: model_1.DatasheetActions.getNewFieldId(fieldMap),
            name: model_1.DatasheetActions.getDefaultFieldName(fieldMap),
            type: field_types_1.FieldType.SingleText,
            property: this.defaultProperty(),
        };
    }
    /**
     * @description Convert multi-line text to single-line text, you need to replace the newline character with a space, other logic remains unchanged
     * @param {IStandardValue} stdField
     * @returns {(ISegment[] | null)}
     * @memberof SingleTextField
     */
    stdValueToCellValue(stdField) {
        const { data, sourceType } = stdField;
        if (data.length === 0) {
            return null;
        }
        if (sourceType === field_types_1.FieldType.Text) {
            return data.map(d => {
                return {
                    type: d.type || field_types_1.SegmentType.Text,
                    text: d.text.replace(/\n/g, ' '),
                };
            });
        }
        return super.stdValueToCellValue(stdField);
    }
    get openFieldProperty() {
        const { defaultValue } = this.field.property;
        return { defaultValue };
    }
    validateUpdateOpenProperty(property) {
        return SingleTextField.propertySchema.validate(property);
    }
}
exports.SingleTextField = SingleTextField;
SingleTextField.propertySchema = joi_1.default.object({
    defaultValue: joi_1.default.string().allow('')
});


/***/ }),

/***/ 90519:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getFieldResultByStatType = exports.getStatTypeList = exports.StatTranslate = exports.StatType = void 0;
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
const store_1 = __webpack_require__(56791);
const field_types_1 = __webpack_require__(80360);
const number_1 = __webpack_require__(44188);
const field_1 = __webpack_require__(55808);
var StatType;
(function (StatType) {
    StatType[StatType["None"] = 0] = "None";
    StatType[StatType["CountAll"] = 1] = "CountAll";
    StatType[StatType["Empty"] = 2] = "Empty";
    StatType[StatType["Filled"] = 3] = "Filled";
    StatType[StatType["Unique"] = 4] = "Unique";
    StatType[StatType["PercentEmpty"] = 5] = "PercentEmpty";
    StatType[StatType["PercentFilled"] = 6] = "PercentFilled";
    StatType[StatType["PercentUnique"] = 7] = "PercentUnique";
    StatType[StatType["Sum"] = 8] = "Sum";
    StatType[StatType["Average"] = 9] = "Average";
    StatType[StatType["Max"] = 10] = "Max";
    StatType[StatType["Min"] = 11] = "Min";
    // LatestDate = 10,
    // EarliestDate = 11,
    StatType[StatType["DateRangeOfDays"] = 12] = "DateRangeOfDays";
    StatType[StatType["DateRangeOfMonths"] = 13] = "DateRangeOfMonths";
    // TotalAttachmentSize = 14,
    // CountAttachments = 15,
    StatType[StatType["Checked"] = 14] = "Checked";
    StatType[StatType["UnChecked"] = 15] = "UnChecked";
    StatType[StatType["PercentChecked"] = 16] = "PercentChecked";
    StatType[StatType["PercentUnChecked"] = 17] = "PercentUnChecked";
})(StatType = exports.StatType || (exports.StatType = {}));
exports.StatTranslate = {
    [StatType.None]: (0, i18n_1.t)(i18n_1.Strings.stat_none),
    [StatType.CountAll]: (0, i18n_1.t)(i18n_1.Strings.stat_count_all),
    [StatType.Empty]: (0, i18n_1.t)(i18n_1.Strings.stat_empty),
    [StatType.Filled]: (0, i18n_1.t)(i18n_1.Strings.stat_fill),
    [StatType.Unique]: (0, i18n_1.t)(i18n_1.Strings.stat_uniqe),
    [StatType.PercentEmpty]: (0, i18n_1.t)(i18n_1.Strings.stat_percent_empty),
    [StatType.PercentFilled]: (0, i18n_1.t)(i18n_1.Strings.stat_percent_filled),
    [StatType.PercentUnique]: (0, i18n_1.t)(i18n_1.Strings.stat_percent_unique),
    [StatType.Sum]: (0, i18n_1.t)(i18n_1.Strings.stat_sum),
    [StatType.Average]: (0, i18n_1.t)(i18n_1.Strings.stat_average),
    [StatType.Max]: (0, i18n_1.t)(i18n_1.Strings.stat_max),
    [StatType.Min]: (0, i18n_1.t)(i18n_1.Strings.stat_min),
    [StatType.DateRangeOfDays]: (0, i18n_1.t)(i18n_1.Strings.stat_date_range_of_days),
    [StatType.DateRangeOfMonths]: (0, i18n_1.t)(i18n_1.Strings.stat_date_range_of_months),
    [StatType.Checked]: (0, i18n_1.t)(i18n_1.Strings.stat_checked),
    [StatType.UnChecked]: (0, i18n_1.t)(i18n_1.Strings.stat_un_checked),
    [StatType.PercentChecked]: (0, i18n_1.t)(i18n_1.Strings.stat_percent_checked),
    [StatType.PercentUnChecked]: (0, i18n_1.t)(i18n_1.Strings.stat_percent_un_checked),
};
const getStatTypeList = (field, state) => {
    return field_1.Field.bindContext(field, state).statTypeList;
};
exports.getStatTypeList = getStatTypeList;
const statCountAll = (records) => {
    return records.length;
};
const statEmpty = (cellValues) => {
    return cellValues.filter(cellValue => {
        return cellValue == null || (Array.isArray(cellValue) && !cellValue.length);
    }).length;
};
const statFilled = (cellValues) => {
    return cellValues.filter(cellValue => {
        return Array.isArray(cellValue) ? cellValue.length : (cellValue != null);
    }).length;
};
const statUnique = (cellValues, _field) => {
    const _cellValue = cellValues.map(item => {
        return JSON.stringify(item);
    });
    const result = (0, lodash_1.uniq)(_cellValue).length;
    return result;
};
// numeric field calculation
const statSum = (cellValues, field, state) => {
    let res = (0, lodash_1.sum)(cellValues) || 0;
    const instance = field_1.Field.bindContext(field, state);
    if (instance.basicValueType === field_types_1.BasicValueType.Array) {
        res = [res];
    }
    return instance.cellValueToString(res);
};
// numeric field calculation
const statAverage = (cellValues, field, state) => {
    // cell is empty, not counted in total
    const total = cellValues.filter(cv => typeof cv === 'number').length;
    let res = (0, lodash_1.sum)(cellValues) / total;
    if (field.type === field_types_1.FieldType.Rating) {
        return res.toFixed(2).toString();
    }
    const instance = field_1.Field.bindContext(field, state);
    if (instance.basicValueType === field_types_1.BasicValueType.Array) {
        res = [res];
    }
    return instance.cellValueToString(res);
};
// Number & date field calculation
const statMax = (cellValues, field, state) => {
    let res = cellValues.reduce((accumulator, cellValue) => Math.max(accumulator, typeof cellValue === 'number' ? cellValue : -Infinity), -Infinity);
    if (!isFinite(res))
        return Infinity;
    const instance = field_1.Field.bindContext(field, state);
    if (instance.basicValueType === field_types_1.BasicValueType.Array)
        res = [res];
    return instance.cellValueToString(res);
};
// Number & date field calculation
const statMin = (cellValues, field, state) => {
    let res = cellValues.reduce((accumulator, cellValue) => Math.min(accumulator, typeof cellValue === 'number' ? cellValue : Infinity), Infinity);
    if (!isFinite(res))
        return -Infinity;
    const instance = field_1.Field.bindContext(field, state);
    if (instance.basicValueType === field_types_1.BasicValueType.Array)
        res = [res];
    return instance.cellValueToString(res);
};
const statDateRangeOfDays = (cellValues) => {
    const max = cellValues.reduce((accumulator, cellValue) => Math.max(accumulator, cellValue || -Infinity), -Infinity);
    const min = cellValues.reduce((accumulator, cellValue) => Math.min(accumulator, cellValue || Infinity), Infinity);
    if (!isFinite(min))
        return 0;
    const rangeDayTime = max - min;
    return Math.floor(rangeDayTime / (60 * 60 * 24 * 1000));
};
const statDateRangeOfMonths = (cellValues) => {
    const max = cellValues.reduce((accumulator, cellValue) => Math.max(accumulator, cellValue || -Infinity), -Infinity);
    const min = cellValues.reduce((accumulator, cellValue) => Math.min(accumulator, cellValue || Infinity), Infinity);
    if (!isFinite(min))
        return 0;
    const maxDate = new Date(max);
    const minDate = new Date(min);
    let year = maxDate.getFullYear() - minDate.getFullYear();
    let month = maxDate.getMonth() - minDate.getMonth();
    let date = maxDate.getDate() - minDate.getDate();
    let hours = maxDate.getHours() - minDate.getHours();
    let minutes = maxDate.getMinutes() - minDate.getMinutes();
    let seconds = maxDate.getSeconds() - minDate.getSeconds();
    const milliSeconds = maxDate.getMilliseconds() - minDate.getMilliseconds();
    milliSeconds < 0 && seconds--;
    seconds < 0 && minutes--;
    minutes < 0 && hours--;
    hours < 0 && date--;
    date < 0 && month--;
    if (month < 0) {
        month += 12;
        year--;
    }
    return year * 12 + month;
};
/**
 * Get column result based on calculation type
 */
const getFieldResultByStatType = (statType, records, field, snapshot, state) => {
    let cellValues = records.map(recId => {
        return store_1.Selectors.getCellValue(state, snapshot, recId, field.id);
    });
    const instance = field_1.Field.bindContext(field, state);
    const shouldFlat = instance.isComputed && instance.basicValueType === field_types_1.BasicValueType.Array;
    switch (statType) {
        case StatType.CountAll:
            return statCountAll(records);
        case StatType.Empty:
        case StatType.UnChecked:
            return statEmpty(cellValues);
        case StatType.Filled:
        case StatType.Checked:
            return statFilled(cellValues);
        case StatType.Unique:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statUnique(cellValues, field);
        case StatType.PercentEmpty:
        case StatType.PercentUnChecked:
            return (0, number_1.toFixed)(statEmpty(cellValues) * 100 / records.length) + '%';
        case StatType.PercentFilled:
        case StatType.PercentChecked:
            return (0, number_1.toFixed)(statFilled(cellValues) * 100 / records.length) + '%';
        case StatType.PercentUnique:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return (0, number_1.toFixed)(statUnique(cellValues, field) * 100 / (shouldFlat ? cellValues.length : records.length)) + '%';
        case StatType.Sum:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statSum(cellValues, field, state);
        case StatType.Average:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statAverage(cellValues, field, state);
        case StatType.Max:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statMax(cellValues, field, state);
        case StatType.Min:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statMin(cellValues, field, state);
        case StatType.DateRangeOfDays:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statDateRangeOfDays(cellValues);
        case StatType.DateRangeOfMonths:
            if (shouldFlat)
                cellValues = cellValues.flat(1);
            return statDateRangeOfMonths(cellValues);
        default: {
            return null;
        }
    }
};
exports.getFieldResultByStatType = getFieldResultByStatType;


/***/ }),

/***/ 36722:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextBaseField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
const utils_2 = __webpack_require__(26854);
const field_1 = __webpack_require__(55808);
const stat_1 = __webpack_require__(90519);
class TextBaseField extends field_1.Field {
    validateCellValue(cv) {
        return TextBaseField.cellValueSchema.validate(cv);
    }
    validateOpenWriteValue(owv) {
        return TextBaseField.openWriteValueSchema.validate(owv);
    }
    validateProperty() {
        return TextBaseField.propertySchema.validate(this.field.property);
    }
    get apiMetaProperty() {
        return null;
    }
    get openValueJsonSchema() {
        return {
            type: 'string',
            title: this.field.name,
        };
    }
    showFOperatorDesc(type) {
        return types_1.FOperatorDescMap[type];
    }
    get acceptFilterOperators() {
        return TextBaseField._acceptFilterOperators;
    }
    get basicValueType() {
        return field_types_1.BasicValueType.String;
    }
    cellValueToStdValue(cellValue) {
        const stdValue = {
            sourceType: field_types_1.FieldType.Text,
            data: [],
        };
        if (cellValue) {
            stdValue.data = cellValue.map(seg => (0, utils_2.fastCloneDeep)(seg));
        }
        return stdValue;
    }
    stdValueToCellValue(stdField) {
        const { data, sourceType } = stdField;
        if (data.length === 0) {
            return null;
        }
        let segments;
        if ([field_types_1.FieldType.MultiSelect, field_types_1.FieldType.Link, field_types_1.FieldType.Attachment, field_types_1.FieldType.Member].includes(sourceType)) {
            segments = [{ type: field_types_1.SegmentType.Text, text: data.map(d => d.text).join(', ') }];
        }
        else if (sourceType === field_types_1.FieldType.Text) {
            segments = data.map(d => (Object.assign({ type: d.type || field_types_1.SegmentType.Text }, d)));
        }
        else {
            segments = [{ type: field_types_1.SegmentType.Text, text: data.map(d => d.text).join('') }];
        }
        if (segments.length === 0 || segments.every(segment => segment.text === '')) {
            return null;
        }
        return segments;
    }
    validate(value) {
        if (Array.isArray(value)) {
            return value.every(segment => {
                return segment != null && (0, lodash_1.isNumber)(segment.type) && (0, lodash_1.isString)(segment.text);
            });
        }
        return false;
    }
    defaultValueForCondition(condition) {
        // There is no default padding logic for text type filtering\
        const { value } = condition;
        return value ? value.map(item => ({ text: item, type: field_types_1.SegmentType.Text })) : null;
    }
    cellValueToString(cellValue) {
        if (cellValue == null) {
            return null;
        }
        const cv = [cellValue].flat();
        return cv.map(seg => seg.text).join('') || null;
    }
    static stringInclude(str, searchStr) {
        return str.toLowerCase().includes(searchStr.trim().toLowerCase());
    }
    // The formatted string is directly passed in here
    static _isMeetFilter(operator, cellText, conditionValue, optFn) {
        if (operator === types_1.FOperator.IsEmpty) {
            return cellText == null;
        }
        if (operator === types_1.FOperator.IsNotEmpty) {
            return cellText != null;
        }
        if (conditionValue === null) {
            return true;
        }
        const [filterValue] = conditionValue;
        const { containsFn, defaultFn, doesNotContainFn } = optFn || {};
        switch (operator) {
            case types_1.FOperator.Is: {
                return cellText != null && cellText.trim().toLowerCase() === filterValue.trim().toLowerCase();
            }
            case types_1.FOperator.IsNot: {
                return cellText == null || cellText.trim().toLowerCase() !== filterValue.trim().toLowerCase();
            }
            case types_1.FOperator.Contains: {
                if (containsFn) {
                    return containsFn(filterValue);
                }
                return cellText != null && TextBaseField.stringInclude(cellText, filterValue);
            }
            case types_1.FOperator.DoesNotContain: {
                if (doesNotContainFn) {
                    return doesNotContainFn(filterValue);
                }
                return cellText == null || !TextBaseField.stringInclude(cellText, filterValue);
            }
            default: {
                if (defaultFn) {
                    return defaultFn();
                }
                return false;
            }
        }
    }
    eq(cv1, cv2) {
        return this.cellValueToString(cv1) === this.cellValueToString(cv2);
    }
    isMeetFilter(operator, cellValue, conditionValue) {
        const cellText = this.cellValueToString(cellValue);
        return TextBaseField._isMeetFilter(operator, cellText, conditionValue, {
            containsFn: (filterValue) => cellText != null && this.stringInclude(cellText, filterValue),
            doesNotContainFn: (filterValue) => cellText == null || !this.stringInclude(cellText, filterValue),
            defaultFn: () => super.isMeetFilter(operator, cellValue, conditionValue)
        });
    }
    cellValueToApiStandardValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToApiStringValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    cellValueToOpenValue(cellValue) {
        return this.cellValueToString(cellValue);
    }
    openWriteValueToCellValue(openWriteValue) {
        if ((0, utils_1.isNullValue)(openWriteValue)) {
            return null;
        }
        return (0, utils_2.string2Segment)(openWriteValue);
    }
    validateAddOpenFieldProperty(updateProperty) {
        if (this.field.type !== field_types_1.FieldType.SingleText && updateProperty === null) {
            return { error: undefined, value: null };
        }
        return this.validateUpdateOpenProperty(updateProperty);
    }
    static _filterValueToOpenFilterValue(value) {
        var _a;
        return (_a = value === null || value === void 0 ? void 0 : value[0]) !== null && _a !== void 0 ? _a : null;
    }
    filterValueToOpenFilterValue(value) {
        return TextBaseField._filterValueToOpenFilterValue(value);
    }
    static _openFilterValueToFilterValue(value) {
        return value === null ? null : [value];
    }
    openFilterValueToFilterValue(value) {
        return TextBaseField._openFilterValueToFilterValue(value);
    }
    static _validateOpenFilterValue(value) {
        return TextBaseField.validateOpenFilterSchema.validate(value);
    }
    validateOpenFilterValue(value) {
        return TextBaseField._validateOpenFilterValue(value);
    }
}
exports.TextBaseField = TextBaseField;
TextBaseField._statTypeList = [
    stat_1.StatType.None,
    stat_1.StatType.CountAll,
    stat_1.StatType.Empty,
    stat_1.StatType.Filled,
    stat_1.StatType.Unique,
    stat_1.StatType.PercentEmpty,
    stat_1.StatType.PercentFilled,
    stat_1.StatType.PercentUnique,
];
TextBaseField._acceptFilterOperators = [
    types_1.FOperator.Is,
    types_1.FOperator.IsNot,
    types_1.FOperator.Contains,
    types_1.FOperator.DoesNotContain,
    types_1.FOperator.IsEmpty,
    types_1.FOperator.IsNotEmpty,
    types_1.FOperator.IsRepeat,
];
TextBaseField.cellValueSchema = joi_1.default.array().items(joi_1.default.object({
    text: joi_1.default.string().allow('').required(),
    type: joi_1.default.number().required(),
    link: joi_1.default.string(),
}).required()).allow(null).required();
TextBaseField.openWriteValueSchema = joi_1.default.string().allow(null).required();
TextBaseField.propertySchema = joi_1.default.equal(null);
TextBaseField.validateOpenFilterSchema = joi_1.default.string().allow(null);


/***/ }),

/***/ 55842:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TextField = void 0;
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const text_base_field_1 = __webpack_require__(36722);
class TextField extends text_base_field_1.TextBaseField {
    static defaultProperty() {
        return null;
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            type: field_types_1.FieldType.Text,
            property: this.defaultProperty(),
        };
    }
}
exports.TextField = TextField;


/***/ }),

/***/ 25757:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.URLField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_types_1 = __webpack_require__(80360);
const datasheet_1 = __webpack_require__(55384);
const text_base_field_1 = __webpack_require__(36722);
class URLField extends text_base_field_1.TextBaseField {
    constructor(field, state) {
        super(field, state);
        this.field = field;
        this.state = state;
    }
    static defaultProperty() {
        return {
            isRecogURLFlag: false,
        };
    }
    cellValueToApiStringValue(cellValue) {
        var _a;
        if (cellValue === null) {
            return '';
        }
        const cv = [cellValue].flat();
        if (this.field.type === field_types_1.FieldType.URL && ((_a = this.field.property) === null || _a === void 0 ? void 0 : _a.isRecogURLFlag)) {
            return cv.map(seg => (seg === null || seg === void 0 ? void 0 : seg.title) || (seg === null || seg === void 0 ? void 0 : seg.text) || '').join('') || null;
        }
        return cv.map(seg => seg.text).join('') || null;
    }
    // Do not rewrite cellValueToString directly, it will cause problems with the value of the grouped fusion API. 
    // Judging from the outside is to display cellValueToString or cellValueToURLTitle
    cellValueToURLTitle(cellValue) {
        if (cellValue === null) {
            return '';
        }
        const cv = [cellValue].flat();
        return cv.map(seg => (seg === null || seg === void 0 ? void 0 : seg.title) || (seg === null || seg === void 0 ? void 0 : seg.text)).join('') || null;
    }
    validateProperty() {
        return URLField.propertySchema.validate(this.field.property);
    }
    validateCellValue(cv) {
        return URLField.cellValueSchema.validate(cv);
    }
    static createDefault(fieldMap) {
        return {
            id: datasheet_1.DatasheetActions.getNewFieldId(fieldMap),
            name: datasheet_1.DatasheetActions.getDefaultFieldName(fieldMap),
            type: field_types_1.FieldType.URL,
            property: this.defaultProperty(),
        };
    }
}
exports.URLField = URLField;
URLField.cellValueSchema = joi_1.default.array().items(joi_1.default.object({
    text: joi_1.default.string().allow('').required(),
    type: joi_1.default.number().required(),
    link: joi_1.default.string(),
    title: joi_1.default.string(),
    favicon: joi_1.default.string(),
}).required()).allow(null).required();
URLField.propertySchema = joi_1.default.object({
    isRecogURLFlag: joi_1.default.boolean(),
});


/***/ }),

/***/ 62903:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joiErrorResult = exports.enumKeyToArray = exports.enumToArray = exports.computedFormattingStr = exports.computedFormatting = exports.datasheetIdString = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const types_1 = __webpack_require__(73578);
const datasheetIdString = () => joi_1.default.string().pattern(/^dst.+/, 'datasheetId');
exports.datasheetIdString = datasheetIdString;
const computedFormatting = () => joi_1.default.allow(joi_1.default.object({
    dateFormat: joi_1.default.valid(...enumToArray(types_1.DateFormat)),
    timeFormat: joi_1.default.valid(...enumToArray(types_1.TimeFormat)),
    includeTime: joi_1.default.boolean(),
}), joi_1.default.object({
    formatType: joi_1.default.valid(...enumToArray(types_1.SymbolAlign)),
    precision: joi_1.default.number().integer().min(0).max(10),
    symbol: joi_1.default.string(),
    commaStyle: joi_1.default.string(),
}));
exports.computedFormatting = computedFormatting;
const computedFormattingStr = () => joi_1.default.allow(joi_1.default.object({
    dateFormat: joi_1.default.valid(...enumKeyToArray(types_1.DateFormat)),
    timeFormat: joi_1.default.valid(...enumKeyToArray(types_1.TimeFormat)),
    includeTime: joi_1.default.boolean(),
}), joi_1.default.object({
    precision: joi_1.default.number().integer().min(0).max(10),
    symbol: joi_1.default.string(),
    commaStyle: joi_1.default.string(),
}));
exports.computedFormattingStr = computedFormattingStr;
const stringIsNumber = (value) => isNaN(Number(value)) === false;
function enumToArray(en) {
    const keys = Object.keys(en).filter(k => !stringIsNumber(k));
    return keys.map(k => en[k]);
}
exports.enumToArray = enumToArray;
function enumKeyToArray(en) {
    return Object.keys(en);
}
exports.enumKeyToArray = enumKeyToArray;
function joiErrorResult(message, value) {
    return {
        error: { message },
        value
    };
}
exports.joiErrorResult = joiErrorResult;


/***/ }),

/***/ 54944:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DeniedField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_1 = __webpack_require__(55808);
const field_types_1 = __webpack_require__(80360);
class DeniedField extends field_1.Field {
    constructor() {
        super(...arguments);
        this.acceptFilterOperators = [];
    }
    get basicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get apiMetaProperty() {
        return null;
    }
    get openValueJsonSchema() {
        return {
            title: this.field.name,
            type: 'string'
        };
    }
    static defaultProperty() {
        return null;
    }
    validateProperty() {
        return DeniedField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return this.validateProperty();
    }
    validateOpenWriteValue() {
        return this.validateProperty();
    }
    cellValueToStdValue(_cellValue) {
        return {
            sourceType: this.field.type,
            data: [],
        };
    }
    stdValueToCellValue(_stdValue) {
        return null;
    }
    recordEditable() {
        return false;
    }
    validate(_value) {
        return false;
    }
    cellValueToString(_cellValue) {
        return null;
    }
    defaultValueForCondition(_condition) {
        return null;
    }
    cellValueToApiStandardValue(_cellValue) {
        return null;
    }
    cellValueToApiStringValue(_cellValue) {
        return null;
    }
    cellValueToOpenValue(_cellValue) {
        return null;
    }
    openWriteValueToCellValue(_openWriteValue) {
        return null;
    }
}
exports.DeniedField = DeniedField;
DeniedField.propertySchema = joi_1.default.equal(null);


/***/ }),

/***/ 61902:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(54944), exports);
__exportStar(__webpack_require__(25035), exports);


/***/ }),

/***/ 25035:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NotSupportField = void 0;
const joi_1 = __importDefault(__webpack_require__(48506));
const field_1 = __webpack_require__(55808);
const field_types_1 = __webpack_require__(80360);
class NotSupportField extends field_1.Field {
    constructor() {
        super(...arguments);
        this.acceptFilterOperators = [];
    }
    get basicValueType() {
        return field_types_1.BasicValueType.String;
    }
    get apiMetaProperty() {
        return null;
    }
    get openValueJsonSchema() {
        return {
            title: this.field.name,
            type: 'string',
        };
    }
    static defaultProperty() {
        return null;
    }
    validateProperty() {
        return NotSupportField.propertySchema.validate(this.field.property);
    }
    validateCellValue() {
        return this.validateProperty();
    }
    validateOpenWriteValue() {
        return this.validateProperty();
    }
    cellValueToStdValue(_cellValue) {
        return {
            sourceType: this.field.type,
            data: [],
        };
    }
    stdValueToCellValue(_stdValue) {
        return null;
    }
    recordEditable() {
        return false;
    }
    validate(_value) {
        return false;
    }
    cellValueToString(_cellValue) {
        return null;
    }
    defaultValueForCondition(_condition) {
        return null;
    }
    cellValueToApiStandardValue(_cellValue) {
        return null;
    }
    cellValueToApiStringValue(_cellValue) {
        return null;
    }
    cellValueToOpenValue(_cellValue) {
        return null;
    }
    openWriteValueToCellValue(_openWriteValue) {
        return null;
    }
}
exports.NotSupportField = NotSupportField;
NotSupportField.propertySchema = joi_1.default.equal(null);


/***/ }),

/***/ 35729:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.parseFilterExpressByOpenFilter = exports.parseOpenFilterByExpress = exports.parseInnerFilter = exports.parseOpenFilter = exports.validateOpenFilter = void 0;
const view_types_1 = __webpack_require__(88471);
const utils_1 = __webpack_require__(46214);
const field_1 = __webpack_require__(46559);
const utils_2 = __webpack_require__(26854);
const joi_1 = __importDefault(__webpack_require__(48506));
const validate_schema_1 = __webpack_require__(62903);
const types_1 = __webpack_require__(73578);
const interface_1 = __webpack_require__(36736);
const lodash_1 = __webpack_require__(46517);
const getConjunctionsByGroup = (conditionGroup) => {
    const conjunctions = Object.keys(conditionGroup);
    if (conjunctions.length > 1) {
        throw new Error('Only the or or or and operator is supported');
    }
    if (conjunctions.length === 0) {
        return null;
    }
    return conjunctions;
};
const parseConditionsOrGroupBase = (conditions, parseConditionGroup, parseCondition) => {
    return conditions.map((item) => {
        if (Object.keys(item).some(v => (0, validate_schema_1.enumToArray)(view_types_1.FilterConjunction).includes(v))) {
            return parseConditionGroup(item);
        }
        return parseCondition(item);
    }).filter((v) => !(0, lodash_1.isEmpty)(v));
};
/**
 * Verify that the openFilter schema conforms to the convention.
 * Only the whole schema is checked for parsing, the value of the corresponding filter is not checked, it is parsed to the value.
 * @param filterInfo
 * @param canGroup Switch to support filter groups.
 */
function validateOpenFilter(filterInfo, canGroup = false) {
    const validateConditionSchema = (condition) => {
        return joi_1.default.custom((value, helper) => {
            if (Object.prototype.toString.call(value) !== '[object Object]') {
                return helper.error('Object invalid');
            }
            const { fieldKey } = value, valueObj = __rest(value, ["fieldKey"]);
            if (!fieldKey || typeof fieldKey !== 'string') {
                return helper.error('fieldKey does not exist');
            }
            // Detects if it is an object with a fieldType of key.
            const fieldTypeArray = (0, validate_schema_1.enumToArray)(types_1.APIMetaFieldType);
            const fieldType = Object.keys(valueObj).find(i => fieldTypeArray.includes(i));
            if (!fieldType) {
                return helper.error('No fieldType exists');
            }
            // Check if it is an object with FOperator as key.
            const opObj = valueObj[fieldType];
            const opArray = (0, validate_schema_1.enumToArray)(view_types_1.FOperator);
            const op = Object.keys(opObj).find(i => opArray.includes(i));
            if (!op) {
                return helper.error('No operator exists');
            }
            return value;
        }).validate(condition);
    };
    const validateConditionGroupSchema = (conditionGroup) => {
        return joi_1.default.custom((value, helper) => {
            if (Object.prototype.toString.call(value) !== '[object Object]') {
                return helper.error('Object invalid');
            }
            const keys = Object.keys(value);
            if (keys.length > 1) {
                return helper.error('Only the or or and operator is supported');
            }
            const fcArray = (0, validate_schema_1.enumToArray)(view_types_1.FilterConjunction);
            const filterConjunction = Object.keys(value).find(i => fcArray.includes(i));
            if (!filterConjunction) {
                return value;
            }
            const conditionGroupValue = value[filterConjunction];
            if (!conditionGroupValue) {
                return value;
            }
            if (!Array.isArray(conditionGroupValue)) {
                return helper.error('Array invalid');
            }
            let errorMessage;
            const validateConditionGroupValueSuccess = conditionGroupValue.every(item => {
                const isGroup = Object.prototype.toString.call(value) === '[object Object]' && Object.keys(item).every(k => fcArray.includes(k));
                // Temporarily block out group.
                if (isGroup && !canGroup) {
                    errorMessage = 'Not support group condition';
                    return false;
                }
                const { error } = isGroup ? validateConditionGroupSchema(item) : validateConditionSchema(item);
                errorMessage = error === null || error === void 0 ? void 0 : error.message;
                return !error;
            });
            if (!validateConditionGroupValueSuccess && errorMessage) {
                return helper.error(errorMessage);
            }
            return value;
        }).validate(conditionGroup);
    };
    return validateConditionGroupSchema(filterInfo);
}
exports.validateOpenFilter = validateOpenFilter;
/**
 * Generate external filter structures.
 * @param meta
 * @param viewId
 * @param state
 */
function parseOpenFilter(meta, viewId, state) {
    const view = meta.views.find(v => v.id === viewId);
    if (!view || !view.filterInfo) {
        return {};
    }
    const { fieldMap } = meta;
    const parseCondition = (condition) => {
        const { fieldId, fieldType, operator, value } = condition;
        const _field = fieldMap[fieldId];
        if (!_field) {
            return {};
        }
        const field = field_1.Field.bindContext(_field, state);
        // Filter out
        if (operator === view_types_1.FOperator.IsRepeat) {
            return {};
        }
        // Check operator, filter for non-existent operators.
        if (!field.acceptFilterOperators.includes(operator)) {
            return {};
        }
        return {
            fieldKey: fieldId,
            [(0, utils_1.getFieldTypeString)(fieldType)]: {
                [operator]: field.filterValueToOpenFilterValue(value)
            }
        };
    };
    const parseConditionGroup = (conditionGroup) => {
        const { conditions, conjunction } = conditionGroup;
        return {
            [conjunction]: conditions.map(item => {
                // TODO If it's a filter group, you only need to determine whether
                // the item is a filter condition or a filter group, and if it's a filter group, 
                // recursively parseConditionGroup.
                return parseCondition(item);
            }).filter(v => Object.keys(v).length > 0)
        };
    };
    return parseConditionGroup(view.filterInfo);
}
exports.parseOpenFilter = parseOpenFilter;
/**
 * Convert to internal filter structure.
 * @param filterInfo
 * @param context
 */
function parseInnerFilter(filterInfo, context) {
    const { fieldMap, state } = context;
    const exitIds = [];
    const parseCondition = (condition) => {
        const { fieldKey } = condition, valueMap = __rest(condition, ["fieldKey"]);
        const field = fieldMap[fieldKey];
        if (!field) {
            return;
        }
        const fieldBind = field_1.Field.bindContext(field, state);
        const conditionId = (0, utils_2.getNewId)(utils_2.IDPrefix.Condition, exitIds);
        const valueMapKey = (0, utils_1.getFieldTypeString)(field.type);
        const operator = Object.keys(valueMap[valueMapKey])[0];
        exitIds.push(conditionId);
        return {
            conditionId,
            fieldId: fieldKey,
            fieldType: field.type,
            operator,
            value: fieldBind.openFilterValueToFilterValue(valueMap[valueMapKey][operator])
        };
    };
    const parseConditionGroup = (conditionGroup) => {
        const conjunctions = getConjunctionsByGroup(conditionGroup);
        return conjunctions ? {
            conjunction: conjunctions[0],
            conditions: parseConditionsOrGroupBase(conditionGroup[conjunctions[0]], parseConditionGroup, parseCondition)
        } : null;
    };
    return parseConditionGroup(filterInfo);
}
exports.parseInnerFilter = parseInnerFilter;
/**
 * Converting expressions to external structures.
 * Expressions for filter components.
 * @param filterExpress
 * @param context
 */
function parseOpenFilterByExpress(filterExpress, context) {
    const { meta, state } = context;
    const { fieldMap } = meta;
    const parseCondition = (condition) => {
        var _a, _b;
        const { operator, operands } = condition;
        const fieldId = (_a = operands[0]) === null || _a === void 0 ? void 0 : _a.value;
        const value = (_b = operands[1]) === null || _b === void 0 ? void 0 : _b.value;
        const field = fieldMap[fieldId];
        if (!field) {
            return;
        }
        const fieldModel = field_1.Field.bindContext(field, state);
        // Check operator, filter for non-existent operators.
        if (!fieldModel.acceptFilterOperators.includes(operator)) {
            return {};
        }
        return {
            fieldKey: fieldId,
            [(0, utils_1.getFieldTypeString)(field.type)]: {
                [operator]: fieldModel.filterValueToOpenFilterValue(value)
            }
        };
    };
    const parseConditionGroup = (conditionGroup) => {
        if (!conditionGroup) {
            return {};
        }
        const { operator, operands } = conditionGroup;
        return {
            [operator]: operands.map((item) => {
                if ((0, validate_schema_1.enumToArray)(view_types_1.FilterConjunction).includes(item.value.operator)) {
                    return parseConditionGroup(item.value);
                }
                return parseCondition(item.value);
            }).filter((v) => Object.keys(v).length > 0)
        };
    };
    return parseConditionGroup(filterExpress.value);
}
exports.parseOpenFilterByExpress = parseOpenFilterByExpress;
/**
 * Converting external structures to expression structures.
 * @param filterInfo
 * @param context
 */
function parseFilterExpressByOpenFilter(filterInfo, context) {
    const { fieldMap, state } = context;
    const parseCondition = (condition) => {
        const { fieldKey } = condition, valueMap = __rest(condition, ["fieldKey"]);
        const field = fieldMap[fieldKey];
        if (!field) {
            return;
        }
        const fieldBind = field_1.Field.bindContext(field, state);
        const fieldType = Object.keys(valueMap)[0];
        if (!fieldType) {
            return;
        }
        const value = valueMap[fieldType];
        return {
            type: interface_1.OperandTypeEnums.Expression,
            value: {
                operator: Object.keys(value)[0],
                operands: [
                    {
                        type: interface_1.OperandTypeEnums.Literal,
                        value: field.id
                    },
                    {
                        type: interface_1.OperandTypeEnums.Literal,
                        value: fieldBind.openFilterValueToFilterValue(value[Object.keys(value)])
                    }
                ]
            }
        };
    };
    const parseConditionGroup = (conditionGroup) => {
        const conjunctions = getConjunctionsByGroup(conditionGroup);
        return conjunctions ? {
            type: interface_1.OperandTypeEnums.Expression,
            value: {
                operator: conjunctions[0],
                operands: parseConditionsOrGroupBase(conditionGroup[conjunctions[0]], parseConditionGroup, parseCondition)
            }
        } : null;
    };
    return parseConditionGroup(filterInfo);
}
exports.parseFilterExpressByOpenFilter = parseFilterExpressByOpenFilter;


/***/ }),

/***/ 48271:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FormAction = void 0;
const ot_1 = __webpack_require__(65315);
const lodash_1 = __webpack_require__(46517);
class FormAction {
    // update own properties
    static updatePropsAction(formProps, options) {
        const { partialProps } = options;
        const actions = [];
        for (const key in partialProps) {
            const oi = partialProps[key];
            const od = formProps[key];
            if (!(0, lodash_1.isEqual)(oi, od)) {
                actions.push({
                    n: ot_1.OTActionName.ObjectReplace,
                    p: ['formProps', key],
                    oi,
                    od,
                });
            }
        }
        return actions;
    }
}
exports.FormAction = FormAction;


/***/ }),

/***/ 61116:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(1870), exports);
__exportStar(__webpack_require__(55384), exports);
__exportStar(__webpack_require__(7637), exports);
__exportStar(__webpack_require__(36877), exports);
__exportStar(__webpack_require__(46559), exports);
__exportStar(__webpack_require__(63182), exports);
__exportStar(__webpack_require__(31923), exports);
__exportStar(__webpack_require__(58009), exports);
__exportStar(__webpack_require__(46214), exports);
__exportStar(__webpack_require__(84827), exports);
__exportStar(__webpack_require__(89085), exports);
__exportStar(__webpack_require__(37940), exports);
__exportStar(__webpack_require__(35729), exports);
__exportStar(__webpack_require__(87987), exports);


/***/ }),

/***/ 63182:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LinkedDataConformanceMaintainer = void 0;
const datasheet_1 = __webpack_require__(55384);
const lodash_1 = __webpack_require__(46517);
const field_types_1 = __webpack_require__(80360);
const store_1 = __webpack_require__(56791);
const utils_1 = __webpack_require__(46214);
var ActionFlag;
(function (ActionFlag) {
    ActionFlag["Add"] = "+";
    ActionFlag["Del"] = "-";
})(ActionFlag || (ActionFlag = {}));
/**
 * a common class that use to maintain relation fields' data consistency
 * when CRUD to record, if there's relation fields in record, need to update relation field's records at the same time.
 */
class LinkedDataConformanceMaintainer {
    constructor() {
        this.linkedChange = new Map();
    }
    /**
     * compare value and oldValue, auto calculate the changelog of relation records, and mark them down.
     * during one command cycle, can call insert many times.
     */
    insert(state, linkedSnapshot, recordId, field, value, oldValue) {
        const { brotherFieldId = field.id, foreignDatasheetId } = field.property;
        if (!value && !oldValue) {
            return;
        }
        // in `value` , but not in `oldValue`, need to add
        const toAdd = (0, lodash_1.without)(value, ...(oldValue || []));
        // oldValue exists,  but value don't exist, need to delete
        const toDel = (0, lodash_1.without)(oldValue, ...(value || []));
        toAdd.forEach(linkedRecordId => {
            this.insertLinkedRecordChange(foreignDatasheetId, brotherFieldId, linkedRecordId, recordId, ActionFlag.Add);
        });
        toDel.forEach(linkedRecordId => {
            const cellValueInLinkedCell = store_1.Selectors.getCellValue(state, linkedSnapshot, linkedRecordId, brotherFieldId, undefined, undefined, true);
            if (!cellValueInLinkedCell) {
                console.error(`The content of the related-record is empty, this record: ${recordId}`);
                return;
            }
            if (!cellValueInLinkedCell.includes(recordId)) {
                console.error(`No records in this table were found in the related-records, this record: ${recordId} related-record ${cellValueInLinkedCell}`);
                return;
            }
            this.insertLinkedRecordChange(foreignDatasheetId, brotherFieldId, linkedRecordId, recordId, ActionFlag.Del);
        });
    }
    insertLinkedRecordChange(datasheetId, brotherFieldId, linkedRecordId, recordId, actionFlag) {
        let datasheet = this.linkedChange.get(datasheetId);
        if (!datasheet) {
            datasheet = new Map();
            this.linkedChange.set(datasheetId, datasheet);
        }
        let brotherField = datasheet.get(brotherFieldId);
        if (!brotherField) {
            brotherField = new Map();
            datasheet.set(brotherFieldId, brotherField);
        }
        let linkedRecord = brotherField.get(linkedRecordId);
        if (!linkedRecord) {
            linkedRecord = { add: new Set(), del: new Set() };
            brotherField.set(linkedRecordId, linkedRecord);
        }
        if (actionFlag === ActionFlag.Add) {
            linkedRecord.add.add(recordId);
        }
        if (actionFlag === ActionFlag.Del) {
            linkedRecord.del.add(recordId);
        }
    }
    /**
     * Batch convert value changes in the associated table into LinkedActions.
     * This method will clear the value change cache. In a command cycle, it can only be executed once.
     */
    flushLinkedActions(state) {
        const linkedActions = [];
        if (this.linkedChange.size > 0) {
            this.linkedChange.forEach((datasheet, datasheetId) => {
                const snapshot = store_1.Selectors.getSnapshot(state, datasheetId);
                const linkedAction = { datasheetId, actions: [] };
                linkedActions.push(linkedAction);
                datasheet.forEach((field, fieldId) => {
                    field.forEach((changeIds, recordId) => {
                        if (!snapshot) {
                            console.error(`${datasheetId} for snapshot is not exit`);
                            return;
                        }
                        if (!snapshot.recordMap[recordId]) {
                            console.error(`record: ${recordId} in datasheet: ${datasheetId} does not exist！`);
                            return;
                        }
                        const fieldType = snapshot.meta.fieldMap[fieldId] && snapshot.meta.fieldMap[fieldId].type;
                        // Make sure that the cell is populated only when the foreign key field is indeed the relation field type.
                        const cellValueInLinkedCell = fieldType === field_types_1.FieldType.Link ?
                            store_1.Selectors.getCellValue(state, snapshot, recordId, fieldId, undefined, undefined, true) || [] : [];
                        let newLinkedCellValue = (0, lodash_1.without)(cellValueInLinkedCell, ...changeIds.del);
                        newLinkedCellValue.push(...changeIds.add);
                        newLinkedCellValue = (0, utils_1.handleEmptyCellValue)(newLinkedCellValue, field_types_1.BasicValueType.Array);
                        const action = datasheet_1.DatasheetActions.setRecord2Action(snapshot, { recordId, fieldId, value: newLinkedCellValue });
                        action && linkedAction.actions.push(action);
                    });
                });
            });
        }
        this.linkedChange.clear();
        return linkedActions;
    }
}
exports.LinkedDataConformanceMaintainer = LinkedDataConformanceMaintainer;


/***/ }),

/***/ 37940:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MemberFieldMaintainer = void 0;
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const types_1 = __webpack_require__(73578);
/**
 *
 * In order to solve the problem that the current class uses setRecord and addRecord at the same time
 * to change the member information in pasteSetRecord,
 * multiple changes to the column header data are generated and overlap each other.
 * Referring to the idea of linkDataMaintainer,
 * the changes to the column header data are no longer directly generated in setRecord and addRecord,
 * but the data management is handed over to the failure of this class. Before the final data submission, unified generation
 * A changeset for headhunting data modification
 *
 *
 * TODO: At present, first solve the online problems, keep the old logic, and change the data of the entire column.
 * The subsequent iteration is the same number of checks as linkContainer. This step requires enough testing.
 */
class MemberFieldMaintainer {
    constructor() {
        this.memberDataChanges = new Map();
    }
    /**
     * insert current action modifications of member data
     * currently, use fieldId as key only
     * aggregate the data
     *
     * @param {string} fieldId
     * @param {string} datasheetId
     * @param {string[]} insertUnitIds
     */
    insert(fieldId, insertUnitIds, datasheetId) {
        const memberFieldMap = this.memberDataChanges.get(datasheetId) || new Map();
        const unitIds = memberFieldMap.get(fieldId) || [];
        memberFieldMap.set(fieldId, [...new Set([...unitIds, ...insertUnitIds])]);
        this.memberDataChanges.set(datasheetId, memberFieldMap);
    }
    /**
     * check whether the cache data exists,
     * and at the end of other action, do a modification action to member field
     *
     * @param {IReduxState} state
     * @returns {any[] | IJOTAction[]}
     */
    flushMemberAction(state) {
        if (this.memberDataChanges.size === 0) {
            return [];
        }
        const actions = [];
        /**
         * here, is the process to data, no consider whether old column data needs to remove duplications, filter
         * currently, the process handoff to the insert before, the data insert is the final complete data
         */
        this.memberDataChanges.forEach((memberFieldMap, datasheetId) => {
            const snapshot = (0, selectors_1.getSnapshot)(state, datasheetId);
            const fieldMap = snapshot.meta.fieldMap;
            memberFieldMap.forEach((cellValueForUnitIds, fieldId) => {
                const field = fieldMap[fieldId];
                // here, do a redundant check for field type, as a fallback behavior
                if (field.type !== types_1.FieldType.Member) {
                    return;
                }
                const action = datasheet_1.DatasheetActions.setFieldAttr2Action(snapshot, {
                    field: Object.assign(Object.assign({}, field), { property: Object.assign(Object.assign({}, field.property), { unitIds: cellValueForUnitIds }) }),
                });
                if (!action) {
                    return;
                }
                actions.push(action);
            });
        });
        this.memberDataChanges.clear();
        return actions;
    }
}
exports.MemberFieldMaintainer = MemberFieldMaintainer;


/***/ }),

/***/ 1870:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FieldKeyEnum = exports.CellFormatEnum = void 0;
var CellFormatEnum;
(function (CellFormatEnum) {
    CellFormatEnum["STRING"] = "string";
    CellFormatEnum["JSON"] = "json";
})(CellFormatEnum = exports.CellFormatEnum || (exports.CellFormatEnum = {}));
var FieldKeyEnum;
(function (FieldKeyEnum) {
    FieldKeyEnum["NAME"] = "name";
    FieldKeyEnum["ID"] = "id";
})(FieldKeyEnum = exports.FieldKeyEnum || (exports.FieldKeyEnum = {}));


/***/ }),

/***/ 7637:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResourceModel = void 0;
class ResourceModel {
}
exports.ResourceModel = ResourceModel;


/***/ }),

/***/ 46214:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.computedFormattingToFormat = exports.isNullValue = exports.getMaxFieldCountPerSheet = exports.getMaxManageableSpaceCount = exports.getMaxViewCountPerSheet = exports.getApiMetaUserProperty = exports.getApiMetaPropertyFormat = exports.getViewTypeByString = exports.getViewTypeString = exports.getMemberTypeString = exports.getFieldTypeByString = exports.getFieldTypeString = exports.getEmojiIconNativeString = exports.groupArray = exports.handleEmptyCellValue = exports.handleNullArray = void 0;
const config_1 = __webpack_require__(77511);
const emojis_config_1 = __webpack_require__(1975);
const store_1 = __webpack_require__(56791);
const types_1 = __webpack_require__(73578);
const field_api_enums_1 = __webpack_require__(75292);
const field_1 = __webpack_require__(46559);
const percent_field_1 = __webpack_require__(88163);
/**
 *
 * Array null value processing, lookup's cv now contains null value by default, which will affect the original calculation logic.
 * In the lookup, the cellValue operation needs to be converted to a null value.
 * In the UI, the cellValue of the original rendered lookup component also needs to be processed
 * in this layer to ensure that it is consistent with the original display.
 * [null]=>null
 *
 */
const handleNullArray = (cv) => {
    if (cv == null) {
        return null;
    }
    if (Array.isArray(cv)) {
        cv = cv.filter(v => v != null);
    }
    if (cv.length === 0) {
        return null;
    }
    return cv;
};
exports.handleNullArray = handleNullArray;
/**
 * Semantic null value to null
 */
const handleEmptyCellValue = (cellValue, basicValueType) => {
    var _a;
    if (cellValue == null) {
        return null;
    }
    let cellValueType = basicValueType;
    if (!basicValueType) {
        if (Array.isArray(cellValue)) {
            cellValueType = types_1.BasicValueType.Array;
        }
        if (typeof cellValue === 'string') {
            cellValueType = types_1.BasicValueType.String;
        }
        if (typeof cellValue === 'boolean') {
            cellValueType = types_1.BasicValueType.Boolean;
        }
    }
    if (!cellValueType) {
        return cellValue;
    }
    switch (cellValueType) {
        case types_1.BasicValueType.Array:
            if (cellValue.length === 0) {
                return null;
            }
            break;
        case types_1.BasicValueType.Boolean:
            if (!cellValue) {
                return null;
            }
            break;
        case types_1.BasicValueType.String:
            if (cellValue.length === 0 ||
                (Array.isArray(cellValue) &&
                    cellValue.length === 1 &&
                    Object.prototype.toString.call(cellValue[0]) === '[object Object]' &&
                    !((_a = cellValue[0]) === null || _a === void 0 ? void 0 : _a.text))) {
                return null;
            }
            break;
        default:
            return cellValue;
    }
    return cellValue;
};
exports.handleEmptyCellValue = handleEmptyCellValue;
/**
 * [1,2,3,6,7,11,13,14] => [[1,2,3],[6,7],[11],[13,14]
 * @param list
 */
const groupArray = (list) => {
    const breaks = [0];
    list.forEach((currentRowIndex, index) => {
        const nextRowIndex = list[index + 1];
        if (nextRowIndex && nextRowIndex - currentRowIndex > 1) {
            breaks.push(index + 1);
        }
    });
    breaks.push(list.length);
    const res = [];
    while (breaks.length > 1) {
        res.push(list.slice(breaks[0], breaks[1]));
        breaks.shift();
    }
    return res;
};
exports.groupArray = groupArray;
/**
 * Convert the icon name stored in the emojiPicker to the string corresponding to the emoji.
 */
const getEmojiIconNativeString = (emoji) => {
    if (!emoji) {
        return emoji;
    }
    let emojiSlug = emoji;
    if (typeof emoji === 'object') {
        emojiSlug = emoji.id;
    }
    return emojis_config_1.EmojisConfig[emojiSlug].native;
};
exports.getEmojiIconNativeString = getEmojiIconNativeString;
const FieldTypeStringMap = {
    [types_1.FieldType.Attachment]: field_api_enums_1.APIMetaFieldType.Attachment,
    [types_1.FieldType.AutoNumber]: field_api_enums_1.APIMetaFieldType.AutoNumber,
    [types_1.FieldType.Checkbox]: field_api_enums_1.APIMetaFieldType.Checkbox,
    [types_1.FieldType.CreatedBy]: field_api_enums_1.APIMetaFieldType.CreatedBy,
    [types_1.FieldType.CreatedTime]: field_api_enums_1.APIMetaFieldType.CreatedTime,
    [types_1.FieldType.Currency]: field_api_enums_1.APIMetaFieldType.Currency,
    [types_1.FieldType.DateTime]: field_api_enums_1.APIMetaFieldType.DateTime,
    [types_1.FieldType.Email]: field_api_enums_1.APIMetaFieldType.Email,
    [types_1.FieldType.Formula]: field_api_enums_1.APIMetaFieldType.Formula,
    [types_1.FieldType.LastModifiedBy]: field_api_enums_1.APIMetaFieldType.LastModifiedBy,
    [types_1.FieldType.LastModifiedTime]: field_api_enums_1.APIMetaFieldType.LastModifiedTime,
    [types_1.FieldType.Link]: field_api_enums_1.APIMetaFieldType.MagicLink,
    [types_1.FieldType.LookUp]: field_api_enums_1.APIMetaFieldType.MagicLookUp,
    [types_1.FieldType.Member]: field_api_enums_1.APIMetaFieldType.Member,
    [types_1.FieldType.MultiSelect]: field_api_enums_1.APIMetaFieldType.MultiSelect,
    [types_1.FieldType.NotSupport]: field_api_enums_1.APIMetaFieldType.NotSupport,
    [types_1.FieldType.Number]: field_api_enums_1.APIMetaFieldType.Number,
    [types_1.FieldType.Percent]: field_api_enums_1.APIMetaFieldType.Percent,
    [types_1.FieldType.Phone]: field_api_enums_1.APIMetaFieldType.Phone,
    [types_1.FieldType.Rating]: field_api_enums_1.APIMetaFieldType.Rating,
    [types_1.FieldType.SingleSelect]: field_api_enums_1.APIMetaFieldType.SingleSelect,
    [types_1.FieldType.SingleText]: field_api_enums_1.APIMetaFieldType.SingleText,
    [types_1.FieldType.Text]: field_api_enums_1.APIMetaFieldType.Text,
    [types_1.FieldType.URL]: field_api_enums_1.APIMetaFieldType.URL,
};
const getFieldTypeString = (fieldType) => {
    return FieldTypeStringMap[fieldType];
};
exports.getFieldTypeString = getFieldTypeString;
const getFieldTypeByString = (fieldType) => {
    return Number(Object.keys(FieldTypeStringMap).find(key => FieldTypeStringMap[key] === fieldType));
};
exports.getFieldTypeByString = getFieldTypeByString;
const MemberTypeStringMap = {
    [types_1.MemberType.Member]: field_api_enums_1.APIMetaMemberType.Member,
    [types_1.MemberType.Team]: field_api_enums_1.APIMetaMemberType.Team,
};
const getMemberTypeString = (memberType) => {
    return MemberTypeStringMap[memberType];
};
exports.getMemberTypeString = getMemberTypeString;
const getViewTypeString = (viewType) => {
    const ViewTypeStringMap = {
        [store_1.ViewType.Grid]: field_api_enums_1.APIMetaViewType.Grid,
        [store_1.ViewType.Gallery]: field_api_enums_1.APIMetaViewType.Gallery,
        [store_1.ViewType.Kanban]: field_api_enums_1.APIMetaViewType.Kanban,
        [store_1.ViewType.Gantt]: field_api_enums_1.APIMetaViewType.Gantt,
        [store_1.ViewType.Calendar]: field_api_enums_1.APIMetaViewType.Calendar,
        [store_1.ViewType.OrgChart]: field_api_enums_1.APIMetaViewType.Architecture,
    };
    return ViewTypeStringMap[viewType];
};
exports.getViewTypeString = getViewTypeString;
const getViewTypeByString = (viewType) => {
    const viewTypeStringMap = {
        [field_api_enums_1.APIMetaViewType.Grid]: store_1.ViewType.Grid,
        [field_api_enums_1.APIMetaViewType.Gallery]: store_1.ViewType.Gallery,
        [field_api_enums_1.APIMetaViewType.Kanban]: store_1.ViewType.Kanban,
        [field_api_enums_1.APIMetaViewType.Gantt]: store_1.ViewType.Gantt,
        [field_api_enums_1.APIMetaViewType.Calendar]: store_1.ViewType.Calendar,
        [field_api_enums_1.APIMetaViewType.Architecture]: store_1.ViewType.OrgChart,
    };
    return viewTypeStringMap[viewType];
};
exports.getViewTypeByString = getViewTypeByString;
const getApiMetaPropertyFormat = (fieldInstance) => {
    // format to datetime
    if (types_1.BasicValueType.DateTime === fieldInstance.basicValueType) {
        if (!fieldInstance.field.property.formatting) {
            return {
                type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.DateTime,
                format: {
                    dateFormat: field_1.DateTimeField.defaultDateFormat,
                    timeFormat: field_1.DateTimeField.defaultTimeFormat,
                    includeTime: false,
                },
            };
        }
        const { dateFormat, timeFormat, includeTime, timeZone, includeTimeZone } = (fieldInstance.field.property.formatting ||
            {});
        return {
            type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.DateTime,
            format: {
                dateFormat: types_1.DateFormat[dateFormat],
                timeFormat: types_1.TimeFormat[timeFormat],
                includeTime,
                timeZone,
                includeTimeZone,
            },
        };
    }
    // format to number
    if (types_1.BasicValueType.Number === fieldInstance.basicValueType) {
        const formatting = fieldInstance.field.property.formatting;
        switch (formatting === null || formatting === void 0 ? void 0 : formatting.formatType) {
            case types_1.FieldType.Number:
                return {
                    type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.Number,
                    format: {
                        precision: (formatting === null || formatting === void 0 ? void 0 : formatting.precision) || field_1.NumberField.defaultProperty().precision,
                    },
                };
            case types_1.FieldType.Percent:
                return {
                    type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.Percent,
                    format: {
                        precision: (formatting === null || formatting === void 0 ? void 0 : formatting.precision) || percent_field_1.PercentField.defaultProperty().precision,
                    },
                };
            case types_1.FieldType.Currency:
                return {
                    type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.Currency,
                    format: {
                        precision: (formatting === null || formatting === void 0 ? void 0 : formatting.precision) || field_1.CurrencyField.defaultProperty().precision,
                        symbol: (formatting === null || formatting === void 0 ? void 0 : formatting.symbol) || field_1.CurrencyField.defaultProperty().symbol,
                    },
                };
            default:
                return {
                    type: field_api_enums_1.APIMetaFieldPropertyFormatEnums.Number,
                    format: {
                        precision: (formatting === null || formatting === void 0 ? void 0 : formatting.precision) || field_1.NumberField.defaultProperty().precision,
                    },
                };
        }
    }
    return null;
};
exports.getApiMetaPropertyFormat = getApiMetaPropertyFormat;
const getApiMetaUserProperty = (uuids, userMap) => {
    let options = [];
    if (userMap) {
        options = uuids.reduce((pre, uuid) => {
            if (userMap[uuid]) {
                const { name, avatar } = userMap[uuid];
                pre.push({
                    id: uuid,
                    name,
                    avatar: avatar || '',
                });
            }
            return pre;
        }, []);
    }
    return {
        options,
    };
};
exports.getApiMetaUserProperty = getApiMetaUserProperty;
const getMaxViewCountPerSheet = () => {
    return (0, config_1.getCustomConfig)().MAXIMUM_VIEW_COUNT_PER_DATASHEET || 30;
};
exports.getMaxViewCountPerSheet = getMaxViewCountPerSheet;
const getMaxManageableSpaceCount = () => {
    return (0, config_1.getCustomConfig)().MAXIMUM_MANAGEABLE_SPACE_COUNT_PER_USER || 10;
};
exports.getMaxManageableSpaceCount = getMaxManageableSpaceCount;
const getMaxFieldCountPerSheet = () => {
    return (0, config_1.getCustomConfig)().MAXIMUM_FIELD_COUNT_PER_DATASHEET || 200;
};
exports.getMaxFieldCountPerSheet = getMaxFieldCountPerSheet;
/**
 * Check if value is empty, null, undefined, empty array[]
 * @param value
 */
const isNullValue = (value) => {
    return value == null || (Array.isArray(value) && value.length === 0);
};
exports.isNullValue = isNullValue;
/**
 * IOpenComputedFormat => IComputedFieldFormattingProperty
 * Convert the external read calculation field format content into executable cmd format (formula, magic reference)
 * @param fieldInstance
 * @param format
 */
const computedFormattingToFormat = (format) => {
    let formatting = undefined;
    switch (format === null || format === void 0 ? void 0 : format.type) {
        case field_api_enums_1.APIMetaFieldPropertyFormatEnums.DateTime:
            {
                const { dateFormat, timeFormat, includeTime } = format.format;
                formatting = {
                    dateFormat: types_1.DateFormat[dateFormat],
                    timeFormat: types_1.TimeFormat[timeFormat],
                    includeTime,
                };
            }
            break;
        case field_api_enums_1.APIMetaFieldPropertyFormatEnums.Currency:
            {
                const { precision, symbol } = format.format;
                formatting = {
                    formatType: types_1.FieldType.Currency,
                    precision,
                    symbol,
                };
            }
            break;
        case field_api_enums_1.APIMetaFieldPropertyFormatEnums.Number:
            {
                const { precision } = format.format;
                formatting = {
                    formatType: types_1.FieldType.Number,
                    precision,
                };
            }
            break;
        case field_api_enums_1.APIMetaFieldPropertyFormatEnums.Percent: {
            const { precision } = format.format;
            formatting = {
                formatType: types_1.FieldType.Percent,
                precision,
            };
        }
    }
    return formatting;
};
exports.computedFormattingToFormat = computedFormattingToFormat;


/***/ }),

/***/ 9231:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Cell = exports.CellDirection = void 0;
const store_1 = __webpack_require__(56791);
var CellDirection;
(function (CellDirection) {
    CellDirection[CellDirection["Up"] = 0] = "Up";
    CellDirection[CellDirection["Down"] = 1] = "Down";
    CellDirection[CellDirection["Left"] = 2] = "Left";
    CellDirection[CellDirection["Right"] = 3] = "Right";
    CellDirection[CellDirection["UpEdge"] = 4] = "UpEdge";
    CellDirection[CellDirection["DownEdge"] = 5] = "DownEdge";
    CellDirection[CellDirection["LeftEdge"] = 6] = "LeftEdge";
    CellDirection[CellDirection["RightEdge"] = 7] = "RightEdge";
})(CellDirection = exports.CellDirection || (exports.CellDirection = {}));
class Cell {
    constructor(recordId, fieldId) {
        this.recordId = recordId;
        this.fieldId = fieldId;
    }
    static bindModel(cell) {
        this.instance.recordId = cell.recordId;
        this.instance.fieldId = cell.fieldId;
        return this.instance;
    }
    getIndex(state, cell) {
        return store_1.Selectors.getCellIndex(state, cell || Cell.instance);
    }
    getUIIndex(state, cell) {
        return store_1.Selectors.getCellUIIndex(state, cell || Cell.instance);
    }
    move(state, direction, breakpoints = []) {
        const columns = store_1.Selectors.getVisibleColumns(state);
        const rows = store_1.Selectors.getVisibleRows(state);
        const rowCount = rows.length;
        const maxColumnIndex = columns.length - 1;
        let minRowIndex = 0;
        let maxRowIndex = rowCount - 1;
        let { recordIndex, fieldIndex } = store_1.Selectors.getCellIndex(state, Cell.instance);
        /**
         * No action is required for the following two cases:
         * 1. The active cell is in the first row and needs to be moved up
         * 2. The active cell is in the last row and needs to be moved down
         */
        if (([CellDirection.Up, CellDirection.UpEdge].includes(direction) && recordIndex === 0) ||
            ([CellDirection.Down, CellDirection.DownEdge].includes(direction) && recordIndex === rowCount - 1)) {
            return Cell.instance;
        }
        // process the grouping
        if (breakpoints.length) {
            const nextBreakpointIndex = breakpoints.findIndex(bp => bp > recordIndex);
            if (nextBreakpointIndex > -1) {
                const nextBreakpoint = breakpoints[nextBreakpointIndex];
                const currentBreakpoint = breakpoints[nextBreakpointIndex - 1];
                minRowIndex = (currentBreakpoint === recordIndex ? breakpoints[nextBreakpointIndex - 2] : currentBreakpoint) || 0;
                maxRowIndex = (nextBreakpoint === recordIndex + 1 ? breakpoints[nextBreakpointIndex + 1] - 1 : nextBreakpoint - 1) || maxRowIndex;
            }
        }
        switch (direction) {
            case CellDirection.Left:
                fieldIndex--;
                break;
            case CellDirection.Right:
                fieldIndex++;
                break;
            case CellDirection.Up: {
                recordIndex--;
                break;
            }
            case CellDirection.Down: {
                recordIndex++;
                break;
            }
            case CellDirection.LeftEdge:
                fieldIndex = 0;
                break;
            case CellDirection.RightEdge:
                fieldIndex = maxColumnIndex;
                break;
            case CellDirection.UpEdge:
                recordIndex = minRowIndex;
                break;
            case CellDirection.DownEdge:
                recordIndex = maxRowIndex;
                break;
            default: {
                return;
            }
        }
        // If the correction exceeds the boundary, it stays at the boundary.
        if (recordIndex < 0)
            recordIndex = 0;
        if (recordIndex > rowCount - 1)
            recordIndex = rowCount - 1;
        if (fieldIndex < 0)
            fieldIndex = 0;
        if (fieldIndex > maxColumnIndex)
            fieldIndex = maxColumnIndex;
        return store_1.Selectors.getCellByIndex(state, { recordIndex, fieldIndex });
    }
}
exports.Cell = Cell;
Cell.instance = new Cell('', '');


/***/ }),

/***/ 40735:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Group = void 0;
const compute_manager_1 = __webpack_require__(73374);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
class Group {
    constructor(groupInfo, groupBreakpoint) {
        this.groupArray = [];
        this.groupTabIdMap = new Map();
        this.groupArray = groupInfo.map(f => f.fieldId);
        this.groupBreakpoint = this.groupArray.length && groupBreakpoint ? groupBreakpoint : {};
        if (!groupBreakpoint) {
            groupInfo.forEach(groupItem => {
                this.groupBreakpoint[groupItem.fieldId] = [];
            });
        }
    }
    clearGroupBreakpoint() {
        compute_manager_1.computeCache.delete('groupBreakpoint');
    }
    cacheGroupBreakpoint() {
        compute_manager_1.computeCache.set('groupBreakpoint', this.groupBreakpoint);
    }
    addBreakpointAndSetGroupTab(groupFieldId, breakIndex, fieldId, depth) {
        if (this.groupBreakpoint[groupFieldId].includes(breakIndex))
            return;
        this.groupBreakpoint[groupFieldId].push(breakIndex);
        if (fieldId) {
            this.groupTabIdMap.set(`${fieldId}_${depth}`, true);
        }
    }
    getAllGroupTabIdsByRecomputed(state) {
        var _a;
        const map = new Map();
        if (!((_a = this.groupArray) === null || _a === void 0 ? void 0 : _a.length))
            return map;
        const rows = (0, selectors_1.getVisibleRows)(state);
        this.groupArray.forEach((groupFieldId, depth) => {
            (this.groupBreakpoint[groupFieldId] || []).forEach((recordIndex) => {
                const row = rows[recordIndex];
                if (row) {
                    const recordId = row.recordId;
                    map.set(`${recordId}_${depth}`, true);
                }
            });
        });
        return map;
    }
    getAllGroupTabIds() {
        return this.groupTabIdMap;
    }
    /**
     * Get all breakpoints under the current breakpoint (ie, subgroup headers under the current group)
     * Level 1 group breakpoint 0---------10---------20
     * Level 2 group breakpoint 0--3-5-6--10----15---20
     * 0 => [3,5,6]
     */
    getChildBreakpointIds(state, recordId, depth) {
        const rowIndexMap = (0, selectors_1.getVisibleRowsIndexMap)(state);
        const rows = (0, selectors_1.getVisibleRows)(state);
        const startVisibleRowIndex = rowIndexMap.get(recordId);
        const breakPoints = this.groupBreakpoint[this.groupArray[depth]];
        if (!breakPoints)
            return [];
        const breakPointIndex = breakPoints.findIndex(i => i === startVisibleRowIndex);
        const endVisibleRowIndex = breakPoints[breakPointIndex + 1];
        const childGroupFieldId = this.groupArray[depth + 1];
        if (childGroupFieldId) {
            const childBreakpoints = this.groupBreakpoint[childGroupFieldId];
            if (childBreakpoints) {
                const startIndex = childBreakpoints.findIndex(i => i === startVisibleRowIndex);
                const endIndex = childBreakpoints.findIndex(i => i === endVisibleRowIndex);
                return childBreakpoints.slice(startIndex, endIndex).map(recordIndex => { var _a; return (_a = rows[recordIndex]) === null || _a === void 0 ? void 0 : _a.recordId; });
            }
        }
        return [];
    }
    // Get all rows under the grouping hierarchy.
    getRecordsInGroupByDepth(state, recordId, depth) {
        const rowIndexMap = (0, selectors_1.getVisibleRowsIndexMap)(state);
        const visibleRows = (0, selectors_1.getVisibleRows)(state);
        const startVisibleRowIndex = rowIndexMap.get(recordId);
        const breakPointArray = this.groupBreakpoint[this.groupArray[depth]];
        if (!breakPointArray)
            return [];
        const breakPointIndex = breakPointArray.findIndex(i => i === startVisibleRowIndex);
        const endVisibleRowIndex = breakPointArray[breakPointIndex + 1];
        return visibleRows.slice(startVisibleRowIndex, endVisibleRowIndex);
    }
    /**
     * According to the breakpoint, generate the Row of the grouping structure between the breakpoint Records
     * @param breakIndex
     */
    genGroupLinearRows(breakIndex, recordId, preRecordId) {
        var _a;
        const res = [];
        let breakPointGroupLevel = 0;
        for (const [index, fid] of this.groupArray.entries()) {
            if ((_a = this.groupBreakpoint[fid]) === null || _a === void 0 ? void 0 : _a.includes(breakIndex)) {
                breakPointGroupLevel = index;
                break;
            }
        }
        // Add row at the end of the previous group.
        if (preRecordId) {
            const depth = this.groupArray.length;
            res.push({
                type: store_1.CellType.Add, depth,
                recordId: preRecordId,
            });
        }
        const addBlankLength = this.groupArray.length - breakPointGroupLevel;
        // Empty rows from the last grouping.
        for (const i of [...Array(addBlankLength).keys()]) {
            if (i == addBlankLength - 1) {
                if (recordId) {
                    const depth = this.groupArray.length - 1 - i;
                    res.push({
                        type: store_1.CellType.Blank, depth,
                        recordId: recordId,
                    });
                }
            }
            else if (preRecordId) {
                const depth = this.groupArray.length - 1 - i;
                res.push({
                    type: store_1.CellType.Blank, depth,
                    recordId: preRecordId,
                });
            }
        }
        // tab of the current group
        for (const i of [...Array(this.groupArray.length - breakPointGroupLevel).keys()].reverse()) {
            if (recordId) {
                const depth = this.groupArray.length - 1 - i;
                res.push({
                    type: store_1.CellType.GroupTab,
                    depth,
                    recordId,
                });
            }
        }
        return res;
    }
    /**
     * Get the breakpoint of the deepest grouping
     */
    getDepthGroupBreakPoints() {
        const groupLength = this.groupArray.length;
        const depthGroupId = this.groupArray[groupLength - 1];
        return this.groupBreakpoint[depthGroupId];
    }
}
exports.Group = Group;


/***/ }),

/***/ 36877:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(90892), exports);
__exportStar(__webpack_require__(9231), exports);
__exportStar(__webpack_require__(40735), exports);


/***/ }),

/***/ 90892:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Range = exports.RangeDirection = exports.FillDirection = void 0;
const lodash_1 = __webpack_require__(46517);
const utils_1 = __webpack_require__(46214);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
var FillDirection;
(function (FillDirection) {
    FillDirection["Left"] = "left";
    FillDirection["Right"] = "right";
    FillDirection["Below"] = "below";
    FillDirection["Top"] = "top";
})(FillDirection = exports.FillDirection || (exports.FillDirection = {}));
var RangeDirection;
(function (RangeDirection) {
    RangeDirection[RangeDirection["Up"] = 0] = "Up";
    RangeDirection[RangeDirection["Down"] = 1] = "Down";
    RangeDirection[RangeDirection["Left"] = 2] = "Left";
    RangeDirection[RangeDirection["Right"] = 3] = "Right";
    RangeDirection[RangeDirection["UpEdge"] = 4] = "UpEdge";
    RangeDirection[RangeDirection["DownEdge"] = 5] = "DownEdge";
    RangeDirection[RangeDirection["LeftEdge"] = 6] = "LeftEdge";
    RangeDirection[RangeDirection["RightEdge"] = 7] = "RightEdge";
    RangeDirection[RangeDirection["All"] = 8] = "All";
})(RangeDirection = exports.RangeDirection || (exports.RangeDirection = {}));
const EMPTY_CELL = { recordId: '', fieldId: '' };
const isNumberInRange = (n, range) => {
    const [min, max] = range;
    if (n < min || n > max)
        return false;
    return true;
};
/**
 * select are range judgement
 */
class Range {
    constructor(start, end) {
        this.start = start;
        this.end = end;
    }
    static bindModel(range) {
        if (range) {
            this.instance.start = range.start;
            this.instance.end = range.end;
        }
        return this.instance;
    }
    toNumberBaseRange(state) {
        const rangeIndex = this.getIndexRange(state);
        if (!rangeIndex)
            return null;
        return {
            row: rangeIndex.record.min,
            rowCount: rangeIndex.record.max - rangeIndex.record.min + 1,
            column: rangeIndex.field.min,
            columnCount: rangeIndex.field.max - rangeIndex.field.min + 1,
        };
    }
    /**
     * data coordinate system vector => numeric coordinate system range
     * @param state
     */
    getIndexRange(state, range) {
        const { start, end } = range || Range.instance;
        const startCellIndex = (0, selectors_1.getCellIndex)(state, start);
        const endCellIndex = (0, selectors_1.getCellIndex)(state, end);
        if (startCellIndex == null || endCellIndex == null)
            return null;
        return {
            record: {
                min: Math.min(startCellIndex.recordIndex, endCellIndex.recordIndex),
                max: Math.max(startCellIndex.recordIndex, endCellIndex.recordIndex),
            },
            field: {
                min: Math.min(startCellIndex.fieldIndex, endCellIndex.fieldIndex),
                max: Math.max(startCellIndex.fieldIndex, endCellIndex.fieldIndex),
            },
        };
    }
    /**
     * UI data coordinate system vector => UI digital coordinate system range
     * @param state
     * @param range
     */
    getUIIndexRange(state, range) {
        const { start, end } = range || Range.instance;
        const startCellIndex = (0, selectors_1.getCellUIIndex)(state, start);
        const endCellIndex = (0, selectors_1.getCellUIIndex)(state, end);
        if (startCellIndex == null || endCellIndex == null)
            return null;
        return {
            record: {
                min: Math.min(startCellIndex.rowIndex, endCellIndex.rowIndex),
                max: Math.max(startCellIndex.rowIndex, endCellIndex.rowIndex),
            },
            field: {
                min: Math.min(startCellIndex.columnIndex, endCellIndex.columnIndex),
                max: Math.max(startCellIndex.columnIndex, endCellIndex.columnIndex),
            },
        };
    }
    getCellRange(state, indexRange) {
        const visibleRows = store_1.Selectors.getVisibleRows(state);
        const visibleColumns = store_1.Selectors.getVisibleColumns(state);
        return {
            start: {
                recordId: visibleRows[indexRange.record.min].recordId,
                fieldId: visibleColumns[indexRange.field.min].fieldId,
            },
            end: {
                recordId: visibleRows[indexRange.record.max].recordId,
                fieldId: visibleColumns[indexRange.field.max].fieldId,
            },
        };
    }
    /**
     * Determine whether the cell is in the selection area.
     * @param cell cell
     */
    contains(state, cell) {
        const currentCell = (0, selectors_1.getCellIndex)(state, cell);
        const indexRange = this.getIndexRange(state);
        if (currentCell == null || indexRange == null)
            return false;
        const recordIndexRange = [
            indexRange.record.min,
            indexRange.record.max,
        ];
        const fieldIndexRange = [
            indexRange.field.min,
            indexRange.field.max,
        ];
        return isNumberInRange(currentCell.recordIndex, recordIndexRange)
            && isNumberInRange(currentCell.fieldIndex, fieldIndexRange);
    }
    /**
     * Calculate the filling direction according to the hoverCell, and give priority to the vertical direction.
     * @param state
     * @param hoverCell
     */
    getDirection(state, hoverCell) {
        const hoverCellIndex = (0, selectors_1.getCellIndex)(state, hoverCell);
        const indexRange = this.getIndexRange(state);
        if (hoverCellIndex == null || indexRange == null)
            return null;
        const [minRecordIndex, maxRecordIndex] = [
            indexRange.record.min,
            indexRange.record.max,
        ];
        const [minFieldIndex, maxFieldIndex] = [
            indexRange.field.min,
            indexRange.field.max,
        ];
        if (hoverCellIndex.recordIndex < minRecordIndex)
            return FillDirection.Top;
        if (hoverCellIndex.recordIndex > maxRecordIndex)
            return FillDirection.Below;
        if (hoverCellIndex.fieldIndex < minFieldIndex)
            return FillDirection.Left;
        if (hoverCellIndex.fieldIndex > maxFieldIndex)
            return FillDirection.Right;
        return null;
    }
    /**
     * Calculate the area to be filled according to the filling direction
     * @param state
     * @param direction
     */
    getFillRange(state, hoverCell, direction) {
        const indexRange = this.getIndexRange(state);
        const visibleRows = (0, selectors_1.getVisibleRows)(state);
        const visibleColumns = (0, selectors_1.getVisibleColumns)(state);
        if (!indexRange)
            return null;
        const [minRecordIndex, maxRecordIndex] = [
            indexRange.record.min,
            indexRange.record.max,
        ];
        const [minFieldIndex, maxFieldIndex] = [
            indexRange.field.min,
            indexRange.field.max,
        ];
        switch (direction) {
            case FillDirection.Top:
                return {
                    start: { recordId: visibleRows[minRecordIndex - 1].recordId, fieldId: visibleColumns[maxFieldIndex].fieldId },
                    end: { recordId: hoverCell.recordId, fieldId: visibleColumns[minFieldIndex].fieldId },
                };
            case FillDirection.Below:
                return {
                    start: { recordId: visibleRows[maxRecordIndex + 1].recordId, fieldId: visibleColumns[minFieldIndex].fieldId },
                    end: { recordId: hoverCell.recordId, fieldId: visibleColumns[maxFieldIndex].fieldId },
                };
            case FillDirection.Right:
                return {
                    start: { recordId: visibleRows[minRecordIndex].recordId, fieldId: visibleColumns[maxFieldIndex + 1].fieldId },
                    end: { recordId: visibleRows[maxRecordIndex].recordId, fieldId: hoverCell.fieldId },
                };
            case FillDirection.Left:
                return {
                    start: { recordId: visibleRows[maxRecordIndex].recordId, fieldId: visibleColumns[minFieldIndex - 1].fieldId },
                    end: { recordId: visibleRows[minRecordIndex].recordId, fieldId: hoverCell.fieldId },
                };
        }
    }
    /**
     * Merge continuous selection
     *
     * FIXME: Determine whether it is continuous, currently only used in selection and fill area.
     *   It is known that the two are continuous, so there is no check here.
     *
     * @param state
     * @param ranges
     */
    combine(state, range) {
        const selfIndexRange = this.getIndexRange(state);
        const otherIndexRange = this.getIndexRange(state, range);
        if (selfIndexRange && !otherIndexRange)
            return Range.instance;
        if (!selfIndexRange && otherIndexRange)
            return range;
        if (!selfIndexRange && !otherIndexRange)
            return null;
        const visibleRows = (0, selectors_1.getVisibleRows)(state);
        const visibleColumns = (0, selectors_1.getVisibleColumns)(state);
        const res = {
            start: {
                recordId: visibleRows[Math.min(selfIndexRange.record.min, otherIndexRange.record.min)].recordId,
                fieldId: visibleColumns[Math.min(selfIndexRange.field.min, otherIndexRange.field.min)].fieldId,
            },
            end: {
                recordId: visibleRows[Math.max(selfIndexRange.record.max, otherIndexRange.record.max)].recordId,
                fieldId: visibleColumns[Math.max(selfIndexRange.field.max, otherIndexRange.field.max)].fieldId,
            },
        };
        return res;
    }
    /**
     * Get the diagonal cells of a cell in the selection area, symmetrical about the center of the selection area.
     * @param state
     * @param cell
     */
    getDiagonalCell(state, cell) {
        const indexRange = this.getIndexRange(state);
        if (!indexRange)
            return null;
        const cellIndex = store_1.Selectors.getCellIndex(state, cell);
        if (!cellIndex)
            return null;
        const diagonalCellIndex = {
            recordIndex: indexRange.record.max - (cellIndex.recordIndex - indexRange.record.min),
            fieldIndex: indexRange.field.max - (cellIndex.fieldIndex - indexRange.field.min),
        };
        return store_1.Selectors.getCellByIndex(state, diagonalCellIndex);
    }
    /**
     * Selection movement.
     * @param state
     * @param direction
     */
    move(state, direction, breakpoints = []) {
        const activeCell = store_1.Selectors.getActiveCell(state);
        if (!activeCell)
            return Range.instance;
        const activeCellIndex = store_1.Selectors.getCellIndex(state, activeCell);
        const indexRange = this.getIndexRange(state);
        if (!indexRange)
            return Range.instance;
        const newIndexRange = (0, lodash_1.cloneDeep)(indexRange);
        const { fieldIndex, recordIndex } = activeCellIndex;
        const minRangeRowIndex = indexRange.record.min;
        const maxRangeRowIndex = indexRange.record.max;
        // (activeCell is at the border of the selection, moving direction) => expand/reduce the selection.
        const isActiveCellAtRangeRightEdge = fieldIndex === indexRange.field.max;
        const isActiveCellAtRangeUpEdge = recordIndex === minRangeRowIndex;
        const isActiveCellAtRangeDownEdge = recordIndex === maxRangeRowIndex;
        const isUpExpand = minRangeRowIndex === maxRangeRowIndex || !isActiveCellAtRangeUpEdge;
        const isDownExpand = minRangeRowIndex === maxRangeRowIndex || !isActiveCellAtRangeDownEdge;
        const visibleRows = store_1.Selectors.getVisibleRows(state);
        const visibleColumns = store_1.Selectors.getVisibleColumns(state);
        const visibleRowsCount = visibleRows.length;
        const maxFieldIndex = visibleColumns.length - 1;
        /**
         * No action is required for the following three situations:
          * 1. The current selection has covered the first row, and the selection is moved up
          * 2. The current selection has covered the last line, and the selection is moved down
          * 3. The current selection has been selected, and the current shortcut key is the selection of all selections
         */
        if ((direction === RangeDirection.All && (minRangeRowIndex === 0 && maxRangeRowIndex === visibleRowsCount - 1)) ||
            ([RangeDirection.Up, RangeDirection.UpEdge].includes(direction) && minRangeRowIndex === 0 && isUpExpand) ||
            ([RangeDirection.Down, RangeDirection.DownEdge].includes(direction) && maxRangeRowIndex === visibleRowsCount - 1 && isDownExpand)) {
            return Range.instance;
        }
        let minRowIndex = 0;
        let maxRowIndex = visibleRowsCount - 1;
        let minRowIndexInAllRange = 0;
        let maxRowIndexInAllRange = visibleRowsCount - 1;
        // process the grouping
        if (breakpoints.length) {
            const nextBreakpointIndex = (0, lodash_1.findIndex)(breakpoints, bp => bp > (isDownExpand ? maxRangeRowIndex : minRangeRowIndex));
            if (nextBreakpointIndex > -1) {
                const nextBreakpoint = breakpoints[nextBreakpointIndex];
                const currentBreakpointIndex = nextBreakpointIndex - 1;
                const currentBreakpoint = breakpoints[currentBreakpointIndex];
                const isGroupRangeUpEdge = currentBreakpoint === minRangeRowIndex; // Whether the selection has covered the top edge of a group
                const isGroupRangeDownEdge = nextBreakpoint === maxRangeRowIndex + 1; // Whether the selection has covered the bottom edge of a group
                // Whether the selection range is smaller than the group where the active cell is located
                const isActiveCellInCurrentGroup = currentBreakpoint <= recordIndex && recordIndex < nextBreakpoint;
                /**
                 * Expand the selection area up and drop directly to the starting position of the group
                 * Narrow the selection up to the end of the group
                 */
                const minRangeOffset = (isUpExpand || (isGroupRangeDownEdge && isActiveCellInCurrentGroup)) ? 0 : -1;
                /**
                 * Extend the selection down, directly to the end of the group
                 * Reduce the selection area down, then it falls to the starting position of the group
                 */
                const maxRangeOffset = (isDownExpand || (isGroupRangeUpEdge && isActiveCellInCurrentGroup)) ? -1 : 0;
                minRowIndex = (isGroupRangeUpEdge ? breakpoints[currentBreakpointIndex - 1] + minRangeOffset : currentBreakpoint + minRangeOffset) || 0;
                maxRowIndex = (isGroupRangeDownEdge ? breakpoints[nextBreakpointIndex + 1] + maxRangeOffset : nextBreakpoint + maxRangeOffset) || maxRowIndex;
                minRowIndexInAllRange = (isGroupRangeUpEdge && isGroupRangeDownEdge) ? 0 : currentBreakpoint;
                maxRowIndexInAllRange = (isGroupRangeUpEdge && isGroupRangeDownEdge) ? visibleRowsCount - 1 : nextBreakpoint - 1;
            }
        }
        switch (direction) {
            case RangeDirection.Up:
                if (isActiveCellAtRangeDownEdge) {
                    newIndexRange.record.min--;
                    break;
                }
                newIndexRange.record.max--;
                break;
            case RangeDirection.UpEdge:
                newIndexRange.record.min = minRowIndex;
                if (!isActiveCellAtRangeDownEdge) {
                    newIndexRange.record.max = recordIndex;
                }
                break;
            case RangeDirection.Down:
                if (isActiveCellAtRangeDownEdge) {
                    newIndexRange.record.min++;
                    break;
                }
                newIndexRange.record.max++;
                break;
            case RangeDirection.DownEdge:
                newIndexRange.record.max = maxRowIndex;
                if (isActiveCellAtRangeDownEdge) {
                    newIndexRange.record.min = recordIndex;
                }
                break;
            case RangeDirection.Left:
                if (isActiveCellAtRangeRightEdge) {
                    newIndexRange.field.min--;
                    break;
                }
                newIndexRange.field.max--;
                break;
            case RangeDirection.LeftEdge:
                newIndexRange.field.min = 0;
                if (!isActiveCellAtRangeRightEdge) {
                    newIndexRange.field.max = fieldIndex;
                    break;
                }
                break;
            case RangeDirection.Right:
                if (isActiveCellAtRangeRightEdge) {
                    newIndexRange.field.min++;
                    break;
                }
                newIndexRange.field.max++;
                break;
            case RangeDirection.RightEdge:
                newIndexRange.field.max = maxFieldIndex;
                if (isActiveCellAtRangeRightEdge) {
                    newIndexRange.field.min = fieldIndex;
                }
                break;
            case RangeDirection.All:
                newIndexRange.field.min = 0;
                newIndexRange.field.max = maxFieldIndex;
                newIndexRange.record.min = minRowIndexInAllRange;
                newIndexRange.record.max = maxRowIndexInAllRange;
                break;
        }
        // to fix
        newIndexRange.field.min = Math.max(newIndexRange.field.min, 0);
        newIndexRange.field.max = Math.min(newIndexRange.field.max, maxFieldIndex);
        newIndexRange.record.min = Math.max(newIndexRange.record.min, 0);
        newIndexRange.record.max = Math.min(newIndexRange.record.max, visibleRowsCount - 1);
        return this.getCellRange(state, newIndexRange);
    }
    /**
     * selected records is non-sequence area, convert it to sequence area with multi IRange format
     *
     * @param state
     * @param recordIds
     */
    static selectRecord2Ranges(state, recordIds) {
        const rowIndexMap = store_1.Selectors.getPureVisibleRowsIndexMap(state);
        const rows = store_1.Selectors.getPureVisibleRows(state);
        const columns = store_1.Selectors.getVisibleColumns(state);
        const firstFieldId = columns[0].fieldId;
        const lastFieldId = columns[columns.length - 1].fieldId;
        const sortedRowIndexList = recordIds
            .reduce((acc, recordId) => {
            if (rowIndexMap.has(recordId)) {
                acc.push(rowIndexMap.get(recordId));
            }
            return acc;
        }, [])
            .sort((a, b) => {
            return a - b;
        });
        const rowIndexRanges = (0, utils_1.groupArray)(sortedRowIndexList);
        const res = rowIndexRanges.map(rowIndexRange => {
            const minRowIndex = (0, lodash_1.min)(rowIndexRange);
            const maxRowIndex = (0, lodash_1.max)(rowIndexRange);
            return {
                start: {
                    recordId: rows[minRowIndex].recordId,
                    fieldId: firstFieldId,
                },
                end: {
                    recordId: rows[maxRowIndex].recordId,
                    fieldId: lastFieldId,
                },
            };
        });
        return res;
    }
}
exports.Range = Range;
Range.instance = new Range(EMPTY_CELL, EMPTY_CELL);


/***/ }),

/***/ 91273:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CalendarView = void 0;
const index_1 = __webpack_require__(23440);
const model_1 = __webpack_require__(61116);
const types_1 = __webpack_require__(73578);
const i18n_1 = __webpack_require__(47511);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const views_1 = __webpack_require__(95104);
class CalendarView extends views_1.View {
    get recordShowName() {
        return (0, i18n_1.t)(i18n_1.Strings.calendar_record);
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.calendar_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.calendar_view_desc),
            videoGuide: (0, index_1.integrateCdnHost)(index_1.Settings.view_calendar_guide_video.value),
        };
    }
    static findDateTimeFieldIds(srcView, fieldMap, state) {
        const filterIds = srcView.columns.filter(({ fieldId }) => {
            const field = fieldMap[fieldId];
            return model_1.Field.bindModel(field, state).basicValueType === types_1.BasicValueType.DateTime;
        }).map(column => column.fieldId);
        return filterIds;
    }
    static defaultStyle(snapshot, activeViewId, state) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        const dateTimeFieldIds = this.findDateTimeFieldIds(srcView, snapshot.meta.fieldMap, state);
        return {
            startFieldId: dateTimeFieldIds[0],
            endFieldId: dateTimeFieldIds[1],
            isColNameVisible: false,
            colorOption: {
                type: store_1.CalendarColorType.Custom,
                fieldId: '',
                color: -1,
            }
        };
    }
    static defaultColumns(srcView) {
        if (!srcView) {
            throw Error((0, i18n_1.t)(i18n_1.Strings.error_not_found_the_source_of_view));
        }
        const columns = srcView.columns.map((column, index) => {
            const fieldId = column.fieldId;
            if (index === 0) {
                return { fieldId };
            }
            return { fieldId, hiddenInCalendar: true, hidden: true };
        });
        return columns;
    }
    static generateDefaultProperty(snapshot, activeViewId, state) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        const views = snapshot.meta.views;
        return {
            id: datasheet_1.DatasheetActions.getNewViewId(views),
            name: datasheet_1.DatasheetActions.getDefaultViewName(views, store_1.ViewType.Calendar),
            type: store_1.ViewType.Calendar,
            rowHeightLevel: 1,
            columns: this.defaultColumns(srcView),
            rows: this.defaultRows(srcView),
            frozenColumnCount: 1,
            style: this.defaultStyle(snapshot, activeViewId, state),
            displayHiddenColumnWithinMirror: true
        };
    }
}
exports.CalendarView = CalendarView;
CalendarView.setCalendarStyle2Action = (snapshot, payload) => {
    const { viewId, data, isClear } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0)
        return [];
    const view = snapshot.meta.views[viewIndex];
    if (view.type !== store_1.ViewType.Calendar)
        return [];
    return data.filter(({ styleKey, styleValue }) => {
        return styleValue !== view.style[styleKey];
    }).map(({ styleKey, styleValue }) => {
        if (isClear) {
            return {
                n: index_1.OTActionName.ObjectDelete,
                p: ['meta', 'views', viewIndex, 'style', styleKey],
                od: view.style[styleKey],
            };
        }
        return {
            n: index_1.OTActionName.ObjectReplace,
            p: ['meta', 'views', viewIndex, 'style', styleKey],
            oi: styleValue,
            od: view.style[styleKey],
        };
    });
};


/***/ }),

/***/ 12468:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CardView = void 0;
const views_1 = __webpack_require__(95104);
class CardView extends views_1.View {
    static defaultColumns(srcView, columnCount) {
        if (!srcView) {
            throw Error('cannot find the source of view');
        }
        let count = 0;
        const columns = srcView.columns.reduce((columns, column) => {
            if (column.hidden || count >= columnCount) {
                columns.push(Object.assign(Object.assign({}, column), { hidden: true }));
                return columns;
            }
            count++;
            columns.push(Object.assign({}, column));
            return columns;
        }, []);
        return columns;
    }
}
exports.CardView = CardView;


/***/ }),

/***/ 4904:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FormView = void 0;
const views_1 = __webpack_require__(95104);
const i18n_1 = __webpack_require__(47511);
const config_1 = __webpack_require__(77511);
const utils_1 = __webpack_require__(26854);
class FormView extends views_1.View {
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.form_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.form_view_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_form_guide_video.value),
        };
    }
    static generateDefaultProperty() {
        return null;
    }
}
exports.FormView = FormView;


/***/ }),

/***/ 42583:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GalleryView = void 0;
const engine_1 = __webpack_require__(39036);
const i18n_1 = __webpack_require__(47511);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const datasheet_1 = __webpack_require__(55384);
const card_view_1 = __webpack_require__(12468);
const config_1 = __webpack_require__(77511);
const utils_1 = __webpack_require__(26854);
class GalleryView extends card_view_1.CardView {
    static defaultStyle(snapshot, srcView) {
        // the first attachment field set as default cover field
        const initCoverField = srcView.columns.find(col => snapshot.meta.fieldMap[col.fieldId].type === types_1.FieldType.Attachment);
        return {
            layoutType: store_1.LayoutType.Flex,
            isAutoLayout: false,
            cardCount: 4,
            isCoverFit: true,
            coverFieldId: initCoverField ? initCoverField.fieldId : undefined,
            isColNameVisible: true,
        };
    }
    static defaultRows(srcView) {
        if (srcView) {
            return srcView.rows;
        }
        return [];
    }
    static generateDefaultProperty(snapshot, activeViewId) {
        const views = snapshot.meta.views;
        let srcView;
        if (activeViewId) {
            srcView = (0, selectors_1.getViewById)(snapshot, activeViewId);
        }
        if (!srcView) {
            srcView = views[0];
        }
        return {
            id: datasheet_1.DatasheetActions.getNewViewId(views),
            name: datasheet_1.DatasheetActions.getDefaultViewName(views, store_1.ViewType.Gallery),
            type: store_1.ViewType.Gallery,
            columns: this.defaultColumns(srcView, 4),
            rows: this.defaultRows(srcView),
            style: this.defaultStyle(snapshot, srcView),
            displayHiddenColumnWithinMirror: true
        };
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.gallery_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.gallery_guide_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_gallery_guide_video.value),
        };
    }
}
exports.GalleryView = GalleryView;
/**
 * gallery view UI setting
 */
GalleryView.setGalleryStyle2Action = (snapshot, payload) => {
    const { viewId, styleKey, styleValue } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (view.type !== store_1.ViewType.Gallery || styleValue === view.style[styleKey]) {
        return null;
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'style', styleKey],
        oi: styleValue,
        od: view.style[styleKey],
    };
};


/***/ }),

/***/ 32155:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GanttView = exports.DEFAULT_WORK_DAYS = void 0;
const config_1 = __webpack_require__(77511);
const engine_1 = __webpack_require__(39036);
const field_1 = __webpack_require__(46559);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const i18n_1 = __webpack_require__(47511);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const views_1 = __webpack_require__(95104);
exports.DEFAULT_WORK_DAYS = [1, 2, 3, 4, 5];
class GanttView extends views_1.View {
    get recordShowName() {
        return (0, i18n_1.t)(i18n_1.Strings.gantt_task);
    }
    get recordShowUnit() {
        return '';
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.gantt_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.gantt_guide_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_gantt_guide_video.value),
        };
    }
    static findDateTimeFieldIds(srcView, fieldMap, state) {
        const filterIds = srcView.columns.filter(({ fieldId }) => {
            const field = fieldMap[fieldId];
            return field_1.Field.bindModel(field, state).basicValueType === types_1.BasicValueType.DateTime;
        }).map(column => column.fieldId);
        return filterIds;
    }
    static defaultStyle(snapshot, activeViewId, state) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        const dateTimeFieldIds = this.findDateTimeFieldIds(srcView, snapshot.meta.fieldMap, state);
        return {
            startFieldId: dateTimeFieldIds[0],
            endFieldId: dateTimeFieldIds[1] || dateTimeFieldIds[0],
            colorOption: {
                type: store_1.GanttColorType.Custom,
                fieldId: '',
                color: -1,
            },
            workDays: exports.DEFAULT_WORK_DAYS,
            onlyCalcWorkDay: false,
            linkFieldId: '',
            autoTaskLayout: false
        };
    }
    static defaultColumns(srcView) {
        if (!srcView) {
            throw Error((0, i18n_1.t)(i18n_1.Strings.error_not_found_the_source_of_view));
        }
        const columns = srcView.columns.map((column, index) => {
            const fieldId = column.fieldId;
            if (index === 0) {
                return { fieldId };
            }
            return { fieldId, hiddenInGantt: true, hidden: true };
        });
        return columns;
    }
    static generateDefaultProperty(snapshot, activeViewId, state) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        const views = snapshot.meta.views;
        return {
            id: datasheet_1.DatasheetActions.getNewViewId(views),
            name: datasheet_1.DatasheetActions.getDefaultViewName(views, store_1.ViewType.Gantt),
            type: store_1.ViewType.Gantt,
            rowHeightLevel: 1,
            columns: this.defaultColumns(srcView),
            rows: this.defaultRows(srcView),
            frozenColumnCount: 1,
            style: this.defaultStyle(snapshot, activeViewId, state),
            displayHiddenColumnWithinMirror: true
        };
    }
}
exports.GanttView = GanttView;
GanttView.setGanttStyle2Action = (snapshot, payload) => {
    const { viewId, data } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0)
        return [];
    const view = snapshot.meta.views[viewIndex];
    if (view.type !== store_1.ViewType.Gantt)
        return [];
    return data.filter(({ styleKey, styleValue }) => {
        return styleValue !== view.style[styleKey];
    }).map(({ styleKey, styleValue }) => {
        return {
            n: engine_1.OTActionName.ObjectReplace,
            p: ['meta', 'views', viewIndex, 'style', styleKey],
            oi: styleValue,
            od: view.style[styleKey],
        };
    });
};


/***/ }),

/***/ 26653:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.GridView = void 0;
const i18n_1 = __webpack_require__(47511);
const constants_1 = __webpack_require__(12690);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const views_1 = __webpack_require__(95104);
const config_1 = __webpack_require__(77511);
const utils_1 = __webpack_require__(26854);
class GridView extends views_1.View {
    get recordShowName() {
        return (0, i18n_1.t)(i18n_1.Strings.row);
    }
    get recordShowUnit() {
        return '';
    }
    static generateDefaultProperty(snapshot, activeViewId) {
        const views = snapshot.meta.views;
        let srcView;
        if (activeViewId) {
            srcView = (0, selectors_1.getViewById)(snapshot, activeViewId);
        }
        if (!srcView) {
            srcView = views[0];
        }
        let columns;
        if (srcView) {
            if (srcView.type === constants_1.ViewType.Grid) {
                columns = srcView.columns.map(item => {
                    return { fieldId: item.fieldId, width: item.width };
                });
            }
            else {
                columns = srcView.columns.map(item => {
                    return { fieldId: item.fieldId };
                });
            }
        }
        else {
            throw Error((0, i18n_1.t)(i18n_1.Strings.error_not_found_the_source_of_view));
        }
        return {
            id: datasheet_1.DatasheetActions.getNewViewId(views),
            name: datasheet_1.DatasheetActions.getDefaultViewName(views, constants_1.ViewType.Grid),
            type: constants_1.ViewType.Grid,
            rowHeightLevel: 1,
            columns,
            rows: this.defaultRows(srcView),
            frozenColumnCount: 1,
            displayHiddenColumnWithinMirror: false
        };
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.grid_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.grid_guide_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_grid_guide_video.value),
        };
    }
}
exports.GridView = GridView;


/***/ }),

/***/ 58009:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getViewAnalyticsId = exports.getViewClass = void 0;
const store_1 = __webpack_require__(56791);
const dom_id_1 = __webpack_require__(24693);
const calendar_view_1 = __webpack_require__(91273);
const form_view_1 = __webpack_require__(4904);
const gallery_view_1 = __webpack_require__(42583);
const grid_view_1 = __webpack_require__(26653);
const kanban_view_1 = __webpack_require__(39917);
const gantt_view_1 = __webpack_require__(32155);
const not_support_view_1 = __webpack_require__(80485);
const views_1 = __webpack_require__(95104);
const org_chart_view_1 = __webpack_require__(72563);
__exportStar(__webpack_require__(72563), exports);
__exportStar(__webpack_require__(91273), exports);
__exportStar(__webpack_require__(4904), exports);
__exportStar(__webpack_require__(42583), exports);
__exportStar(__webpack_require__(26653), exports);
__exportStar(__webpack_require__(39917), exports);
__exportStar(__webpack_require__(32155), exports);
__exportStar(__webpack_require__(80485), exports);
__exportStar(__webpack_require__(95104), exports);
views_1.View.bindModel = (viewType) => {
    const viewClass = getViewClass(viewType);
    return new viewClass();
};
function getViewClass(viewType) {
    switch (viewType) {
        case store_1.ViewType.Kanban:
            return kanban_view_1.KanbanView;
        case store_1.ViewType.Gallery:
            return gallery_view_1.GalleryView;
        case store_1.ViewType.Grid:
            return grid_view_1.GridView;
        case store_1.ViewType.Form:
            return form_view_1.FormView;
        case store_1.ViewType.Calendar:
            return calendar_view_1.CalendarView;
        case store_1.ViewType.Gantt:
            return gantt_view_1.GanttView;
        case store_1.ViewType.OrgChart:
            return org_chart_view_1.OrgChartView;
        default:
            return not_support_view_1.NotSupportView;
    }
}
exports.getViewClass = getViewClass;
// sensor custom attributes 
function getViewAnalyticsId(viewType) {
    switch (viewType) {
        case store_1.ViewType.Kanban:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_KANBAN;
        case store_1.ViewType.Gallery:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_GALLERY;
        case store_1.ViewType.Grid:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_GRID;
        case store_1.ViewType.Form:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_FORM;
        case store_1.ViewType.Calendar:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_CALENDAR;
        case store_1.ViewType.Gantt:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_GANTT;
        case store_1.ViewType.OrgChart:
            return dom_id_1.DATASHEET_ID.VIEW_CREATOR_ORG_CHART;
        default:
            return '';
    }
}
exports.getViewAnalyticsId = getViewAnalyticsId;


/***/ }),

/***/ 39917:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.KanbanView = void 0;
const config_1 = __webpack_require__(77511);
const engine_1 = __webpack_require__(39036);
const i18n_1 = __webpack_require__(47511);
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const card_view_1 = __webpack_require__(12468);
const utils_1 = __webpack_require__(26854);
class KanbanView extends card_view_1.CardView {
    static findGroupFieldId(srcView, fieldMap) {
        const column = srcView.columns.find(item => {
            const field = fieldMap[item.fieldId];
            return field.type === types_1.FieldType.SingleSelect ||
                (field.type === types_1.FieldType.Member && !field.property.isMulti);
        });
        return column === null || column === void 0 ? void 0 : column.fieldId;
    }
    static getFieldProperty(column, fieldMap) {
        if (!column) {
            return [];
        }
        const field = fieldMap[column.fieldId];
        if (field.type === types_1.FieldType.Member) {
            return field.property.unitIds;
        }
        if (field.type === types_1.FieldType.SingleSelect) {
            return field.property.options.map(item => item.id);
        }
        return [];
    }
    static getHiddenGroupMap(field) {
        if (!field) {
            return;
        }
        const hiddenGroupMap = {};
        if (field.type === types_1.FieldType.SingleSelect) {
            field.property.options.forEach(item => {
                hiddenGroupMap[item.id] = false;
            });
        }
        else {
            field.property.unitIds.forEach(id => {
                hiddenGroupMap[id] = false;
            });
        }
        return hiddenGroupMap;
    }
    static defaultStyle(snapshot, activeViewId) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        // the first attachment field will be default cover field
        const kanbanFieldId = this.findGroupFieldId(srcView, snapshot.meta.fieldMap);
        const field = snapshot.meta.fieldMap[kanbanFieldId];
        return {
            isCoverFit: false,
            coverFieldId: undefined,
            kanbanFieldId,
            isColNameVisible: true,
            hiddenGroupMap: KanbanView.getHiddenGroupMap(field),
        };
    }
    static generateDefaultProperty(snapshot, activeViewId) {
        const srcView = this.getSrcView(snapshot, activeViewId);
        const views = snapshot.meta.views;
        return {
            id: model_1.DatasheetActions.getNewViewId(views),
            name: model_1.DatasheetActions.getDefaultViewName(views, store_1.ViewType.Kanban),
            type: store_1.ViewType.Kanban,
            columns: this.defaultColumns(srcView, 2),
            rows: this.defaultRows(srcView),
            style: this.defaultStyle(snapshot, activeViewId),
            groupInfo: [{ fieldId: this.findGroupFieldId(srcView, snapshot.meta.fieldMap), desc: false }],
            displayHiddenColumnWithinMirror: true
        };
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.kanban_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.kanban_guide_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_kanban_guide_video.value),
        };
    }
}
exports.KanbanView = KanbanView;
KanbanView.setViewStyle2Action = (snapshot, payload) => {
    const { viewId, styleKey, styleValue } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (view.type !== store_1.ViewType.Kanban || styleValue === view.style[styleKey]) {
        return null;
    }
    if (styleValue == null) {
        return {
            n: engine_1.OTActionName.ObjectDelete,
            p: ['meta', 'views', viewIndex, 'style', styleKey],
            od: view.style[styleKey],
        };
    }
    return {
        n: engine_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'style', styleKey],
        oi: styleValue,
        od: view.style[styleKey],
    };
};


/***/ }),

/***/ 80485:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NotSupportView = void 0;
const views_1 = __webpack_require__(95104);
class NotSupportView extends views_1.View {
    static generateDefaultProperty(_snapshot, _activeViewId) {
        return null;
    }
    static getViewIntroduce() {
        return null;
    }
}
exports.NotSupportView = NotSupportView;


/***/ }),

/***/ 72563:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OrgChartView = void 0;
const i18n_1 = __webpack_require__(47511);
const constants_1 = __webpack_require__(12690);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(55384);
const views_1 = __webpack_require__(95104);
const config_1 = __webpack_require__(77511);
const utils_1 = __webpack_require__(26854);
const field_types_1 = __webpack_require__(80360);
const interface_1 = __webpack_require__(27669);
class OrgChartView extends views_1.View {
    get recordShowName() {
        return (0, i18n_1.t)(i18n_1.Strings.row);
    }
    get recordShowUnit() {
        return '';
    }
    static defaultStyle(snapshot, srcView) {
        // the first attachment field set as default cover field
        const initCoverField = srcView.columns.find(col => snapshot.meta.fieldMap[col.fieldId].type === field_types_1.FieldType.Attachment);
        const linkField = srcView.columns.find(col => {
            const field = snapshot.meta.fieldMap[col.fieldId];
            return field.type === field_types_1.FieldType.Link && field.property.foreignDatasheetId === snapshot.datasheetId;
        });
        return {
            isCoverFit: false,
            coverFieldId: initCoverField === null || initCoverField === void 0 ? void 0 : initCoverField.fieldId,
            isColNameVisible: true,
            linkFieldId: linkField === null || linkField === void 0 ? void 0 : linkField.fieldId,
            horizontal: false,
        };
    }
    static defaultColumns(srcView) {
        if (!srcView) {
            throw Error((0, i18n_1.t)(i18n_1.Strings.error_not_found_the_source_of_view));
        }
        const columns = srcView.columns.map((column, index) => {
            const fieldId = column.fieldId;
            if (index === 0) {
                return { fieldId };
            }
            return { fieldId, hiddenInOrgChart: true, hidden: true };
        });
        return columns;
    }
    static generateDefaultProperty(snapshot, activeViewId) {
        const views = snapshot.meta.views;
        let srcView;
        if (activeViewId) {
            srcView = (0, selectors_1.getViewById)(snapshot, activeViewId);
        }
        if (!srcView) {
            srcView = views[0];
        }
        return {
            id: datasheet_1.DatasheetActions.getNewViewId(views),
            name: datasheet_1.DatasheetActions.getDefaultViewName(views, constants_1.ViewType.OrgChart),
            type: constants_1.ViewType.OrgChart,
            columns: this.defaultColumns(srcView),
            rows: this.defaultRows(srcView),
            style: this.defaultStyle(snapshot, srcView),
            displayHiddenColumnWithinMirror: true
        };
    }
    static getViewIntroduce() {
        return {
            title: (0, i18n_1.t)(i18n_1.Strings.org_chart_view),
            desc: (0, i18n_1.t)(i18n_1.Strings.org_guide_desc),
            videoGuide: (0, utils_1.integrateCdnHost)(config_1.Settings.view_architecture_guide_video.value),
        };
    }
}
exports.OrgChartView = OrgChartView;
OrgChartView.setOrgChartStyle2Action = (snapshot, payload) => {
    const { viewId, styleKey, styleValue } = payload;
    const viewIndex = (0, selectors_1.getViewIndex)(snapshot, viewId);
    if (viewIndex < 0) {
        return null;
    }
    const view = snapshot.meta.views[viewIndex];
    if (view.type !== constants_1.ViewType.OrgChart || styleValue === view.style[styleKey]) {
        return null;
    }
    return {
        n: interface_1.OTActionName.ObjectReplace,
        p: ['meta', 'views', viewIndex, 'style', styleKey],
        oi: styleValue,
        od: view.style[styleKey],
    };
};


/***/ }),

/***/ 95104:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.View = void 0;
const selectors_1 = __webpack_require__(964);
const i18n_1 = __webpack_require__(47511);
/**
 * here's `views` means table view / gallery view, not `view` in table area.
 */
class View {
    static getSrcView(snapshot, activeViewId) {
        const views = snapshot.meta.views;
        let srcView;
        if (activeViewId) {
            srcView = (0, selectors_1.getViewById)(snapshot, activeViewId);
        }
        if (!srcView) {
            srcView = views[0];
        }
        return srcView;
    }
    static defaultRows(srcView) {
        if (srcView) {
            return srcView.rows;
        }
        return [];
    }
    /**
     *  `record` has different name in different view, such as `row`, `record`, `task`, etc.
     * every view need to define their own name of record.
     */
    get recordShowName() {
        return (0, i18n_1.t)(i18n_1.Strings.record);
    }
    get recordShowUnit() {
        // TODO: i18n
        return '条';
    }
}
exports.View = View;


/***/ }),

/***/ 84827:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WidgetActions = void 0;
const interface_1 = __webpack_require__(27669);
class WidgetActions {
    static setGlobalStorage2Action(snapshot, payload) {
        const { storage } = snapshot;
        const { value, key } = payload;
        // if exists, then overwrite.
        // if not exists, then insert.
        // if value is null, then delete
        if (storage && Object.keys(storage).includes(key)) {
            return [{
                    n: interface_1.OTActionName.ObjectReplace,
                    p: ['storage', key],
                    oi: value,
                    od: storage[key],
                }];
        }
        return [{
                n: interface_1.OTActionName.ObjectInsert,
                p: ['storage', key],
                oi: value,
            }];
    }
    static setWidgetName2Action(snapshot, payload) {
        const { newWidgetName } = payload;
        return [
            {
                n: interface_1.OTActionName.ObjectReplace,
                p: ['widgetName'],
                od: snapshot.widgetName,
                oi: newWidgetName,
            },
        ];
    }
    static setWidgetDepDstId2Action(snapshot, payload) {
        const { dstId, sourceId } = payload;
        const action = [
            {
                n: interface_1.OTActionName.ObjectReplace,
                p: ['datasheetId'],
                od: snapshot.datasheetId,
                oi: dstId,
            }
        ];
        if (sourceId) {
            action.push({
                n: interface_1.OTActionName.ObjectReplace,
                p: ['sourceId'],
                od: snapshot.sourceId,
                oi: sourceId,
            });
        }
        return action;
    }
}
exports.WidgetActions = WidgetActions;


/***/ }),

/***/ 82817:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchEmbedDashboardPack = exports.fetchTemplateDashboardPack = exports.fetchShareDashboardPack = exports.fetchDashboardPack = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const urlcat_1 = __importDefault(__webpack_require__(83764));
const Url = __importStar(__webpack_require__(11546));
const baseURL = "/nest/v1";
const fetchDashboardPack = (dashboardId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.FETCH_DASHBOARD, { dashboardId }), {
        baseURL,
    });
};
exports.fetchDashboardPack = fetchDashboardPack;
const fetchShareDashboardPack = (dashboardId, shareId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.FETCH_SHARE_DASHBOARD, { shareId, dashboardId }), {
        baseURL,
    });
};
exports.fetchShareDashboardPack = fetchShareDashboardPack;
const fetchTemplateDashboardPack = (dashboardId, templateId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.FETCH_TEMPLATE_DASHBOARD, { dashboardId, templateId }), {
        baseURL,
    });
};
exports.fetchTemplateDashboardPack = fetchTemplateDashboardPack;
const fetchEmbedDashboardPack = (dashboardId, embedId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.FETCH_EMBED_DASHBOARD, { dashboardId, embedId }), {
        baseURL,
    });
};
exports.fetchEmbedDashboardPack = fetchEmbedDashboardPack;


/***/ }),

/***/ 22517:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 68615:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.batchDeletePermissionRole = exports.unsubscribeRecordByIds = exports.subscribeRecordByIds = exports.getSubscriptions = exports.getCommentsByIds = exports.getContentDisposition = exports.getShareDstViewDataPack = exports.getDstViewDataPack = exports.batchEditFieldPermissionRole = exports.getFieldPermissionMap = exports.fetchFieldPermissionRoleList = exports.updateFieldPermissionSetting = exports.deleteFieldPermissionRole = exports.editFieldPermissionRole = exports.addFieldPermissionRole = exports.setFieldPermissionStatus = exports.fetchDatasheetMeta = exports.fetchRecords = exports.fetchUserList = exports.getActivityList = exports.fetchChangesets = exports.fetchEmbedForeignDatasheetPack = exports.fetchShareForeignDatasheetPack = exports.fetchForeignDatasheetPack = exports.fetchEmbedDatasheetPack = exports.fetchTemplateDatasheetPack = exports.fetchShareDatasheetPack = exports.fetchDatasheetPack = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(11546));
const qs_1 = __importDefault(__webpack_require__(87104));
const urlcat_1 = __importDefault(__webpack_require__(83764));
const baseURL = "/nest/v1";
/**
 * get space datasheet pack
 * @param dstId
 * @param recordIds
 * @returns
 */
function fetchDatasheetPack(dstId, recordIds) {
    console.log({ baseURL });
    return axios_1.default.get((0, urlcat_1.default)(Url.DATAPACK, { dstId }), {
        baseURL,
        params: {
            recordIds
        },
        paramsSerializer: params => {
            return qs_1.default.stringify(params, { arrayFormat: 'repeat' });
        }
    });
}
exports.fetchDatasheetPack = fetchDatasheetPack;
/**
 * get share datasheet pack
 *
 * @param shareId
 * @param dstId
 * @returns
 */
function fetchShareDatasheetPack(shareId, dstId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_SHARE_DATAPACK, { shareId, dstId }), { baseURL });
}
exports.fetchShareDatasheetPack = fetchShareDatasheetPack;
/**
 * get template datasheet pack
 *
 * @param dstId
 * @returns
 */
const fetchTemplateDatasheetPack = (dstId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_TEMPLATE_DATAPACK, { dstId }), { baseURL });
};
exports.fetchTemplateDatasheetPack = fetchTemplateDatasheetPack;
/**
 * get embed datasheet pack
 */
function fetchEmbedDatasheetPack(embedId, dstId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_EMBED_DATAPACK, { embedId, dstId }), { baseURL });
}
exports.fetchEmbedDatasheetPack = fetchEmbedDatasheetPack;
/**
 * get related datasheet pack in the same space. support resource: datasheet, form, mirror
 *
 * @param resourceId
 * @param foreignDatasheetId
 * @returns
 */
function fetchForeignDatasheetPack(resourceId, foreignDatasheetId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_FOREIGN_DATASHEET_PACK, { resourceId, foreignDatasheetId }), { baseURL });
}
exports.fetchForeignDatasheetPack = fetchForeignDatasheetPack;
/**
 * get related datasheet pack in the share.
 * support resource: datasheet, form, mirror
 * @param shareId
 * @param resourceId
 * @param foreignDatasheetId
 * @returns
 */
function fetchShareForeignDatasheetPack(shareId, resourceId, foreignDatasheetId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_SHARE_FOREIGN_DATASHEET_PACK, { shareId, resourceId, foreignDatasheetId }), { baseURL });
}
exports.fetchShareForeignDatasheetPack = fetchShareForeignDatasheetPack;
function fetchEmbedForeignDatasheetPack(embedId, resourceId, foreignDatasheetId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_EMBED_FOREIGN_DATASHEET_PACK, { embedId, resourceId, foreignDatasheetId }), { baseURL });
}
exports.fetchEmbedForeignDatasheetPack = fetchEmbedForeignDatasheetPack;
/**
 * get changeset list
 * @param resourceId
 * @param resourceType
 * @param startRevision inclusive
 * @param endRevision   exclusive
 * @returns
 */
function fetchChangesets(resourceId, resourceType, startRevision, endRevision, sourceId, shareId) {
    const url = shareId ? (0, urlcat_1.default)(Url.READ_SHARE_CHANGESET, { shareId, resourceId }) : (0, urlcat_1.default)(Url.READ_CHANGESET, { resourceId });
    return axios_1.default.get(url, {
        baseURL,
        params: {
            resourceType,
            startRevision,
            endRevision,
            sourceId,
        },
        // serialize params revisions: [1,2,3] to normal GET params revisions=1&revisions=2&revisions=3
        paramsSerializer: params => {
            return qs_1.default.stringify(params, { arrayFormat: 'repeat' });
        },
    });
}
exports.fetchChangesets = fetchChangesets;
/**
 * get specified record's history and comments
 * support: datasheet, mirror
 *
 * @param resourceId
 * @param recId
 * @param params
 * @param cancelSource
 * @returns
 */
function getActivityList(resourceId, recId, params, cancelSource) {
    const query = {
        baseURL,
        params,
    };
    if (cancelSource) {
        query.cancelToken = cancelSource.token;
    }
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_RECORD_ACTIVITY_LIST, { resourceId, recId }), query);
}
exports.getActivityList = getActivityList;
/**
 * get user infos by uuids
 *
 * @param nodeId
 * @param uuids
 * @returns
 */
function fetchUserList(nodeId, uuids) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_USER_LIST, { nodeId }), {
        baseURL,
        params: {
            uuids,
        },
        // serialize params revisions: [1,2,3] to normal GET params revisons=1&revisions=2&revisions=3
        paramsSerializer: params => {
            return qs_1.default.stringify(params, { arrayFormat: 'repeat' });
        },
    });
}
exports.fetchUserList = fetchUserList;
/**
 * get data records
 * @param dstId
 * @param recordIds
 * @returns
 */
function fetchRecords(dstId, recordIds) {
    return axios_1.default.post((0, urlcat_1.default)(Url.READ_RECORDS, { dstId }), recordIds, { baseURL });
}
exports.fetchRecords = fetchRecords;
/**
 * get datasheet meta info
 *
 * @param dstId
 * @returns
 */
function fetchDatasheetMeta(dstId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_DATASHEET_META, { dstId }), { baseURL });
}
exports.fetchDatasheetMeta = fetchDatasheetMeta;
/**
 * open or close field permission
 *
 * @param dstId
 * @param fieldId
 * @param open
 * @param includeExtend
 * @returns
 */
function setFieldPermissionStatus(dstId, fieldId, open, includeExtend) {
    const params = includeExtend ? { includeExtend } : {};
    return axios_1.default.post((0, urlcat_1.default)(Url.FIELD_PERMISSION_STATUS, { dstId, fieldId, status: open ? 'enable' : 'disable' }), params);
}
exports.setFieldPermissionStatus = setFieldPermissionStatus;
/**
 * add field permission role
 *
 * @param dstId
 * @param fieldId
 * @param option
 * @returns
 */
function addFieldPermissionRole(dstId, fieldId, option) {
    return axios_1.default.post((0, urlcat_1.default)(Url.FIELD_PERMISSION_ADD_ROLE, { dstId, fieldId }), option);
}
exports.addFieldPermissionRole = addFieldPermissionRole;
/**
 * edit field permission role
 *
 * @param dstId
 * @param fieldId
 * @param option
 * @returns
 */
function editFieldPermissionRole(dstId, fieldId, option) {
    return axios_1.default.post((0, urlcat_1.default)(Url.FIELD_PERMISSION_EDIT_ROLE, { dstId, fieldId }), option);
}
exports.editFieldPermissionRole = editFieldPermissionRole;
/**
 * delete field permission role
 * @param dstId
 * @param fieldId
 * @param unitId
 * @returns
 */
function deleteFieldPermissionRole(dstId, fieldId, unitId) {
    return axios_1.default.delete((0, urlcat_1.default)(Url.FIELD_PERMISSION_DELETE_ROLE, { dstId, fieldId }), {
        data: {
            unitId,
        },
    });
}
exports.deleteFieldPermissionRole = deleteFieldPermissionRole;
/**
 * update field permission's other config
 * @param dstId
 * @param fieldId
 * @param formSheetAccessible
 * @returns
 */
function updateFieldPermissionSetting(dstId, fieldId, formSheetAccessible) {
    return axios_1.default.post((0, urlcat_1.default)(Url.FIELD_PERMISSION_UPDATE_SETTING, { dstId, fieldId }), { formSheetAccessible });
}
exports.updateFieldPermissionSetting = updateFieldPermissionSetting;
/**
 * get field(column) permissions' all roles list
 *
 * @param dstId
 * @param fieldId
 * @returns
 */
function fetchFieldPermissionRoleList(dstId, fieldId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.FIELD_PERMISSION_ROLE_LIST, { dstId, fieldId }));
}
exports.fetchFieldPermissionRoleList = fetchFieldPermissionRoleList;
/**
 * get field permissions map
 *
 * @param dstIds
 * @param shareId
 * @returns
 */
function getFieldPermissionMap(dstIds, shareId) {
    return axios_1.default.get(Url.GET_FIELD_PERMISSION_MAP, {
        params: {
            dstIds: dstIds.join(','),
            shareId,
        },
    });
}
exports.getFieldPermissionMap = getFieldPermissionMap;
/**
 *
 * batch edit field permissions role
 *
 * @param dstId
 * @param fieldId
 * @param option
 * @returns
 */
function batchEditFieldPermissionRole(dstId, fieldId, option) {
    return axios_1.default.post((0, urlcat_1.default)(Url.BATCH_EDIT_PERMISSION_ROLE, { dstId, fieldId }), option);
}
exports.batchEditFieldPermissionRole = batchEditFieldPermissionRole;
/**
 * get datasheet view datapack
 *
 * @param dstId
 * @param viewId
 * @returns
 */
function getDstViewDataPack(dstId, viewId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_DST_VIEW_DATA_PACK, { dstId, viewId }), { baseURL });
}
exports.getDstViewDataPack = getDstViewDataPack;
/**
 * get share datasheet view data pack
 *
 * @param dstId
 * @param viewId
 * @param shareId
 * @returns
 */
function getShareDstViewDataPack(dstId, viewId, shareId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_SHARE_DST_VIEW_DATA_PACK, { dstId, viewId, shareId }), { baseURL });
}
exports.getShareDstViewDataPack = getShareDstViewDataPack;
function getContentDisposition(url) {
    return axios_1.default.post(Url.GET_CONTENT_DISPOSITION, { url }, { baseURL });
}
exports.getContentDisposition = getContentDisposition;
function getCommentsByIds(dstId, recordId, commentIds) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_COMMENTS_BY_IDS, { dstId, recordId }) + `?commentIds=${commentIds}`, {
        baseURL,
    });
}
exports.getCommentsByIds = getCommentsByIds;
/**
 * get datasheet/mirror's being subscription(followed) record ids
 *
 * @param dstId
 * @param mirrorId
 * @returns
 */
const getSubscriptions = (dstId, mirrorId) => mirrorId
    ? axios_1.default.get((0, urlcat_1.default)(Url.GET_MIRROR_SUBSCRIPTIONS, { mirrorId }), { baseURL })
    : axios_1.default.get((0, urlcat_1.default)(Url.GET_DATASHEET_SUBSCRIPTIONS, { dstId }), { baseURL });
exports.getSubscriptions = getSubscriptions;
/**
 *
 * subscribe(follow) datasheet/mirror's record
 *
 * @param param0
 * @returns
 */
const subscribeRecordByIds = ({ datasheetId, mirrorId, recordIds }) => mirrorId
    ? axios_1.default.post((0, urlcat_1.default)(Url.SUBSCRIBE_MIRROR_RECORDS, { mirrorNodeId: mirrorId }), { recordIds }, { baseURL })
    : axios_1.default.post((0, urlcat_1.default)(Url.SUBSCRIBE_DATASHEET_RECORDS, { dstId: datasheetId }), { recordIds }, { baseURL });
exports.subscribeRecordByIds = subscribeRecordByIds;
/**
 * unsubscribe(cancel follow) datasheet/mirror's record
 * @param param0
 * @returns
 */
const unsubscribeRecordByIds = ({ datasheetId, mirrorId, recordIds }) => mirrorId
    ? axios_1.default.delete((0, urlcat_1.default)(Url.UNSUBSCRIBE_MIRROR_RECORDS, { mirrorNodeId: mirrorId }), { data: { recordIds }, baseURL })
    : axios_1.default.delete((0, urlcat_1.default)(Url.UNSUBSCRIBE_DATASHEET_RECORDS, { dstId: datasheetId }), { data: { recordIds }, baseURL });
exports.unsubscribeRecordByIds = unsubscribeRecordByIds;
/**
 * batch delete field permissions
 * @param dstId
 * @param fieldId
 * @param option
 * @returns
 */
const batchDeletePermissionRole = (dstId, fieldId, option) => {
    return axios_1.default.delete((0, urlcat_1.default)(Url.BATCH_DELETE_PERMISSION_ROLE, { dstId, fieldId }), { data: option });
};
exports.batchDeletePermissionRole = batchDeletePermissionRole;


/***/ }),

/***/ 53403:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchFormSubmitStatus = exports.updateFormProps = exports.fetchFormProps = exports.addShareFormRecord = exports.addFormRecord = exports.fetchTemplateFormPack = exports.fetchShareFormPack = exports.fetchFormPack = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(11546));
const urlcat_1 = __importDefault(__webpack_require__(83764));
const baseURL = "/nest/v1";
function fetchFormPack(formId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.FORMPACK, { formId }), { baseURL });
}
exports.fetchFormPack = fetchFormPack;
function fetchShareFormPack(shareId, formId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_SHARE_FORMPACK, { shareId, formId }), { baseURL });
}
exports.fetchShareFormPack = fetchShareFormPack;
function fetchTemplateFormPack(templateId, formId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_TEMPLATE_FORMPACK, { templateId, formId }), { baseURL });
}
exports.fetchTemplateFormPack = fetchTemplateFormPack;
function addFormRecord(formId, recordData) {
    return axios_1.default.post((0, urlcat_1.default)(Url.FORM_ADD_RECORD, {
        formId,
    }), recordData, { baseURL });
}
exports.addFormRecord = addFormRecord;
function addShareFormRecord(formId, shareId, recordData) {
    return axios_1.default.post((0, urlcat_1.default)(Url.SHARE_FORM_ADD_RECORD, {
        formId, shareId,
    }), recordData, { baseURL });
}
exports.addShareFormRecord = addShareFormRecord;
function fetchFormProps(formId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_FORM_PROPS, { formId }), { baseURL });
}
exports.fetchFormProps = fetchFormProps;
function updateFormProps(formId, formProps) {
    return axios_1.default.post((0, urlcat_1.default)(Url.UPDATE_FORM_PROPS, {
        formId,
    }), formProps, { baseURL });
}
exports.updateFormProps = updateFormProps;
function fetchFormSubmitStatus(formId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_FORM_SUBMIT_STATUS, { formId }), { baseURL });
}
exports.fetchFormSubmitStatus = fetchFormSubmitStatus;


/***/ }),

/***/ 85156:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchShareMirrorDataPack = exports.fetchShareMirrorInfo = exports.fetchMirrorDataPack = exports.fetchMirrorInfo = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(11546));
const qs_1 = __importDefault(__webpack_require__(87104));
const urlcat_1 = __importDefault(__webpack_require__(83764));
const baseURL = "/nest/v1";
const fetchMirrorInfo = (mirrorId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_MIRROR_INFO, { mirrorId }), { baseURL });
};
exports.fetchMirrorInfo = fetchMirrorInfo;
const fetchMirrorDataPack = (mirrorId, recordIds) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_MIRROR_DATA_PACK, { mirrorId }), {
        baseURL,
        params: {
            recordIds
        },
        paramsSerializer: params => {
            return qs_1.default.stringify(params, { arrayFormat: 'repeat' });
        }
    });
};
exports.fetchMirrorDataPack = fetchMirrorDataPack;
const fetchShareMirrorInfo = (shareId, mirrorId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_SHARE_MIRROR_INFO, { shareId, mirrorId }), { baseURL });
};
exports.fetchShareMirrorInfo = fetchShareMirrorInfo;
const fetchShareMirrorDataPack = (shareId, mirrorId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.READ_SHARE_MIRROR_DATA_PACK, { shareId, mirrorId }), { baseURL });
};
exports.fetchShareMirrorDataPack = fetchShareMirrorDataPack;


/***/ }),

/***/ 11546:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SUBSCRIBE_DATASHEET_RECORDS = exports.GET_DATASHEET_SUBSCRIPTIONS = exports.READ_DATASHEET_META = exports.GET_USER_LIST = exports.READ_EMBED_DATAPACK = exports.READ_TEMPLATE_DATAPACK = exports.READ_SHARE_DATAPACK = exports.READ_RECORDS = exports.DATAPACK = exports.READ_EMBED_FOREIGN_DATASHEET_PACK = exports.GET_RECORD_ACTIVITY_LIST = exports.READ_SHARE_FOREIGN_DATASHEET_PACK = exports.READ_FOREIGN_DATASHEET_PACK = exports.READ_SHARE_CHANGESET = exports.READ_CHANGESET = exports.APPLY_RESOURCE_CHANGESETS = exports.GET_COMMENTS_BY_IDS = exports.NOTIFICATION_PATH = exports.ROOM_PATH = exports.WEBSOCKET_NAMESPACE = exports.READ_FORM_SUBMIT_STATUS = exports.READ_FORM_PROPS = exports.UPDATE_FORM_PROPS = exports.SHARE_FORM_ADD_RECORD = exports.FORM_ADD_RECORD = exports.READ_TEMPLATE_FORMPACK = exports.READ_SHARE_FORMPACK = exports.FORMPACK = exports.GET_SHARE_DST_VIEW_DATA_PACK = exports.GET_DST_VIEW_DATA_PACK = exports.UNSUBSCRIBE_MIRROR_RECORDS = exports.SUBSCRIBE_MIRROR_RECORDS = exports.GET_MIRROR_SUBSCRIPTIONS = exports.READ_SHARE_MIRROR_DATA_PACK = exports.READ_SHARE_MIRROR_INFO = exports.READ_MIRROR_DATA_PACK = exports.READ_MIRROR_INFO = exports.BATCH_DELETE_PERMISSION_ROLE = exports.BATCH_EDIT_PERMISSION_ROLE = exports.GET_FIELD_PERMISSION_MAP = exports.FIELD_PERMISSION_UPDATE_SETTING = exports.FIELD_PERMISSION_STATUS = exports.FIELD_PERMISSION_ROLE_LIST = exports.FIELD_PERMISSION_EDIT_ROLE = exports.FIELD_PERMISSION_DELETE_ROLE = exports.FIELD_PERMISSION_ADD_ROLE = exports.FETCH_EMBED_DASHBOARD = exports.FETCH_TEMPLATE_DASHBOARD = exports.FETCH_SHARE_DASHBOARD = exports.FETCH_DASHBOARD = void 0;
exports.GET_CONTENT_DISPOSITION = exports.UNSUBSCRIBE_DATASHEET_RECORDS = void 0;
// =============== Dashboard related =======================
exports.FETCH_DASHBOARD = '/dashboard/:dashboardId/dataPack';
exports.FETCH_SHARE_DASHBOARD = '/share/:shareId/dashboard/:dashboardId/dataPck';
exports.FETCH_TEMPLATE_DASHBOARD = '/template/:templateId/dashboard/:dashboardId/dataPck';
exports.FETCH_EMBED_DASHBOARD = '/embedlinks/:embedId/dashboards/:dashboardId/dataPack';
// =============== Dashboard related =======================
// =============== Column permissions related start =======================
exports.FIELD_PERMISSION_ADD_ROLE = 'datasheet/:dstId/field/:fieldId/addRole';
exports.FIELD_PERMISSION_DELETE_ROLE = 'datasheet/:dstId/field/:fieldId/deleteRole';
exports.FIELD_PERMISSION_EDIT_ROLE = 'datasheet/:dstId/field/:fieldId/editRole';
exports.FIELD_PERMISSION_ROLE_LIST = 'datasheet/:dstId/field/:fieldId/listRole';
exports.FIELD_PERMISSION_STATUS = 'datasheet/:dstId/field/:fieldId/permission/:status';
exports.FIELD_PERMISSION_UPDATE_SETTING = 'datasheet/:dstId/field/:fieldId/updateRoleSetting';
exports.GET_FIELD_PERMISSION_MAP = 'datasheet/field/permission';
exports.BATCH_EDIT_PERMISSION_ROLE = 'datasheet/:dstId/field/:fieldId/batchEditRole';
exports.BATCH_DELETE_PERMISSION_ROLE = 'datasheet/:dstId/field/:fieldId/batchDeleteRole';
// =============== Column permissions related end =======================
// ================ mirror related start =======================
exports.READ_MIRROR_INFO = 'mirror/:mirrorId/info'; // Request mirror data
exports.READ_MIRROR_DATA_PACK = 'mirror/:mirrorId/dataPack'; // Request the data of the mirror-related table
exports.READ_SHARE_MIRROR_INFO = 'share/:shareId/mirror/:mirrorId/info'; // Request the data of mirror-related tables
exports.READ_SHARE_MIRROR_DATA_PACK = 'share/:shareId/mirror/:mirrorId/dataPack'; // Request the data of the mirror-related table
exports.GET_MIRROR_SUBSCRIPTIONS = '/mirrors/:mirrorId/records/subscriptions'; // Get the concerned record IDs of the mirror table
exports.SUBSCRIBE_MIRROR_RECORDS = '/mirrors/:mirrorNodeId/records/subscriptions'; // Pay attention to the data in the mirror table
exports.UNSUBSCRIBE_MIRROR_RECORDS = '/mirrors/:mirrorNodeId/records/subscriptions'; // Unfollow the data in the mirror table
// =============== mirror related end =======================
// ================ View switch related start =======================
exports.GET_DST_VIEW_DATA_PACK = 'datasheet/:dstId/view/:viewId/dataPack';
exports.GET_SHARE_DST_VIEW_DATA_PACK = 'share/:shareId/datasheet/:dstId/view/:viewId/dataPack';
// =============== View switch related end =======================
// =============== datasheet related =======================
// ================ form ================
// load form data
exports.FORMPACK = '/form/:formId/dataPack';
// Get form share page data
exports.READ_SHARE_FORMPACK = '/share/:shareId/form/:formId/dataPack';
// Get form template page data
exports.READ_TEMPLATE_FORMPACK = '/template/:templateId/form/:formId/dataPack';
// Form submission data in the space station
exports.FORM_ADD_RECORD = '/form/:formId/addRecord';
// form share page submit data
exports.SHARE_FORM_ADD_RECORD = '/share/:shareId/form/:formId/addRecord';
// Update form related properties in the space station
exports.UPDATE_FORM_PROPS = '/form/:formId/props';
// Get all the properties of the form in the space station
exports.READ_FORM_PROPS = '/form/:formId/props';
// Update form related properties in the space station
exports.READ_FORM_SUBMIT_STATUS = '/form/:formId/submitStatus';
// =============== Magic form related ===============
// =============== Socket =======================
// datasheet long link
exports.WEBSOCKET_NAMESPACE = '/room';
// datasheet - collaborative operation long link
exports.ROOM_PATH = '/room';
// message notification long link
exports.NOTIFICATION_PATH = '/notification';
// =============== Socket related =======================
exports.GET_COMMENTS_BY_IDS = 'datasheet/:dstId/record/:recordId/comments';
exports.APPLY_RESOURCE_CHANGESETS = 'resource/apply/changesets';
// =============== Resource related =======================
// Get a list of resource-specific changesets
exports.READ_CHANGESET = '/resource/:resourceId/changesets';
exports.READ_SHARE_CHANGESET = '/shares/:shareId/resources/:resourceId/changesets';
// Get the associated table data of the resource
exports.READ_FOREIGN_DATASHEET_PACK = '/resource/:resourceId/foreignDatasheet/:foreignDatasheetId/dataPack';
// Get the associated table data of the shared resource
exports.READ_SHARE_FOREIGN_DATASHEET_PACK = '/share/:shareId/resource/:resourceId/foreignDatasheet/:foreignDatasheetId/dataPack';
// Get comments and history for a single record
exports.GET_RECORD_ACTIVITY_LIST = '/resources/:resourceId/records/:recId/activity';
exports.READ_EMBED_FOREIGN_DATASHEET_PACK = 'embedlinks/:embedId/resources/:resourceId/foreignDatasheets/:foreignDatasheetId/dataPack';
// =============== datasheet related =======================
// load table data package
exports.DATAPACK = '/datasheet/:dstId/dataPack';
// Get the list of specified records in the datasheet
exports.READ_RECORDS = '/datasheet/:dstId/records';
// Get the form data of the share page
exports.READ_SHARE_DATAPACK = '/share/:shareId/datasheet/:dstId/dataPack';
// template packet
exports.READ_TEMPLATE_DATAPACK = '/template/datasheet/:dstId/dataPack';
// Get the form  Data of the embed page
exports.READ_EMBED_DATAPACK = '/embedlinks/:embedId/datasheets/:dstId/dataPack';
// get user list
exports.GET_USER_LIST = '/datasheet/:nodeId/users';
// Get the Meta corresponding to the datasheet
exports.READ_DATASHEET_META = '/datasheet/:dstId/meta';
exports.GET_DATASHEET_SUBSCRIPTIONS = '/datasheets/:dstId/records/subscriptions'; // Get the concerned record IDs of the datasheet GET
exports.SUBSCRIBE_DATASHEET_RECORDS = '/datasheets/:dstId/records/subscriptions'; // Follow the data in the datasheet POST
exports.UNSUBSCRIBE_DATASHEET_RECORDS = '/datasheets/:dstId/records/subscriptions'; // Unfollow the data in the datasheets
// =============== datasheet related =======================
exports.GET_CONTENT_DISPOSITION = '/attach/getContentDisposition';


/***/ }),

/***/ 25821:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setPageParams = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const actions = __importStar(__webpack_require__(86256));
function setPageParams(payload) {
    if (payload.spaceId) {
        axios_1.default.defaults.headers.common['X-Space-Id'] = payload.spaceId;
    }
    return {
        type: actions.SET_PAGE_PARAMS,
        payload,
    };
}
exports.setPageParams = setPageParams;


/***/ }),

/***/ 66946:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setPreviewFileDefault = exports.setPreviewFileCellActive = exports.setPreviewFile = void 0;
const actions = __importStar(__webpack_require__(86256));
const setPreviewFile = (data) => {
    return (dispatch) => {
        dispatch({
            type: actions.SET_PREVIEW_FILE,
            payload: data,
        });
    };
};
exports.setPreviewFile = setPreviewFile;
const setPreviewFileCellActive = (list) => {
    return (dispatch) => {
        dispatch({
            type: actions.SET_PREVIEW_FILE_CELL_ACTIVE,
            payload: list,
        });
    };
};
exports.setPreviewFileCellActive = setPreviewFileCellActive;
const setPreviewFileDefault = () => {
    return (dispatch) => {
        dispatch({
            type: actions.SET_PREVIEW_DEFAULT_ACTIVE,
        });
    };
};
exports.setPreviewFileDefault = setPreviewFileDefault;


/***/ }),

/***/ 19835:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setRecordVision = void 0;
const action_constants_1 = __webpack_require__(86256);
const setRecordVision = (recordVision) => {
    return {
        type: action_constants_1.SET_RECORD_VISION_MODE,
        payload: recordVision,
    };
};
exports.setRecordVision = setRecordVision;


/***/ }),

/***/ 83005:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateDashboard = exports.updateDashboardName = exports.deactivateDashboardCollaborator = exports.activeDashboardCollaborator = exports.setDashboardClient = exports.resetDashboard = exports.setDashboard = exports.setDashboardLoading = exports.fetchSuccess = exports.setDashboardErrorCode = exports.fetchDashboardPack = void 0;
const api_1 = __webpack_require__(62625);
const config_1 = __webpack_require__(77511);
const redux_batched_actions_1 = __webpack_require__(11498);
const store_1 = __webpack_require__(56791);
const actions_1 = __webpack_require__(6021);
const selectors_1 = __webpack_require__(964);
const widget_1 = __webpack_require__(70907);
const action_constants_1 = __webpack_require__(86256);
const fetchDashboardPack = (dashboardId, successFn, overWrite = false) => {
    return (dispatch, getState) => {
        const state = getState();
        const { shareId, templateId, embedId } = state.pageParams;
        const dashboardPack = (0, selectors_1.getDashboardPack)(state, dashboardId);
        const dashboardLoading = dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.loading;
        const dashboard = dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.dashboard;
        if (dashboardLoading) {
            return;
        }
        const fetchMethod = (() => {
            if (shareId) {
                return api_1.DashboardApi.fetchShareDashboardPack.bind(null, dashboardId, shareId);
            }
            if (templateId) {
                return api_1.DashboardApi.fetchTemplateDashboardPack.bind(null, dashboardId, templateId);
            }
            if (embedId) {
                return api_1.DashboardApi.fetchEmbedDashboardPack.bind(null, dashboardId, embedId);
            }
            return api_1.DashboardApi.fetchDashboardPack.bind(null, dashboardId);
        })();
        if (dashboard && !overWrite) {
            const installWidgetIds = (0, selectors_1.getInstalledWidgetInDashboard)(state) || [];
            if (installWidgetIds.length) {
                dispatch((0, actions_1.fetchWidgetsByWidgetIds)(installWidgetIds));
            }
            successFn === null || successFn === void 0 ? void 0 : successFn();
            return;
        }
        dispatch((0, exports.setDashboardLoading)(true, dashboardId));
        return fetchMethod()
            .then((response) => {
            return Promise.resolve({ dispatch, getState, response, dashboardId });
        })
            .catch((err) => {
            if (state.catalogTree.treeNodesMap[dashboardId]) {
                dispatch((0, actions_1.deleteNode)({ nodeId: dashboardId, parentId: state.catalogTree.treeNodesMap[dashboardId].parentId }));
            }
            dispatch((0, exports.setDashboardErrorCode)(dashboardId, config_1.StatusCode.COMMON_ERR));
            throw err;
        })
            .then((props) => {
            (0, exports.fetchSuccess)(props);
            props.response.data.success && (successFn === null || successFn === void 0 ? void 0 : successFn(props));
        });
    };
};
exports.fetchDashboardPack = fetchDashboardPack;
const setDashboardErrorCode = (dashboardId, code) => {
    return {
        type: store_1.ActionConstants.DASHBOARD_ERROR_CODE,
        payload: code,
        dashboardId,
    };
};
exports.setDashboardErrorCode = setDashboardErrorCode;
const fetchSuccess = ({ dispatch, response, dashboardId, }) => {
    const { data, success, code } = response.data;
    if (success) {
        const _batchActions = [(0, exports.setDashboard)(data.dashboard, data.dashboard.id)];
        if (Object.keys(data.widgetMap)) {
            for (const key in data.widgetMap) {
                _batchActions.push((0, widget_1.receiveInstallationWidget)(key, data.widgetMap[key]));
            }
        }
        dispatch((0, redux_batched_actions_1.batchActions)(_batchActions));
        return;
    }
    dispatch((0, exports.setDashboardErrorCode)(dashboardId, code));
};
exports.fetchSuccess = fetchSuccess;
const setDashboardLoading = (status, dashboardId) => {
    return {
        type: store_1.ActionConstants.SET_DASHBOARD_LOADING,
        payload: status,
        dashboardId: dashboardId,
    };
};
exports.setDashboardLoading = setDashboardLoading;
const setDashboard = (data, dashboardId) => {
    return {
        type: store_1.ActionConstants.SET_DASHBOARD_DATA,
        payload: data,
        dashboardId: dashboardId,
    };
};
exports.setDashboard = setDashboard;
const resetDashboard = (dashboardId) => {
    return {
        type: store_1.ActionConstants.RESET_DASHBOARD,
        dashboardId: dashboardId,
    };
};
exports.resetDashboard = resetDashboard;
const setDashboardClient = (client) => {
    return {
        type: store_1.ActionConstants.SET_DASHBOARD_CLIENT,
        payload: client,
    };
};
exports.setDashboardClient = setDashboardClient;
const activeDashboardCollaborator = (payload, resourceId) => {
    return {
        type: store_1.ActionConstants.DASHBOARD_ACTIVE_COLLABORATOR,
        dashboardId: resourceId,
        payload,
    };
};
exports.activeDashboardCollaborator = activeDashboardCollaborator;
const deactivateDashboardCollaborator = (payload, resourceId) => {
    return {
        type: store_1.ActionConstants.DASHBOARD_DEACTIVATE_COLLABORATOR,
        dashboardId: resourceId,
        payload,
    };
};
exports.deactivateDashboardCollaborator = deactivateDashboardCollaborator;
const updateDashboardName = (newName, dashboardId) => {
    return {
        type: action_constants_1.UPDATE_DASHBOARD_NAME,
        dashboardId,
        payload: newName,
    };
};
exports.updateDashboardName = updateDashboardName;
const updateDashboard = (dashboardId, data) => {
    return {
        type: action_constants_1.UPDATE_DASHBOARD_INFO,
        dashboardId,
        payload: data,
    };
};
exports.updateDashboard = updateDashboard;


/***/ }),

/***/ 69569:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(83005), exports);


/***/ }),

/***/ 15793:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cursorMove = exports.deactivateDatasheetCollaborator = exports.activeDatasheetCollaborator = void 0;
const action_constants_1 = __webpack_require__(86256);
const activeDatasheetCollaborator = (payload, resourceId) => {
    return {
        type: action_constants_1.DATASHEET_ACTIVE_COLLABORATOR,
        datasheetId: resourceId,
        payload,
    };
};
exports.activeDatasheetCollaborator = activeDatasheetCollaborator;
const deactivateDatasheetCollaborator = (payload, resourceId) => {
    return {
        type: action_constants_1.DATASHEET_DEACTIVATE_COLLABORATOR,
        datasheetId: resourceId,
        payload,
    };
};
exports.deactivateDatasheetCollaborator = deactivateDatasheetCollaborator;
const cursorMove = (payload, datasheetId) => {
    return {
        type: action_constants_1.CURSOR_MOVE,
        datasheetId,
        payload,
    };
};
exports.cursorMove = cursorMove;


/***/ }),

/***/ 54567:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setGridViewHoverFieldId = exports.toggleTimeMachinePanel = exports.setOrgChartSettingPanelWidth = exports.toggleOrgChartSettingPanel = exports.setOrgChartGridPanel = exports.toggleOrgChartRightPanel = exports.toggleOrgChartGuideStatus = exports.setCalendarSettingPanelWidth = exports.toggleCalendarSettingPanel = exports.setCalendarGridWidth = exports.toggleCalendarGrid = exports.toggleCalendarGuideStatus = exports.setGanttDateUnitType = exports.setGanttSettingPanelWidth = exports.toggleGanttSettingPanel = exports.setGanttGridWidth = exports.toggleGanttGrid = exports.clearActiveRowInfo = exports.setActiveRowInfo = exports.setNewRecordExpectIndex = exports.setSearchResultCursorIndex = exports.setSearchKeyword = exports.refreshSnapshot = exports.changeSyncingStatus = exports.addDatasheet = exports.updateSnapshot = exports.updateDatasheet = exports.resetDatasheet = exports.setDatasheetConnected = exports.setLoadingRecord = exports.updateDatasheetName = exports.setEditStatus = exports.toggleKanbanGroupingSettingVisible = exports.setKanbanGroupingExpand = exports.setGroupingCollapse = exports.clearActiveFieldState = exports.setActiveFieldState = exports.setDragTarget = exports.setHoverRowOfAddRecord = exports.setHoverGroupPath = exports.setHoverRecordId = exports.datasheetErrorCode = exports.fetchDatasheetPackSuccess = exports.fetchForeignDatasheet = exports.fetchDatasheet = exports.fetchDatasheetApi = exports.recordNodeDesc = exports.switchView = exports.receiveDataPack = exports.requestDatasheetPack = void 0;
exports.triggerViewDerivationComputed = exports.deleteViewDerivation = exports.patchViewDerivation = exports.setViewDerivation = exports.resetExportViewId = exports.activeExportViewId = exports.resetOperateViewId = exports.activeOperateViewId = exports.setRobotPanelStatus = exports.setDatasheetComputed = exports.updateDatasheetComputed = exports.setHighlightFieldId = exports.setCloseSyncViewId = void 0;
const datasheet_api_1 = __webpack_require__(68615);
const config_1 = __webpack_require__(77511);
const i18n_1 = __webpack_require__(47511);
const player_1 = __webpack_require__(63325);
const redux_batched_actions_1 = __webpack_require__(11498);
const store_1 = __webpack_require__(56791);
const action_constants_1 = __webpack_require__(86256);
const actions_1 = __webpack_require__(6021);
const selectors_1 = __webpack_require__(964);
const utils_1 = __webpack_require__(26854);
const immer_1 = __importDefault(__webpack_require__(7133));
const link_consistency_1 = __webpack_require__(41078);
function requestDatasheetPack(datasheetId) {
    return {
        type: action_constants_1.DATAPACK_REQUEST,
        datasheetId,
    };
}
exports.requestDatasheetPack = requestDatasheetPack;
function ensureInnerConsistency(payload, getState) {
    var _a;
    const { snapshot, datasheet } = payload;
    // @su
    // the check of data consistency
    // datasheet is the only object that should be attention
    // if if all the permission of datasheet is ok, no need to check more
    if (!((_a = datasheet.permissions) === null || _a === void 0 ? void 0 : _a.editable)) {
        // when the permission of datasheet is not ok, then check other factors
        const pageParams = getState ? getState().pageParams : {};
        if (!pageParams.mirrorId) {
            return;
        }
        const mirror = (0, selectors_1.getMirror)(getState(), pageParams.mirrorId);
        if ((mirror === null || mirror === void 0 ? void 0 : mirror.sourceInfo.datasheetId) !== snapshot.datasheetId) {
            return;
        }
        // mirror's editable permission can go through the original datasheet's permission
        if (!(mirror === null || mirror === void 0 ? void 0 : mirror.permissions.editable)) {
            return;
        }
    }
    const errorInfo = (0, utils_1.innerConsistencyCheck)(snapshot);
    if (errorInfo) {
        player_1.Player.doTrigger(player_1.Events.app_error_logger, {
            error: new Error((0, i18n_1.t)(i18n_1.Strings.error_data_consistency_and_check_the_snapshot)),
            metaData: {
                datasheetId: datasheet.id,
                errors: errorInfo,
            },
        });
        player_1.Player.doTrigger(player_1.Events.app_modal_confirm, {
            key: store_1.ModalConfirmKey.FixInnerConsistency,
            metaData: {
                datasheetId: datasheet.id,
                errors: errorInfo,
            },
        });
    }
}
function ensureLinkConsistency(state) {
    const error = (0, link_consistency_1.checkLinkConsistency)(state);
    if (!error || !error.errorRecordIds.size) {
        return;
    }
    console.log('found link inconsistency', error);
    player_1.Player.doTrigger(player_1.Events.app_error_logger, {
        error: new Error((0, i18n_1.t)(i18n_1.Strings.error_data_consistency_and_check_the_snapshot)),
        metaData: {
            error,
        },
    });
    player_1.Player.doTrigger(player_1.Events.app_modal_confirm, {
        key: store_1.ModalConfirmKey.FixLinkConsistency,
        metaData: {
            error,
        },
    });
}
const getActiveViewFromData = (datasheet, snapshot, getState) => {
    if (datasheet.activeView)
        return datasheet.activeView;
    /**
     * by Aria
     * attention, if params.viewId as activeView,
     * will make errors when read foreignDatasheet and activeView,
     * it will point to current opened table, rather than real related table
     */
    if (getState && getState().pageParams.datasheetId === datasheet.id) {
        return getState().pageParams.viewId;
    }
    return snapshot.meta.views[0].id;
};
const checkSortInto = (snapshot) => {
    return (0, immer_1.default)(snapshot, draft => {
        const views = draft.meta.views;
        for (const v of views) {
            if (Array.isArray(v.sortInfo)) {
                v.sortInfo = {
                    keepSort: true,
                    rules: v.sortInfo,
                };
            }
        }
    });
};
function receiveDataPack(payload, options) {
    const { snapshot, datasheet } = payload;
    const { isPartOfData = false, fixConsistency = true, getState } = options !== null && options !== void 0 ? options : {};
    if (fixConsistency && !isPartOfData) {
        // TODO: move data consistency check  to node layer, and ensure full recover mechanism
        // check data consistency only when data is editable
        ensureInnerConsistency(payload, getState);
    }
    return {
        type: action_constants_1.DATAPACK_LOADED,
        datasheetId: datasheet.id,
        payload: Object.assign(Object.assign({}, datasheet), { snapshot: checkSortInto(snapshot), isPartOfData, activeView: getActiveViewFromData(datasheet, snapshot, getState) }),
    };
}
exports.receiveDataPack = receiveDataPack;
const switchView = (datasheetId, willActivityViewID) => {
    return {
        datasheetId,
        type: action_constants_1.CHANGE_VIEW,
        payload: willActivityViewID,
    };
};
exports.switchView = switchView;
const recordNodeDesc = (datasheetId, desc) => {
    return {
        type: action_constants_1.RECORD_NODE_DESC,
        datasheetId,
        payload: desc,
    };
};
exports.recordNodeDesc = recordNodeDesc;
const fetchDatasheetApi = (datasheetId, shareId, templateId, embedId, recordIds) => {
    let requestMethod = datasheet_api_1.fetchDatasheetPack;
    if (shareId) {
        requestMethod = () => (0, datasheet_api_1.fetchShareDatasheetPack)(shareId, datasheetId);
    }
    if (templateId) {
        requestMethod = datasheet_api_1.fetchTemplateDatasheetPack;
    }
    if (embedId) {
        requestMethod = () => (0, datasheet_api_1.fetchEmbedDatasheetPack)(embedId, datasheetId);
    }
    return requestMethod(datasheetId, recordIds);
};
exports.fetchDatasheetApi = fetchDatasheetApi;
function fetchDatasheet(datasheetId, successCb, overWrite = false, extra, failCb) {
    return (dispatch, getState) => {
        const state = getState();
        const datasheet = (0, selectors_1.getDatasheet)(state, datasheetId);
        const { shareId, templateId, embedId } = state.pageParams;
        const { recordIds } = extra || {};
        const datasheetLoading = (0, selectors_1.getDatasheetLoading)(state, datasheetId);
        if (datasheetLoading) {
            return;
        }
        if (!datasheet || datasheet.isPartOfData || overWrite) {
            dispatch(requestDatasheetPack(datasheetId));
            return (0, exports.fetchDatasheetApi)(datasheetId, shareId, templateId, embedId, recordIds)
                .then(response => {
                if (!response.data.success && state.catalogTree.treeNodesMap[datasheetId]) {
                    dispatch((0, actions_1.deleteNode)({ nodeId: datasheetId, parentId: state.catalogTree.treeNodesMap[datasheetId].parentId }));
                }
                return Promise.resolve({ datasheetId, responseBody: response.data, dispatch, getState });
            })
                .catch(e => {
                dispatch((0, exports.datasheetErrorCode)(datasheetId, config_1.StatusCode.COMMON_ERR));
                throw e;
            })
                .then(props => {
                // recordIds exits means that only part of recordsIds data is needed @boris
                fetchDatasheetPackSuccess(Object.assign(Object.assign({}, props), { isPartOfData: Boolean(recordIds) }));
                props.responseBody.success ? successCb && successCb() : failCb && failCb();
            });
        }
        successCb && successCb();
        return;
    };
}
exports.fetchDatasheet = fetchDatasheet;
/**
 * in the expanded UI modal that select related records, request this api to get the related table's permission
 * no need to consider templates
 */
function fetchForeignDatasheet(resourceId, foreignDstId, forceFetch) {
    return (dispatch, getState) => {
        const state = getState();
        const foreignDatasheet = (0, selectors_1.getDatasheet)(state, foreignDstId);
        const { shareId, embedId } = state.pageParams;
        const datasheetLoading = (0, selectors_1.getDatasheetLoading)(state, foreignDstId);
        if (datasheetLoading) {
            return;
        }
        let requestMethod = datasheet_api_1.fetchForeignDatasheetPack;
        if (shareId) {
            requestMethod = () => (0, datasheet_api_1.fetchShareForeignDatasheetPack)(shareId, resourceId, foreignDstId);
        }
        if (embedId) {
            requestMethod = () => (0, datasheet_api_1.fetchEmbedForeignDatasheetPack)(embedId, resourceId, foreignDstId);
        }
        if (forceFetch || !foreignDatasheet || foreignDatasheet.isPartOfData) {
            dispatch(requestDatasheetPack(foreignDstId));
            return requestMethod(resourceId, foreignDstId)
                .then(response => {
                return Promise.resolve({ datasheetId: foreignDstId, responseBody: response.data, dispatch, getState });
            })
                .catch(e => {
                if (state.catalogTree.treeNodesMap[foreignDstId]) {
                    dispatch((0, actions_1.deleteNode)({ nodeId: foreignDstId, parentId: state.catalogTree.treeNodesMap[foreignDstId].parentId }));
                }
                dispatch((0, exports.datasheetErrorCode)(foreignDstId, config_1.StatusCode.COMMON_ERR));
                throw e;
            })
                .then(props => {
                fetchDatasheetPackSuccess(props);
                if (props.responseBody.success) {
                    if (!shareId && !embedId && state.pageParams.datasheetId === resourceId) {
                        dispatch((_dispatch, getState) => {
                            ensureLinkConsistency(getState());
                        });
                    }
                }
            });
        }
        return;
    };
}
exports.fetchForeignDatasheet = fetchForeignDatasheet;
function fetchDatasheetPackSuccess({ datasheetId, responseBody, dispatch, getState, isPartOfData = false }) {
    if (responseBody.success) {
        const dataPack = responseBody.data;
        const dispatchActions = [];
        if (dataPack.foreignDatasheetMap) {
            Object.keys(dataPack.foreignDatasheetMap).forEach(foreignDstId => {
                const foreignDatasheetPack = dataPack.foreignDatasheetMap[foreignDstId];
                dispatchActions.push(receiveDataPack(foreignDatasheetPack, { isPartOfData: true }));
                if (foreignDatasheetPack.fieldPermissionMap) {
                    dispatchActions.push((0, actions_1.loadFieldPermissionMap)(foreignDatasheetPack.fieldPermissionMap, foreignDatasheetPack.datasheet.id));
                }
            });
        }
        if (dataPack.datasheet) {
            dispatchActions.push(receiveDataPack(dataPack, { isPartOfData, getState }));
            if (dataPack.units) {
                // init unityMap, for `member` field use
                const unitMap = {};
                dataPack.units.filter(unit => unit.unitId).forEach(unit => (unitMap[unit.unitId] = unit));
                dispatch((0, actions_1.updateUnitMap)(unitMap));
                // init UserMap, for `CreatedBy`/`LastModifiedBy` field use
                const userMap = {};
                dataPack.units.filter(unit => unit.userId).forEach(user => (userMap[user.userId] = user));
                dispatch((0, actions_1.updateUserMap)(userMap));
            }
        }
        if (dataPack.fieldPermissionMap) {
            dispatch((0, actions_1.loadFieldPermissionMap)(dataPack.fieldPermissionMap, datasheetId));
        }
        dispatch((0, redux_batched_actions_1.batchActions)(dispatchActions));
    }
    else {
        dispatch((0, exports.datasheetErrorCode)(datasheetId, responseBody.code));
    }
}
exports.fetchDatasheetPackSuccess = fetchDatasheetPackSuccess;
const datasheetErrorCode = (datasheetId, code) => {
    return {
        type: action_constants_1.DATASHEET_ERROR_CODE,
        datasheetId,
        payload: code,
    };
};
exports.datasheetErrorCode = datasheetErrorCode;
// set hover(not clicked) state
const setHoverRecordId = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_HOVER_RECORD_ID,
        datasheetId,
        payload,
    };
};
exports.setHoverRecordId = setHoverRecordId;
const setHoverGroupPath = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_HOVER_GROUP_PATH,
        datasheetId,
        payload,
    };
};
exports.setHoverGroupPath = setHoverGroupPath;
const setHoverRowOfAddRecord = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_HOVER_ROW_OF_ADD_RECORD,
        datasheetId,
        payload,
    };
};
exports.setHoverRowOfAddRecord = setHoverRowOfAddRecord;
/**
 *
 * set current operation's row or column (by sky)
 *
 * for rows, operations here only mean unchecked rows, which can drag it directly,
 * if it's multiple rows, the operation data is obtained from recordRanges
 *
 * for columns, similarly, here only save the single column operation, multiple columns data read from fieldRanges
 *
 * @param datasheetId
 * @param payload
 * @returns
 */
const setDragTarget = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_DRAG_TARGET,
        datasheetId,
        payload,
    };
};
exports.setDragTarget = setDragTarget;
const setActiveFieldState = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_ACTIVE_FIELD_STATE,
        datasheetId,
        payload,
    };
};
exports.setActiveFieldState = setActiveFieldState;
const clearActiveFieldState = (datasheetId) => {
    return {
        type: action_constants_1.CLEAR_FIELD_INFO,
        datasheetId,
    };
};
exports.clearActiveFieldState = clearActiveFieldState;
const setGroupingCollapse = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_GROUPING_COLLAPSE,
        datasheetId,
        payload,
    };
};
exports.setGroupingCollapse = setGroupingCollapse;
const setKanbanGroupingExpand = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_KANBAN_GROUPING_EXPAND,
        datasheetId,
        payload,
    };
};
exports.setKanbanGroupingExpand = setKanbanGroupingExpand;
const toggleKanbanGroupingSettingVisible = (datasheetId, payload) => {
    return {
        type: action_constants_1.TOGGLE_KANBAN_GROUP_SETTING_VISIBLE,
        datasheetId,
        payload,
    };
};
exports.toggleKanbanGroupingSettingVisible = toggleKanbanGroupingSettingVisible;
const setEditStatus = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_EDIT_STATUS,
        datasheetId,
        payload,
    };
};
exports.setEditStatus = setEditStatus;
const updateDatasheetName = (datasheetId, newName) => {
    return {
        type: action_constants_1.UPDATE_DATASHEET_NAME,
        datasheetId,
        payload: newName,
    };
};
exports.updateDatasheetName = updateDatasheetName;
const setLoadingRecord = (payload, datasheetId) => {
    return {
        type: action_constants_1.SET_LOADING_RECORD,
        datasheetId,
        payload,
    };
};
exports.setLoadingRecord = setLoadingRecord;
const setDatasheetConnected = (datasheetId) => {
    return {
        type: action_constants_1.DATASHEET_CONNECTED,
        datasheetId,
    };
};
exports.setDatasheetConnected = setDatasheetConnected;
const resetDatasheet = (datasheetId) => {
    return {
        type: action_constants_1.RESET_DATASHEET,
        datasheetId,
    };
};
exports.resetDatasheet = resetDatasheet;
const updateDatasheet = (datasheetId, datasheet) => {
    return {
        type: action_constants_1.UPDATE_DATASHEET,
        datasheetId,
        payload: datasheet,
    };
};
exports.updateDatasheet = updateDatasheet;
const updateSnapshot = (datasheetId, snapshot) => {
    return {
        type: action_constants_1.UPDATE_SNAPSHOT,
        datasheetId,
        payload: snapshot,
    };
};
exports.updateSnapshot = updateSnapshot;
const addDatasheet = (datasheetId, datasheetPack) => {
    return {
        type: action_constants_1.ADD_DATASHEET,
        datasheetId,
        payload: datasheetPack,
    };
};
exports.addDatasheet = addDatasheet;
const changeSyncingStatus = (datasheetId, status) => {
    return {
        type: action_constants_1.SET_DATASHEET_SYNCING,
        datasheetId,
        payload: status,
    };
};
exports.changeSyncingStatus = changeSyncingStatus;
const refreshSnapshot = (datasheetId) => {
    return {
        type: action_constants_1.REFRESH_SNAPSHOT,
        datasheetId,
    };
};
exports.refreshSnapshot = refreshSnapshot;
const setSearchKeyword = (datasheetId, keyword) => {
    return {
        type: action_constants_1.SET_SEARCH_KEYWORD,
        datasheetId,
        payload: keyword,
    };
};
exports.setSearchKeyword = setSearchKeyword;
const setSearchResultCursorIndex = (datasheetId, index) => {
    return {
        type: action_constants_1.SET_SEARCH_RESULT_CURSOR_INDEX,
        datasheetId,
        payload: index,
    };
};
exports.setSearchResultCursorIndex = setSearchResultCursorIndex;
const setNewRecordExpectIndex = (datasheetId, index) => {
    return {
        type: action_constants_1.SET_NEW_RECORD_EXPECT_INDEX,
        datasheetId,
        payload: index,
    };
};
exports.setNewRecordExpectIndex = setNewRecordExpectIndex;
const setActiveRowInfo = (datasheetId, rowInfo) => {
    return {
        type: action_constants_1.SET_ACTIVE_ROW_INFO,
        datasheetId,
        payload: rowInfo,
    };
};
exports.setActiveRowInfo = setActiveRowInfo;
const clearActiveRowInfo = (datasheetId) => {
    return {
        type: action_constants_1.CLEAR_ACTIVE_ROW_INFO,
        datasheetId,
    };
};
exports.clearActiveRowInfo = clearActiveRowInfo;
const toggleGanttGrid = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_GANTT_GRID,
        payload: visible,
        datasheetId,
    };
};
exports.toggleGanttGrid = toggleGanttGrid;
const setGanttGridWidth = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_GANTT_GRID_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setGanttGridWidth = setGanttGridWidth;
const toggleGanttSettingPanel = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_GANTT_SETTING_PANEL,
        payload: visible,
        datasheetId,
    };
};
exports.toggleGanttSettingPanel = toggleGanttSettingPanel;
const setGanttSettingPanelWidth = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_GANTT_SETTING_PANEL_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setGanttSettingPanelWidth = setGanttSettingPanelWidth;
const setGanttDateUnitType = (unitType, datasheetId) => {
    return {
        type: action_constants_1.SET_GANTT_DATE_UNIT_TYPE,
        payload: unitType,
        datasheetId,
    };
};
exports.setGanttDateUnitType = setGanttDateUnitType;
// Calendar actions
const toggleCalendarGuideStatus = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_CALENDAR_GUIDE_STATUS,
        payload: visible,
        datasheetId,
    };
};
exports.toggleCalendarGuideStatus = toggleCalendarGuideStatus;
const toggleCalendarGrid = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_CALENDAR_GRID,
        payload: visible,
        datasheetId,
    };
};
exports.toggleCalendarGrid = toggleCalendarGrid;
const setCalendarGridWidth = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_CALENDAR_GRID_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setCalendarGridWidth = setCalendarGridWidth;
const toggleCalendarSettingPanel = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_CALENDAR_SETTING_PANEL,
        payload: visible,
        datasheetId,
    };
};
exports.toggleCalendarSettingPanel = toggleCalendarSettingPanel;
const setCalendarSettingPanelWidth = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_CALENDAR_SETTING_PANEL_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setCalendarSettingPanelWidth = setCalendarSettingPanelWidth;
// OrgChart view actions
const toggleOrgChartGuideStatus = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_ORG_CHART_GUIDE_STATUS,
        payload: visible,
        datasheetId,
    };
};
exports.toggleOrgChartGuideStatus = toggleOrgChartGuideStatus;
const toggleOrgChartRightPanel = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_ORG_CHART_GRID,
        payload: visible,
        datasheetId,
    };
};
exports.toggleOrgChartRightPanel = toggleOrgChartRightPanel;
const setOrgChartGridPanel = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_ORG_CHART_GRID_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setOrgChartGridPanel = setOrgChartGridPanel;
const toggleOrgChartSettingPanel = (visible, datasheetId) => {
    return {
        type: action_constants_1.TOGGLE_ORG_CHART_SETTING_PANEL,
        payload: visible,
        datasheetId,
    };
};
exports.toggleOrgChartSettingPanel = toggleOrgChartSettingPanel;
const setOrgChartSettingPanelWidth = (width, datasheetId) => {
    return {
        type: action_constants_1.SET_ORG_CHART_SETTING_PANEL_WIDTH,
        payload: width,
        datasheetId,
    };
};
exports.setOrgChartSettingPanelWidth = setOrgChartSettingPanelWidth;
const toggleTimeMachinePanel = (datasheetId, visible) => {
    return {
        type: action_constants_1.TOGGLE_TIME_MACHINE_PANEL,
        payload: visible,
        datasheetId,
    };
};
exports.toggleTimeMachinePanel = toggleTimeMachinePanel;
const setGridViewHoverFieldId = (fieldId, datasheetId) => {
    return {
        type: action_constants_1.SET_GRID_VIEW_HOVER_FIELD_ID,
        payload: fieldId,
        datasheetId,
    };
};
exports.setGridViewHoverFieldId = setGridViewHoverFieldId;
const setCloseSyncViewId = (viewId, datasheetId) => {
    return {
        type: action_constants_1.SET_CLOSE_SYNC_VIEW_ID,
        payload: viewId,
        datasheetId,
    };
};
exports.setCloseSyncViewId = setCloseSyncViewId;
const setHighlightFieldId = (fieldId, datasheetId) => {
    return {
        type: action_constants_1.SET_HIGHLIGHT_FIELD_ID,
        payload: fieldId,
        datasheetId,
    };
};
exports.setHighlightFieldId = setHighlightFieldId;
const updateDatasheetComputed = (computed, datasheetId) => {
    return {
        type: action_constants_1.UPDATE_DATASHEET_COMPUTED,
        payload: computed,
        datasheetId,
    };
};
exports.updateDatasheetComputed = updateDatasheetComputed;
const setDatasheetComputed = (computed, datasheetId) => {
    return {
        type: action_constants_1.SET_DATASHEET_COMPUTED,
        payload: computed,
        datasheetId,
    };
};
exports.setDatasheetComputed = setDatasheetComputed;
const setRobotPanelStatus = (status, datasheetId) => {
    return {
        type: action_constants_1.SET_ROBOT_PANEL_STATUS,
        payload: status,
        datasheetId,
    };
};
exports.setRobotPanelStatus = setRobotPanelStatus;
const activeOperateViewId = (viewId, datasheetId) => {
    return {
        type: action_constants_1.ACTIVE_OPERATE_VIEW_ID,
        payload: viewId,
        datasheetId,
    };
};
exports.activeOperateViewId = activeOperateViewId;
const resetOperateViewId = (viewId, datasheetId) => {
    return {
        type: action_constants_1.RESET_OPERATE_VIEW_ID,
        payload: viewId,
        datasheetId,
    };
};
exports.resetOperateViewId = resetOperateViewId;
const activeExportViewId = (viewId, datasheetId) => {
    return {
        type: action_constants_1.ACTIVE_EXPORT_VIEW_ID,
        payload: viewId,
        datasheetId,
    };
};
exports.activeExportViewId = activeExportViewId;
const resetExportViewId = (datasheetId) => {
    return {
        type: action_constants_1.RESET_EXPORT_VIEW_ID,
        datasheetId,
    };
};
exports.resetExportViewId = resetExportViewId;
const setViewDerivation = (datasheetId, payload) => {
    return {
        datasheetId,
        type: action_constants_1.SET_VIEW_DERIVATION,
        payload,
    };
};
exports.setViewDerivation = setViewDerivation;
// As opposed to set, patch means partial update
const patchViewDerivation = (datasheetId, payload) => {
    return {
        datasheetId,
        type: action_constants_1.PATCH_VIEW_DERIVATION,
        payload,
    };
};
exports.patchViewDerivation = patchViewDerivation;
const deleteViewDerivation = (datasheetId, viewId) => {
    return {
        datasheetId,
        type: action_constants_1.DELETE_VIEW_DERIVATION,
        payload: { viewId },
    };
};
exports.deleteViewDerivation = deleteViewDerivation;
const triggerViewDerivationComputed = (datasheetId, viewId) => {
    return {
        datasheetId,
        type: action_constants_1.TRIGGER_VIEW_DERIVATION_COMPUTED,
        payload: { datasheetId, viewId },
    };
};
exports.triggerViewDerivationComputed = triggerViewDerivationComputed;


/***/ }),

/***/ 94486:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fetchFieldPermission = exports.loadFieldPermissionMap = exports.resetFieldPermissionMap = exports.updateFieldPermissionSetting = exports.updateFieldPermissionMap = void 0;
const action_constants_1 = __webpack_require__(86256);
const api_1 = __webpack_require__(62625);
const redux_batched_actions_1 = __webpack_require__(11498);
const updateFieldPermissionMap = (fieldPermissionMap, datasheetId) => {
    return {
        type: action_constants_1.UPDATE_FIELD_PERMISSION_MAP,
        payload: fieldPermissionMap,
        datasheetId
    };
};
exports.updateFieldPermissionMap = updateFieldPermissionMap;
const updateFieldPermissionSetting = (fieldId, setting, datasheetId) => {
    return {
        type: action_constants_1.UPDATE_FIELD_PERMISSION_SETTING,
        payload: { fieldId, setting },
        datasheetId
    };
};
exports.updateFieldPermissionSetting = updateFieldPermissionSetting;
const resetFieldPermissionMap = (fieldId, datasheetId) => {
    return {
        type: action_constants_1.RESET_FIELD_PERMISSION_MAP,
        payload: fieldId,
        datasheetId
    };
};
exports.resetFieldPermissionMap = resetFieldPermissionMap;
const loadFieldPermissionMap = (fieldPermissionMap, datasheetId) => {
    return {
        type: action_constants_1.LOAD_FIELD_PERMISSION_MAP,
        payload: fieldPermissionMap,
        datasheetId
    };
};
exports.loadFieldPermissionMap = loadFieldPermissionMap;
const fetchFieldPermission = (dstIds) => {
    return (dispatch, getState) => {
        const state = getState();
        const shareId = state.pageParams.shareId || state.pageParams.embedId;
        api_1.DatasheetApi.getFieldPermissionMap(dstIds, shareId).then(res => {
            const { success, data } = res.data;
            if (success) {
                const actions = [];
                for (const v of data) {
                    actions.push((0, exports.loadFieldPermissionMap)(v.fieldPermissionMap, v.datasheetId));
                }
                dispatch((0, redux_batched_actions_1.batchActions)(actions));
            }
        });
    };
};
exports.fetchFieldPermission = fetchFieldPermission;


/***/ }),

/***/ 43064:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(15793), exports);
__exportStar(__webpack_require__(54567), exports);
__exportStar(__webpack_require__(60626), exports);
__exportStar(__webpack_require__(94486), exports);


/***/ }),

/***/ 60626:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setFillHandleStatus = exports.setFieldRanges = exports.clearSelection = exports.clearSelectionButKeepCheckedRecord = exports.setRecordRange = exports.setActiveCell = exports.setSelection = void 0;
const model_1 = __webpack_require__(61116);
const store_1 = __webpack_require__(56791);
const action_constants_1 = __webpack_require__(86256);
/**
 * set the selection area
 * @param ranges
 * @returns
 */
const setSelection = (ranges) => (dispatch, getState) => {
    const state = getState();
    const datasheetId = state.pageParams.datasheetId;
    const selectionState = store_1.Selectors.getDatasheetClient(state).selection;
    const payload = Array.isArray(ranges) ? ranges : [ranges];
    const range = payload[0];
    if (!selectionState || !selectionState.ranges || !selectionState.activeCell) {
        return dispatch({
            type: action_constants_1.SET_SELECTION,
            datasheetId,
            payload: {
                activeCell: range.start,
                ranges: payload,
            },
        });
    }
    return dispatch({
        type: action_constants_1.SET_SELECTION,
        datasheetId,
        payload: {
            ranges: payload,
        },
    });
};
exports.setSelection = setSelection;
/**
 * set the active cell
 * @param datasheetId
 * @param cell
 * @returns
 */
const setActiveCell = (datasheetId, cell) => {
    const payload = cell;
    return {
        type: action_constants_1.SET_ACTIVE_CELL,
        datasheetId,
        payload: {
            // when activate cell, selection area equals the the vector of active cell itself
            ranges: [{ start: cell, end: cell }],
            activeCell: payload,
        },
    };
};
exports.setActiveCell = setActiveCell;
/**
 * set the records being selected
 *
 * @param datasheetId
 * @param recordRange
 * @returns
 */
const setRecordRange = (datasheetId, recordRange) => {
    return {
        type: action_constants_1.SET_RECORD_SELECTION,
        datasheetId,
        payload: recordRange,
    };
};
exports.setRecordRange = setRecordRange;
/**
 * remain checked records, but clear active cell and continuous selection area data.
 * @param datasheetId
 * @returns
 */
const clearSelectionButKeepCheckedRecord = (datasheetId) => {
    return {
        type: action_constants_1.CLEAR_SELECTION_BUT_KEEP_CHECKED_RECORD,
        datasheetId,
    };
};
exports.clearSelectionButKeepCheckedRecord = clearSelectionButKeepCheckedRecord;
/**
 * clear the data in selection area
 *
 * @param datasheetId
 * @returns
 */
const clearSelection = (datasheetId) => {
    return {
        type: action_constants_1.CLEAR_SELECTION,
        datasheetId,
    };
};
exports.clearSelection = clearSelection;
/**
 * set current selected columns
 *
 * @param datasheetId
 * @param payload
 * @returns
 */
const setFieldRanges = (datasheetId, payload) => {
    return {
        type: action_constants_1.SET_FIELD_RANGES,
        datasheetId,
        payload,
    };
};
exports.setFieldRanges = setFieldRanges;
/**
 * set the Fill Handle active status
 *
 * @param payload
 * @returns
 */
const setFillHandleStatus = (payload) => (dispatch, getState) => {
    const state = getState();
    const datasheetId = state.pageParams.datasheetId;
    const selection = store_1.Selectors.getSelection(state);
    const fillHandleStatus = store_1.Selectors.getFillHandleStatus(state);
    if (!selection)
        return;
    if (!selection.ranges)
        return;
    const selectionRange = selection.ranges[0];
    if (!payload.hoverCell) {
        return dispatch({
            type: action_constants_1.SET_FILL_HANDLE_STATUS,
            datasheetId,
            payload: {
                fillHandleStatus: payload,
            },
        });
    }
    // after click the fill handle, mouse can drag anywhere, hover on any cell
    // calculate the fill direction according to `hoverCell`, and then fix the selection area.
    const direction = model_1.Range.bindModel(selectionRange).getDirection(state, payload.hoverCell);
    if (!direction)
        return;
    const isFillHandleActive = Boolean(fillHandleStatus && fillHandleStatus.isActive);
    const fillRange = model_1.Range.bindModel(selectionRange).getFillRange(state, payload.hoverCell, direction);
    if (!fillRange)
        return;
    if (!isFillHandleActive)
        return;
    return dispatch({
        type: action_constants_1.SET_FILL_HANDLE_STATUS,
        datasheetId,
        payload: {
            fillHandleStatus: Object.assign(Object.assign({}, payload), { fillRange,
                direction }),
        },
    });
};
exports.setFillHandleStatus = setFillHandleStatus;


/***/ }),

/***/ 55738:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resetForm = exports.activeFormCollaborator = exports.deactivateFormCollaborator = exports.fetchForeignFormList = exports.updateForm = exports.updateFormProps = exports.requestFormPack = exports.formErrorCode = exports.setFormConnected = exports.receiveFormData = exports.fetchForm = exports.DEFAULT_FORM_PROPS = void 0;
const form_api_1 = __webpack_require__(53403);
const config_1 = __webpack_require__(77511);
const redux_batched_actions_1 = __webpack_require__(11498);
const selectors_1 = __webpack_require__(964);
const datasheet_1 = __webpack_require__(43064);
const actions = __importStar(__webpack_require__(86256));
const catalog_tree_1 = __webpack_require__(17506);
const api_1 = __webpack_require__(62625);
const constants_1 = __webpack_require__(12690);
exports.DEFAULT_FORM_PROPS = {
    title: '',
    coverVisible: true,
    logoVisible: true,
    brandVisible: true,
    fullScreen: false,
};
function fetchForm(formId, successFn) {
    return (dispatch, getState) => {
        const state = getState();
        const { shareId, templateId } = state.pageParams;
        const formLoading = (0, selectors_1.getFormLoading)(state, formId);
        if (formLoading) {
            return;
        }
        let requestMethod = form_api_1.fetchFormPack;
        if (shareId) {
            requestMethod = () => (0, form_api_1.fetchShareFormPack)(shareId, formId);
        }
        if (templateId) {
            requestMethod = () => (0, form_api_1.fetchTemplateFormPack)(templateId, formId);
        }
        dispatch(requestFormPack(formId));
        return requestMethod(formId)
            .then(response => {
            return Promise.resolve({ formId, response, dispatch, shareId });
        })
            .catch(e => {
            if (state.catalogTree.treeNodesMap[formId]) {
                dispatch((0, catalog_tree_1.deleteNode)({ nodeId: formId, parentId: state.catalogTree.treeNodesMap[formId].parentId }));
            }
            dispatch((0, exports.formErrorCode)(formId, config_1.StatusCode.COMMON_ERR));
            throw e;
        })
            .then((res) => {
            successFn === null || successFn === void 0 ? void 0 : successFn();
            fetchDataSuccess(res);
        });
    };
}
exports.fetchForm = fetchForm;
function fetchDataSuccess({ formId, response, dispatch }) {
    const body = response.data;
    const data = body.data;
    if (body.success && data) {
        const actions = receiveFormData(data);
        if (Array.isArray(actions)) {
            dispatch((0, redux_batched_actions_1.batchActions)(actions));
        }
        else {
            dispatch(actions);
        }
    }
    if (!body.success) {
        dispatch((0, exports.formErrorCode)(formId, body.code));
    }
}
function receiveFormData({ form, snapshot, sourceInfo, fieldPermissionMap, }) {
    const formId = form.id;
    const { meta, formProps } = snapshot;
    const currentView = meta.views.filter(view => {
        return view.id === sourceInfo.viewId;
    });
    if (!currentView.length) {
        return (0, exports.formErrorCode)(formId, config_1.StatusCode.FORM_FOREIGN_DATASHEET_NOT_EXIST);
    }
    const formState = Object.assign(Object.assign({}, form), { snapshot: {
            formProps: Object.assign(Object.assign({}, exports.DEFAULT_FORM_PROPS), formProps),
        }, sourceInfo,
        fieldPermissionMap });
    return [
        {
            type: actions.SET_FORM_DATA,
            formId,
            payload: formState,
        },
        (0, datasheet_1.receiveDataPack)({
            snapshot: { meta, recordMap: {}, datasheetId: sourceInfo.datasheetId },
            datasheet: {
                id: sourceInfo.datasheetId,
                revision: sourceInfo.datasheetRevision,
                permissions: constants_1.DEFAULT_READ_ONLY_PERMISSION,
            },
        }, { isPartOfData: true }),
    ];
}
exports.receiveFormData = receiveFormData;
const setFormConnected = (formId) => {
    return {
        type: actions.FORM_CONNECTED,
        formId,
    };
};
exports.setFormConnected = setFormConnected;
const formErrorCode = (formId, code) => {
    return {
        type: actions.FORM_ERROR_CODE,
        formId,
        payload: code,
    };
};
exports.formErrorCode = formErrorCode;
function requestFormPack(formId) {
    return {
        type: actions.SET_FORM_LOADING,
        formId,
        payload: true,
    };
}
exports.requestFormPack = requestFormPack;
const updateFormProps = (formId, formProps) => {
    return {
        type: actions.FORM_PROP_UPDATE,
        formId,
        payload: formProps,
    };
};
exports.updateFormProps = updateFormProps;
const updateForm = (formId, form) => {
    return {
        type: actions.UPDATE_FORM,
        formId,
        payload: form,
    };
};
exports.updateForm = updateForm;
function fetchForeignFormList(dstId, viewId) {
    return __awaiter(this, void 0, void 0, function* () {
        try {
            const res = yield api_1.Api.getRelateNodeByDstId(dstId, viewId, config_1.ConfigConstant.NodeType.FORM);
            return res.data.data;
        }
        catch (e) {
            throw new Error(e);
        }
    });
}
exports.fetchForeignFormList = fetchForeignFormList;
const deactivateFormCollaborator = (payload, resourceId) => {
    return {
        type: actions.FORM_DEACTIVATE_COLLABORATOR,
        formId: resourceId,
        payload,
    };
};
exports.deactivateFormCollaborator = deactivateFormCollaborator;
const activeFormCollaborator = (payload, resourceId) => {
    return {
        type: actions.FORM_ACTIVE_COLLABORATOR,
        formId: resourceId,
        payload,
    };
};
exports.activeFormCollaborator = activeFormCollaborator;
const resetForm = (formId) => {
    return {
        type: actions.RESET_FORM,
        formId,
    };
};
exports.resetForm = resetForm;


/***/ }),

/***/ 11492:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(55738), exports);


/***/ }),

/***/ 43090:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setTheme = exports.switchActivePanel = exports.changeWidgetPanelWidth = exports.toggleWidgetPanel = exports.deactivateCollaborator = exports.activeCollaborator = exports.updateResourceName = exports.resetResource = exports.updateResource = exports.resourceErrorCode = exports.roomInfoSync = exports.changeResourceSyncingStatus = exports.setResourceConnect = exports.updateRevision = exports.applyJOTOperations = void 0;
const action_constants_1 = __webpack_require__(86256);
const types_1 = __webpack_require__(73578);
const dashboard_1 = __webpack_require__(69569);
const datasheet_1 = __webpack_require__(43064);
const form_1 = __webpack_require__(11492);
const widget_1 = __webpack_require__(70907);
const mirror_1 = __webpack_require__(45969);
__exportStar(__webpack_require__(69569), exports);
__exportStar(__webpack_require__(43064), exports);
__exportStar(__webpack_require__(11492), exports);
__exportStar(__webpack_require__(70907), exports);
__exportStar(__webpack_require__(45969), exports);
const applyJOTOperations = (operations, resourceType, resourceId) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                payload: { operations },
                type: action_constants_1.DASHBOARD_JOT_ACTION,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Widget: {
            return {
                payload: { operations },
                type: action_constants_1.WIDGET_JOT_ACTION,
                widgetId: resourceId,
            };
        }
        case types_1.ResourceType.Form: {
            return {
                payload: { operations },
                type: action_constants_1.FORM_JOT_ACTION,
                formId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                payload: { operations },
                type: action_constants_1.MIRROR_JOT_ACTION,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                payload: { operations },
                datasheetId: resourceId,
                type: action_constants_1.DATASHEET_JOT_ACTION,
            };
        }
    }
};
exports.applyJOTOperations = applyJOTOperations;
const updateRevision = (revision, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                payload: revision,
                type: action_constants_1.DASHBOARD_UPDATE_REVISION,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Widget: {
            return {
                payload: revision,
                type: action_constants_1.WIDGET_UPDATE_REVISION,
                widgetId: resourceId,
            };
        }
        case types_1.ResourceType.Form: {
            return {
                payload: revision,
                type: action_constants_1.FORM_UPDATE_REVISION,
                formId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                payload: revision,
                type: action_constants_1.MIRROR_UPDATE_REVISION,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                payload: revision,
                type: action_constants_1.DATASHEET_UPDATE_REVISION,
                datasheetId: resourceId,
            };
        }
    }
};
exports.updateRevision = updateRevision;
const setResourceConnect = (resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                type: action_constants_1.DASHBOARD_CONNECTED,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Form: {
            return {
                type: action_constants_1.FORM_CONNECTED,
                formId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.MIRROR_CONNECTED,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.DATASHEET_CONNECTED,
                datasheetId: resourceId,
            };
        }
    }
};
exports.setResourceConnect = setResourceConnect;
const changeResourceSyncingStatus = (resourceId, resourceType, status) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                type: action_constants_1.SET_DASHBOARD_SYNCING,
                payload: status,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Form: {
            return {
                type: action_constants_1.SET_FORM_SYNCING,
                payload: status,
                formId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.SET_MIRROR_SYNCING,
                payload: status,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.SET_DATASHEET_SYNCING,
                payload: status,
                datasheetId: resourceId,
            };
        }
    }
};
exports.changeResourceSyncingStatus = changeResourceSyncingStatus;
const roomInfoSync = (resourceId, resourceType, payload) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                type: action_constants_1.DASHBOARD_ROOM_INFO_SYNC,
                payload,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Form: {
            return {
                type: action_constants_1.FORM_ROOM_INFO_SYNC,
                payload,
                formId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.MIRROR_ROOM_INFO_SYNC,
                payload,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.DATASHEET_ROOM_INFO_SYNC,
                payload,
                datasheetId: resourceId,
            };
        }
    }
};
exports.roomInfoSync = roomInfoSync;
const resourceErrorCode = (code, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.setDashboardErrorCode)(resourceId, code);
        }
        case types_1.ResourceType.Form: {
            return (0, form_1.formErrorCode)(resourceId, code);
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return (0, datasheet_1.datasheetErrorCode)(resourceId, code);
        }
    }
};
exports.resourceErrorCode = resourceErrorCode;
const updateResource = (data, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return {
                type: action_constants_1.UPDATE_DASHBOARD,
                payload: data,
                dashboardId: resourceId,
            };
        }
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.UPDATE_MIRROR,
                payload: data,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return (0, datasheet_1.updateDatasheet)(resourceId, data);
        }
    }
};
exports.updateResource = updateResource;
const resetResource = (resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Widget: {
            return (0, widget_1.resetWidget)([resourceId]);
        }
        case types_1.ResourceType.Form: {
            return (0, form_1.resetForm)(resourceId);
        }
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.resetDashboard)(resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.resetMirror)(resourceId);
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return (0, datasheet_1.resetDatasheet)(resourceId);
        }
    }
};
exports.resetResource = resetResource;
const updateResourceName = (newName, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.updateDashboardName)(newName, resourceId);
        }
        case types_1.ResourceType.Datasheet:
            return (0, datasheet_1.updateDatasheetName)(resourceId, newName);
        case types_1.ResourceType.Mirror:
            return (0, mirror_1.updateMirrorName)(newName, resourceId);
        default:
            return;
    }
};
exports.updateResourceName = updateResourceName;
const activeCollaborator = (payload, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.activeDashboardCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.activeMirrorCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Form: {
            return (0, form_1.activeFormCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return (0, datasheet_1.activeDatasheetCollaborator)(payload, resourceId);
        }
    }
};
exports.activeCollaborator = activeCollaborator;
const deactivateCollaborator = (payload, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.deactivateDashboardCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.deactivateMirrorCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Form: {
            return (0, form_1.deactivateFormCollaborator)(payload, resourceId);
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return (0, datasheet_1.deactivateDatasheetCollaborator)(payload, resourceId);
        }
    }
};
exports.deactivateCollaborator = deactivateCollaborator;
const toggleWidgetPanel = (resourceId, resourceType, status) => {
    switch (resourceType) {
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.TOGGLE_WIDGET_PANEL,
                payload: status,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.TOGGLE_WIDGET_PANEL,
                payload: status,
                datasheetId: resourceId,
            };
        }
    }
};
exports.toggleWidgetPanel = toggleWidgetPanel;
const changeWidgetPanelWidth = (width, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.CHANGE_WIDGET_PANEL_WIDTH,
                payload: width,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.CHANGE_WIDGET_PANEL_WIDTH,
                payload: width,
                datasheetId: resourceId,
            };
        }
    }
};
exports.changeWidgetPanelWidth = changeWidgetPanelWidth;
const switchActivePanel = (panelId, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Mirror: {
            return {
                type: action_constants_1.SWITCH_ACTIVE_PANEL,
                payload: panelId,
                mirrorId: resourceId,
            };
        }
        case types_1.ResourceType.Datasheet:
        default: {
            return {
                type: action_constants_1.SWITCH_ACTIVE_PANEL,
                payload: panelId,
                datasheetId: resourceId,
            };
        }
    }
};
exports.switchActivePanel = switchActivePanel;
const setTheme = (theme) => {
    return {
        type: action_constants_1.SET_THEME,
        payload: theme,
    };
};
exports.setTheme = setTheme;


/***/ }),

/***/ 45969:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(83808), exports);


/***/ }),

/***/ 83808:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.cacheTemporaryView = exports.updateMirror = exports.updateMirrorName = exports.deactivateMirrorCollaborator = exports.activeMirrorCollaborator = exports.setMirrorClient = exports.resetMirror = exports.setMirror = exports.setMirrorLoading = exports.setMirrorErrorCode = exports.fetchMirrorPack = exports.fetchMirrorDataPackApi = exports.fetchMirrorInfoApi = void 0;
const selectors_1 = __webpack_require__(964);
const catalog_tree_1 = __webpack_require__(17506);
const config_1 = __webpack_require__(77511);
const mirror_api_1 = __webpack_require__(85156);
const store_1 = __webpack_require__(56791);
const redux_batched_actions_1 = __webpack_require__(11498);
const action_constants_1 = __webpack_require__(86256);
const datasheet_1 = __webpack_require__(43064);
const fetchMirrorInfoApi = (mirrorId, shareId, _templateId) => {
    let requestMethod = mirror_api_1.fetchMirrorInfo;
    if (shareId) {
        requestMethod = () => (0, mirror_api_1.fetchShareMirrorInfo)(shareId, mirrorId);
    }
    return requestMethod(mirrorId);
};
exports.fetchMirrorInfoApi = fetchMirrorInfoApi;
const fetchMirrorDataPackApi = (mirrorId, shareId, recordIds) => {
    let requestMethod = mirror_api_1.fetchMirrorDataPack;
    if (shareId) {
        requestMethod = () => (0, mirror_api_1.fetchShareMirrorDataPack)(shareId, mirrorId);
    }
    return requestMethod(mirrorId, recordIds);
};
exports.fetchMirrorDataPackApi = fetchMirrorDataPackApi;
function fetchMirrorPack(mirrorId, successCb, _overwrite, extra, failCb) {
    return (dispatch, getState) => {
        var _a;
        const state = getState();
        const mirror = (0, selectors_1.getMirror)(state, mirrorId);
        const { shareId, templateId } = state.pageParams;
        const mirrorLoading = (0, selectors_1.getMirrorLoading)(state, mirrorId);
        const datasheet = (0, selectors_1.getDatasheet)(state, (_a = (0, selectors_1.getMirrorSourceInfo)(state, mirrorId)) === null || _a === void 0 ? void 0 : _a.datasheetId);
        if (mirrorLoading) {
            return;
        }
        if (!mirror || (datasheet === null || datasheet === void 0 ? void 0 : datasheet.isPartOfData)) {
            return (0, exports.fetchMirrorInfoApi)(mirrorId, shareId, templateId)
                .then(response => {
                // if (!response.data.success && state.catalogTree.treeNodesMap[mirrorId]) {
                //   // dispatch(deleteNode({ nodeId: mirrorId, parentId: state.catalogTree.treeNodesMap[mirrorId].parentId }));
                //   // return Promise.reject();
                // }
                return Promise.resolve({ mirrorId, response, dispatch, getState });
            })
                .catch(e => {
                dispatch((0, exports.setMirrorErrorCode)(mirrorId, config_1.StatusCode.COMMON_ERR));
                throw e;
            })
                .then((props) => __awaiter(this, void 0, void 0, function* () {
                const { recordIds } = extra || {};
                yield fetchSuccess(props, recordIds, successCb, failCb);
            }));
        }
        successCb && successCb();
        return;
    };
}
exports.fetchMirrorPack = fetchMirrorPack;
const setMirrorErrorCode = (mirrorId, code) => {
    return {
        type: store_1.ActionConstants.MIRROR_ERROR_CODE,
        payload: code,
        mirrorId,
    };
};
exports.setMirrorErrorCode = setMirrorErrorCode;
const fetchSuccess = ({ dispatch, getState, response, mirrorId }, recordIds, successCb, failCb) => {
    const { data, success, code } = response.data;
    if (success) {
        const _batchActions = [
            (0, exports.setMirror)(Object.assign(Object.assign({}, data.mirror), { sourceInfo: data.sourceInfo, snapshot: data.snapshot }), data.mirror.id),
        ];
        const state = getState();
        const shareId = state.pageParams.shareId;
        const sourceDatasheetId = data.sourceInfo.datasheetId;
        const datasheet = (0, selectors_1.getDatasheet)(state, sourceDatasheetId);
        if (!datasheet || datasheet.isPartOfData) {
            (0, exports.fetchMirrorDataPackApi)(mirrorId, shareId, recordIds)
                .then(response => {
                return Promise.resolve({
                    datasheetId: sourceDatasheetId,
                    responseBody: response.data,
                    dispatch,
                    getState,
                    isPartOfData: Boolean(recordIds),
                });
            })
                .catch(e => {
                if (state.catalogTree.treeNodesMap[sourceDatasheetId]) {
                    dispatch((0, catalog_tree_1.deleteNode)({ nodeId: sourceDatasheetId, parentId: state.catalogTree.treeNodesMap[sourceDatasheetId].parentId }));
                }
                dispatch((0, datasheet_1.datasheetErrorCode)(sourceDatasheetId, config_1.StatusCode.COMMON_ERR));
                throw e;
            })
                .then(props => {
                (0, datasheet_1.fetchDatasheetPackSuccess)(props);
                props.responseBody.success ? successCb && successCb() : failCb && failCb();
            });
        }
        else {
            successCb && successCb();
        }
        dispatch((0, redux_batched_actions_1.batchActions)(_batchActions));
        return;
    }
    dispatch((0, exports.setMirrorErrorCode)(mirrorId, code));
    failCb && failCb();
};
const setMirrorLoading = (status, mirrorId) => {
    return {
        type: store_1.ActionConstants.SET_MIRROR_LOADING,
        payload: status,
        mirrorId: mirrorId,
    };
};
exports.setMirrorLoading = setMirrorLoading;
const setMirror = (data, mirrorId) => {
    return {
        type: store_1.ActionConstants.SET_MIRROR_DATA,
        payload: data,
        mirrorId: mirrorId,
    };
};
exports.setMirror = setMirror;
const resetMirror = (mirrorId) => {
    return {
        type: store_1.ActionConstants.RESET_MIRROR,
        mirrorId: mirrorId,
    };
};
exports.resetMirror = resetMirror;
const setMirrorClient = (client) => {
    return {
        type: store_1.ActionConstants.SET_MIRROR_CLIENT,
        payload: client,
    };
};
exports.setMirrorClient = setMirrorClient;
const activeMirrorCollaborator = (payload, resourceId) => {
    return {
        type: store_1.ActionConstants.MIRROR_ACTIVE_COLLABORATOR,
        mirrorId: resourceId,
        payload,
    };
};
exports.activeMirrorCollaborator = activeMirrorCollaborator;
const deactivateMirrorCollaborator = (payload, resourceId) => {
    return {
        type: store_1.ActionConstants.MIRROR_DEACTIVATE_COLLABORATOR,
        mirrorId: resourceId,
        payload,
    };
};
exports.deactivateMirrorCollaborator = deactivateMirrorCollaborator;
const updateMirrorName = (newName, mirrorId) => {
    return {
        type: action_constants_1.UPDATE_MIRROR_NAME,
        mirrorId,
        payload: newName,
    };
};
exports.updateMirrorName = updateMirrorName;
const updateMirror = (mirrorId, data) => {
    return {
        type: action_constants_1.UPDATE_MIRROR_INFO,
        mirrorId,
        payload: data,
    };
};
exports.updateMirror = updateMirror;
const cacheTemporaryView = (viewProperty, mirrorId) => {
    return {
        type: action_constants_1.CACHE_TEMPORARY_VIEW,
        payload: viewProperty,
        mirrorId,
    };
};
exports.cacheTemporaryView = cacheTemporaryView;


/***/ }),

/***/ 70907:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(1530), exports);


/***/ }),

/***/ 1530:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.resetWidget = exports.fetchInstallationWidgetSuccess = exports.receiveInstallationWidget = exports.fetchWidgetsByWidgetIds = void 0;
const widget_api_1 = __webpack_require__(25265);
const player_1 = __webpack_require__(63325);
const redux_batched_actions_1 = __webpack_require__(11498);
const store_1 = __webpack_require__(56791);
const action_constants_1 = __webpack_require__(86256);
const fetchWidgetsByWidgetIds = (widgetIds, successCb) => {
    return (dispatch, getState) => {
        // dispatch(setWidgetPanelLoading(true));
        const state = getState();
        const linkId = store_1.Selectors.getLinkId(state);
        (0, widget_api_1.readInstallationWidgets)(widgetIds, linkId).then(res => {
            return Promise.resolve({ responseBody: res.data, dispatch, getState });
        }).catch(e => {
            // dispatch(setWidgetPanelLoading(false));
            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                error: new Error(`widgetMap request error ${widgetIds.join(',')}`),
                metaData: { widgetIds: widgetIds.join(',') },
            });
            throw e;
        }).then(props => {
            (0, exports.fetchInstallationWidgetSuccess)(props);
            successCb === null || successCb === void 0 ? void 0 : successCb(props);
        });
    };
};
exports.fetchWidgetsByWidgetIds = fetchWidgetsByWidgetIds;
const receiveInstallationWidget = (widgetId, widget) => {
    return {
        type: action_constants_1.RECEIVE_INSTALLATIONS_WIDGET,
        payload: widget,
        widgetId: widgetId,
    };
};
exports.receiveInstallationWidget = receiveInstallationWidget;
const fetchInstallationWidgetSuccess = ({ responseBody, dispatch }) => {
    const { data, success } = responseBody;
    // dispatch(setWidgetPanelLoading(false));
    if (success) {
        const _batchActions = [];
        for (const v of data) {
            _batchActions.push((0, exports.receiveInstallationWidget)(v.id, v));
        }
        dispatch((0, redux_batched_actions_1.batchActions)(_batchActions));
    }
    else {
        player_1.Player.doTrigger(player_1.Events.app_error_logger, {
            error: new Error('widgetMap error'),
            metaData: {},
        });
    }
};
exports.fetchInstallationWidgetSuccess = fetchInstallationWidgetSuccess;
const resetWidget = (widgetIds) => {
    return {
        type: action_constants_1.RESET_WIDGET,
        payload: widgetIds,
    };
};
exports.resetWidget = resetWidget;


/***/ }),

/***/ 58937:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setRightPaneWidth = void 0;
const actions = __importStar(__webpack_require__(86256));
const setRightPaneWidth = (width) => {
    return (dispatch) => {
        dispatch({
            type: actions.SET_RIGHT_PANE_WIDTH,
            payload: width,
        });
    };
};
exports.setRightPaneWidth = setRightPaneWidth;


/***/ }),

/***/ 34782:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setSubscriptionsAction = exports.getSubscriptionsAction = void 0;
const store_1 = __webpack_require__(56791);
const datasheet_api_1 = __webpack_require__(68615);
/**
 * get current datasheet/mirrors' subscribed(followed) record ids
 * @param datasheetId
 * @param mirrorId
 * @returns
 */
const getSubscriptionsAction = (datasheetId, mirrorId) => (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
    const { data } = yield (0, datasheet_api_1.getSubscriptions)(datasheetId, mirrorId);
    if (data === null || data === void 0 ? void 0 : data.success) {
        dispatch((0, exports.setSubscriptionsAction)(data.data || []));
    }
});
exports.getSubscriptionsAction = getSubscriptionsAction;
/**
 * update current subscribed(followed) records ids
 * @param recordIds
 * @returns
 */
const setSubscriptionsAction = (recordIds) => ({
    type: store_1.ActionConstants.SET_SUBSCRIPTIONS,
    payload: recordIds,
});
exports.setSubscriptionsAction = setSubscriptionsAction;


/***/ }),

/***/ 5703:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setToolbarMenuCardOpen = void 0;
const actions = __importStar(__webpack_require__(86256));
const setToolbarMenuCardOpen = (type) => {
    return (dispatch) => {
        dispatch({
            type: actions.SET_TOOLBAR_MENU_CARD_OPEN,
            payload: type,
        });
    };
};
exports.setToolbarMenuCardOpen = setToolbarMenuCardOpen;


/***/ }),

/***/ 80356:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ModalConfirmKey = void 0;
var ModalConfirmKey;
(function (ModalConfirmKey) {
    ModalConfirmKey["FixInnerConsistency"] = "fixInnerConsistency";
    ModalConfirmKey["FixLinkConsistency"] = "fixLinkConsistency";
})(ModalConfirmKey = exports.ModalConfirmKey || (exports.ModalConfirmKey = {}));


/***/ }),

/***/ 94819:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 3195:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 33130:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 64455:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 39974:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RecordVision = void 0;
var RecordVision;
(function (RecordVision) {
    RecordVision["Center"] = "center";
    RecordVision["Side"] = "side";
})(RecordVision = exports.RecordVision || (exports.RecordVision = {}));


/***/ }),

/***/ 62192:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 46888:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SetFieldFrom = void 0;
var SetFieldFrom;
(function (SetFieldFrom) {
    SetFieldFrom["EXPAND_RECORD"] = "EXPAND_RECORD";
    SetFieldFrom["CONTEXT_MENU"] = "CONTEXT_MENU";
})(SetFieldFrom = exports.SetFieldFrom || (exports.SetFieldFrom = {}));


/***/ }),

/***/ 92517:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.AlarmUsersType = void 0;
var AlarmUsersType;
(function (AlarmUsersType) {
    AlarmUsersType["Field"] = "field";
    AlarmUsersType["Member"] = "member";
})(AlarmUsersType = exports.AlarmUsersType || (exports.AlarmUsersType = {}));


/***/ }),

/***/ 84763:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(92517), exports);
__exportStar(__webpack_require__(46888), exports);


/***/ }),

/***/ 21544:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 68044:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
const types_1 = __webpack_require__(73578);
__exportStar(__webpack_require__(62192), exports);
__exportStar(__webpack_require__(84763), exports);
__exportStar(__webpack_require__(21544), exports);
__exportStar(__webpack_require__(58889), exports);
__exportStar(__webpack_require__(34238), exports);
__exportStar(__webpack_require__(49415), exports);


/***/ }),

/***/ 34238:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 49415:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ThemeName = void 0;
var ThemeName;
(function (ThemeName) {
    ThemeName["Light"] = "light";
    ThemeName["Dark"] = "dark";
})(ThemeName = exports.ThemeName || (exports.ThemeName = {}));


/***/ }),

/***/ 58889:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.WidgetRuntimeEnv = exports.WidgetInstallEnv = exports.WidgetPackageStatus = exports.WidgetReleaseType = exports.WidgetPackageType = void 0;
var WidgetPackageType;
(function (WidgetPackageType) {
    WidgetPackageType[WidgetPackageType["Custom"] = 0] = "Custom";
    WidgetPackageType[WidgetPackageType["Official"] = 1] = "Official";
})(WidgetPackageType = exports.WidgetPackageType || (exports.WidgetPackageType = {}));
var WidgetReleaseType;
(function (WidgetReleaseType) {
    /**
     * space self-created
     */
    WidgetReleaseType[WidgetReleaseType["Space"] = 0] = "Space";
    /**
     * official recommend
     */
    WidgetReleaseType[WidgetReleaseType["Global"] = 1] = "Global";
    /**
     * censorship preview
     */
    WidgetReleaseType[WidgetReleaseType["Preview"] = 10] = "Preview";
})(WidgetReleaseType = exports.WidgetReleaseType || (exports.WidgetReleaseType = {}));
var WidgetPackageStatus;
(function (WidgetPackageStatus) {
    /**
     * under development
     */
    WidgetPackageStatus[WidgetPackageStatus["Developing"] = 0] = "Developing";
    /**
     * Banned(forbidden)
     */
    WidgetPackageStatus[WidgetPackageStatus["Ban"] = 1] = "Ban";
    /**
     * Published
     */
    WidgetPackageStatus[WidgetPackageStatus["Published"] = 3] = "Published";
    /**
     * Unpublished(down)
     */
    WidgetPackageStatus[WidgetPackageStatus["Unpublished"] = 4] = "Unpublished";
})(WidgetPackageStatus = exports.WidgetPackageStatus || (exports.WidgetPackageStatus = {}));
var WidgetInstallEnv;
(function (WidgetInstallEnv) {
    WidgetInstallEnv["Dashboard"] = "dashboard";
    WidgetInstallEnv["Panel"] = "panel";
})(WidgetInstallEnv = exports.WidgetInstallEnv || (exports.WidgetInstallEnv = {}));
var WidgetRuntimeEnv;
(function (WidgetRuntimeEnv) {
    WidgetRuntimeEnv["Mobile"] = "mobile";
    WidgetRuntimeEnv["Desktop"] = "desktop";
})(WidgetRuntimeEnv = exports.WidgetRuntimeEnv || (exports.WidgetRuntimeEnv = {}));


/***/ }),

/***/ 59509:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 72503:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.pageParams = void 0;
const action_constants_1 = __webpack_require__(86256);
const DEFAULT_PAGE_PARAMS = {
    datasheetId: '',
    viewId: '',
    resourceId: '',
};
const pageParams = (state = DEFAULT_PAGE_PARAMS, action) => {
    switch (action.type) {
        case action_constants_1.SET_PAGE_PARAMS: {
            return action.payload;
        }
        default: {
            return state;
        }
    }
};
exports.pageParams = pageParams;


/***/ }),

/***/ 96515:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.previewFile = void 0;
const immer_1 = __webpack_require__(7133);
const action_constants_1 = __webpack_require__(86256);
const defaultState = {
    datasheetId: undefined,
    recordId: undefined,
    fieldId: undefined,
    activeIndex: -1,
    cellValue: [],
    editable: true,
    onChange: () => { },
    disabledDownload: false,
};
exports.previewFile = (0, immer_1.produce)((state = defaultState, action) => {
    switch (action.type) {
        case action_constants_1.SET_PREVIEW_FILE:
            return Object.assign({}, action.payload);
        case action_constants_1.SET_PREVIEW_FILE_CELL_ACTIVE:
            state.cellValue = action.payload;
            return state;
        case action_constants_1.SET_PREVIEW_DEFAULT_ACTIVE:
            return defaultState;
        default:
            return state;
    }
}, defaultState);


/***/ }),

/***/ 62385:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.recordVision = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const interfaces_1 = __webpack_require__(37848);
const action_constants_1 = __webpack_require__(86256);
exports.recordVision = (0, immer_1.default)((recordVisionModeDraft = interfaces_1.RecordVision.Center, action) => {
    if (action.type === action_constants_1.SET_RECORD_VISION_MODE) {
        recordVisionModeDraft = action.payload;
        return action.payload;
    }
    return recordVisionModeDraft;
}, interfaces_1.RecordVision.Center);


/***/ }),

/***/ 52857:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.dashboard = exports.dashboardMap = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const redux_1 = __webpack_require__(86695);
const store_1 = __webpack_require__(56791);
const actions = __importStar(__webpack_require__(86256));
const jot_apply_1 = __webpack_require__(32460);
const dashboardMap = (state = {}, action) => {
    if (!action.dashboardId) {
        return state;
    }
    if (action.type === actions.RESET_DASHBOARD) {
        const newState = Object.assign({}, state);
        delete newState[action.dashboardId];
        return newState;
    }
    return Object.assign(Object.assign({}, state), { [action.dashboardId]: dashboardPack(state[action.dashboardId], action) });
};
exports.dashboardMap = dashboardMap;
const dashboard = (state = null, action) => {
    if (action.type === store_1.ActionConstants.SET_DASHBOARD_DATA) {
        return action.payload;
    }
    if (!state) {
        return null;
    }
    switch (action.type) {
        case store_1.ActionConstants.UPDATE_DASHBOARD_INFO:
        case store_1.ActionConstants.UPDATE_DASHBOARD: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case store_1.ActionConstants.DASHBOARD_JOT_ACTION: {
            return (0, immer_1.default)(state, draft => {
                (0, jot_apply_1.JOTApply)(draft, action);
                return draft;
            });
        }
        case store_1.ActionConstants.DASHBOARD_UPDATE_REVISION: {
            return Object.assign(Object.assign({}, state), { revision: action.payload });
        }
        case store_1.ActionConstants.UPDATE_DASHBOARD_NAME: {
            state.name = action.payload;
            return state;
        }
        default: {
            return state;
        }
    }
};
exports.dashboard = dashboard;
const defaultClient = {
    isFullScreen: false,
    showRecommendPanel: false,
    collaborators: [],
};
const client = (state = defaultClient, action) => {
    switch (action.type) {
        case store_1.ActionConstants.DASHBOARD_ACTIVE_COLLABORATOR: {
            if (!state.collaborators) {
                return Object.assign(Object.assign({}, state), { collaborators: [action.payload] });
            }
            else if (state.collaborators.find(user => user.socketId === action.payload.socketId)) {
                console.error('warning user enter with same socketid');
                return state;
            }
            state.collaborators = [...state.collaborators, action.payload];
            return state;
        }
        case store_1.ActionConstants.DASHBOARD_DEACTIVATE_COLLABORATOR: {
            if (!state.collaborators) {
                return state;
            }
            state.collaborators = state.collaborators.filter(user => user.socketId !== action.payload.socketId);
            return state;
        }
        case store_1.ActionConstants.DASHBOARD_ROOM_INFO_SYNC: {
            return Object.assign(Object.assign({}, state), { collaborators: action.payload });
        }
        case store_1.ActionConstants.SET_DASHBOARD_CLIENT: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        default: {
            return state;
        }
    }
};
const dashboardPack = (0, redux_1.combineReducers)({
    loading: (state = false, action) => {
        if (action.type === store_1.ActionConstants.SET_DASHBOARD_LOADING) {
            return action.payload;
        }
        if (action.type === store_1.ActionConstants.DASHBOARD_ERROR_CODE ||
            action.type === store_1.ActionConstants.SET_DASHBOARD_DATA) {
            return false;
        }
        return state;
    },
    connected: (state = false, action) => {
        if (action.type === store_1.ActionConstants.DASHBOARD_CONNECTED) {
            return true;
        }
        return state;
    },
    errorCode: (state = null, action) => {
        if (action.type === store_1.ActionConstants.DASHBOARD_ERROR_CODE) {
            return action.payload;
        }
        if (action.type === store_1.ActionConstants.SET_DASHBOARD_LOADING ||
            action.type === store_1.ActionConstants.SET_DASHBOARD_DATA) {
            return null;
        }
        return state;
    },
    syncing: (state = false, action) => {
        if (action.type === store_1.ActionConstants.SET_DASHBOARD_SYNCING) {
            return action.payload;
        }
        return state;
    },
    dashboard: exports.dashboard,
    client,
});


/***/ }),

/***/ 36935:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(52857), exports);


/***/ }),

/***/ 90214:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.client = exports.defaultKanbanViewStatus = exports.defaultOrgChartViewStatus = exports.defaultCalendarViewStatus = exports.defaultGanttViewStatus = exports.defaultWidgetPanelStatus = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const lodash_1 = __webpack_require__(46517);
const redux_1 = __webpack_require__(86695);
const action_constants_1 = __webpack_require__(86256);
const constants_1 = __webpack_require__(12690);
const collaborators_1 = __webpack_require__(29305);
const grid_view_active_field_1 = __webpack_require__(74947);
const grid_view_drag_1 = __webpack_require__(96511);
const selection_1 = __webpack_require__(85525);
const defaultActiveRowInfo = {
    type: constants_1.WhyRecordMoveType.UpdateRecord,
    positionInfo: {
        fieldId: '',
        recordId: '',
        visibleRowIndex: 0,
        isInit: true,
    },
    recordSnapshot: { meta: { fieldMap: {} }, recordMap: {} },
};
const MIN_WIDGET_PANEL_WIDTH = 320;
exports.defaultWidgetPanelStatus = {
    opening: false,
    width: MIN_WIDGET_PANEL_WIDTH,
    activePanelId: null,
    loading: false,
};
exports.defaultGanttViewStatus = {
    gridWidth: 256,
    gridVisible: true,
    settingPanelWidth: MIN_WIDGET_PANEL_WIDTH,
    settingPanelVisible: true,
    dateUnitType: constants_1.DateUnitType.Month,
};
exports.defaultCalendarViewStatus = {
    // whether the first guide is completed
    guideStatus: false,
    gridWidth: 256,
    gridVisible: false,
    settingPanelVisible: true,
    settingPanelWidth: MIN_WIDGET_PANEL_WIDTH,
};
exports.defaultOrgChartViewStatus = {
    guideStatus: false,
    rightPanelWidth: 256,
    rightPanelVisible: true,
    settingPanelVisible: false,
    settingPanelWidth: MIN_WIDGET_PANEL_WIDTH,
};
exports.defaultKanbanViewStatus = {
    groupSettingVisible: false,
};
exports.client = (0, redux_1.combineReducers)({
    gridViewDragState: grid_view_drag_1.gridViewDragState,
    gridViewActiveFieldState: grid_view_active_field_1.gridViewActiveFieldState,
    selection: selection_1.selection,
    collaborators: collaborators_1.collaborators,
    newRecordExpectIndex: (state = null, action) => {
        if (action.type === action_constants_1.SET_NEW_RECORD_EXPECT_INDEX) {
            return action.payload;
        }
        return state;
    },
    activeRowInfo: (state = defaultActiveRowInfo, action) => {
        if (action.type === action_constants_1.SET_ACTIVE_ROW_INFO) {
            return action.payload;
        }
        if (action.type === action_constants_1.CLEAR_ACTIVE_ROW_INFO) {
            return null;
        }
        return state;
    },
    searchResultCursorIndex: (state = 0, action) => {
        if (action.type === action_constants_1.SET_SEARCH_RESULT_CURSOR_INDEX) {
            return action.payload;
        }
        return state;
    },
    searchKeyword: (state = '', action) => {
        if (action.type === action_constants_1.SET_SEARCH_KEYWORD) {
            return action.payload;
        }
        return state;
    },
    groupingCollapseIds: (state = [], action) => {
        if (action.type === action_constants_1.SET_GROUPING_COLLAPSE) {
            return action.payload;
        }
        return state;
    },
    kanbanGroupCollapse: (state = [], action) => {
        if (action.type === action_constants_1.SET_KANBAN_GROUPING_EXPAND) {
            return action.payload;
        }
        return state;
    },
    isEditingCell: (state = null, action) => {
        if (action.type === action_constants_1.SET_EDIT_STATUS) {
            return action.payload;
        }
        return state;
    },
    loadingRecord: (0, immer_1.default)((state = {}, action) => {
        if (action.type === action_constants_1.SET_LOADING_RECORD) {
            const { recordIds, loading } = action.payload;
            recordIds.forEach(recordId => {
                state[recordId] = loading;
            });
        }
        return state;
    }, {}),
    widgetPanelStatus: (state = exports.defaultWidgetPanelStatus, action) => {
        switch (action.type) {
            case action_constants_1.TOGGLE_WIDGET_PANEL: {
                return Object.assign(Object.assign({}, state), { opening: action.payload == null ? !state.opening : action.payload });
            }
            case action_constants_1.CHANGE_WIDGET_PANEL_WIDTH: {
                return Object.assign(Object.assign({}, state), { width: Math.max(action.payload, MIN_WIDGET_PANEL_WIDTH) });
            }
            case action_constants_1.SWITCH_ACTIVE_PANEL: {
                return Object.assign(Object.assign({}, state), { activePanelId: action.payload });
            }
            case action_constants_1.SET_WIDGET_PANEL_LOADING: {
                return Object.assign(Object.assign({}, state), { loading: action.payload });
            }
            default: {
                return state;
            }
        }
    },
    ganttViewStatus: (state = exports.defaultGanttViewStatus, action) => {
        switch (action.type) {
            case action_constants_1.TOGGLE_GANTT_GRID: {
                return Object.assign(Object.assign({}, state), { gridVisible: action.payload == null ? !state.gridVisible : action.payload });
            }
            case action_constants_1.SET_GANTT_GRID_WIDTH: {
                return Object.assign(Object.assign({}, state), { gridWidth: action.payload });
            }
            case action_constants_1.TOGGLE_GANTT_SETTING_PANEL: {
                return Object.assign(Object.assign({}, state), { settingPanelVisible: action.payload == null ? !state.settingPanelVisible : action.payload });
            }
            case action_constants_1.SET_GANTT_SETTING_PANEL_WIDTH: {
                return Object.assign(Object.assign({}, state), { settingPanelWidth: action.payload });
            }
            case action_constants_1.SET_GANTT_DATE_UNIT_TYPE: {
                return Object.assign(Object.assign({}, state), { dateUnitType: action.payload });
            }
            default: {
                return state;
            }
        }
    },
    calendarViewStatus: (state = exports.defaultCalendarViewStatus, action) => {
        switch (action.type) {
            case action_constants_1.TOGGLE_CALENDAR_GUIDE_STATUS: {
                return Object.assign(Object.assign({}, state), { guideStatus: action.payload == null ? !state.guideStatus : action.payload });
            }
            case action_constants_1.TOGGLE_CALENDAR_GRID: {
                return Object.assign(Object.assign({}, state), { gridVisible: action.payload == null ? !state.gridVisible : action.payload });
            }
            case action_constants_1.SET_CALENDAR_GRID_WIDTH: {
                return Object.assign(Object.assign({}, state), { gridWidth: action.payload });
            }
            case action_constants_1.TOGGLE_CALENDAR_SETTING_PANEL: {
                return Object.assign(Object.assign({}, state), { settingPanelVisible: action.payload == null ? !state.settingPanelVisible : action.payload });
            }
            case action_constants_1.SET_CALENDAR_SETTING_PANEL_WIDTH: {
                return Object.assign(Object.assign({}, state), { settingPanelWidth: action.payload });
            }
            default: {
                return state;
            }
        }
    },
    orgChartViewStatus: (state = exports.defaultOrgChartViewStatus, action) => {
        switch (action.type) {
            case action_constants_1.TOGGLE_ORG_CHART_GUIDE_STATUS: {
                return Object.assign(Object.assign({}, state), { guideStatus: action.payload == null ? !state.guideStatus : action.payload });
            }
            case action_constants_1.TOGGLE_ORG_CHART_GRID: {
                return Object.assign(Object.assign({}, state), { rightPanelVisible: action.payload == null ? !state.rightPanelVisible : action.payload });
            }
            case action_constants_1.SET_ORG_CHART_GRID_WIDTH: {
                return Object.assign(Object.assign({}, state), { rightPanelWidth: action.payload });
            }
            case action_constants_1.TOGGLE_ORG_CHART_SETTING_PANEL: {
                return Object.assign(Object.assign({}, state), { settingPanelVisible: action.payload == null ? !state.settingPanelVisible : action.payload });
            }
            case action_constants_1.SET_ORG_CHART_SETTING_PANEL_WIDTH: {
                return Object.assign(Object.assign({}, state), { settingPanelWidth: action.payload });
            }
            default: {
                return state;
            }
        }
    },
    kanbanViewStatus: (state = exports.defaultKanbanViewStatus, action) => {
        switch (action.type) {
            case action_constants_1.TOGGLE_KANBAN_GROUP_SETTING_VISIBLE: {
                return Object.assign(Object.assign({}, state), { groupSettingVisible: action.payload == null ? !state.groupSettingVisible : action.payload });
            }
        }
        return state;
    },
    gridViewHoverFieldId(state = null, action) {
        switch (action.type) {
            case action_constants_1.SET_GRID_VIEW_HOVER_FIELD_ID: {
                return action.payload;
            }
        }
        return state;
    },
    highlightFiledId(state = null, action) {
        if (action.type === action_constants_1.SET_HIGHLIGHT_FIELD_ID) {
            return action.payload;
        }
        return state;
    },
    closeSyncViewIds(state = [], action) {
        switch (action.type) {
            case action_constants_1.SET_CLOSE_SYNC_VIEW_ID: {
                if (!state) {
                    return [action.payload];
                }
                if (state.includes(action.payload)) {
                    return state.filter(item => item !== action.payload);
                }
                return [...state, action.payload];
            }
        }
        return state;
    },
    isRobotPanelOpen(state = false, action) {
        if (action.type === action_constants_1.SET_ROBOT_PANEL_STATUS) {
            return action.payload;
        }
        return state;
    },
    operateViewIds(state = null, action) {
        const viewId = action.payload;
        if (action.type === action_constants_1.ACTIVE_OPERATE_VIEW_ID) {
            if (!state) {
                return [viewId];
            }
            state.push(viewId);
            return state;
        }
        if (action.type === action_constants_1.RESET_OPERATE_VIEW_ID) {
            if (!state) {
                return state;
            }
            return state.filter(item => item !== viewId);
        }
        return state;
    },
    isTimeMachinePanelOpen(state = false, action) {
        if (action.type === action_constants_1.TOGGLE_TIME_MACHINE_PANEL) {
            if (action.payload != null) {
                return action.payload;
            }
            return !state;
        }
        return state;
    },
    exportViewId(state = null, action) {
        if (action.type === action_constants_1.ACTIVE_EXPORT_VIEW_ID) {
            const viewId = action.payload;
            return viewId;
        }
        if (action.type === action_constants_1.RESET_EXPORT_VIEW_ID) {
            return null;
        }
        return state;
    },
    viewDerivation(state = {}, action) {
        if (action.type === action_constants_1.SET_VIEW_DERIVATION) {
            return Object.assign(Object.assign({}, state), { [action.payload.viewId]: action.payload.viewDerivation });
        }
        if (action.type === action_constants_1.PATCH_VIEW_DERIVATION) {
            const oldState = state[action.payload.viewId];
            if (oldState) {
                return Object.assign(Object.assign({}, state), { [action.payload.viewId]: Object.assign(Object.assign({}, oldState), action.payload.viewDerivation) });
            }
            return state;
        }
        if (action.type === action_constants_1.DELETE_VIEW_DERIVATION) {
            return (0, lodash_1.omit)(state, [action.payload.viewId]);
        }
        return state;
    },
});


/***/ }),

/***/ 29305:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.collaborators = void 0;
const actions = __importStar(__webpack_require__(86256));
function activeCollaborator(state, { payload }) {
    if (state.find(user => user.socketId === payload.socketId)) {
        console.warn('! ' + 'warning user enter with same socketid');
        return state;
    }
    return [...state, payload];
}
function deactivateCollaborator(state, { payload }) {
    return state.filter(user => user.socketId !== payload.socketId);
}
function userCursorMove(state, { payload }) {
    const { socketId } = payload, rest = __rest(payload, ["socketId"]);
    return state.map(user => {
        if (user.socketId === socketId) {
            return Object.assign(Object.assign({}, user), { activeCell: rest });
        }
        return user;
    });
}
const collaborators = (state = [], action) => {
    switch (action.type) {
        case actions.DATASHEET_ACTIVE_COLLABORATOR: {
            return activeCollaborator(state, action);
        }
        case actions.DATASHEET_DEACTIVATE_COLLABORATOR: {
            return deactivateCollaborator(state, action);
        }
        case actions.DATASHEET_ROOM_INFO_SYNC: {
            return action.payload;
        }
        case actions.CURSOR_MOVE: {
            return userCursorMove(state, action);
        }
        default:
            return state;
    }
};
exports.collaborators = collaborators;


/***/ }),

/***/ 78673:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.datasheetPack = exports.datasheetMap = exports.datasheet = exports.filterDatasheetOp = void 0;
const compensator_1 = __webpack_require__(40806);
const immer_1 = __importDefault(__webpack_require__(7133));
const field_permission_map_1 = __webpack_require__(48826);
const redux_1 = __webpack_require__(86695);
const i18n_1 = __webpack_require__(47511);
const player_1 = __webpack_require__(63325);
const actions = __importStar(__webpack_require__(86256));
const index_1 = __webpack_require__(99054);
const client_1 = __webpack_require__(90214);
const filterDatasheetOp = (state, action) => {
    return action.filter(action => {
        // OPs that filter comments
        if (action.p[2] === 'comments' && action.p[0] === 'recordMap' && ('li' in action || 'ld' in action)) {
            return false;
        }
        // when state only contains part of the data, filter out actions that operate on non-existent records
        if (state.isPartOfData) {
            // if p[0] is recordMap, then p[1] is recordId
            // if action.p.length > 2, then action has setRecord feature
            return !(action.p[0] === 'recordMap' && action.p.length > 2 && !state.snapshot.recordMap[action.p[1]]);
        }
        return true;
    });
};
exports.filterDatasheetOp = filterDatasheetOp;
exports.datasheet = (0, immer_1.default)((state = null, action) => {
    if (action.type === actions.DATAPACK_LOADED) {
        // only include part of the data payload
        // can not cover the state that contains all the data
        if (state && action.payload.isPartOfData && !state.isPartOfData) {
            console.log('datasheet with part of data ignored');
            return state;
        }
        // payload and state include part of the data, then need to merge them
        if (state && action.payload.isPartOfData && state.isPartOfData) {
            if (action.payload.revision === state.revision) {
                state.snapshot.recordMap = Object.assign({}, action.payload.snapshot.recordMap, state.snapshot.recordMap);
            }
            else {
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error((0, i18n_1.t)(i18n_1.Strings.error_the_version_is_inconsistent_while_preparing_to_merge)),
                    metaData: { name: state.name, id: state.id },
                });
            }
            return state;
        }
        return action.payload;
    }
    if (!state) {
        return null;
    }
    switch (action.type) {
        case actions.REFRESH_SNAPSHOT: {
            state.snapshot = Object.assign({}, state.snapshot);
            return state;
        }
        case actions.DATASHEET_JOT_ACTION: {
            (0, index_1.JOTApply)(state, action, exports.filterDatasheetOp);
            return state;
        }
        case actions.DATASHEET_UPDATE_REVISION: {
            state.revision = action.payload;
            return state;
        }
        case actions.CHANGE_VIEW: {
            state.activeView = action.payload;
            return state;
        }
        case actions.RECORD_NODE_DESC: {
            state.description = action.payload;
            return state;
        }
        case actions.SET_NODE_ICON: {
            state.icon = action.payload;
            return state;
        }
        case actions.UPDATE_DATASHEET: {
            state = Object.assign(Object.assign({}, state), action.payload);
            return state;
        }
        case actions.UPDATE_SNAPSHOT: {
            state.snapshot = action.payload;
            return state;
        }
        case actions.RECORD_NODE_SHARED: {
            state.nodeShared = action.payload;
            return state;
        }
        case actions.UPDATE_DATASHEET_NAME: {
            state.name = action.payload;
            return state;
        }
    }
    return state;
}, null);
const datasheetMap = (state = {}, action) => {
    if (!action.datasheetId) {
        return state;
    }
    if (action.type === actions.RESET_DATASHEET) {
        const newState = Object.assign({}, state);
        delete newState[action.datasheetId];
        return newState;
    }
    if (action.type === actions.ADD_DATASHEET) {
        const newState = Object.assign(Object.assign({}, state), { [action.datasheetId]: action.payload });
        return newState;
    }
    const result = (0, exports.datasheetPack)(state[action.datasheetId], action);
    if (result === state[action.datasheetId]) {
        return state;
    }
    return Object.assign(Object.assign({}, state), { [action.datasheetId]: result });
};
exports.datasheetMap = datasheetMap;
const computedInfo = (state = {}, action) => {
    if (action.type === actions.SET_DATASHEET_COMPUTED) {
        return action.payload;
    }
    if (action.type === actions.UPDATE_DATASHEET_COMPUTED) {
        compensator_1.compensator.clearAll();
        return Object.assign(Object.assign({}, state), action.payload);
    }
    return state;
};
const computedStatus = (state = {}, action) => {
    if (action.type === actions.SET_DATASHEET_COMPUTED_STATUS) {
        return Object.assign(Object.assign({}, state), action.payload);
    }
    return state;
};
exports.datasheetPack = (0, redux_1.combineReducers)({
    loading: (state = false, action) => {
        if (action.type === actions.DATAPACK_REQUEST) {
            return true;
        }
        if (action.type === actions.DATAPACK_LOADED || action.type === actions.DATASHEET_ERROR_CODE) {
            return false;
        }
        return state;
    },
    connected: (state = false, action) => {
        if (action.type === actions.DATASHEET_CONNECTED) {
            return true;
        }
        return state;
    },
    errorCode: (state = null, action) => {
        if (action.type === actions.DATASHEET_ERROR_CODE) {
            return action.payload;
        }
        if (action.type === actions.DATAPACK_REQUEST || action.type === actions.DATAPACK_LOADED) {
            return null;
        }
        return state;
    },
    syncing: (state = false, action) => {
        // for compatibility
        if (action.type === actions.SET_DATASHEET_SYNCING) {
            return action.payload;
        }
        return state;
    },
    datasheet: exports.datasheet,
    client: client_1.client,
    fieldPermissionMap: field_permission_map_1.fieldPermissionMap,
    computedInfo,
    computedStatus,
});


/***/ }),

/***/ 48826:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fieldPermissionMap = void 0;
const action_constants_1 = __webpack_require__(86256);
const immer_1 = __importDefault(__webpack_require__(7133));
const fieldPermissionMap = (state = {}, action) => {
    switch (action.type) {
        case action_constants_1.UPDATE_FIELD_PERMISSION_MAP: {
            if (!state) {
                return action.payload;
            }
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case action_constants_1.RESET_FIELD_PERMISSION_MAP: {
            return (0, immer_1.default)(state, draft => {
                if (draft[action.payload]) {
                    delete draft[action.payload];
                }
                return draft;
            });
        }
        case action_constants_1.LOAD_FIELD_PERMISSION_MAP: {
            return action.payload;
        }
        case action_constants_1.UPDATE_FIELD_PERMISSION_SETTING: {
            return (0, immer_1.default)(state, (draft) => {
                const { fieldId, setting } = action.payload;
                if (!draft || !draft[fieldId]) {
                    return draft;
                }
                draft[fieldId].setting = setting;
                return draft;
            });
        }
        default: {
            return state;
        }
    }
};
exports.fieldPermissionMap = fieldPermissionMap;


/***/ }),

/***/ 74947:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.gridViewActiveFieldState = exports.gridViewActiveFieldStateDefault = void 0;
const action_constants_1 = __webpack_require__(86256);
exports.gridViewActiveFieldStateDefault = {
    fieldId: '',
    fieldRectLeft: 0,
    fieldRectBottom: 0,
    clickLogOffsetX: 0,
    fieldIndex: -1,
    tempSelection: [],
    operate: null,
};
const gridViewActiveFieldState = (state = exports.gridViewActiveFieldStateDefault, action) => {
    switch (action.type) {
        case action_constants_1.SET_ACTIVE_FIELD_STATE: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case action_constants_1.CLEAR_FIELD_INFO: {
            return exports.gridViewActiveFieldStateDefault;
        }
        // case SET_TEMP_SELECTION:
        // TODO: data compare logic 
        default:
            return state;
    }
};
exports.gridViewActiveFieldState = gridViewActiveFieldState;


/***/ }),

/***/ 96511:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.gridViewDragState = exports.gridViewDragStateDefault = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const action_constants_1 = __webpack_require__(86256);
exports.gridViewDragStateDefault = {
    dragTarget: {},
    hoverRecordId: null,
    hoverRowOfAddRecord: null,
};
exports.gridViewDragState = (0, immer_1.default)((draft = exports.gridViewDragStateDefault, action) => {
    switch (action.type) {
        case action_constants_1.SET_DRAG_TARGET:
            draft.dragTarget = action.payload;
            return draft;
        case action_constants_1.SET_HOVER_RECORD_ID:
            draft.hoverRecordId = action.payload;
            return draft;
        case action_constants_1.SET_HOVER_GROUP_PATH:
            draft.hoverGroupHeadRecordId = action.payload;
            return draft;
        case action_constants_1.SET_HOVER_ROW_OF_ADD_RECORD:
            draft.hoverRowOfAddRecord = action.payload;
            return draft;
        default:
            return draft;
    }
}, exports.gridViewDragStateDefault);


/***/ }),

/***/ 7173:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(78673), exports);
__exportStar(__webpack_require__(96511), exports);
__exportStar(__webpack_require__(74947), exports);
__exportStar(__webpack_require__(85525), exports);
__exportStar(__webpack_require__(90214), exports);
__exportStar(__webpack_require__(48826), exports);


/***/ }),

/***/ 85525:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.selection = void 0;
const actions = __importStar(__webpack_require__(86256));
function setRecord(state, { payload }) {
    // handle first time select and multi select
    if (!state || !state.recordRanges || payload.length > 1) {
        return {
            recordRanges: payload,
        };
    }
    // 1. single record toggle
    // 2. don't select all condition
    if ((state.recordRanges.length === 1 && payload[0] === state.recordRanges[0]) || payload.length === 0) {
        return null;
    }
    const result = state.recordRanges.filter(item => item !== payload[0]);
    if (result.length === state.recordRanges.length)
        result.push(payload[0]);
    return {
        recordRanges: result,
    };
}
/**
 * it is different method for column from record , select whole column, will set the first cell of the column as active cell
 * so activeCell and fieldRanges will appear together
 * no longer judge whether it is a single column or multi column here,
 * because it needs to be judged according to the shift key, so the choice is to handle the data when mouseDown
 *
 * for example: if you press shift, click on the column header that has been selected will keep the original state,
 * without pressing the shift key, clicking on the selected column header will not operate.
 * @param state
 * @param param1
 * @returns
 */
function setFieldRanges(_state, { payload }) {
    const init = {
        fieldRanges: payload,
    };
    return init;
}
const selection = (state = null, action) => {
    switch (action.type) {
        case actions.SET_SELECTION:
            return Object.assign(Object.assign({}, state), action.payload);
        case actions.SET_ACTIVE_CELL:
            return action.payload;
        case actions.SET_RECORD_SELECTION:
            return setRecord(state, action);
        case actions.CLEAR_SELECTION_BUT_KEEP_CHECKED_RECORD:
            return {
                recordRanges: state === null || state === void 0 ? void 0 : state.recordRanges,
            };
        case actions.CLEAR_SELECTION:
            return null;
        case actions.SET_FIELD_RANGES:
            return setFieldRanges(state, action);
        case actions.SET_FILL_HANDLE_STATUS:
            return Object.assign(Object.assign({}, state), action.payload);
        default:
            return state;
    }
};
exports.selection = selection;


/***/ }),

/***/ 2674:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.formMap = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const redux_1 = __webpack_require__(86695);
const actions = __importStar(__webpack_require__(86256));
const index_1 = __webpack_require__(99054);
const form = (state = null, action) => {
    if (action.type === actions.SET_FORM_DATA) {
        return action.payload;
    }
    if (!state) {
        return null;
    }
    switch (action.type) {
        case actions.UPDATE_FORM: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case actions.FORM_PROP_UPDATE: {
            return Object.assign(Object.assign({}, state), { snapshot: Object.assign(Object.assign({}, state.snapshot), { formProps: Object.assign(Object.assign({}, state.snapshot.formProps), action.payload) }) });
        }
        case actions.FORM_JOT_ACTION: {
            return (0, immer_1.default)(state, draft => {
                (0, index_1.JOTApply)(draft, action);
                return draft;
            });
        }
        case actions.FORM_UPDATE_REVISION: {
            return Object.assign(Object.assign({}, state), { revision: action.payload });
        }
        case actions.UPDATE_FORM_NAME: {
            state.name = action.payload;
            return state;
        }
        default: {
            return state;
        }
    }
};
const defaultClient = {};
const client = (state = defaultClient, action) => {
    switch (action.type) {
        case actions.FORM_ACTIVE_COLLABORATOR: {
            if (!state.collaborators) {
                return Object.assign(Object.assign({}, state), { collaborators: [action.payload] });
            }
            else if (state.collaborators.find(user => user.socketId === action.payload.socketId)) {
                console.error('warning user enter with same socketid');
                return state;
            }
            state.collaborators = [...state.collaborators, action.payload];
            return state;
        }
        case actions.FORM_DEACTIVATE_COLLABORATOR: {
            if (!state.collaborators) {
                return state;
            }
            state.collaborators = state.collaborators.filter(user => user.socketId !== action.payload.socketId);
            return state;
        }
        case actions.FORM_ROOM_INFO_SYNC: {
            return Object.assign(Object.assign({}, state), { collaborators: action.payload });
        }
        case actions.SET_FORM_CLIENT: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        default: {
            return state;
        }
    }
};
const formPack = (0, redux_1.combineReducers)({
    loading: (state = false, action) => {
        if (action.type === actions.SET_FORM_LOADING) {
            return action.payload;
        }
        if (action.type === actions.FORM_ERROR_CODE ||
            action.type === actions.SET_FORM_DATA) {
            return false;
        }
        return state;
    },
    connected: (state = false, action) => {
        if (action.type === actions.FORM_CONNECTED) {
            return true;
        }
        return state;
    },
    errorCode: (state = null, action) => {
        if (action.type === actions.FORM_ERROR_CODE) {
            return action.payload;
        }
        if (action.type === actions.SET_FORM_LOADING ||
            action.type === actions.SET_FORM_DATA) {
            return null;
        }
        return state;
    },
    syncing: (state = false, action) => {
        if (action.type === actions.SET_FORM_SYNCING) {
            return action.payload;
        }
        return state;
    },
    form,
    client,
});
const formMap = (state = {}, action) => {
    if (!action.formId) {
        return state;
    }
    if (action.type === actions.RESET_FORM) {
        const newState = Object.assign({}, state);
        delete newState[action.formId];
        return newState;
    }
    return Object.assign(Object.assign({}, state), { [action.formId]: formPack(state[action.formId], action) });
};
exports.formMap = formMap;


/***/ }),

/***/ 96509:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(2674), exports);


/***/ }),

/***/ 99054:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(7173), exports);
__exportStar(__webpack_require__(96509), exports);
__exportStar(__webpack_require__(98365), exports);
__exportStar(__webpack_require__(32460), exports);
__exportStar(__webpack_require__(28341), exports);


/***/ }),

/***/ 32460:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.JOTApply = void 0;
const engine_1 = __webpack_require__(39036);
// TODO: delete here's any @kailang
const JOTApply = (state, { payload }, filterCB) => {
    const max = 10000;
    let pureJOTAction = payload.operations.reduce((pre, op) => {
        const length = op.actions.length;
        if (length > max) {
            for (let i = 0, divides = Math.ceil(length / max); i < divides; i++) {
                pre.push(...op.actions.slice(i * max, (i + 1) * max));
            }
        }
        else {
            pre.push(...op.actions);
        }
        return pre;
    }, []);
    if (filterCB) {
        pureJOTAction = filterCB(state, pureJOTAction);
    }
    engine_1.jot.apply(state.snapshot, pureJOTAction);
    return state;
};
exports.JOTApply = JOTApply;


/***/ }),

/***/ 48485:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(6612), exports);


/***/ }),

/***/ 6612:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.mirror = exports.mirrorMap = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const redux_1 = __webpack_require__(86695);
const store_1 = __webpack_require__(56791);
const actions = __importStar(__webpack_require__(86256));
const action_constants_1 = __webpack_require__(86256);
const jot_apply_1 = __webpack_require__(32460);
const mirrorMap = (state = {}, action) => {
    if (!action.mirrorId) {
        return state;
    }
    if (action.type === actions.RESET_MIRROR) {
        const newState = Object.assign({}, state);
        delete newState[action.mirrorId];
        return newState;
    }
    return Object.assign(Object.assign({}, state), { [action.mirrorId]: mirrorPack(state[action.mirrorId], action) });
};
exports.mirrorMap = mirrorMap;
const mirror = (state = null, action) => {
    if (action.type === store_1.ActionConstants.SET_MIRROR_DATA) {
        return action.payload;
    }
    if (!state) {
        return null;
    }
    switch (action.type) {
        case store_1.ActionConstants.UPDATE_MIRROR_INFO:
        case store_1.ActionConstants.UPDATE_MIRROR: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case store_1.ActionConstants.UPDATE_MIRROR_NAME: {
            return Object.assign(Object.assign({}, state), { name: action.payload });
        }
        case actions.CACHE_TEMPORARY_VIEW: {
            if (!state) {
                return state;
            }
            return Object.assign(Object.assign({}, state), { temporaryView: Object.assign(Object.assign({}, (state.temporaryView || {})), action.payload) });
        }
        case store_1.ActionConstants.MIRROR_UPDATE_REVISION: {
            return Object.assign(Object.assign({}, state), { revision: action.payload });
        }
        case store_1.ActionConstants.MIRROR_JOT_ACTION: {
            return (0, immer_1.default)(state, draft => {
                (0, jot_apply_1.JOTApply)(draft, action);
                return draft;
            });
        }
        default: {
            return state;
        }
    }
};
exports.mirror = mirror;
const MIN_WIDGET_PANEL_WIDTH = 320;
const defaultWidgetPanelStatus = {
    opening: false,
    width: MIN_WIDGET_PANEL_WIDTH,
    activePanelId: null,
    loading: false,
};
const defaultClient = {
    collaborators: [],
    widgetPanelStatus: defaultWidgetPanelStatus
};
const client = (state = defaultClient, action) => {
    switch (action.type) {
        case store_1.ActionConstants.MIRROR_ACTIVE_COLLABORATOR: {
            if (!state.collaborators) {
                return Object.assign(Object.assign({}, state), { collaborators: [action.payload] });
            }
            else if (state.collaborators.find(user => user.socketId === action.payload.socketId)) {
                console.error('warning user enter with same socketid');
                return state;
            }
            state.collaborators = [...state.collaborators, action.payload];
            return state;
        }
        case store_1.ActionConstants.MIRROR_DEACTIVATE_COLLABORATOR: {
            if (!state.collaborators) {
                return state;
            }
            state.collaborators = state.collaborators.filter(user => user.socketId !== action.payload.socketId);
            return state;
        }
        case store_1.ActionConstants.MIRROR_ROOM_INFO_SYNC: {
            return Object.assign(Object.assign({}, state), { collaborators: action.payload });
        }
        case store_1.ActionConstants.SET_MIRROR_CLIENT: {
            return Object.assign(Object.assign({}, state), action.payload);
        }
        case action_constants_1.TOGGLE_WIDGET_PANEL: {
            return Object.assign(Object.assign({}, state), { widgetPanelStatus: Object.assign(Object.assign({}, state.widgetPanelStatus), { opening: action.payload == null ? !state.widgetPanelStatus.opening : action.payload }) });
        }
        case action_constants_1.CHANGE_WIDGET_PANEL_WIDTH: {
            return Object.assign(Object.assign({}, state), { widgetPanelStatus: Object.assign(Object.assign({}, state.widgetPanelStatus), { width: Math.max(action.payload, MIN_WIDGET_PANEL_WIDTH) }) });
        }
        case action_constants_1.SWITCH_ACTIVE_PANEL: {
            return Object.assign(Object.assign({}, state), { widgetPanelStatus: Object.assign(Object.assign({}, state.widgetPanelStatus), { activePanelId: action.payload }) });
        }
        default: {
            return state;
        }
    }
};
const mirrorPack = (0, redux_1.combineReducers)({
    loading: (state = false, action) => {
        if (action.type === store_1.ActionConstants.SET_MIRROR_LOADING) {
            return action.payload;
        }
        if (action.type === store_1.ActionConstants.MIRROR_ERROR_CODE ||
            action.type === store_1.ActionConstants.SET_MIRROR_DATA) {
            return false;
        }
        return state;
    },
    connected: (state = false, action) => {
        if (action.type === store_1.ActionConstants.MIRROR_CONNECTED) {
            return true;
        }
        return state;
    },
    errorCode: (state = null, action) => {
        if (action.type === store_1.ActionConstants.MIRROR_ERROR_CODE) {
            return action.payload;
        }
        if (action.type === store_1.ActionConstants.SET_MIRROR_LOADING ||
            action.type === store_1.ActionConstants.SET_MIRROR_DATA) {
            return null;
        }
        return state;
    },
    syncing: (state = false, action) => {
        if (action.type === store_1.ActionConstants.SET_MIRROR_SYNCING) {
            return action.payload;
        }
        return state;
    },
    mirror: exports.mirror,
    client,
});


/***/ }),

/***/ 28341:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.theme = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const interfaces_1 = __webpack_require__(37848);
const action_constants_1 = __webpack_require__(86256);
exports.theme = (0, immer_1.default)((themeDraft = interfaces_1.ThemeName.Light, action) => {
    if (action.type === action_constants_1.SET_THEME) {
        themeDraft = action.payload;
        return action.payload;
    }
    return themeDraft;
}, interfaces_1.ThemeName.Light);


/***/ }),

/***/ 98365:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(76744), exports);


/***/ }),

/***/ 76744:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.widgetPack = exports.widget = exports.widgetMap = void 0;
const redux_1 = __webpack_require__(86695);
const action_constants_1 = __webpack_require__(86256);
const action_constants_2 = __webpack_require__(86256);
const index_1 = __webpack_require__(99054);
const immer_1 = __importDefault(__webpack_require__(7133));
const widgetMap = (state = {}, action) => {
    if (action.type === action_constants_2.RESET_WIDGET) {
        const newState = Object.assign({}, state);
        for (const id of action.payload) {
            delete newState[id];
        }
        return newState;
    }
    if (!action.widgetId) {
        return state;
    }
    return Object.assign(Object.assign({}, state), { [action.widgetId]: (0, exports.widgetPack)(state[action.widgetId], action) });
};
exports.widgetMap = widgetMap;
const widget = (state, action) => {
    if (action.type === action_constants_2.RECEIVE_INSTALLATIONS_WIDGET) {
        return action.payload;
    }
    if (!state) {
        return null;
    }
    switch (action.type) {
        case action_constants_1.WIDGET_JOT_ACTION:
            return (0, immer_1.default)(state, draft => {
                (0, index_1.JOTApply)(draft, action);
                return draft;
            });
        case action_constants_1.WIDGET_UPDATE_REVISION:
            return Object.assign(Object.assign({}, state), { revision: action.payload });
        default: {
            return state;
        }
    }
};
exports.widget = widget;
// TODO： finish more here
exports.widgetPack = (0, redux_1.combineReducers)({
    loading: (state = false, _action) => {
        return state;
    },
    syncing: (state = false, _action) => {
        return state;
    },
    connected: (state = false, _action) => {
        return state;
    },
    widget: exports.widget,
});


/***/ }),

/***/ 68859:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.rightPane = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    width: 0,
};
exports.rightPane = (0, immer_1.default)((state = defaultState, action) => {
    switch (action.type) {
        case actions.SET_RIGHT_PANE_WIDTH:
            return Object.assign(Object.assign({}, state), { width: action.payload });
        default:
            return state;
    }
}, defaultState);


/***/ }),

/***/ 73472:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.subscriptions = void 0;
// reducers for data subscribe(follow)
const immer_1 = __importDefault(__webpack_require__(7133));
const action_constants_1 = __webpack_require__(86256);
exports.subscriptions = (0, immer_1.default)((subscriptions = [], action) => {
    switch (action.type) {
        case action_constants_1.SET_SUBSCRIPTIONS: {
            return action.payload;
        }
        default: {
            return subscriptions;
        }
    }
}, []);


/***/ }),

/***/ 1025:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toolbar = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const constants_1 = __webpack_require__(12690);
const defaultState = {
    menuCardState: constants_1.ToolBarMenuCardOpenState.None,
};
exports.toolbar = (0, immer_1.produce)((state = defaultState, action) => {
    switch (action.type) {
        case actions.SET_TOOLBAR_MENU_CARD_OPEN:
            return Object.assign(Object.assign({}, state), { menuCardState: action.payload });
        default:
            return state;
    }
}, defaultState);


/***/ }),

/***/ 74223:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.collaboratorCursorSelector = exports.collaboratorSelector = exports.collaboratorSocketSelector = void 0;
const lodash_1 = __webpack_require__(46517);
const reselect_1 = __webpack_require__(96814);
const resource_1 = __webpack_require__(37612);
const createDeepEqualSelector = (0, reselect_1.createSelectorCreator)(reselect_1.defaultMemoize, lodash_1.isEqual);
const collaboratorSocketSelector = (state, datasheetId) => {
    const client = (0, resource_1.getDatasheetClient)(state, datasheetId);
    return client && client.collaborators;
};
exports.collaboratorSocketSelector = collaboratorSocketSelector;
/**
 * display avatars on the status bar,
 * one user can use multiple client to connect to the same datasheet room.
 * But collaborator avatars are only displayed once.
 */
exports.collaboratorSelector = createDeepEqualSelector(exports.collaboratorSocketSelector, collaborators => {
    if (collaborators) {
        return (0, lodash_1.uniqBy)(collaborators, 'userId');
    }
    return [];
});
exports.collaboratorCursorSelector = (0, reselect_1.createSelector)([exports.collaboratorSocketSelector, resource_1.getActiveDatasheetId], (collaborators, _activeDatasheetId) => {
    const collaboratorCursorMap = {};
    collaborators
        .filter(collaborator => collaborator.activeCell)
        .map(collaborator => {
        return {
            fieldId: collaborator.activeCell.fieldId,
            recordId: collaborator.activeCell.recordId,
            avatar: collaborator.avatar,
            socketId: collaborator.socketId,
            userId: collaborator.userId,
            userName: collaborator.userName,
            memberName: collaborator.memberName,
            touchTime: collaborator.activeCell.time, // the time of active cell
        };
    }).forEach(r => {
        const key = `${r.fieldId}_${r.recordId}`;
        if (collaboratorCursorMap.hasOwnProperty(key)) {
            collaboratorCursorMap[key].push(r);
        }
        else {
            collaboratorCursorMap[key] = [r];
        }
    });
    return collaboratorCursorMap;
});


/***/ }),

/***/ 50101:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getDashboardPermission = exports.getDashboardErrCode = exports.getDashboardLoading = exports.getDashboardClient = exports.getInstalledWidgetInDashboard = exports.getDashboardLayout = exports.getDashboardSnapshot = exports.getDashboard = exports.getDashboardPack = void 0;
const store_1 = __webpack_require__(56791);
const getDashboardPack = (state, id) => {
    const dashboardId = state.pageParams.dashboardId || id;
    if (!dashboardId) {
        return;
    }
    const dashboardPack = state.dashboardMap[dashboardId];
    if (!dashboardPack) {
        return;
    }
    return dashboardPack;
};
exports.getDashboardPack = getDashboardPack;
const getDashboard = (state, id) => {
    const dashboardPack = (0, exports.getDashboardPack)(state, id);
    return dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.dashboard;
};
exports.getDashboard = getDashboard;
const getDashboardSnapshot = (state, id) => {
    const dashboardPack = (0, exports.getDashboard)(state, id);
    return dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.snapshot;
};
exports.getDashboardSnapshot = getDashboardSnapshot;
const getDashboardLayout = (state) => {
    const snapshot = (0, exports.getDashboardSnapshot)(state);
    return snapshot === null || snapshot === void 0 ? void 0 : snapshot.widgetInstallations.layout;
};
exports.getDashboardLayout = getDashboardLayout;
const getInstalledWidgetInDashboard = (state) => {
    const snapshot = (0, exports.getDashboardSnapshot)(state);
    const layout = (snapshot === null || snapshot === void 0 ? void 0 : snapshot.widgetInstallations.layout) || [];
    return layout.map(v => v.id);
};
exports.getInstalledWidgetInDashboard = getInstalledWidgetInDashboard;
const getDashboardClient = (state) => {
    const dashboardPack = (0, exports.getDashboardPack)(state);
    return dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.client;
};
exports.getDashboardClient = getDashboardClient;
const getDashboardLoading = (state) => {
    const dashboardPack = (0, exports.getDashboardPack)(state);
    return dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.loading;
};
exports.getDashboardLoading = getDashboardLoading;
const getDashboardErrCode = (state) => {
    const dashboardPack = (0, exports.getDashboardPack)(state);
    return dashboardPack === null || dashboardPack === void 0 ? void 0 : dashboardPack.errorCode;
};
exports.getDashboardErrCode = getDashboardErrCode;
const getDashboardPermission = (state) => {
    const dashboardPack = (0, exports.getDashboardPack)(state);
    if (!dashboardPack || !dashboardPack.dashboard || !dashboardPack.connected) {
        return store_1.DEFAULT_PERMISSION;
    }
    return dashboardPack.dashboard.permissions;
};
exports.getDashboardPermission = getDashboardPermission;


/***/ }),

/***/ 57898:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getNodeViewWithoutFilterInfo = exports.getCloseSyncViewIds = exports.getViewById = exports.getViewInNode = exports.getViewIdByNodeId = exports.getActiveViewId = exports.getGanttSettingPanelVisible = exports.getGanttViewStatus = exports.getGanttRowHeightFromLevel = exports.getWidgetPanelStatus = exports.getWidgetPanels = exports.getDatasheetParentId = exports.allowShowCommentPane = exports.getLinkId = exports.getToolbarMenuCardState = exports.getNodeId = exports.getViewsList = exports.getField = exports.getRecord = exports.getNodeDesc = exports.getEditingCell = exports.getKanbanGroupCollapse = exports.getGroupingCollapseIds = exports.gridViewActiveFieldState = exports.getGridViewHoverFieldId = exports.getGridViewDragState = exports.getSearchResultCursorIndex = exports.getActiveRecordId = exports.getActiveCell = exports.getIsSearching = exports.getActiveRowInfo = exports.getSearchKeyword = exports.getFormSheetAccessibleByFieldId = exports.getFieldRoleByFieldId = exports.getFieldPermissionMap = exports.getFieldPermissionMapBase = exports.getHighlightFieldId = exports.getActiveDatasheetId = exports.getSnapshot = exports.getDatasheetClient = exports.getDatasheetConnected = exports.getDatasheetErrorCode = exports.getDatasheetLoading = exports.getDatasheetNetworking = exports.getDatasheetRole = exports.getRecordHistoryStatus = exports.getDatasheet = exports.getDatasheetPack = exports.getDatasheetPrimaryField = void 0;
const get_1 = __importDefault(__webpack_require__(1712));
const re_reselect_1 = __importDefault(__webpack_require__(23384));
const constants_1 = __webpack_require__(12690);
const interfaces_1 = __webpack_require__(37848);
const resource_1 = __webpack_require__(99054);
const mirror_1 = __webpack_require__(39910);
const defaultKeySelector = (state, datasheetId) => datasheetId || (0, exports.getNodeId)(state);
const getDatasheetPrimaryField = (snapshot) => {
    const firstView = snapshot.meta.views[0];
    const firstColumn = firstView.columns[0];
    const fieldMap = snapshot.meta.fieldMap;
    return fieldMap[firstColumn.fieldId];
};
exports.getDatasheetPrimaryField = getDatasheetPrimaryField;
/**
 * get a datasheet pack,
 * a datasheet pack contains the state information of the datasheet (loading, etc.),
 * the basic snapshot data, and the calculated information after calculation
 * @param state
 * @param id
 * @returns
 */
const getDatasheetPack = (state, id) => {
    var _a;
    const datasheetId = id || ((_a = state.pageParams) === null || _a === void 0 ? void 0 : _a.datasheetId);
    if (!datasheetId) {
        return;
    }
    // if no specify datasheet id, and have snapshot preview data, use preview data for render
    if (!id && state.datasheetMap[constants_1.PREVIEW_DATASHEET_ID]) {
        return state.datasheetMap[constants_1.PREVIEW_DATASHEET_ID];
    }
    return state.datasheetMap[datasheetId];
};
exports.getDatasheetPack = getDatasheetPack;
/**
 * get the snapshot of datasheet
 * @param state
 * @param id
 * @returns
 */
const getDatasheet = (state, id) => {
    const datasheetPack = (0, exports.getDatasheetPack)(state, id);
    return datasheetPack && datasheetPack.datasheet;
};
exports.getDatasheet = getDatasheet;
const getRecordHistoryStatus = (state, id) => {
    const datasheetId = id || state.pageParams.datasheetId;
    if (!datasheetId) {
        return false;
    }
    return (0, get_1.default)(state, `datasheetMap.${datasheetId}.datasheet.extra.showRecordHistory`, false);
};
exports.getRecordHistoryStatus = getRecordHistoryStatus;
const getDatasheetRole = (state, id) => {
    const datasheetId = id || state.pageParams.datasheetId;
    if (!datasheetId) {
        return;
    }
    return (0, get_1.default)(state, `datasheetMap.${datasheetId}.datasheet.role`);
};
exports.getDatasheetRole = getDatasheetRole;
const getDatasheetNetworking = (state, id) => {
    const datasheetPack = (0, exports.getDatasheetPack)(state, id);
    if (!datasheetPack) {
        return;
    }
    return {
        loading: datasheetPack.loading,
        connected: datasheetPack.connected,
        syncing: datasheetPack.syncing,
        errorCode: datasheetPack.errorCode,
    };
};
exports.getDatasheetNetworking = getDatasheetNetworking;
const getDatasheetLoading = (state, id) => {
    var _a;
    return (_a = (0, exports.getDatasheetNetworking)(state, id)) === null || _a === void 0 ? void 0 : _a.loading;
};
exports.getDatasheetLoading = getDatasheetLoading;
const getDatasheetErrorCode = (state, id) => {
    var _a;
    return (_a = (0, exports.getDatasheetNetworking)(state, id)) === null || _a === void 0 ? void 0 : _a.errorCode;
};
exports.getDatasheetErrorCode = getDatasheetErrorCode;
const getDatasheetConnected = (state, id) => {
    var _a;
    return (_a = (0, exports.getDatasheetNetworking)(state, id)) === null || _a === void 0 ? void 0 : _a.connected;
};
exports.getDatasheetConnected = getDatasheetConnected;
const getDatasheetClient = (state, id) => {
    const datasheetPack = (0, exports.getDatasheetPack)(state, id);
    return datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.client;
};
exports.getDatasheetClient = getDatasheetClient;
const getSnapshot = (state, id) => {
    const datasheet = (0, exports.getDatasheet)(state, id);
    return datasheet === null || datasheet === void 0 ? void 0 : datasheet.snapshot;
};
exports.getSnapshot = getSnapshot;
const getActiveDatasheetId = (state) => {
    return state.pageParams.datasheetId;
};
exports.getActiveDatasheetId = getActiveDatasheetId;
const getHighlightFieldId = (state, id) => {
    var _a;
    const datasheetPack = (0, exports.getDatasheetPack)(state, id);
    return (_a = datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.client) === null || _a === void 0 ? void 0 : _a.highlightFiledId;
};
exports.getHighlightFieldId = getHighlightFieldId;
// get current datasheet's column permission
const getFieldPermissionMapBase = (state, id) => {
    const datasheetPack = (0, exports.getDatasheetPack)(state, id);
    return datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.fieldPermissionMap;
};
exports.getFieldPermissionMapBase = getFieldPermissionMapBase;
exports.getFieldPermissionMap = (0, re_reselect_1.default)([
    exports.getFieldPermissionMapBase,
    state => {
        var _a;
        const snapshot = (0, exports.getSnapshot)(state);
        return (0, exports.getViewById)(snapshot, ((_a = state.pageParams) === null || _a === void 0 ? void 0 : _a.viewId) || '');
    },
    state => { var _a; return (_a = state.pageParams) === null || _a === void 0 ? void 0 : _a.mirrorId; },
], (fieldPermissionMap, view, mirrorId) => {
    if (!mirrorId) {
        return fieldPermissionMap;
    }
    if (mirrorId && view && typeof view.displayHiddenColumnWithinMirror === 'boolean' && !view.displayHiddenColumnWithinMirror) {
        const _fieldPermissionMap = {};
        for (const v of view.columns) {
            if (!v.hidden)
                continue;
            _fieldPermissionMap[v.fieldId] = {
                role: interfaces_1.Role.None,
                setting: {
                    formSheetAccessible: true,
                },
                permission: {
                    editable: false,
                    readable: false
                },
                manageable: false
            };
        }
        return Object.assign(Object.assign({}, fieldPermissionMap), _fieldPermissionMap);
    }
    return fieldPermissionMap;
})(defaultKeySelector);
const getFieldRoleByFieldId = (fieldPermissionMap, fieldId) => {
    if (!fieldPermissionMap || !fieldPermissionMap[fieldId]) {
        return null;
    }
    const role = fieldPermissionMap[fieldId].role;
    return role || interfaces_1.Role.None;
};
exports.getFieldRoleByFieldId = getFieldRoleByFieldId;
const getFormSheetAccessibleByFieldId = (fieldPermissionMap, fieldId) => {
    if (!fieldPermissionMap || !fieldPermissionMap[fieldId]) {
        return true;
    }
    return fieldPermissionMap[fieldId].setting.formSheetAccessible;
};
exports.getFormSheetAccessibleByFieldId = getFormSheetAccessibleByFieldId;
const getSearchKeyword = (state, dstId) => {
    const dstClient = (0, exports.getDatasheetClient)(state, dstId);
    return dstClient === null || dstClient === void 0 ? void 0 : dstClient.searchKeyword;
};
exports.getSearchKeyword = getSearchKeyword;
const getActiveRowInfo = (state, dstId) => {
    const dstClient = (0, exports.getDatasheetClient)(state, dstId);
    return dstClient === null || dstClient === void 0 ? void 0 : dstClient.activeRowInfo;
};
exports.getActiveRowInfo = getActiveRowInfo;
const getIsSearching = (state, dstId) => {
    const dstClient = (0, exports.getDatasheetClient)(state, dstId);
    return Boolean(dstClient === null || dstClient === void 0 ? void 0 : dstClient.searchKeyword);
};
exports.getIsSearching = getIsSearching;
const getActiveCell = (state, datasheetId) => {
    const client = (0, exports.getDatasheetClient)(state, datasheetId);
    const activeCell = client && client.selection && client.selection.activeCell;
    return activeCell ? activeCell : null;
};
exports.getActiveCell = getActiveCell;
const getActiveRecordId = (state) => {
    const activeCell = (0, exports.getActiveCell)(state);
    return activeCell === null || activeCell === void 0 ? void 0 : activeCell.recordId;
};
exports.getActiveRecordId = getActiveRecordId;
const getSearchResultCursorIndex = (state, dstId) => {
    const dstClient = (0, exports.getDatasheetClient)(state, dstId);
    return dstClient === null || dstClient === void 0 ? void 0 : dstClient.searchResultCursorIndex;
};
exports.getSearchResultCursorIndex = getSearchResultCursorIndex;
const getGridViewDragState = (state, id) => {
    const client = (0, exports.getDatasheetClient)(state, id);
    return client ? client.gridViewDragState : resource_1.gridViewDragStateDefault;
};
exports.getGridViewDragState = getGridViewDragState;
const getGridViewHoverFieldId = (state, id) => {
    const client = (0, exports.getDatasheetClient)(state, id);
    return client ? client.gridViewHoverFieldId : null;
};
exports.getGridViewHoverFieldId = getGridViewHoverFieldId;
const gridViewActiveFieldState = (state, id) => {
    const client = (0, exports.getDatasheetClient)(state, id);
    return client ? client.gridViewActiveFieldState : resource_1.gridViewActiveFieldStateDefault;
};
exports.gridViewActiveFieldState = gridViewActiveFieldState;
const getGroupingCollapseIds = (state, datasheetId) => {
    const client = (0, exports.getDatasheetClient)(state, datasheetId);
    return client && client.groupingCollapseIds;
};
exports.getGroupingCollapseIds = getGroupingCollapseIds;
const getKanbanGroupCollapse = (state) => {
    const client = (0, exports.getDatasheetClient)(state);
    if (!client || !client.kanbanGroupCollapse) {
        return [];
    }
    return client.kanbanGroupCollapse;
};
exports.getKanbanGroupCollapse = getKanbanGroupCollapse;
const getEditingCell = (state) => {
    const client = (0, exports.getDatasheetClient)(state);
    if (!client || !client.isEditingCell) {
        return null;
    }
    return client.isEditingCell;
};
exports.getEditingCell = getEditingCell;
const getNodeDesc = (state, dsId) => {
    const datasheet = (0, exports.getDatasheet)(state, dsId);
    if (!datasheet || !datasheet.description) {
        return null;
    }
    return JSON.parse(datasheet.description);
};
exports.getNodeDesc = getNodeDesc;
const getRecord = (state, recordId, datasheetId) => {
    const snapshot = (0, exports.getSnapshot)(state, datasheetId);
    return snapshot.recordMap[recordId];
};
exports.getRecord = getRecord;
const getField = (state, fieldId, datasheetId) => {
    const snapshot = (0, exports.getSnapshot)(state, datasheetId);
    if (!snapshot) {
        return constants_1.NotSupportFieldInstance;
    }
    return snapshot.meta.fieldMap[fieldId] || constants_1.NotSupportFieldInstance;
};
exports.getField = getField;
const getViewsList = (state, dsId) => {
    const snapshot = (0, exports.getSnapshot)(state, dsId);
    return snapshot.meta.views;
};
exports.getViewsList = getViewsList;
const getNodeId = (state) => {
    const { datasheetId, folderId, formId, dashboardId, mirrorId } = state.pageParams;
    // mirror is special,  url will contain mirrorId and datasheetId at the same time, so mirrorId need to be judged first
    if (mirrorId) {
        return mirrorId;
    }
    if (datasheetId) {
        return datasheetId;
    }
    if (folderId) {
        return folderId;
    }
    if (formId) {
        return formId;
    }
    if (dashboardId) {
        return dashboardId;
    }
    return '';
};
exports.getNodeId = getNodeId;
const getToolbarMenuCardState = (state) => {
    return state.toolbar.menuCardState;
};
exports.getToolbarMenuCardState = getToolbarMenuCardState;
const getLinkId = (state) => {
    const pageParams = state.pageParams;
    return pageParams.templateId || pageParams.shareId || pageParams.embedId;
};
exports.getLinkId = getLinkId;
const allowShowCommentPane = (state) => {
    const spaceId = state.space.activeId;
    const linkId = (0, exports.getLinkId)(state);
    const embedId = state.pageParams.embedId;
    return Boolean(spaceId && !linkId) || Boolean(spaceId && embedId);
};
exports.allowShowCommentPane = allowShowCommentPane;
const getDatasheetParentId = (state, id) => {
    var _a;
    const tree = state.catalogTree.treeNodesMap;
    const datasheet = (0, exports.getDatasheet)(state, id);
    if (!datasheet) {
        return;
    }
    return ((_a = tree[datasheet.id]) === null || _a === void 0 ? void 0 : _a.parentId) || datasheet.parentId;
};
exports.getDatasheetParentId = getDatasheetParentId;
const getWidgetPanels = (state, datasheetId) => {
    const snapshot = (0, exports.getSnapshot)(state, datasheetId);
    return snapshot && snapshot.meta.widgetPanels;
};
exports.getWidgetPanels = getWidgetPanels;
const getWidgetPanelStatus = (state, datasheetId) => {
    const client = (0, exports.getDatasheetClient)(state, datasheetId);
    return client === null || client === void 0 ? void 0 : client.widgetPanelStatus;
};
exports.getWidgetPanelStatus = getWidgetPanelStatus;
const getGanttRowHeightFromLevel = (level) => {
    return level == null ? constants_1.GanttRowHeight.Short : constants_1.GanttRowHeight[constants_1.RowHeightLevel[level]];
};
exports.getGanttRowHeightFromLevel = getGanttRowHeightFromLevel;
const getGanttViewStatus = (state, datasheetId) => {
    const client = (0, exports.getDatasheetClient)(state, datasheetId);
    return client === null || client === void 0 ? void 0 : client.ganttViewStatus;
};
exports.getGanttViewStatus = getGanttViewStatus;
const getGanttSettingPanelVisible = (state, datasheetId) => {
    const ganttViewStatus = (0, exports.getGanttViewStatus)(state, datasheetId);
    return ganttViewStatus.settingPanelVisible;
};
exports.getGanttSettingPanelVisible = getGanttSettingPanelVisible;
const getActiveViewId = (state, id) => {
    var _a;
    const datasheet = (0, exports.getDatasheet)(state, id);
    const views = datasheet === null || datasheet === void 0 ? void 0 : datasheet.snapshot.meta.views;
    const pageViewId = state.pageParams.viewId;
    if (!views) {
        return pageViewId;
    }
    if (!views.find(item => item.id === pageViewId)) {
        return (_a = views[0]) === null || _a === void 0 ? void 0 : _a.id;
    }
    return pageViewId;
};
exports.getActiveViewId = getActiveViewId;
const getViewIdByNodeId = (state, datasheetId, viewId, mirror) => {
    const _mirror = mirror || (0, mirror_1.getMirror)(state);
    const _viewId = viewId !== null && viewId !== void 0 ? viewId : state.pageParams.viewId;
    const isMirrorView = _mirror && _mirror.sourceInfo.datasheetId === datasheetId && _mirror.sourceInfo.viewId === _viewId;
    return isMirrorView ? _mirror === null || _mirror === void 0 ? void 0 : _mirror.id : _viewId;
};
exports.getViewIdByNodeId = getViewIdByNodeId;
// Get current node view (contains mirror & datasheet).
const getViewInNode = (state, datasheetId, viewId) => {
    const _viewId = viewId || (0, exports.getActiveViewId)(state, datasheetId);
    const nodeViewId = (0, exports.getViewIdByNodeId)(state, datasheetId, _viewId);
    const snapshot = (0, exports.getSnapshot)(state, datasheetId);
    if (!snapshot || !_viewId) {
        return;
    }
    const mirror = (0, mirror_1.getMirror)(state, nodeViewId);
    if (nodeViewId && mirror) {
        const temporaryView = (0, exports.getNodeViewWithoutFilterInfo)(snapshot, _viewId, mirror);
        return Object.assign(Object.assign({}, temporaryView), { id: nodeViewId });
    }
    return (0, exports.getViewById)(snapshot, _viewId);
};
exports.getViewInNode = getViewInNode;
const getViewById = (snapshot, viewId) => {
    return snapshot === null || snapshot === void 0 ? void 0 : snapshot.meta.views.find(view => view.id === viewId);
};
exports.getViewById = getViewById;
const getCloseSyncViewIds = (state, dsId) => {
    const client = (0, exports.getDatasheetClient)(state, dsId);
    return client === null || client === void 0 ? void 0 : client.closeSyncViewIds;
};
exports.getCloseSyncViewIds = getCloseSyncViewIds;
/**
 * Get the node view configuration, mirroring does not include filtering,
 * it will be done inside the filtering logic.
 * @param viewId
 * @param mirror
 */
const getNodeViewWithoutFilterInfo = (snapshot, viewId, mirror) => {
    const temporaryView = mirror === null || mirror === void 0 ? void 0 : mirror.temporaryView;
    if (!snapshot) {
        return;
    }
    const originView = (0, exports.getViewById)(snapshot, viewId);
    if (!temporaryView || (mirror === null || mirror === void 0 ? void 0 : mirror.sourceInfo.datasheetId) !== snapshot.datasheetId) {
        return originView;
    }
    // If any view configuration is modified in the mirror,
    // the view configuration operation of the original table will not affect the mirror anymore,
    // so the cached data of the mirror is taken directly here.
    return Object.assign(Object.assign({ id: originView.id, type: originView.type, rows: originView.rows }, temporaryView), { filterInfo: originView === null || originView === void 0 ? void 0 : originView.filterInfo });
};
exports.getNodeViewWithoutFilterInfo = getNodeViewWithoutFilterInfo;


/***/ }),

/***/ 5856:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getGanttVisibleColumns = exports.getGanttStyle = exports.getCalendarVisibleColumnCount = exports.getOrgChartVisibleColumns = exports.getCalendarVisibleColumns = exports.getKanbanViewStatus = exports.getOrgChartViewStatus = exports.getCalendarViewStatus = exports.getCalendarStyle = exports.getQueryMeta = exports.getKanbanGroupMapIds = exports.getFilterConditionValue = exports.getActualRowCount = exports.getViewRowHeight = exports.getPermissions = exports.getCurrentGalleryViewStyle = exports.getGroupLevel = exports.getRowHeightFromLevel = exports.getColumnByFieldId = exports.getEffectConditionCount = exports.getVisibleColumnCount = exports.getRecordSnapshot = exports.getRangeFields = exports.getActiveViewGroupInfo = exports.getActiveViewSortInfo = exports.getActiveViewFilterInfo = exports.getFrozenColumns = exports.getExceptFrozenColumns = exports.findColumnIndexById = exports.getVisibleColumnsMap = exports.getVisibleColumns = exports.getColumnIndexMap = exports.getFieldMapIgnorePermission = exports.getFieldMap = exports.getFieldMapBase = exports.getGroupInfoWithPermission = exports.getKanbanFieldId = exports.getFilterInfoExceptInvalid = exports.getTemporaryView = exports.getViewByIdWithDefault = exports.getCurrentView = exports.getCurrentViewBase = exports.getViewIndex = exports.getView = exports.getColumnWidth = exports.getVisibleColumnsBase = exports.getCurrentSearchRecordId = exports.getCurrentSearchItem = exports.getDatasheetIds = exports.createDeepEqualSelector = void 0;
exports.getDateTimeCellAlarmForClient = exports.getDateTimeCellAlarm = exports.integrateRecordEditable = exports.getGanttVisibleColumnCount = void 0;
const engine_1 = __webpack_require__(39036);
const i18n_1 = __webpack_require__(47511);
const isEqual_1 = __importDefault(__webpack_require__(40113));
const isNumber_1 = __importDefault(__webpack_require__(27078));
const model_1 = __webpack_require__(61116);
const re_reselect_1 = __importDefault(__webpack_require__(23384));
const reselect_1 = __webpack_require__(96814);
const constants_1 = __webpack_require__(12690);
const interfaces_1 = __webpack_require__(37848);
const mirror_1 = __webpack_require__(39910);
const types_1 = __webpack_require__(73578);
const base_1 = __webpack_require__(57898);
const rows_calc_1 = __webpack_require__(18762);
exports.createDeepEqualSelector = (0, reselect_1.createSelectorCreator)(reselect_1.defaultMemoize, isEqual_1.default);
const defaultKeySelector = (state, datasheetId) => datasheetId || (0, base_1.getActiveDatasheetId)(state);
exports.getDatasheetIds = (0, exports.createDeepEqualSelector)((state) => Object.keys(state.datasheetMap), keys => keys);
/**
 * get current search result's one record(cell)
 * @param state
 * @returns
 */
const getCurrentSearchItem = (state) => {
    const searchKeyword = (0, base_1.getSearchKeyword)(state);
    const searchResultCursorIndex = (0, base_1.getSearchResultCursorIndex)(state);
    if (!searchKeyword) {
        return;
    }
    const searchResultArray = (0, rows_calc_1.getSearchResult)(state);
    if (!searchResultArray || !Array.isArray(searchResultArray)) {
        return;
    }
    const currentItem = searchResultArray[searchResultCursorIndex || 0];
    return currentItem;
};
exports.getCurrentSearchItem = getCurrentSearchItem;
const getCurrentSearchRecordId = (state) => {
    var _a;
    const searchKeyword = (0, base_1.getSearchKeyword)(state);
    if (!searchKeyword) {
        return;
    }
    const searchResultCursorIndex = (0, base_1.getSearchResultCursorIndex)(state);
    const visibleRows = (0, rows_calc_1.getVisibleRows)(state);
    // Compatible with the case where the search result visibleRows may be empty.
    if (searchResultCursorIndex != null && visibleRows.length) {
        return (_a = visibleRows[searchResultCursorIndex]) === null || _a === void 0 ? void 0 : _a.recordId;
    }
    return;
};
exports.getCurrentSearchRecordId = getCurrentSearchRecordId;
// (no cache)calc and get current visible columns
const getVisibleColumnsBase = (view) => {
    return view ? view.columns.filter((item, i) => !(item.hidden && i !== 0)) : [];
};
exports.getVisibleColumnsBase = getVisibleColumnsBase;
// calc and get a width of a column
const getColumnWidth = (column) => (!column || column.width == null ? constants_1.DEFAULT_COLUMN_WIDTH : column.width);
exports.getColumnWidth = getColumnWidth;
const getView = (snapshot, viewId) => {
    return snapshot.meta.views.find(view => view.id === viewId);
};
exports.getView = getView;
const getViewIndex = (snapshot, viewId) => {
    return snapshot.meta.views.findIndex(view => view.id === viewId);
};
exports.getViewIndex = getViewIndex;
const filterColumnsByPermission = (columns, fieldPermissionMap) => {
    return columns.filter(column => {
        // TODO: column permission delete this logic (2nd phase)
        const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, column.fieldId);
        return fieldRole !== interfaces_1.Role.None;
    });
};
const getCurrentViewBase = (snapshot, viewId, datasheetId, fieldPermissionMap, mirror) => {
    if (!viewId) {
        return;
    }
    const view = (0, exports.getTemporaryView)(snapshot, viewId, datasheetId, mirror);
    if (!view) {
        return;
    }
    const permissionColumns = filterColumnsByPermission(view.columns, fieldPermissionMap);
    if (permissionColumns.length !== view.columns.length) {
        return Object.assign(Object.assign({}, view), { columns: permissionColumns });
    }
    return view;
};
exports.getCurrentViewBase = getCurrentViewBase;
exports.getCurrentView = (0, re_reselect_1.default)([
    base_1.getSnapshot,
    base_1.getActiveViewId,
    (state, datasheetId) => datasheetId || (0, base_1.getActiveDatasheetId)(state),
    base_1.getFieldPermissionMap,
    (state) => (0, mirror_1.getMirror)(state),
], exports.getCurrentViewBase)({
    // keySelector: (state, datasheetId) => state.pageParams.mirrorId || datasheetId || getActiveDatasheetId(state),
    keySelector: defaultKeySelector,
});
const getViewByIdWithDefault = (state, datasheetId, viewId) => {
    const snapshot = (0, base_1.getSnapshot)(state, datasheetId);
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, datasheetId);
    if (!snapshot) {
        return null;
    }
    const firstViewId = snapshot.meta.views[0].id;
    let defaultView = (0, exports.getCurrentViewBase)(snapshot, firstViewId, datasheetId, fieldPermissionMap, (0, mirror_1.getMirror)(state));
    if (viewId) {
        defaultView = (0, exports.getCurrentViewBase)(snapshot, viewId, datasheetId, fieldPermissionMap, (0, mirror_1.getMirror)(state)) || defaultView;
    }
    return defaultView;
};
exports.getViewByIdWithDefault = getViewByIdWithDefault;
const getTemporaryView = (snapshot, viewId, _datasheetId, mirror) => {
    const temporaryView = mirror === null || mirror === void 0 ? void 0 : mirror.temporaryView;
    if (!snapshot) {
        return;
    }
    const originView = (0, base_1.getViewById)(snapshot, viewId);
    if (!temporaryView || (mirror === null || mirror === void 0 ? void 0 : mirror.sourceInfo.datasheetId) !== snapshot.datasheetId) {
        return originView;
    }
    // in mirror, if any view config is modified,
    // the original table's view config will not affect the mirror, so here directly use the mirror's cache data
    return Object.assign({ id: originView.id, type: originView.type, rows: originView.rows }, temporaryView);
};
exports.getTemporaryView = getTemporaryView;
const getFilterInfoExceptInvalid = (state, datasheetId, filterInfo) => {
    // filterInfo.conditions is empty will cause no filter but no data returned, so we need to filter it
    if (!filterInfo || !filterInfo.conditions.length) {
        return undefined;
    }
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, datasheetId);
    const snapshot = (0, base_1.getSnapshot)(state, datasheetId);
    if (!fieldPermissionMap || !snapshot) {
        return filterInfo;
    }
    return Object.assign(Object.assign({}, filterInfo), { conditions: filterInfo.conditions.filter(condition => {
            const fieldMap = snapshot.meta.fieldMap;
            const field = fieldMap[condition.fieldId];
            if (!field) {
                return false;
            }
            return true;
        }) });
};
exports.getFilterInfoExceptInvalid = getFilterInfoExceptInvalid;
const getKanbanFieldId = (state) => {
    const view = (0, exports.getCurrentView)(state);
    const fieldMap = (0, exports.getFieldMap)(state);
    if (!view || view.type !== constants_1.ViewType.Kanban || !fieldMap) {
        return;
    }
    const fieldId = view.style.kanbanFieldId;
    if (fieldId && !fieldMap[fieldId]) {
        return;
    }
    return fieldId;
};
exports.getKanbanFieldId = getKanbanFieldId;
const getGroupInfoWithPermission = (state, groupInfo, datasheetId) => {
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, datasheetId);
    if (!groupInfo || !fieldPermissionMap) {
        return groupInfo;
    }
    return groupInfo.filter(group => {
        const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, group.fieldId);
        if (fieldRole === interfaces_1.Role.None) {
            return false;
        }
        return true;
    });
};
exports.getGroupInfoWithPermission = getGroupInfoWithPermission;
// TODO: field permissions 2nd version, no need to handle special case if there is data filter
const getFieldMapBase = (datasheet, fieldPermissionMap) => {
    const fieldMap = datasheet && datasheet.snapshot.meta.fieldMap;
    if (!fieldPermissionMap) {
        return fieldMap;
    }
    if (!fieldMap) {
        return null;
    }
    const _fieldMap = {};
    for (const k in fieldMap) {
        const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, k);
        if (fieldRole === interfaces_1.Role.None) {
            // room-server currently don't do data filter for no permission fields,
            // so do it in selector
            continue;
        }
        _fieldMap[k] = fieldMap[k];
    }
    return _fieldMap;
};
exports.getFieldMapBase = getFieldMapBase;
exports.getFieldMap = (0, re_reselect_1.default)([base_1.getDatasheet, base_1.getFieldPermissionMap], exports.getFieldMapBase)(defaultKeySelector);
exports.getFieldMapIgnorePermission = (0, re_reselect_1.default)([base_1.getDatasheet], exports.getFieldMapBase)(defaultKeySelector);
exports.getColumnIndexMap = (0, reselect_1.createSelector)([exports.getCurrentView], view => {
    const columnsMap = {};
    if (!view) {
        return columnsMap;
    }
    for (const [k, v] of view.columns.entries()) {
        columnsMap[v.fieldId] = k;
    }
    return columnsMap;
});
exports.getVisibleColumns = (0, re_reselect_1.default)([exports.getCurrentView, base_1.getFieldPermissionMap], (view, fieldPermissionMap) => {
    // ignore the first column as hidden
    return view
        ? view.columns.filter((item, i) => {
            const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, item.fieldId);
            if (fieldRole === interfaces_1.Role.None) {
                return false;
            }
            return !(item.hidden && i !== 0);
        })
        : [];
})(defaultKeySelector);
exports.getVisibleColumnsMap = (0, reselect_1.createSelector)([exports.getVisibleColumns], columns => {
    return new Map(columns.map((item, index) => [item.fieldId, index]));
});
const findColumnIndexById = (state, id) => {
    const columnsMap = (0, exports.getVisibleColumnsMap)(state);
    const index = columnsMap.get(id);
    if (!(0, isNumber_1.default)(index)) {
        throw new Error((0, i18n_1.t)(i18n_1.Strings.error_not_exist_id, {
            id,
        }));
    }
    return index;
};
exports.findColumnIndexById = findColumnIndexById;
// reselect for non-frozen columns
exports.getExceptFrozenColumns = (0, reselect_1.createSelector)([exports.getVisibleColumns, exports.getCurrentView], (columns, view) => {
    return !view || (view.type !== constants_1.ViewType.Grid && view.type !== constants_1.ViewType.Gantt) ? [] : columns.slice(view.frozenColumnCount);
});
// reselect for frozen columns
exports.getFrozenColumns = (0, reselect_1.createSelector)([exports.getVisibleColumns, exports.getCurrentView], (columns, view) => {
    return !view || (view.type !== constants_1.ViewType.Grid && view.type !== constants_1.ViewType.Gantt) ? [] : columns.slice(0, view.frozenColumnCount);
});
// get current active view's filter info
exports.getActiveViewFilterInfo = (0, reselect_1.createSelector)([exports.getCurrentView], (view) => {
    if (!(view === null || view === void 0 ? void 0 : view.filterInfo)) {
        return null;
    }
    return view.filterInfo;
});
// get current active view's sort info
exports.getActiveViewSortInfo = (0, reselect_1.createSelector)([exports.getCurrentView], (view) => {
    return view === null || view === void 0 ? void 0 : view.sortInfo;
});
// get current active view's group info
exports.getActiveViewGroupInfo = (0, reselect_1.createSelector)([exports.getCurrentView], (view) => {
    if (!(view === null || view === void 0 ? void 0 : view.groupInfo)) {
        return [];
    }
    return view.groupInfo;
});
const getRangeFields = (state, range, datasheetId) => {
    const rangeIndex = model_1.Range.bindModel(range).getIndexRange(state);
    if (!rangeIndex) {
        return null;
    }
    const columnSlice = [rangeIndex.field.min, rangeIndex.field.max + 1];
    const columns = (0, exports.getVisibleColumns)(state);
    return columns.slice(...columnSlice).map(col => (0, base_1.getField)(state, col.fieldId, datasheetId));
};
exports.getRangeFields = getRangeFields;
const getRecordSnapshot = (state, datasheetId, recordId) => {
    const snapshot = (0, base_1.getSnapshot)(state, datasheetId);
    const fieldMap = (0, exports.getFieldMap)(state, datasheetId);
    if (!snapshot || !fieldMap) {
        return null;
    }
    const record = (0, base_1.getRecord)(state, recordId, datasheetId);
    if (!record) {
        return null;
    }
    return {
        meta: { fieldMap },
        recordMap: {
            [recordId]: record,
        },
        datasheetId,
    };
};
exports.getRecordSnapshot = getRecordSnapshot;
const getVisibleColumnCount = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view) {
        return -1;
    }
    return (0, exports.getVisibleColumns)(state).length;
};
exports.getVisibleColumnCount = getVisibleColumnCount;
/**
 * get the number of filters that "have been applied"
 */
const getEffectConditionCount = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view) {
        return 0;
    }
    const filterInfo = view.filterInfo;
    if (!filterInfo) {
        return 0;
    }
    // TODO improve the logic
    return filterInfo.conditions.length; // filter(isConditionTakeEffect).length;
};
exports.getEffectConditionCount = getEffectConditionCount;
const getColumnByFieldId = (state, fieldId) => {
    const columns = (0, exports.getVisibleColumns)(state);
    return columns.find(column => column.fieldId === fieldId);
};
exports.getColumnByFieldId = getColumnByFieldId;
const getRowHeightFromLevel = (level) => {
    return level == null ? constants_1.RowHeight.Short : constants_1.RowHeight[constants_1.RowHeightLevel[level]];
};
exports.getRowHeightFromLevel = getRowHeightFromLevel;
exports.getGroupLevel = (0, reselect_1.createSelector)([exports.getActiveViewGroupInfo], groupInfo => {
    return groupInfo.length;
});
exports.getCurrentGalleryViewStyle = (0, reselect_1.createSelector)([exports.getCurrentView], (view) => {
    if (view.type !== constants_1.ViewType.Gallery) {
        return;
    }
    return view.style;
});
const getIntegratePermissionWithFieldBase = (_state, { permission, fieldId, fieldPermissionMap }) => {
    const fieldPermission = fieldPermissionMap && fieldId ? fieldPermissionMap[fieldId] : undefined;
    if (!fieldPermission) {
        return permission;
    }
    return Object.assign(Object.assign({}, permission), { fieldRemovable: fieldPermission.manageable, cellEditable: fieldPermission.role === interfaces_1.Role.Editor, fieldPropertyEditable: fieldPermission.manageable });
};
const getIntegratePermissionWithField = (0, re_reselect_1.default)(getIntegratePermissionWithFieldBase, permission => {
    return permission;
})({
    keySelector: (state, { datasheetId, mirrorId }) => mirrorId || datasheetId || (0, base_1.getActiveDatasheetId)(state),
    selectorCreator: exports.createDeepEqualSelector,
});
const getPermissions = (state, datasheetId, fieldId, sourceMirrorId) => {
    var _a, _b, _c, _d, _e;
    const datasheet = (0, base_1.getDatasheet)(state, datasheetId);
    const mirrorId = sourceMirrorId || state.pageParams.mirrorId;
    const nodeConnected = mirrorId ? (_a = (0, mirror_1.getMirrorNetworking)(state, mirrorId)) === null || _a === void 0 ? void 0 : _a.connected : (0, base_1.getDatasheetConnected)(state, datasheetId);
    const screenWidth = (_b = state === null || state === void 0 ? void 0 : state.space) === null || _b === void 0 ? void 0 : _b.screenWidth;
    const paramsNodeId = mirrorId || (0, base_1.getActiveDatasheetId)(state);
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, datasheetId);
    // only in the mirror, the permission should be integrated with field permission
    // which means the url of datasheetId should be the same as "the datasheetId to query"
    const nodePermission = mirrorId && ((datasheet === null || datasheet === void 0 ? void 0 : datasheet.id) === (0, base_1.getActiveDatasheetId)(state) || sourceMirrorId) ? (_c = (0, mirror_1.getMirror)(state, mirrorId)) === null || _c === void 0 ? void 0 : _c.permissions : datasheet === null || datasheet === void 0 ? void 0 : datasheet.permissions;
    const blackSpace = (_e = (_d = state.billing) === null || _d === void 0 ? void 0 : _d.subscription) === null || _e === void 0 ? void 0 : _e.blackSpace;
    if (blackSpace) {
        // blacklist space will reset all node's permission to readonly
        return constants_1.DEFAULT_PERMISSION;
    }
    if (screenWidth && screenWidth < constants_1.ScreenWidth.md) {
        // smallScreen temporary not allow edit
        // TODO: mobile will support edit in the future
        const permission = datasheet
            ? getIntegratePermissionWithField(state, {
                permission: engine_1.ViewPropertyFilter.getReaderRolePermission(state, datasheet.id, nodePermission),
                datasheetId,
                fieldPermissionMap,
                fieldId: fieldId,
                mirrorId,
            })
            : {};
        return Object.assign(Object.assign(Object.assign({}, constants_1.DEFAULT_PERMISSION), permission), { rowSortable: false });
    }
    // forbid all permission when previewing time machine
    if (!datasheet || state.datasheetMap[constants_1.PREVIEW_DATASHEET_ID]) {
        return constants_1.DEFAULT_PERMISSION;
    }
    // share / templates page, return permission directly
    if (state.pageParams.shareId || state.pageParams.templateId || state.pageParams.embedId) {
        return getIntegratePermissionWithField(state, {
            permission: engine_1.ViewPropertyFilter.getReaderRolePermission(state, datasheet.id, nodePermission),
            datasheetId,
            fieldPermissionMap,
            fieldId: fieldId,
            mirrorId,
        });
    }
    /**
     * when connection is not ready, return default forbidden edit permission
     * but, here attention, according to v0.6.2 infra refactor,
     * the whole `tab` only exist one room.
     * in the other world, only 1 datasheet under connect state.
     * for relation datasheets, connect is false,
     * so, the check of connect, only in the main datasheet of creating room.
     * no need to care about the relation datasheets.
     *
     */
    if (!nodeConnected && paramsNodeId === datasheet.id) {
        return constants_1.DEFAULT_PERMISSION;
    }
    return getIntegratePermissionWithField(state, {
        permission: engine_1.ViewPropertyFilter.getReaderRolePermission(state, datasheet.id, nodePermission),
        datasheetId,
        fieldPermissionMap,
        fieldId: fieldId,
        mirrorId,
    });
};
exports.getPermissions = getPermissions;
const getViewRowHeight = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if ([constants_1.ViewType.Grid, constants_1.ViewType.Gantt].includes(view === null || view === void 0 ? void 0 : view.type)) {
        // new table has no rowHeight property, only add view will init new view.
        return view.rowHeightLevel || constants_1.RowHeightLevel.Short;
    }
    return;
};
exports.getViewRowHeight = getViewRowHeight;
// get view's actual row count, not affected by filter
const getActualRowCount = (state) => {
    const view = (0, exports.getCurrentView)(state);
    return view === null || view === void 0 ? void 0 : view.rows.length;
};
exports.getActualRowCount = getActualRowCount;
const getFilterConditionValue = (state, conditionId) => {
    const filterInfo = (0, exports.getCurrentView)(state).filterInfo;
    if (filterInfo) {
        const result = filterInfo.conditions.find(item => {
            return item.conditionId === conditionId;
        });
        return result && result.value ? result.value : null;
    }
    return null;
};
exports.getFilterConditionValue = getFilterConditionValue;
exports.getKanbanGroupMapIds = (0, reselect_1.createSelector)([exports.getFieldMap, exports.getKanbanFieldId, base_1.getFieldPermissionMap], (fieldMap, kanbanFieldId, fieldPermissionMap) => {
    if (!kanbanFieldId) {
        return [];
    }
    const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, kanbanFieldId);
    if (fieldRole === interfaces_1.Role.None) {
        return [];
    }
    const field = fieldMap[kanbanFieldId];
    if (!field) {
        return [];
    }
    if (field.type === types_1.FieldType.SingleSelect) {
        return field.property.options.map(item => item.id);
    }
    return field.property.unitIds;
});
exports.getQueryMeta = (0, reselect_1.createSelector)([exports.getVisibleColumns, base_1.getActiveDatasheetId, exports.getActiveViewFilterInfo, exports.getActiveViewGroupInfo, exports.getActiveViewSortInfo], (selectFields, fromDstId, filterInfo, groupInfo, sortInfo) => {
    let q = `select ${selectFields.map(field => field.fieldId).join(',')} from ${fromDstId}\n`;
    if (filterInfo) {
        q += `where ${filterInfo.conditions.map(cond => `${cond.fieldId} ${cond.operator} ${cond.value}`).join(` ${filterInfo.conjunction} `)}\n`;
    }
    if (groupInfo && groupInfo.length) {
        q += `group by ${groupInfo.map(gInfo => gInfo.fieldId).join(',')}\n`;
    }
    if (sortInfo) {
        q += `order by ${sortInfo.rules.map(rule => `${rule.fieldId} ${rule.desc ? 'desc' : ''}`).join(',')}\n`;
    }
    return q;
});
const getCalendarStyle = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view || view.type !== constants_1.ViewType.Calendar) {
        return;
    }
    return view.style;
};
exports.getCalendarStyle = getCalendarStyle;
const getCalendarViewStatus = (state, datasheetId) => {
    const client = (0, base_1.getDatasheetClient)(state, datasheetId);
    if (!client) {
        return client;
    }
    return client.calendarViewStatus;
};
exports.getCalendarViewStatus = getCalendarViewStatus;
const getOrgChartViewStatus = (state, datasheetId) => {
    const client = (0, base_1.getDatasheetClient)(state, datasheetId);
    if (!client) {
        return client;
    }
    return client.orgChartViewStatus;
};
exports.getOrgChartViewStatus = getOrgChartViewStatus;
const getKanbanViewStatus = (state, datasheetId) => {
    const client = (0, base_1.getDatasheetClient)(state, datasheetId);
    if (!client) {
        return client;
    }
    return client.kanbanViewStatus;
};
exports.getKanbanViewStatus = getKanbanViewStatus;
exports.getCalendarVisibleColumns = (0, re_reselect_1.default)([exports.getCurrentView], (view) => {
    return view ? view.columns.filter((item, i) => !(item.hiddenInCalendar && i !== 0)) : [];
})(defaultKeySelector);
exports.getOrgChartVisibleColumns = (0, re_reselect_1.default)([exports.getCurrentView], (view) => {
    return view ? view.columns.filter((item, i) => !(item.hiddenInOrgChart && i !== 0)) : [];
})(defaultKeySelector);
const getCalendarVisibleColumnCount = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view || view.type !== constants_1.ViewType.Calendar) {
        return -1;
    }
    return (0, exports.getCalendarVisibleColumns)(state).length;
};
exports.getCalendarVisibleColumnCount = getCalendarVisibleColumnCount;
const getGanttStyle = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view || view.type !== constants_1.ViewType.Gantt) {
        return;
    }
    return view.style;
};
exports.getGanttStyle = getGanttStyle;
exports.getGanttVisibleColumns = (0, re_reselect_1.default)([exports.getCurrentView], (view) => {
    return view ? view.columns.filter(item => !item.hiddenInGantt) : [];
})(defaultKeySelector);
const getGanttVisibleColumnCount = (state) => {
    const view = (0, exports.getCurrentView)(state);
    if (!view || view.type !== constants_1.ViewType.Gantt) {
        return -1;
    }
    return (0, exports.getGanttVisibleColumns)(state).length;
};
exports.getGanttVisibleColumnCount = getGanttVisibleColumnCount;
const integrateRecordEditable = (state, fieldId, datasheetId) => {
    const permission = (0, exports.getPermissions)(state, datasheetId);
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, datasheetId);
    const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, fieldId);
    if (fieldRole) {
        return fieldRole === interfaces_1.Role.Editor;
    }
    return permission.editable;
};
exports.integrateRecordEditable = integrateRecordEditable;
const getDateTimeCellAlarm = (snapshot, recordId, fieldId) => {
    var _a, _b, _c;
    // notification center open card without snapshot
    const recordMeta = (_b = (_a = snapshot === null || snapshot === void 0 ? void 0 : snapshot.recordMap) === null || _a === void 0 ? void 0 : _a[recordId]) === null || _b === void 0 ? void 0 : _b.recordMeta;
    if (!recordMeta) {
        return;
    }
    const fieldExtraMap = recordMeta === null || recordMeta === void 0 ? void 0 : recordMeta.fieldExtraMap;
    if (!fieldExtraMap) {
        return;
    }
    return (_c = fieldExtraMap[fieldId]) === null || _c === void 0 ? void 0 : _c.alarm;
};
exports.getDateTimeCellAlarm = getDateTimeCellAlarm;
/**
 *
 * a method for front-end use
 * attention: this method return a new data structure, can not be used in useSelector
 *
 */
const getDateTimeCellAlarmForClient = (snapshot, recordId, fieldId) => {
    const alarm = (0, exports.getDateTimeCellAlarm)(snapshot, recordId, fieldId);
    if (!alarm) {
        return;
    }
    if (!Array.isArray(alarm.alarmUsers)) {
        return;
    }
    if (alarm.alarmUsers[0].type === interfaces_1.AlarmUsersType.Field) {
        const fieldMap = snapshot.meta.fieldMap;
        return Object.assign(Object.assign({}, alarm), { target: interfaces_1.AlarmUsersType.Field, alarmUsers: alarm.alarmUsers.map(item => item.data).filter(fieldId => fieldMap[fieldId] && fieldMap[fieldId].type === types_1.FieldType.Member) });
    }
    return Object.assign(Object.assign({}, alarm), { target: interfaces_1.AlarmUsersType.Member, alarmUsers: alarm.alarmUsers.map(item => item.data) });
};
exports.getDateTimeCellAlarmForClient = getDateTimeCellAlarmForClient;


/***/ }),

/***/ 98127:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getCellValueByGanttDateTimeFieldId = exports._getLookUpTreeValue = exports.getEntityCellValue = exports.getFormulaCellValue = exports.getComputeCellValue = exports.calcCellValue = exports.getStringifyCellValue = exports.calcCellValueAndString = exports.getCellValue = void 0;
const cache_manager_1 = __webpack_require__(94204);
const compute_manager_1 = __webpack_require__(73374);
const interfaces_1 = __webpack_require__(37848);
const formula_parser_1 = __webpack_require__(51067);
const model_1 = __webpack_require__(61116);
const field_types_1 = __webpack_require__(80360);
const base_1 = __webpack_require__(57898);
const workerCompute = () => global.useWorkerCompute;
/**
 * get cell value
 *
 * @param state
 * @param snapshot
 * @param recordId
 * @param fieldId
 * @param withError
 * @param datasheetId
 * @param ignoreFieldPermission
 * @returns
 */
const getCellValue = (state, snapshot, recordId, fieldId, withError, datasheetId, ignoreFieldPermission) => {
    // TODO: temp code for the first version of column permission, delete this logic in next version
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, snapshot.datasheetId);
    const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, fieldId);
    if (!ignoreFieldPermission && fieldRole === interfaces_1.Role.None) {
        return null;
    }
    const dsId = datasheetId || snapshot.datasheetId || state.pageParams.datasheetId;
    const calc = () => {
        return (0, exports.calcCellValueAndString)({
            state,
            snapshot,
            fieldId,
            recordId,
            datasheetId: dsId,
            withError,
            ignoreFieldPermission,
        });
    };
    if (!dsId) {
        return calc().cellValue;
    }
    const cacheValue = cache_manager_1.CacheManager.getCellCache(dsId, fieldId, recordId);
    if (cacheValue !== cache_manager_1.NO_CACHE) {
        return cacheValue.cellValue;
    }
    const res = calc();
    if (!res.ignoreCache) {
        cache_manager_1.CacheManager.setCellCache(dsId, fieldId, recordId, res);
    }
    return res.cellValue;
};
exports.getCellValue = getCellValue;
const calcCellValueAndString = ({ state, snapshot, fieldId, recordId, datasheetId, withError, ignoreFieldPermission, }) => {
    const cellValue = (0, exports.calcCellValue)(state, snapshot, fieldId, recordId, withError, datasheetId, ignoreFieldPermission);
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    if (cellValue == null) {
        return {
            cellValue,
            cellStr: null,
            ignoreCache: true,
        };
    }
    if (field.type === field_types_1.FieldType.Attachment) {
        return {
            cellStr: cellValue.map(item => item.name).join(','),
            cellValue,
            ignoreCache: workerCompute() ? false : true,
        };
    }
    const instance = model_1.Field.bindContext(field, state);
    return {
        cellValue,
        cellStr: instance.cellValueToString(cellValue),
        ignoreCache: workerCompute() ? false : !instance.isComputed,
    };
};
exports.calcCellValueAndString = calcCellValueAndString;
const getStringifyCellValue = (state, snapshot, recordId, fieldId, _withFilter, withError) => {
    const dsId = snapshot.datasheetId || state.pageParams.datasheetId;
    if (!dsId) {
        return (0, exports.calcCellValueAndString)({ state, snapshot, recordId, fieldId, withError }).cellStr;
    }
    let cacheValue = cache_manager_1.CacheManager.getCellCache(dsId, fieldId, recordId);
    if (cacheValue !== cache_manager_1.NO_CACHE) {
        return cacheValue.cellStr;
    }
    cacheValue = (0, exports.calcCellValueAndString)({ state, snapshot, recordId, fieldId, withError, datasheetId: dsId });
    if (!cacheValue.ignoreCache) {
        cache_manager_1.CacheManager.setCellCache(dsId, fieldId, recordId, cacheValue);
    }
    return cacheValue.cellStr;
};
exports.getStringifyCellValue = getStringifyCellValue;
// information of calculated cell
const calcCellValue = (state, snapshot, fieldId, recordId, withError, datasheetId, 
// TODO: for first version of column permission, delete this field in next version
ignoreFieldPermission) => {
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    // TODO: temp code for the first version of column permission, delete this logic in next version
    const fieldPermissionMap = (0, base_1.getFieldPermissionMap)(state, snapshot.datasheetId);
    const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, fieldId);
    if (!ignoreFieldPermission && fieldRole === interfaces_1.Role.None) {
        return null;
    }
    if (!field) {
        return null;
    }
    const instance = model_1.Field.bindContext(field, state);
    if (instance.isComputed) {
        try {
            let cv = (0, exports.getComputeCellValue)(state, snapshot, recordId, fieldId, withError);
            cv = (0, model_1.handleEmptyCellValue)(cv, instance.basicValueType);
            return cv;
        }
        catch (error) {
            console.warn('! ' + error);
        }
    }
    return (0, exports.getEntityCellValue)(state, snapshot, recordId, fieldId, datasheetId);
};
exports.calcCellValue = calcCellValue;
const getComputeCellValue = (state, snapshot, recordId, fieldId, withError) => {
    const recordMap = snapshot.recordMap;
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    const record = recordMap[recordId];
    if (!field || !record) {
        return null;
    }
    switch (field.type) {
        case field_types_1.FieldType.Formula: {
            return (0, exports.getFormulaCellValue)(state, field, record, withError);
        }
        case field_types_1.FieldType.LookUp: {
            return model_1.Field.bindContext(field, state).getCellValue(recordId, withError);
        }
        case field_types_1.FieldType.CreatedBy:
        case field_types_1.FieldType.LastModifiedBy:
        case field_types_1.FieldType.CreatedTime:
        case field_types_1.FieldType.LastModifiedTime: {
            if (!record) {
                return null;
            }
            return model_1.Field.bindContext(field, state).getCellValue(record);
        }
        case field_types_1.FieldType.AutoNumber: {
            if (!record) {
                return null;
            }
            return model_1.Field.bindContext(field, state).getCellValue(record, fieldId);
        }
        default:
            return null;
    }
};
exports.getComputeCellValue = getComputeCellValue;
const getFormulaCellValue = (state, field, record, withError) => {
    return (0, formula_parser_1.evaluate)(field.property.expression, { field, record, state }, withError, false);
};
exports.getFormulaCellValue = getFormulaCellValue;
/**
 *
 * non-calc field value, get by record.data and fieldId
 *
 * @param state
 * @param snapshot
 * @param recordId
 * @param fieldId
 * @param datasheetId
 * @returns
 */
const getEntityCellValue = (state, snapshot, recordId, fieldId, datasheetId) => {
    var _a;
    const recordMap = snapshot.recordMap;
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    // TODO: if cannot find this id when get entity cell value,
    // it means that the server missed the data. The frontend needs to add a remedy to actively load the missing fields.
    if (!recordMap[recordId] && datasheetId) {
        const client = (_a = state.datasheetMap[datasheetId]) === null || _a === void 0 ? void 0 : _a.client;
        const loadingRecord = client === null || client === void 0 ? void 0 : client.loadingRecord;
        if (!(loadingRecord === null || loadingRecord === void 0 ? void 0 : loadingRecord[recordId])) {
            compute_manager_1.dataSelfHelper.addRecord(datasheetId, recordId, fieldId);
        }
    }
    const recordData = recordMap[recordId] && recordMap[recordId].data;
    if (!field || !recordData) {
        return null;
    }
    let cv = recordData[fieldId];
    cv = (0, model_1.handleEmptyCellValue)(cv, model_1.Field.bindContext(field, state).basicValueType);
    return cv;
};
exports.getEntityCellValue = getEntityCellValue;
const _getLookUpTreeValue = (state, snapshot, recordId, fieldId, datasheetId) => {
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    if (!field) {
        return null;
    }
    if (model_1.Field.bindContext(field, state).isComputed) {
        if (field.type === field_types_1.FieldType.LookUp) {
            return new model_1.LookUpField(field, state).getLookUpTreeValue(recordId);
        }
        return (0, exports.getComputeCellValue)(state, snapshot, recordId, fieldId);
    }
    return (0, exports.getEntityCellValue)(state, snapshot, recordId, fieldId, datasheetId);
};
exports._getLookUpTreeValue = _getLookUpTreeValue;
const getCellValueByGanttDateTimeFieldId = (state, snapshot, recordId, fieldId) => {
    const fieldMap = snapshot.meta.fieldMap;
    const field = fieldMap[fieldId];
    if (field == null) {
        return null;
    }
    if (model_1.Field.bindContext(field, state).basicValueType === field_types_1.BasicValueType.DateTime) {
        return (0, exports.getCellValue)(state, snapshot, recordId, field.id);
    }
    if (model_1.Field.bindContext(field, state).innerBasicValueType === field_types_1.BasicValueType.DateTime) {
        const cellValue = (0, exports.getCellValue)(state, snapshot, recordId, field.id);
        if (cellValue === null || cellValue === void 0 ? void 0 : cellValue.length) {
            return cellValue[0];
        }
    }
    return null;
};
exports.getCellValueByGanttDateTimeFieldId = getCellValueByGanttDateTimeFieldId;


/***/ }),

/***/ 34525:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getFieldRanges = exports.getFillHandleStatus = exports.getSelectedRecord = exports.getSelectedField = exports.getCellUIIndex = exports.getCellByIndex = exports.getCellIndex = exports.isCellInSelection = exports.getSelectRecordIds = exports.isColumnSpaceEnough = exports.isRowSpaceEnough = exports.getRangeRows = exports.getStdValueTableFromRange = exports.getCellMatrixFromRange = exports.getCellMatrixFromSelection = exports.getSelectionRecordRanges = exports.getSelectRanges = exports.getSelection = exports.isCellVisible = exports.getRangeRecords = void 0;
const lodash_1 = __webpack_require__(46517);
const model_1 = __webpack_require__(61116);
const view_1 = __webpack_require__(36877);
const constants_1 = __webpack_require__(12690);
const reselect_1 = __webpack_require__(96814);
const base_1 = __webpack_require__(57898);
const calc_1 = __webpack_require__(5856);
const rows_calc_1 = __webpack_require__(18762);
const cell_calc_1 = __webpack_require__(98127);
/**
 *
 * Field class needs to depend on the root state to calculate,
 * we need to pass the root state to the selector,
 * but we don't want to break the selector cache.
 *
 * consider most cases, memorize the root state as a parameter is meaningless,
 * so we make an assumption here,
 * if the user passes the root state as a parameter,
 * then the memoize function never checks its change.
 */
const createSelectorIgnoreState = (0, reselect_1.createSelectorCreator)(reselect_1.defaultMemoize, (pre, next) => {
    // if compare to root state, always return true
    if ((0, lodash_1.isObject)(pre) && (0, lodash_1.isObject)(next) && 'isStateRoot' in pre && 'isStateRoot' in next) {
        return true;
    }
    // common reference comparison
    return pre === next;
});
// TODO: memory special attention
const getStdValueMatrixFromIds = (state, snapshot, ids) => {
    const { rows, columns } = ids;
    return rows.map(row => {
        const recordId = row.recordId;
        return columns.map(column => {
            const fieldId = column.fieldId;
            const field = snapshot.meta.fieldMap[fieldId];
            const cellValue = (0, cell_calc_1.getCellValue)(state, snapshot, recordId, fieldId);
            return model_1.Field.bindContext(field, state).cellValueToStdValue(cellValue);
        });
    });
};
const getCellMatrix = (rows, columns) => {
    return rows.map(row => {
        const recordId = row.recordId;
        return columns.map(column => {
            const fieldId = column.fieldId;
            return { recordId, fieldId };
        });
    });
};
const getRangeRecords = (state, range) => {
    const rangeIndex = view_1.Range.bindModel(range).getIndexRange(state);
    if (!rangeIndex) {
        return null;
    }
    const rowSlice = [rangeIndex.record.min, rangeIndex.record.max + 1];
    const rows = (0, rows_calc_1.getVisibleRows)(state);
    return rows.slice(...rowSlice);
};
exports.getRangeRecords = getRangeRecords;
const isCellVisible = (state, cell) => {
    const visibleRowIndexMap = (0, rows_calc_1.getVisibleRowsIndexMap)(state);
    const visibleColumnIndexMap = (0, calc_1.getVisibleColumnsMap)(state);
    return visibleRowIndexMap.has(cell.recordId) && visibleColumnIndexMap.has(cell.fieldId);
};
exports.isCellVisible = isCellVisible;
const getSelection = (state) => {
    const client = (0, base_1.getDatasheetClient)(state);
    const selection = client && client.selection;
    // whether activeCell move out
    if (selection && selection.activeCell && !(0, exports.isCellVisible)(state, selection.activeCell)) {
        return null;
    }
    // the start of the selection area and the end of the selection area are removed
    if (selection && selection.ranges) {
        const { start, end } = selection.ranges[0];
        if (!(0, exports.isCellVisible)(state, start) || !(0, exports.isCellVisible)(state, end)) {
            return null;
        }
    }
    return selection;
};
exports.getSelection = getSelection;
exports.getSelectRanges = (0, reselect_1.createSelector)([exports.getSelection], selection => {
    if (!selection || !selection.ranges) {
        return [];
    }
    return selection.ranges;
});
exports.getSelectionRecordRanges = (0, reselect_1.createSelector)([exports.getSelection], selection => {
    return selection ? selection.recordRanges : undefined;
});
/**
 * from sequential or non-sequential selection area, get selected cells 2d array.
 * @param state
 */
const getCellMatrixFromSelection = (state) => {
    const selectionRanges = (0, exports.getSelectRanges)(state);
    const selectionRecordRanges = (0, exports.getSelectionRecordRanges)(state);
    // non-sequence selection
    if (selectionRecordRanges) {
        const visibleColumns = (0, calc_1.getVisibleColumns)(state);
        return selectionRecordRanges.map(recordId => {
            return visibleColumns.map(column => {
                return {
                    recordId,
                    fieldId: column.fieldId,
                };
            });
        });
    }
    // sequence selection
    if (!selectionRanges.length) {
        return null;
    }
    return (0, exports.getCellMatrixFromRange)(state, selectionRanges[0]);
};
exports.getCellMatrixFromSelection = getCellMatrixFromSelection;
const getCellMatrixFromRange = (state, range) => {
    const datasheet = (0, base_1.getDatasheet)(state);
    const snapshot = datasheet && datasheet.snapshot;
    if (!snapshot) {
        return null;
    }
    const view = (0, calc_1.getCurrentView)(state);
    if (!view) {
        return null;
    }
    const rangeIndex = view_1.Range.bindModel(range).getIndexRange(state);
    if (!rangeIndex) {
        return null;
    }
    const { record, field } = rangeIndex;
    const rowSlice = [record.min, record.max + 1];
    const columnSlice = [field.min, field.max + 1];
    const rows = (0, rows_calc_1.getVisibleRows)(state).slice(...rowSlice);
    const columns = (0, calc_1.getVisibleColumns)(state).slice(...columnSlice);
    return getCellMatrix(rows, columns);
};
exports.getCellMatrixFromRange = getCellMatrixFromRange;
const getStdValueTableFromRange = (state, range) => {
    const datasheet = (0, base_1.getDatasheet)(state);
    const snapshot = datasheet && datasheet.snapshot;
    if (!snapshot) {
        return null;
    }
    const view = (0, calc_1.getCurrentView)(state);
    if (!view) {
        return null;
    }
    const indexRange = view_1.Range.bindModel(range).getIndexRange(state);
    if (!indexRange) {
        return null;
    }
    const { record, field } = indexRange;
    const rowSlice = [record.min, record.max + 1];
    const columnSlice = [field.min, field.max + 1];
    const rows = (0, rows_calc_1.getVisibleRows)(state).slice(...rowSlice);
    const columns = (0, calc_1.getVisibleColumns)(state).slice(...columnSlice);
    const stdValueMatrix = getStdValueMatrixFromIds(state, snapshot, { rows, columns });
    const fieldDataArr = columns.map(column => snapshot.meta.fieldMap[column.fieldId]);
    return {
        datasheetId: state.pageParams.datasheetId,
        viewId: view.id,
        header: fieldDataArr,
        body: stdValueMatrix,
        recordIds: rows.map(row => row.recordId),
    };
};
exports.getStdValueTableFromRange = getStdValueTableFromRange;
const getRangeRows = (state, start, end) => {
    const view = (0, calc_1.getCurrentView)(state);
    if (!view) {
        return [];
    }
    const rows = (0, rows_calc_1.getVisibleRows)(state);
    const groupInfo = (0, calc_1.getActiveViewGroupInfo)(state);
    if (groupInfo.length) {
        const groupSketch = new view_1.Group(groupInfo, (0, rows_calc_1.getGroupBreakpoint)(state));
        const depthBreakpoints = groupSketch.getDepthGroupBreakPoints();
        const curBreakpoint = depthBreakpoints.find(bp => bp > start);
        return rows.slice(start, curBreakpoint ? Math.min(curBreakpoint, end) : end);
    }
    return rows.slice(start, end);
};
exports.getRangeRows = getRangeRows;
const isRowSpaceEnough = (state, length, startRowIndex) => {
    // consider the grouping situation, we need to know whether the current grouping has enough space to paste data
    const rowLength = (0, rows_calc_1.getVisibleRows)(state).length;
    if (rowLength <= 0) {
        return false;
    }
    return length <= (0, exports.getRangeRows)(state, startRowIndex, rowLength).length;
};
exports.isRowSpaceEnough = isRowSpaceEnough;
const isColumnSpaceEnough = (state, length, activeCol) => {
    const columnLength = (0, calc_1.getVisibleColumnCount)(state);
    return length <= columnLength - activeCol;
};
exports.isColumnSpaceEnough = isColumnSpaceEnough;
/**
 * get selected records collection, no matter by checkbox or range selection
 * @param state
 */
exports.getSelectRecordIds = createSelectorIgnoreState([state => state, exports.getSelectRanges, exports.getSelectionRecordRanges], (state, ranges, checkedRecordIds) => {
    const range = ranges[0];
    // if selection area exists, return the selected records in the area
    if (range) {
        const rangeRecords = (0, exports.getRangeRecords)(state, range);
        return rangeRecords ? rangeRecords.map(row => row.recordId) : [];
    }
    // otherwise return the checked records
    return checkedRecordIds || [];
});
const isCellInSelection = (state, cell) => {
    const selection = (0, exports.getSelection)(state);
    if (!selection) {
        return false;
    }
    if (!selection.ranges) {
        const selectedRecordIds = (0, exports.getSelectRecordIds)(state);
        const inSelectRecords = new Set(selectedRecordIds).has(cell.recordId);
        return inSelectRecords;
    }
    return selection.ranges.some(range => {
        return view_1.Range.bindModel(range).contains(state, cell);
    });
};
exports.isCellInSelection = isCellInSelection;
const getCellIndex = (state, cell) => {
    const visibleRowIndexMap = (0, rows_calc_1.getVisibleRowsIndexMap)(state);
    const visibleColumnIndexMap = (0, calc_1.getVisibleColumnsMap)(state);
    if ((0, exports.isCellVisible)(state, cell)) {
        return {
            recordIndex: visibleRowIndexMap.get(cell.recordId),
            fieldIndex: visibleColumnIndexMap.get(cell.fieldId),
        };
    }
    return null;
};
exports.getCellIndex = getCellIndex;
const getCellByIndex = (state, cellIndex) => {
    const { recordIndex, fieldIndex } = cellIndex;
    const visibleRows = (0, rows_calc_1.getVisibleRows)(state);
    const visibleColumns = (0, calc_1.getVisibleColumns)(state);
    const cell = {
        recordId: visibleRows[recordIndex].recordId,
        fieldId: visibleColumns[fieldIndex].fieldId,
    };
    if ((0, exports.isCellVisible)(state, cell)) {
        return cell;
    }
    return null;
};
exports.getCellByIndex = getCellByIndex;
const getCellUIIndex = (state, cell) => {
    const visibleColumnIndexMap = (0, calc_1.getVisibleColumnsMap)(state);
    const linearRowIndexMap = (0, rows_calc_1.getLinearRowsIndexMap)(state);
    if ((0, exports.isCellVisible)(state, cell)) {
        return {
            rowIndex: linearRowIndexMap.get(`${constants_1.CellType.Record}_${cell.recordId}`),
            columnIndex: visibleColumnIndexMap.get(cell.fieldId),
        };
    }
    return null;
};
exports.getCellUIIndex = getCellUIIndex;
const getSelectedField = (state) => {
    const selection = (0, exports.getSelection)(state);
    const datasheet = (0, base_1.getDatasheet)(state);
    if (!selection || !datasheet || !selection.activeCell) {
        return;
    }
    const fieldId = selection.activeCell.fieldId;
    return datasheet.snapshot.meta.fieldMap[fieldId];
};
exports.getSelectedField = getSelectedField;
const getSelectedRecord = (state) => {
    const selection = (0, exports.getSelection)(state);
    const datasheet = (0, base_1.getDatasheet)(state);
    if (!selection || !datasheet || !selection.activeCell) {
        return;
    }
    const recordId = selection.activeCell.recordId;
    return datasheet.snapshot.recordMap[recordId];
};
exports.getSelectedRecord = getSelectedRecord;
const getFillHandleStatus = (state) => {
    const selection = (0, exports.getSelection)(state);
    return selection === null || selection === void 0 ? void 0 : selection.fillHandleStatus;
};
exports.getFillHandleStatus = getFillHandleStatus;
const getFieldRanges = (state) => {
    var _a;
    return (_a = (0, exports.getSelection)(state)) === null || _a === void 0 ? void 0 : _a.fieldRanges;
};
exports.getFieldRanges = getFieldRanges;


/***/ }),

/***/ 94339:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getLinearRowsFormComputed = exports.getVisibleColumnsFormComputed = exports.getPureVisibleRowsFormComputed = exports.getComputedStatus = exports.getComputedInfo = void 0;
const compensator_1 = __webpack_require__(40806);
const store_1 = __webpack_require__(56791);
const base_1 = __webpack_require__(57898);
const calc_1 = __webpack_require__(5856);
const getComputedInfo = (state, dsId) => {
    const datasheetPack = (0, base_1.getDatasheetPack)(state, dsId);
    return datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.computedInfo;
};
exports.getComputedInfo = getComputedInfo;
const getComputedStatus = (state, dsId) => {
    const datasheetPack = (0, base_1.getDatasheetPack)(state, dsId);
    return datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.computedStatus;
};
exports.getComputedStatus = getComputedStatus;
const getPureVisibleRowsFormComputed = (state, dsId) => {
    var _a;
    const datasheetPack = (0, base_1.getDatasheetPack)(state, dsId);
    const pureVisibleRows = (_a = datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.computedInfo) === null || _a === void 0 ? void 0 : _a.pureVisibleRows;
    if (!pureVisibleRows) {
        return pureVisibleRows;
    }
    if (!compensator_1.compensator.willRemoveRecords.size) {
        return pureVisibleRows;
    }
    return pureVisibleRows.filter((item) => !compensator_1.compensator.checkWillRemoveRecord(item.recordId));
};
exports.getPureVisibleRowsFormComputed = getPureVisibleRowsFormComputed;
const getVisibleColumnsFormComputed = (state, dsId) => {
    var _a;
    const datasheetPack = (0, base_1.getDatasheetPack)(state, dsId);
    return (_a = datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.computedInfo) === null || _a === void 0 ? void 0 : _a.visibleColumns;
};
exports.getVisibleColumnsFormComputed = getVisibleColumnsFormComputed;
const getLinearRowsFormComputed = (state, dsId) => {
    var _a, _b;
    const datasheetPack = (0, base_1.getDatasheetPack)(state, dsId);
    const linearRows = (_a = datasheetPack === null || datasheetPack === void 0 ? void 0 : datasheetPack.computedInfo) === null || _a === void 0 ? void 0 : _a.linearRows;
    if (!linearRows) {
        return null;
    }
    if (!compensator_1.compensator.willRemoveRecords.size && !compensator_1.compensator.lastGroupInfo) {
        return linearRows;
    }
    const filterConditions = [];
    if (compensator_1.compensator.lastGroupInfo) {
        const _dsId = dsId || state.pageParams.datasheetId;
        if (_dsId) {
            const curGroupInfo = (_b = (0, calc_1.getViewByIdWithDefault)(state, _dsId)) === null || _b === void 0 ? void 0 : _b.groupInfo;
            const maxDepth = curGroupInfo ? curGroupInfo.length : 0;
            filterConditions.push((record) => {
                record.depth = Math.min(record.depth, maxDepth);
                return record.type !== store_1.CellType.GroupTab || record.depth < maxDepth;
            });
        }
    }
    if (compensator_1.compensator.willRemoveRecords.size) {
        filterConditions.push((record) => {
            return !compensator_1.compensator.checkWillRemoveRecord(record.recordId);
        });
    }
    return linearRows.filter((item) => filterConditions.reduce((pass, check) => {
        if (!pass) {
            return pass;
        }
        return check(item);
    }, true));
};
exports.getLinearRowsFormComputed = getLinearRowsFormComputed;


/***/ }),

/***/ 57056:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(57898), exports);
__exportStar(__webpack_require__(5856), exports);
__exportStar(__webpack_require__(94339), exports);
__exportStar(__webpack_require__(18762), exports);
__exportStar(__webpack_require__(34525), exports);
__exportStar(__webpack_require__(98127), exports);


/***/ }),

/***/ 18762:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getGalleryGroupedRows = exports.getVisibleRowIds = exports.getPureLinearRows = exports.getLinearRowsIndexMap = exports.getLinearRows = exports.getSearchResult = exports.getGroupBreakpoint = exports.getKanbanGroup = exports.getKanbanGroupMap = exports.getVisibleRowsIndexMap = exports.getVisibleRows = exports.getVisibleRowsWithoutSearch = exports.getRecordMoveType = exports.getRowsIndexMap = exports.getViewDerivatePrepared = exports.getViewDerivation = exports.findRealField = exports.getPureVisibleRowsIndexMap = exports.getPureVisibleRows = exports.getGroupFields = exports.getFilterInfo = exports.sortRowsBySortInfo = void 0;
const i18n_1 = __webpack_require__(47511);
const interfaces_1 = __webpack_require__(37848);
const model_1 = __webpack_require__(61116);
const constants_1 = __webpack_require__(12690);
const re_reselect_1 = __importDefault(__webpack_require__(23384));
const reselect_1 = __webpack_require__(96814);
const types_1 = __webpack_require__(73578);
const mirror_1 = __webpack_require__(39910);
const base_1 = __webpack_require__(57898);
const cell_calc_1 = __webpack_require__(98127);
/**
 * Single Sort Calculation.
 */
function sortRowsBySortInfo(state, rows, sortRules, snapshot) {
    const shallowRows = [...rows];
    shallowRows.sort((prev, current) => {
        return sortRules.reduce((acc, rule) => {
            const field = snapshot.meta.fieldMap[rule.fieldId];
            // TODO: temp code online, when merge to develop, delete this
            if (!field || acc !== 0) {
                return acc;
            }
            const fieldMethod = model_1.Field.bindContext(field, state);
            // same as filter, sort remove the check of column permission
            const cv1 = (0, cell_calc_1.getCellValue)(state, snapshot, prev.recordId, field.id, undefined, undefined, true);
            const cv2 = (0, cell_calc_1.getCellValue)(state, snapshot, current.recordId, field.id, undefined, undefined, true);
            const res = fieldMethod.compare(cv1, cv2, true);
            const sign = rule.desc ? -1 : 1;
            return res * sign;
        }, 0);
    });
    return shallowRows;
}
exports.sortRowsBySortInfo = sortRowsBySortInfo;
exports.getFilterInfo = (0, re_reselect_1.default)([base_1.getSnapshot, base_1.getActiveViewId, state => (0, mirror_1.getMirror)(state)], (snapshot, viewId, mirror) => {
    var _a, _b;
    if (!snapshot || !viewId) {
        return;
    }
    const view = (0, base_1.getViewById)(snapshot, viewId);
    if (!view) {
        return;
    }
    if (mirror === null || mirror === void 0 ? void 0 : mirror.id) {
        const originViewConditionIds = ((_a = view.filterInfo) === null || _a === void 0 ? void 0 : _a.conditions.map(item => item.conditionId)) || [];
        const filterInfo = (_b = mirror.temporaryView) === null || _b === void 0 ? void 0 : _b.filterInfo;
        const mirrorConditions = filterInfo === null || filterInfo === void 0 ? void 0 : filterInfo.conditions.filter(item => {
            return !originViewConditionIds.includes(item.conditionId);
        });
        if (!mirrorConditions) {
            return filterInfo;
        }
        return {
            conjunction: filterInfo.conjunction,
            conditions: mirrorConditions,
        };
    }
    return view.filterInfo;
})({
    keySelector: (state, datasheetId) => state.pageParams.mirrorId || datasheetId || (0, base_1.getActiveDatasheetId)(state),
});
/* clipboard for clipboard */
const getGroupFields = (view, fieldMap, fieldPermissionMap) => {
    const fields = [];
    view.groupInfo && view.groupInfo.forEach(gp => {
        const fieldRole = (0, base_1.getFieldRoleByFieldId)(fieldPermissionMap, gp.fieldId);
        if (fieldRole === interfaces_1.Role.None) {
            fields.push({
                id: gp.fieldId,
                type: types_1.FieldType.NotSupport,
                name: (0, i18n_1.t)(i18n_1.Strings.crypto_field),
                property: null,
            });
            return;
        }
        const field = fieldMap[gp.fieldId];
        if (field) {
            fields.push(field);
        }
        else {
            console.warn('! can\'t find group field %s on datasheet', gp.fieldId);
        }
    });
    return fields;
};
exports.getGroupFields = getGroupFields;
const getPureVisibleRows = (state, datasheetId) => {
    return (0, exports.getViewDerivation)(state, datasheetId).pureVisibleRows;
};
exports.getPureVisibleRows = getPureVisibleRows;
const getPureVisibleRowsIndexMap = (state, datasheetId) => {
    return (0, exports.getViewDerivation)(state, datasheetId).pureVisibleRowsIndexMap;
};
exports.getPureVisibleRowsIndexMap = getPureVisibleRowsIndexMap;
const findRealField = (state, propsField) => {
    if (propsField.type !== types_1.FieldType.LookUp) {
        return propsField;
    }
    return model_1.Field.bindContext(propsField, state).getLookUpEntityField();
};
exports.findRealField = findRealField;
const EMPTY_DERATION = {
    linearRows: [],
    visibleRows: [],
    visibleRowsIndexMap: new Map(),
    pureLinearRows: [],
    linearRowsIndexMap: new Map(),
    rowsWithoutSearch: [],
    rowsIndexMap: new Map(),
    pureVisibleRows: [],
    pureVisibleRowsIndexMap: new Map(),
    kanbanGroupMap: {}
};
const getViewDerivation = (state, datasheetId, viewId) => {
    var _a, _b;
    let _datasheetId = datasheetId || (0, base_1.getActiveDatasheetId)(state);
    if (!datasheetId && state.datasheetMap[constants_1.PREVIEW_DATASHEET_ID]) {
        _datasheetId = constants_1.PREVIEW_DATASHEET_ID;
    }
    let _viewId = viewId || (0, base_1.getActiveViewId)(state, _datasheetId);
    _viewId = (0, base_1.getViewIdByNodeId)(state, _datasheetId, _viewId);
    const derivation = ((_b = (_a = state.datasheetMap[_datasheetId]) === null || _a === void 0 ? void 0 : _a.client) === null || _b === void 0 ? void 0 : _b.viewDerivation[_viewId]) || EMPTY_DERATION;
    return derivation;
};
exports.getViewDerivation = getViewDerivation;
const getViewDerivatePrepared = (state, datasheetId, viewId) => {
    var _a, _b;
    const _datasheetId = datasheetId || (0, base_1.getActiveDatasheetId)(state);
    const _viewId = viewId || (0, base_1.getActiveViewId)(state);
    const nodeViewId = (0, base_1.getViewIdByNodeId)(state, _datasheetId, _viewId);
    return Boolean((_b = (_a = state.datasheetMap[_datasheetId]) === null || _a === void 0 ? void 0 : _a.client) === null || _b === void 0 ? void 0 : _b.viewDerivation[nodeViewId]);
};
exports.getViewDerivatePrepared = getViewDerivatePrepared;
const getRowsIndexMap = (state, datasheetId) => {
    return (0, exports.getViewDerivation)(state, datasheetId).rowsIndexMap;
};
exports.getRowsIndexMap = getRowsIndexMap;
const getRecordMoveType = (state) => {
    return (0, exports.getViewDerivation)(state).recordMoveType || constants_1.RecordMoveType.NotMove;
};
exports.getRecordMoveType = getRecordMoveType;
const getVisibleRowsWithoutSearch = (state, datasheetId, viewId) => {
    return (0, exports.getViewDerivation)(state, datasheetId, viewId).rowsWithoutSearch;
};
exports.getVisibleRowsWithoutSearch = getVisibleRowsWithoutSearch;
const getVisibleRows = (state) => {
    return (0, exports.getViewDerivation)(state).visibleRows;
};
exports.getVisibleRows = getVisibleRows;
const getVisibleRowsIndexMap = (state) => {
    return (0, exports.getViewDerivation)(state).visibleRowsIndexMap;
};
exports.getVisibleRowsIndexMap = getVisibleRowsIndexMap;
const getKanbanGroupMap = (state) => {
    return (0, exports.getViewDerivation)(state).kanbanGroupMap;
};
exports.getKanbanGroupMap = getKanbanGroupMap;
const getKanbanGroup = (kanbanGroupMap, groupId) => {
    return kanbanGroupMap[groupId] || [];
};
exports.getKanbanGroup = getKanbanGroup;
const getGroupBreakpoint = (state) => {
    return (0, exports.getViewDerivation)(state).groupBreakpoint;
};
exports.getGroupBreakpoint = getGroupBreakpoint;
// Get the search result set
const getSearchResult = (state) => {
    return (0, exports.getViewDerivation)(state).searchResults;
};
exports.getSearchResult = getSearchResult;
/**
 * Instructs the react-window to draw structured data for the table, with the hierarchy reflected by depth.
 * [
 *    Blank 0
 *    GroupTab 0
 *      GroupTab 1
 *        GroupTab 2
 *          Record 3
 *        Add 2
 *        Blank 2
 *      Blank 1
 *    Blank 0
 * ]
 */
const getLinearRows = (state) => {
    return (0, exports.getViewDerivation)(state).linearRows;
};
exports.getLinearRows = getLinearRows;
const getLinearRowsIndexMap = (state) => {
    return (0, exports.getViewDerivation)(state).linearRowsIndexMap;
};
exports.getLinearRowsIndexMap = getLinearRowsIndexMap;
const getPureLinearRows = (state) => {
    return (0, exports.getViewDerivation)(state).pureLinearRows;
};
exports.getPureLinearRows = getPureLinearRows;
exports.getVisibleRowIds = (0, reselect_1.createSelector)([exports.getVisibleRows], (visibleRows) => {
    return visibleRows.map(row => row.recordId);
});
const getGalleryGroupedRows = (state) => {
    return (0, exports.getViewDerivation)(state).galleryGroupedRows;
};
exports.getGalleryGroupedRows = getGalleryGroupedRows;


/***/ }),

/***/ 21532:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getFormRelMeta = exports.getFormSnapshot = exports.getFormClient = exports.getFormPermission = exports.getFieldPermissionMapFromForm = exports.getFormErrorCode = exports.getFormLoading = exports.getForm = void 0;
const datasheet_1 = __webpack_require__(57056);
const store_1 = __webpack_require__(56791);
const getFormPack = (state, id) => {
    var _a;
    const formId = id || state.pageParams.formId;
    if (!formId) {
        return null;
    }
    return (_a = state.formMap[formId]) !== null && _a !== void 0 ? _a : null;
};
const getForm = (state, id) => {
    const formPack = getFormPack(state, id);
    if (!formPack) {
        return null;
    }
    return formPack.form;
};
exports.getForm = getForm;
const getFormLoading = (state, id) => {
    const formPack = getFormPack(state, id);
    if (!formPack) {
        return false;
    }
    return formPack.loading;
};
exports.getFormLoading = getFormLoading;
const getFormErrorCode = (state, id) => {
    const formPack = getFormPack(state, id);
    if (!formPack) {
        return;
    }
    return formPack.errorCode;
};
exports.getFormErrorCode = getFormErrorCode;
const getFieldPermissionMapFromForm = (state, id) => {
    const form = (0, exports.getForm)(state, id);
    if (!form) {
        return;
    }
    return form.fieldPermissionMap;
};
exports.getFieldPermissionMapFromForm = getFieldPermissionMapFromForm;
const getFormPermission = (state, resourceId) => {
    const formPack = getFormPack(state, resourceId);
    if (!formPack || !formPack.form || !formPack.connected) {
        return store_1.DEFAULT_PERMISSION;
    }
    return formPack.form.permissions;
};
exports.getFormPermission = getFormPermission;
const getFormClient = (state, id) => {
    const formPack = getFormPack(state, id);
    if (!formPack) {
        return null;
    }
    return formPack.client;
};
exports.getFormClient = getFormClient;
const getFormSnapshot = (state, id) => {
    const form = (0, exports.getForm)(state, id);
    if (!form) {
        return null;
    }
    return form.snapshot;
};
exports.getFormSnapshot = getFormSnapshot;
const getFormRelMeta = (state, id) => {
    var _a;
    const sourceInfo = (_a = (0, exports.getForm)(state, id)) === null || _a === void 0 ? void 0 : _a.sourceInfo;
    if (!sourceInfo) {
        return null;
    }
    const { datasheetId, viewId } = sourceInfo;
    const datasheetSnapshot = (0, datasheet_1.getSnapshot)(state, datasheetId);
    if (!datasheetSnapshot) {
        return null;
    }
    const currentView = datasheetSnapshot.meta.views.filter(view => {
        return view.id === viewId;
    });
    if (!currentView.length) {
        return null;
    }
    return {
        fieldMap: datasheetSnapshot.meta.fieldMap,
        views: currentView,
    };
};
exports.getFormRelMeta = getFormRelMeta;


/***/ }),

/***/ 37612:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getResourceActiveWidgetPanel = exports.getResourceWidgetPanels = exports.getResourceWidgetPanelStatus = exports.getResourcePermission = exports.getResourceNetworking = exports.getResourceRevision = exports.getResourceCollaborator = exports.getResourcePack = void 0;
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const collaborators_1 = __webpack_require__(74223);
const dashboard_1 = __webpack_require__(50101);
const datasheet_1 = __webpack_require__(57056);
const widget_1 = __webpack_require__(86957);
const form_1 = __webpack_require__(21532);
const mirror_1 = __webpack_require__(39910);
__exportStar(__webpack_require__(39910), exports);
__exportStar(__webpack_require__(50101), exports);
__exportStar(__webpack_require__(57056), exports);
__exportStar(__webpack_require__(21532), exports);
__exportStar(__webpack_require__(86957), exports);
__exportStar(__webpack_require__(37674), exports);
// pass right `type`, can auto complete type,  for example:
// const s = getResourcePack(undefined as any, undefined as any, ResourceType.Widget);
// `s` can be judge as `IDatasheetPack`
// TODO: still not find out how fix the error of function return. set them `as any`.
// in the future, we can use judge the right return type.
function getResourcePack(state, id, type) {
    switch (type) {
        case types_1.ResourceType.Widget: {
            return state.widgetMap[id];
        }
        case types_1.ResourceType.Form: {
            return state.formMap[id];
        }
        case types_1.ResourceType.Dashboard: {
            return state.dashboardMap[id];
        }
        case types_1.ResourceType.Datasheet: {
            return state.datasheetMap[id];
        }
        case types_1.ResourceType.Mirror: {
            return state.mirrorMap[id];
        }
    }
    return null;
}
exports.getResourcePack = getResourcePack;
const getResourceCollaborator = (state, resourceId, resourceType) => {
    var _a, _b;
    switch (resourceType) {
        case types_1.ResourceType.Form: {
            return (_a = (0, form_1.getFormClient)(state)) === null || _a === void 0 ? void 0 : _a.collaborators;
        }
        case types_1.ResourceType.Dashboard: {
            return (_b = (0, dashboard_1.getDashboardClient)(state)) === null || _b === void 0 ? void 0 : _b.collaborators;
        }
        case types_1.ResourceType.Datasheet: {
            return (0, collaborators_1.collaboratorSocketSelector)(state, resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.getMirrorCollaborator)(state, resourceId);
        }
    }
    return null;
};
exports.getResourceCollaborator = getResourceCollaborator;
const getResourceRevision = (state, id, type) => {
    switch (type) {
        case types_1.ResourceType.Datasheet: {
            const datasheet = (0, datasheet_1.getDatasheet)(state, id);
            return datasheet === null || datasheet === void 0 ? void 0 : datasheet.revision;
        }
        case types_1.ResourceType.Widget: {
            const widget = (0, widget_1.getWidget)(state, id);
            return widget === null || widget === void 0 ? void 0 : widget.revision;
        }
        case types_1.ResourceType.Form: {
            const form = (0, form_1.getForm)(state, id);
            return form === null || form === void 0 ? void 0 : form.revision;
        }
        case types_1.ResourceType.Dashboard: {
            const dashboard = (0, dashboard_1.getDashboard)(state, id);
            return dashboard === null || dashboard === void 0 ? void 0 : dashboard.revision;
        }
        case types_1.ResourceType.Mirror: {
            const mirror = (0, mirror_1.getMirror)(state, id);
            return mirror === null || mirror === void 0 ? void 0 : mirror.revision;
        }
    }
    (0, utils_1.assertNever)(type);
};
exports.getResourceRevision = getResourceRevision;
const getResourceNetworking = (state, resourceId, resourceType) => {
    if (!resourceId) {
        return;
    }
    const resourcePack = getResourcePack(state, resourceId, resourceType);
    if (!resourcePack) {
        return;
    }
    return {
        loading: resourcePack.loading,
        connected: resourcePack.connected,
        syncing: resourcePack.syncing,
        errorCode: resourcePack.errorCode,
    };
};
exports.getResourceNetworking = getResourceNetworking;
const getResourcePermission = (state, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Datasheet: {
            return (0, datasheet_1.getPermissions)(state, resourceId);
        }
        case types_1.ResourceType.Form: {
            return (0, form_1.getFormPermission)(state, resourceId);
        }
        case types_1.ResourceType.Dashboard: {
            return (0, dashboard_1.getDashboardPermission)(state);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.getMirrorPermission)(state, resourceId);
        }
        default: {
            return (0, datasheet_1.getPermissions)(state, resourceId);
        }
    }
};
exports.getResourcePermission = getResourcePermission;
const getResourceWidgetPanelStatus = (state, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Datasheet: {
            return (0, datasheet_1.getWidgetPanelStatus)(state, resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.getWidgetPanelStatusWithMirror)(state, resourceId);
        }
        default: {
            return (0, datasheet_1.getWidgetPanelStatus)(state, resourceId);
        }
    }
};
exports.getResourceWidgetPanelStatus = getResourceWidgetPanelStatus;
const getResourceWidgetPanels = (state, resourceId, resourceType) => {
    switch (resourceType) {
        case types_1.ResourceType.Datasheet: {
            return (0, datasheet_1.getWidgetPanels)(state, resourceId);
        }
        case types_1.ResourceType.Mirror: {
            return (0, mirror_1.getWidgetPanelsWithMirror)(state, resourceId);
        }
        default: {
            return (0, datasheet_1.getWidgetPanels)(state, resourceId);
        }
    }
};
exports.getResourceWidgetPanels = getResourceWidgetPanels;
const getResourceActiveWidgetPanel = (state, resourceId, resourceType) => {
    const panels = (0, exports.getResourceWidgetPanels)(state, resourceId, resourceType);
    if (!panels) {
        return panels;
    }
    const widgetPanelStatus = (0, exports.getResourceWidgetPanelStatus)(state, resourceId, resourceType);
    const activePanelId = widgetPanelStatus === null || widgetPanelStatus === void 0 ? void 0 : widgetPanelStatus.activePanelId;
    const panelOpening = widgetPanelStatus === null || widgetPanelStatus === void 0 ? void 0 : widgetPanelStatus.opening;
    if (!panelOpening) {
        return;
    }
    if (activePanelId) {
        return panels.find(item => item.id === activePanelId) || panels[0];
    }
    return panels[0];
};
exports.getResourceActiveWidgetPanel = getResourceActiveWidgetPanel;


/***/ }),

/***/ 39910:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWidgetPanelStatusWithMirror = exports.getWidgetPanelsWithMirror = exports.getMirrorSnapshot = exports.getNodeParentFolderPermission = exports.getMirrorPermission = exports.getMirrorErrorCode = exports.getMirrorCollaborator = exports.getMirrorSourceInfo = exports.getMirrorLoading = exports.getMirrorNetworking = exports.getMirrorPack = exports.getMirror = void 0;
const datasheet_1 = __webpack_require__(57056);
const getMirror = (state, mirrorId) => {
    var _a;
    mirrorId = mirrorId || state.pageParams.mirrorId;
    return (_a = state.mirrorMap[mirrorId]) === null || _a === void 0 ? void 0 : _a.mirror;
};
exports.getMirror = getMirror;
const getMirrorPack = (state, id) => {
    if (!id) {
        return;
    }
    return state.mirrorMap[id];
};
exports.getMirrorPack = getMirrorPack;
const getMirrorNetworking = (state, id) => {
    const datasheetPack = (0, exports.getMirrorPack)(state, id);
    if (!datasheetPack) {
        return;
    }
    return {
        loading: datasheetPack.loading,
        connected: datasheetPack.connected,
        syncing: datasheetPack.syncing,
        errorCode: datasheetPack.errorCode,
    };
};
exports.getMirrorNetworking = getMirrorNetworking;
const getMirrorLoading = (state, id) => {
    var _a;
    return (_a = (0, exports.getMirrorNetworking)(state, id)) === null || _a === void 0 ? void 0 : _a.loading;
};
exports.getMirrorLoading = getMirrorLoading;
const getMirrorSourceInfo = (state, id) => {
    const mirror = (0, exports.getMirror)(state, id);
    return mirror === null || mirror === void 0 ? void 0 : mirror.sourceInfo;
};
exports.getMirrorSourceInfo = getMirrorSourceInfo;
const getMirrorCollaborator = (state, id) => {
    const mirrorPack = (0, exports.getMirrorPack)(state, id);
    return mirrorPack === null || mirrorPack === void 0 ? void 0 : mirrorPack.client.collaborators;
};
exports.getMirrorCollaborator = getMirrorCollaborator;
const getMirrorErrorCode = (state, id) => {
    const mirrorPack = (0, exports.getMirrorPack)(state, id);
    return mirrorPack === null || mirrorPack === void 0 ? void 0 : mirrorPack.errorCode;
};
exports.getMirrorErrorCode = getMirrorErrorCode;
const getMirrorPermission = (state, id) => {
    const mirror = (0, exports.getMirror)(state, id);
    return mirror.permissions;
};
exports.getMirrorPermission = getMirrorPermission;
const getNodeParentFolderPermission = (state) => {
    var _a;
    const folderId = (0, datasheet_1.getDatasheetParentId)(state);
    return ((_a = state.catalogTree.treeNodesMap[folderId]) === null || _a === void 0 ? void 0 : _a.permissions) || {};
};
exports.getNodeParentFolderPermission = getNodeParentFolderPermission;
const getMirrorSnapshot = (state, id) => {
    const mirror = (0, exports.getMirror)(state, id);
    return mirror.snapshot;
};
exports.getMirrorSnapshot = getMirrorSnapshot;
const getWidgetPanelsWithMirror = (state, mirrorId) => {
    const snapshot = (0, exports.getMirrorSnapshot)(state, mirrorId);
    return snapshot && snapshot.widgetPanels;
};
exports.getWidgetPanelsWithMirror = getWidgetPanelsWithMirror;
const getWidgetPanelStatusWithMirror = (state, mirrorId) => {
    var _a;
    const mirrorPack = (0, exports.getMirrorPack)(state, mirrorId);
    return (_a = mirrorPack === null || mirrorPack === void 0 ? void 0 : mirrorPack.client) === null || _a === void 0 ? void 0 : _a.widgetPanelStatus;
};
exports.getWidgetPanelStatusWithMirror = getWidgetPanelStatusWithMirror;


/***/ }),

/***/ 37674:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getTheme = void 0;
const store_1 = __webpack_require__(56791);
const getTheme = (state) => {
    if (!state.theme)
        return store_1.ThemeName.Light;
    return state.theme;
};
exports.getTheme = getTheme;


/***/ }),

/***/ 86957:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getWidgetSnapshot = exports.getWidgetStorageById = exports.getWidget = void 0;
const getWidget = (state, id) => {
    var _a;
    if (!state.widgetMap)
        return;
    return (_a = state.widgetMap[id]) === null || _a === void 0 ? void 0 : _a.widget;
};
exports.getWidget = getWidget;
const getWidgetStorageById = (state, id) => {
    const widget = (0, exports.getWidget)(state, id);
    if (!widget) {
        return;
    }
    return widget.snapshot.storage;
};
exports.getWidgetStorageById = getWidgetStorageById;
const getWidgetSnapshot = (state, id) => {
    const widget = (0, exports.getWidget)(state, id);
    if (!widget)
        return;
    return widget.snapshot;
};
exports.getWidgetSnapshot = getWidgetSnapshot;


/***/ }),

/***/ 38985:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getColumnCount = void 0;
const reselect_1 = __webpack_require__(96814);
const resource_1 = __webpack_require__(37612);
exports.getColumnCount = (0, reselect_1.createSelector)([resource_1.getCurrentView], (view) => {
    if (!view)
        return;
    return view.columns.length;
});


/***/ }),

/***/ 31510:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SET_EMBED_INFO = void 0;
exports.SET_EMBED_INFO = 'SET_EMBED_INFO';


/***/ }),

/***/ 57851:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setEmbedInfo = void 0;
const actions = __importStar(__webpack_require__(31510));
const setEmbedInfo = (embedInfo) => {
    return {
        type: actions.SET_EMBED_INFO,
        payload: embedInfo
    };
};
exports.setEmbedInfo = setEmbedInfo;


/***/ }),

/***/ 76155:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.PermissionType = void 0;
var PermissionType;
(function (PermissionType) {
    PermissionType["READONLY"] = "readOnly";
    PermissionType["PUBLICEDIT"] = "publicEdit";
    PermissionType["PRIVATEEDIT"] = "privateEdit";
})(PermissionType = exports.PermissionType || (exports.PermissionType = {}));


/***/ }),

/***/ 27600:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.embedInfo = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const actions = __importStar(__webpack_require__(31510));
const defaultEmbedInfo = {};
exports.embedInfo = (0, immer_1.default)((embedInfoDraft = defaultEmbedInfo, action) => {
    switch (action.type) {
        case actions.SET_EMBED_INFO: {
            return Object.assign(Object.assign({}, embedInfoDraft), action.payload);
        }
        default:
            return embedInfoDraft;
    }
}, defaultEmbedInfo);


/***/ }),

/***/ 98735:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getEmbedInfo = void 0;
const getEmbedInfo = (state) => {
    return state.embedInfo;
};
exports.getEmbedInfo = getEmbedInfo;


/***/ }),

/***/ 36628:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 22908:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.joinViaSpace = exports.linkValid = exports.deleteLink = exports.getLinkList = exports.createLink = exports.getForbidStatus = exports.uploadMemberFile = exports.inviteEmailVerify = exports.reSendInvite = exports.sendInvite = exports.updateMemberTeam = exports.searchTeamAndMember = exports.addMemberSearchRes = exports.getTeamAndMemberWithoutSub = exports.addIsActivedMembersInSpace = exports.getSubTeams = exports.BatchDeleteMember = exports.singleDeleteMember = exports.updateMember = exports.deleteTeam = exports.readTeam = exports.createTeam = exports.updateTeamInfo = exports.getMemberListInSpace = exports.getMemberInfo = exports.getMemberList = exports.getTeamListLayered = exports.getTeamList = exports.getUnitsByMember = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(28215));
const CancelToken = axios_1.default.CancelToken;
/**
 * Query the list of units(member/group) in the space's organization
 * @returns
 */
function getUnitsByMember() {
    return axios_1.default.get(Url.MEMBER_UNITS);
}
exports.getUnitsByMember = getUnitsByMember;
/**
 * Contact List, get teams
 *
 * @returns
 */
function getTeamList() {
    return axios_1.default.get(Url.TEAM_LIST);
}
exports.getTeamList = getTeamList;
function getTeamListLayered() {
    return axios_1.default.get(Url.TEAM_LIST_LAYERED);
}
exports.getTeamListLayered = getTeamListLayered;
/**
 * Contact list, get members
 *
 * @param teamId team ID, if empty, return root team, default 0
 */
function getMemberList(teamId) {
    return axios_1.default.get(Url.MEMBER_LIST, {
        params: {
            teamId,
        },
    });
}
exports.getMemberList = getMemberList;
/**
 * Get member info
 *
 * @param memberId  Contact member id
 * @param userId   user id
 */
function getMemberInfo({ memberId, uuid }) {
    return axios_1.default.get(Url.MEMBER_INFO, {
        params: {
            memberId,
            uuid,
        },
    });
}
exports.getMemberInfo = getMemberInfo;
/**
 * Get member list by pagination
 *
 * @param pageObjectParams pagination params
 * @param teamId if empty return root team, default 0
 * @param isActive whether the member has joined space
 */
function getMemberListInSpace(pageObjectParams, teamId, isActive) {
    return axios_1.default.get(Url.MEMBER_LIST_IN_SPACE, {
        params: {
            pageObjectParams,
            teamId,
            isActive,
        },
    });
}
exports.getMemberListInSpace = getMemberListInSpace;
/**
 * Update Team Info
 * edit the team
 *
 * @param teamId
 * @param superId parent team ID,if empty return root team, default 0
 * @param teamName team name
 */
function updateTeamInfo(teamId, superId, teamName) {
    return axios_1.default.post(Url.UPDATE_TEAM, {
        teamId,
        teamName,
        superId,
    });
}
exports.updateTeamInfo = updateTeamInfo;
/**
 * Create Team
 *
 * @param name
 * @param superId parent team id, if empty return root team, default 0
 */
function createTeam(name, superId) {
    return axios_1.default.post(Url.CREATE_TEAM, {
        name,
        superId,
    });
}
exports.createTeam = createTeam;
/**
 * Get Team Info
 *
 * @param teamId
 */
function readTeam(teamId) {
    return axios_1.default.get(Url.READ_TEAM, {
        params: {
            teamId,
        },
    });
}
exports.readTeam = readTeam;
/**
 * Delete the team
 * @param teamId team ID
 */
function deleteTeam(teamId) {
    return axios_1.default.delete(`${Url.DELETE_TEAM}${teamId}`);
}
exports.deleteTeam = deleteTeam;
/**
 * Update Member Info
 *
 * @param data member info
 */
function updateMember(data) {
    return axios_1.default.post(Url.UPDATE_MEMBER, data);
}
exports.updateMember = updateMember;
/**
 * Delete single member
 *
 * @param teamId Team ID
 * @param memberId Member ID
 * @param action Delete Action(0:delete from inner team, 1:delete from organization)
 */
function singleDeleteMember(teamId, memberId, isDeepDel) {
    return axios_1.default.delete(Url.SINGLE_DELETE_MEMBER, {
        data: {
            memberId,
            teamId,
            action: isDeepDel ? 1 : 0,
        },
    });
}
exports.singleDeleteMember = singleDeleteMember;
/**
 * Batch Delete Members
 *
 * @param memberId Member ID
 * @param teamId Team ID
 * @param action Delete Action(0:delete from inner team, 1:delete from organization)
 */
function BatchDeleteMember(teamId, memberId, isDeepDel) {
    return axios_1.default.delete(Url.BATCH_DELETE_MEMBER, {
        data: {
            memberId,
            teamId,
            action: isDeepDel ? 1 : 0,
        },
    });
}
exports.BatchDeleteMember = BatchDeleteMember;
/**
 * Get Sub Teams
 *
 * @param teamId Team ID
 */
function getSubTeams(teamId) {
    return axios_1.default.get(Url.READ_SUB_TEAMS, {
        params: {
            teamId,
        },
    });
}
exports.getSubTeams = getSubTeams;
/**
 * Add active units(members,teams) to team
 *
 * @param unitList
 * @param teamId
 */
function addIsActivedMembersInSpace(unitList, teamId) {
    return axios_1.default.post(Url.TEAM_ADD_MEMBER, {
        unitList,
        teamId,
    });
}
exports.addIsActivedMembersInSpace = addIsActivedMembersInSpace;
/**
 * Get members by team(include members in the sub team)
 */
function getTeamAndMemberWithoutSub(teamId) {
    return axios_1.default.get(Url.TEAM_MEMBERS, {
        params: {
            teamId,
        },
    });
}
exports.getTeamAndMemberWithoutSub = getTeamAndMemberWithoutSub;
/**
 *
 * Search organization resources
 * search in the add department member UI modal
 *
 * @param keyword the keyword to search
 * @param className class style
 */
function addMemberSearchRes(keyword, className) {
    return axios_1.default.get(Url.GET_ADD_MEMBERS, {
        params: {
            keyword,
            className,
        },
    });
}
exports.addMemberSearchRes = addMemberSearchRes;
/**
 * Search Teams or Members
 *
 * @param keyword the keyword to search
 */
function searchTeamAndMember(keyword) {
    return axios_1.default.get(Url.SEARCH_TEAM_MEMBER, {
        params: {
            keyword,
            className: 'highLight',
        },
    });
}
exports.searchTeamAndMember = searchTeamAndMember;
/**
 * Update Member's Team
 * @param memberIds
 * @param preTeamId Original Team ID, required
 * @param newTeamIds New Team IDs list
 */
function updateMemberTeam(memberIds, newTeamIds, preTeamId) {
    return axios_1.default.post(Url.UPDATE_MEMBER_TEAM, {
        memberIds,
        newTeamIds,
        preTeamId,
    });
}
exports.updateMemberTeam = updateMemberTeam;
/**
 * Invite members(batch available)
 */
function sendInvite(invite, nodeId, nvcVal) {
    return axios_1.default.post(Url.SEND_INVITE, {
        invite,
        nodeId,
        data: nvcVal,
    });
}
exports.sendInvite = sendInvite;
/**
 * ReSend email to invite members
 *
 * @param email strict email format
 */
function reSendInvite(email) {
    return axios_1.default.post(Url.RESEND_INVITE, {
        email,
    });
}
exports.reSendInvite = reSendInvite;
/**
 * Invite Email Verify
 * @param token one-time invite token
 * @param from inviter
 */
function inviteEmailVerify(token) {
    return axios_1.default.post(Url.INVITE_EMAIL_VERIFY, {
        token,
    });
}
exports.inviteEmailVerify = inviteEmailVerify;
/**
 * Upload the contact file
 */
function uploadMemberFile(formData, onUploadProgress, ctx) {
    return axios_1.default.post(Url.UPLOAD_MEMBER_FILE, formData, {
        headers: { 'Content-Type': 'multipart/form-data' },
        onUploadProgress,
        cancelToken: new CancelToken(ctx),
    });
}
exports.uploadMemberFile = uploadMemberFile;
/**
 * get the status of the forbidden on exporting the entire space to excel
 */
function getForbidStatus() {
    return axios_1.default.get(Url.FORBID_STATUS);
}
exports.getForbidStatus = getForbidStatus;
/**
 * generate/refresh the link
 * @param  teamId team ID
 */
function createLink(teamId, nodeId) {
    return axios_1.default.post(Url.CREATE_LINK, {
        teamId,
        nodeId,
    });
}
exports.createLink = createLink;
/**
 * Get links list
 * @returns
 */
function getLinkList() {
    return axios_1.default.get(Url.LINK_LIST);
}
exports.getLinkList = getLinkList;
/**
 * Delete team invite link
 *
 * @param teamId
 * @returns
 */
function deleteLink(teamId) {
    return axios_1.default.delete(Url.DELETE_LINK, { data: { teamId } });
}
exports.deleteLink = deleteLink;
/**
 * public link validation
 * @param token
 * @param nodeId
 * @returns
 */
function linkValid(token, nodeId) {
    return axios_1.default.post(Url.LINK_VALID, { token, nodeId });
}
exports.linkValid = linkValid;
/**
 * join space by public link
 *
 * @param token
 * @param nodeId
 * @returns
 */
function joinViaSpace(token, nodeId) {
    return axios_1.default.post(Url.JOIN_VIA_LINK, { token, nodeId });
}
exports.joinViaSpace = joinViaSpace;


/***/ }),

/***/ 30020:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TEAM_LIST_LAYERED = exports.INIT_ROLE = exports.DELETE_ROLE_MEMBER = exports.ADD_ROLE_MEMBER = exports.GET_MEMBER_LIST_BY_ROLE = exports.UPDATE_ORG_ROLE = exports.DELETE_ORG_ROLE = exports.CREATE_NEW_ROLE = exports.GET_ROLE_LIST = exports.PROCESS_SPACE_JOIN = exports.SEARCH_UNIT_INFO_VO = exports.LOAD_OR_SEARCH = exports.MEMBER_UPDATE = exports.MEMBER_UNITS = exports.GET_SUB_UNIT_LIST = exports.SEARCH_UNIT = exports.MEMBER_SEARCH = exports.UPLOAD_MEMBER_FILE = exports.DOWNLOAD_MEMBER_FILE = exports.RESEND_INVITE = exports.SEND_INVITE = exports.EXIST_EMAIL = exports.GET_ADD_MEMBERS = exports.TEAM_ADD_MEMBER = exports.UPDATE_MEMBER_TEAM = exports.SEARCH_TEAM_MEMBER = exports.BATCH_DELETE_MEMBER = exports.SINGLE_DELETE_MEMBER = exports.UPDATE_MEMBER = exports.DELETE_TEAM = exports.READ_SUB_TEAMS = exports.TEAM_MEMBERS = exports.READ_TEAM = exports.CREATE_TEAM = exports.UPDATE_TEAM = exports.MEMBER_LIST_IN_SPACE = exports.MEMBER_INFO = exports.MEMBER_LIST = exports.TEAM_LIST = void 0;
// ================ Contacts related =======================
// Address Book - Query the department list of the specified space
exports.TEAM_LIST = '/org/team/branch';
// Address Book - Query the member list of the specified department
exports.MEMBER_LIST = '/org/member/list';
// address book - get member details
exports.MEMBER_INFO = '/org/member/read';
// Space Station-Address Book Management-Member Management-Pagination to query the member list of the specified department
exports.MEMBER_LIST_IN_SPACE = '/org/member/page';
// Space station - address book management - member management - modify department information
exports.UPDATE_TEAM = '/org/team/update';
// Space station - address book management - member management - add sub-departments
exports.CREATE_TEAM = '/org/team/create';
// Space station - address book management - member management - query department information
exports.READ_TEAM = '/org/team/read';
// address book - query the members under the department
exports.TEAM_MEMBERS = '/org/team/members';
// Space station - address book management - member management - query the list of subordinate departments
exports.READ_SUB_TEAMS = '/org/team/subTeams';
// Space station - address book management - member management - delete department
exports.DELETE_TEAM = '/org/team/delete/';
// Space station - address book management - member management - edit member information
exports.UPDATE_MEMBER = '/org/member/updateInfo';
// Space station - address book management - member management - single delete member
exports.SINGLE_DELETE_MEMBER = '/org/member/delete';
// Space station - address book management - member management - batch delete members
exports.BATCH_DELETE_MEMBER = '/org/member/deleteBatch';
// Space station - address book management - member management - search department or member
exports.SEARCH_TEAM_MEMBER = '/org/search';
// Space station - address book management - member management - adjust the department to which members belong
exports.UPDATE_MEMBER_TEAM = '/org/member/updateMemberTeam';
// Space station - address book management - member management - department adding members
exports.TEAM_ADD_MEMBER = '/org/member/addMember';
// Space station - address book management -
// member management - search for organizational resources / search in the modal of adding department members
exports.GET_ADD_MEMBERS = '/org/search/unit';
// Space station - determine whether member mailboxes exist in the space
exports.EXIST_EMAIL = '/org/member/checkEmail';
// Space Station - Mail invites external members for the first time
exports.SEND_INVITE = '/org/member/sendInvite';
// space station-mail invites external members again
exports.RESEND_INVITE = '/org/member/sendInviteSingle';
// Space station - download employee information form template
exports.DOWNLOAD_MEMBER_FILE = '/org/member/downloadTemplate';
// space station - upload employee information form
exports.UPLOAD_MEMBER_FILE = '/org/member/uploadExcel';
// space station-sub-admin-fuzzy search member
exports.MEMBER_SEARCH = '/org/member/search';
// search for org resources
exports.SEARCH_UNIT = '/org/searchUnit';
// Query the sub-departments and members under the department
exports.GET_SUB_UNIT_LIST = '/org/getSubUnitList';
// Query the list of organizational units that belong to the space
exports.MEMBER_UNITS = '/org/member/units';
/**
 * Edit Member Info
 */
exports.MEMBER_UPDATE = '/org/member/update';
// load or search for members
exports.LOAD_OR_SEARCH = '/org/loadOrSearch';
// Accurately find user information based on the provided name
exports.SEARCH_UNIT_INFO_VO = 'org/searchUnitInfoVo';
// handle the "someone joined the space station" message
exports.PROCESS_SPACE_JOIN = '/space/apply/process';
// ================ Contacts related =======================
// ============ Character related start =====================//
exports.GET_ROLE_LIST = '/org/roles';
exports.CREATE_NEW_ROLE = '/org/roles';
exports.DELETE_ORG_ROLE = '/org/roles/:roleId';
exports.UPDATE_ORG_ROLE = '/org/roles/:roleId';
exports.GET_MEMBER_LIST_BY_ROLE = '/org/roles/:roleId/members';
exports.ADD_ROLE_MEMBER = '/org/roles/:roleId/members';
exports.DELETE_ROLE_MEMBER = '/org/roles/:roleId/members';
exports.INIT_ROLE = '/org/roles/init';
exports.TEAM_LIST_LAYERED = 'org/team/tree';


/***/ }),

/***/ 453:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSubTeam = exports.getMemberInfoData = exports.getMemberListPageData = exports.getMemberListData = exports.getTeamListData = exports.updataMemberListLoading = exports.updateMemberListTotal = exports.updateMemberListPageNo = exports.updateAddressTree = exports.updateSingleMemberInMemberList = exports.updateMemberInfo = exports.updateMemberListPage = exports.updateMemberList = exports.updateSelectedTeamInfo = exports.updateTeamList = void 0;
const api_1 = __webpack_require__(62625);
const actions = __importStar(__webpack_require__(86256));
const config_1 = __webpack_require__(77511);
function updateTeamList(teamList) {
    return {
        type: actions.UPDATE_TEAM_LIST,
        payload: teamList,
    };
}
exports.updateTeamList = updateTeamList;
function updateSelectedTeamInfo(info) {
    return {
        type: actions.UPDATE_SELECTED_TEAM_INFO,
        payload: info,
    };
}
exports.updateSelectedTeamInfo = updateSelectedTeamInfo;
function updateMemberList(memberList) {
    return {
        type: actions.UPDATE_MEMBER_LIST,
        payload: memberList,
    };
}
exports.updateMemberList = updateMemberList;
function updateMemberListPage(memberList) {
    return {
        type: actions.UPDATE_MEMBER_LIST_PAGE,
        payload: memberList,
    };
}
exports.updateMemberListPage = updateMemberListPage;
function updateMemberInfo(memberInfo) {
    return {
        type: actions.UPDATE_MEMBER_INFO,
        payload: memberInfo,
    };
}
exports.updateMemberInfo = updateMemberInfo;
function updateSingleMemberInMemberList(memberInfo) {
    return {
        type: actions.UPDATE_SINGLE_MEMBER_IN_MEMBERLIST,
        payload: memberInfo,
    };
}
exports.updateSingleMemberInMemberList = updateSingleMemberInMemberList;
function updateAddressTree(parentId, childrenTree) {
    return {
        type: actions.UPDATE_ADDRESS_TREE,
        payload: { parentId, childrenTree },
    };
}
exports.updateAddressTree = updateAddressTree;
function updateMemberListPageNo(pageNo) {
    return {
        type: actions.UPDATE_MEMBER_LIST_PAGE_NO,
        payload: pageNo,
    };
}
exports.updateMemberListPageNo = updateMemberListPageNo;
function updateMemberListTotal(total) {
    return {
        type: actions.UPDATE_MEMBER_LIST_TOTAL,
        payload: total,
    };
}
exports.updateMemberListTotal = updateMemberListTotal;
function updataMemberListLoading(loading) {
    return {
        type: actions.UPDATE_MEMBER_LIST_LOADING,
        payload: loading,
    };
}
exports.updataMemberListLoading = updataMemberListLoading;
/**
 * Contacts - get Team(Departments) Lists
 */
function getTeamListData(_user) {
    let teamList = [];
    return (dispatch) => {
        api_1.Api.getTeamListLayered().then(res => {
            var _a;
            const { success, data } = res.data;
            if (success) {
                teamList = data;
            }
            dispatch(updateTeamList(teamList));
            const firstTeamId = (_a = teamList === null || teamList === void 0 ? void 0 : teamList[0]) === null || _a === void 0 ? void 0 : _a.teamId;
            if (!firstTeamId)
                return;
            api_1.Api.readTeam(firstTeamId).then(res => {
                const { success, data } = res.data;
                success && dispatch(updateSelectedTeamInfo({
                    teamTitle: data.teamName,
                    memberCount: data.memberCount,
                    teamId: data.teamId,
                }));
                dispatch(updateMemberInfo({ memberId: '', email: '' }));
            });
        });
    };
}
exports.getTeamListData = getTeamListData;
/**
 * Contacts - get specified Team(Departments) members list
 */
function getMemberListData(teamId) {
    const pageObjectParams = {
        pageSize: config_1.ConfigConstant.MEMBER_LIST_PAGE_SIZE,
        order: ' vom.id',
        sort: config_1.ConfigConstant.SORT_ASC,
    };
    return (dispatch) => {
        dispatch(updataMemberListLoading(true));
        api_1.Api.getMemberListInSpace(JSON.stringify(Object.assign(Object.assign({}, pageObjectParams), { pageNo: 1 })), teamId).then(res => {
            const { success, data } = res.data;
            if (success) {
                const memberListInSpace = data.records;
                const memberTotal = data.total;
                dispatch(updateMemberListTotal(memberTotal));
                dispatch(updateMemberList(memberListInSpace));
                dispatch(updataMemberListLoading(false));
            }
        });
    };
}
exports.getMemberListData = getMemberListData;
function getMemberListPageData(pageNo, teamId) {
    const pageObjectParams = {
        pageSize: config_1.ConfigConstant.MEMBER_LIST_PAGE_SIZE,
        order: ' vom.id',
        sort: config_1.ConfigConstant.SORT_ASC,
    };
    return (dispatch) => {
        dispatch(updataMemberListLoading(true));
        api_1.Api.getMemberListInSpace(JSON.stringify(Object.assign(Object.assign({}, pageObjectParams), { pageNo })), teamId).then(res => {
            const { success, data } = res.data;
            if (success) {
                const memberListInSpace = data.records;
                const memberTotal = data.total;
                dispatch(updateMemberListTotal(memberTotal));
                dispatch(updateMemberListPage(memberListInSpace));
                dispatch(updataMemberListLoading(false));
            }
        });
    };
}
exports.getMemberListPageData = getMemberListPageData;
/**
 * Contacts - get specified member detail info
 */
function getMemberInfoData(memberId) {
    return (dispatch) => {
        api_1.Api.getMemberInfo({ memberId }).then(res => {
            const { success, data } = res.data;
            if (success) {
                dispatch(updateMemberInfo(data));
            }
        });
    };
}
exports.getMemberInfoData = getMemberInfoData;
const getSubTeam = (teamId) => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        const subTree = yield api_1.Api.getSubTeams(teamId);
        dispatch(updateAddressTree(teamId, subTree.data.data));
    });
};
exports.getSubTeam = getSubTeam;


/***/ }),

/***/ 97802:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.verifyLink = exports.updateLinkToken = exports.updateInviteLinkInfo = exports.getLinkInviteList = exports.getSubTeamInvite = exports.updateLinkInviteList = exports.updateSubTeamTreeInvite = exports.updateTeamTreeInvite = exports.getMailLinkData = exports.updateMailToken = exports.updateInviteEmailInfo = exports.updateErrCode = void 0;
const actions = __importStar(__webpack_require__(86256));
const api_1 = __webpack_require__(62625);
function updateErrCode(code) {
    return {
        type: actions.UPDATE_INVITE_ERR_CODE,
        payload: code,
    };
}
exports.updateErrCode = updateErrCode;
/**
 * invite by email
 * @param info
 * @returns
 */
function updateInviteEmailInfo(info) {
    return {
        type: actions.UPDATE_INVITE_EMAIL_INFO,
        payload: info,
    };
}
exports.updateInviteEmailInfo = updateInviteEmailInfo;
const updateMailToken = (token) => {
    return {
        type: actions.UPDATE_MAIL_TOKEN,
        payload: token,
    };
};
exports.updateMailToken = updateMailToken;
const getMailLinkData = (token) => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        const { data } = yield api_1.Api.inviteEmailVerify(token);
        dispatch(updateInviteEmailInfo(data));
        if (!data.success) {
            dispatch(updateErrCode(data.code));
        }
    });
};
exports.getMailLinkData = getMailLinkData;
/**
 * invite by link - inviter
 * @param childrenTree
 * @returns
 */
const updateTeamTreeInvite = (childrenTree) => {
    return {
        type: actions.UPDATE_TEAM_TREE_INVITE,
        payload: childrenTree,
    };
};
exports.updateTeamTreeInvite = updateTeamTreeInvite;
const updateSubTeamTreeInvite = (parentId, childrenTree) => {
    return {
        type: actions.UPDATE_SUB_TEAM_TREE_INVITE,
        payload: { parentId, childrenTree },
    };
};
exports.updateSubTeamTreeInvite = updateSubTeamTreeInvite;
const updateLinkInviteList = (list) => {
    return {
        type: actions.UPDATE_LINK_LIST,
        payload: list,
    };
};
exports.updateLinkInviteList = updateLinkInviteList;
const getSubTeamInvite = (teamId) => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        const subTree = yield api_1.Api.getSubTeams(teamId);
        dispatch((0, exports.updateSubTeamTreeInvite)(teamId, subTree.data.data));
    });
};
exports.getSubTeamInvite = getSubTeamInvite;
// TODO: to be delete by yudongdong
const getLinkInviteList = () => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        const { data: { success, data } } = yield api_1.Api.getLinkList();
        if (success) {
            dispatch((0, exports.updateLinkInviteList)(data));
        }
    });
};
exports.getLinkInviteList = getLinkInviteList;
/**
 * invite by link - invitee(be invited)
 * @param data
 * @returns
 */
const updateInviteLinkInfo = (data) => {
    return {
        type: actions.UPDATE_INVITE_LINK_INFO,
        payload: data,
    };
};
exports.updateInviteLinkInfo = updateInviteLinkInfo;
const updateLinkToken = (token) => {
    return {
        type: actions.UPDATE_LINK_TOKEN,
        payload: token,
    };
};
exports.updateLinkToken = updateLinkToken;
const verifyLink = (token) => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        const { data } = yield api_1.Api.linkValid(token);
        dispatch((0, exports.updateInviteLinkInfo)(data));
    });
};
exports.verifyLink = verifyLink;


/***/ }),

/***/ 82155:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getSubTeamListDataInSpace = exports.getEditMemberInfo = exports.getMemberListDataInSpace = exports.sendInviteEmail = exports.getTeamInfo = exports.getTeamListDataInSpace = exports.selecteTeamRowsInModal = exports.selectedTeamKeysInModal = exports.updateInviteStatus = exports.updateTeamListInSpace = exports.updateSubTeamListInSpace = exports.updateSelectMemberListInSpace = exports.updateSelectedRowsInSpace = exports.updateMemberInfoInSpace = exports.updateRightClickTeamInfoInSpace = exports.updateSelectedTeamInfoInSpace = exports.updateMemberListInSpace = void 0;
const api_1 = __webpack_require__(62625);
const actions = __importStar(__webpack_require__(86256));
const config_1 = __webpack_require__(77511);
function updateMemberListInSpace(memberListInSpace) {
    return {
        type: actions.UPDATE_MEMBER_LIST_IN_SPACE,
        payload: memberListInSpace,
    };
}
exports.updateMemberListInSpace = updateMemberListInSpace;
function updateSelectedTeamInfoInSpace(info) {
    return {
        type: actions.UPDATE_SELECTED_TEAM_INFO_IN_SPACE,
        payload: info,
    };
}
exports.updateSelectedTeamInfoInSpace = updateSelectedTeamInfoInSpace;
function updateRightClickTeamInfoInSpace(info) {
    return {
        type: actions.UPDATE_RIGHT_CLICK_TEAM_INFO_IN_SPACE,
        payload: info,
    };
}
exports.updateRightClickTeamInfoInSpace = updateRightClickTeamInfoInSpace;
function updateMemberInfoInSpace(memberInfoInSpace) {
    return {
        type: actions.UPDATE_MEMBER_INFO_IN_SPACE,
        payload: memberInfoInSpace,
    };
}
exports.updateMemberInfoInSpace = updateMemberInfoInSpace;
function updateSelectedRowsInSpace(selectedRows) {
    return {
        type: actions.UPDATE_SELECTED_ROWS_IN_SPACE,
        payload: selectedRows,
    };
}
exports.updateSelectedRowsInSpace = updateSelectedRowsInSpace;
function updateSelectMemberListInSpace(selectMemberListInSpace) {
    return {
        type: actions.UPDATE_SELECT_MEMBER_LIST_IN_SPACE,
        payload: selectMemberListInSpace,
    };
}
exports.updateSelectMemberListInSpace = updateSelectMemberListInSpace;
function updateSubTeamListInSpace(subTeamListInSpace) {
    return {
        type: actions.UPDATE_SUB_TEAM_LIST_IN_SPACE,
        payload: subTeamListInSpace,
    };
}
exports.updateSubTeamListInSpace = updateSubTeamListInSpace;
function updateTeamListInSpace(teamListOfInvite) {
    return {
        type: actions.UPDATE_TEAM_LIST_IN_SPACE,
        payload: teamListOfInvite,
    };
}
exports.updateTeamListInSpace = updateTeamListInSpace;
function updateInviteStatus(isInvited) {
    return {
        type: actions.UPDATE_INVITED_STATUS,
        payload: isInvited,
    };
}
exports.updateInviteStatus = updateInviteStatus;
function selectedTeamKeysInModal(arr) {
    return {
        type: actions.UPDATE_SELECTED_TEAM_KEYS,
        payload: arr,
    };
}
exports.selectedTeamKeysInModal = selectedTeamKeysInModal;
function selecteTeamRowsInModal(arr) {
    return {
        type: actions.UPDATE_SELECTED_TEAM_ROWS,
        payload: arr,
    };
}
exports.selecteTeamRowsInModal = selecteTeamRowsInModal;
/**
 * Space - Team List
 * Query and get specific team list
 */
function getTeamListDataInSpace(_spaceId, _user) {
    let teamListInSpace = [];
    return (dispatch) => {
        api_1.Api.getTeamList().then(res => {
            const { success, data } = res.data;
            if (success) {
                teamListInSpace = data;
            }
            dispatch(updateTeamListInSpace(teamListInSpace));
        });
    };
}
exports.getTeamListDataInSpace = getTeamListDataInSpace;
/**
 * Contacts - Team List
 * Get Team Info
 */
function getTeamInfo(_spaceId, teamId) {
    return (dispatch) => {
        api_1.Api.readTeam(teamId).then(res => {
            const { success, data } = res.data;
            success && dispatch(updateSelectedTeamInfoInSpace({
                teamTitle: data.teamName,
                memberCount: data.memberCount,
                teamId: data.teamId,
            }));
        });
    };
}
exports.getTeamInfo = getTeamInfo;
/**
 * Space - invite member by email
 * invite member by email
 */
function sendInviteEmail(_spaceId, invite) {
    return (dispatch) => {
        api_1.Api.sendInvite(invite).then(res => {
            const { success } = res.data;
            dispatch(updateInviteStatus(true));
            if (success) {
                api_1.Api.readTeam('0').then(res => {
                    const { success, data } = res.data;
                    success && dispatch(updateSelectedTeamInfoInSpace({
                        teamTitle: data.teamName,
                        memberCount: data.memberCount,
                        teamId: data.teamId,
                    }));
                });
            }
        });
    };
}
exports.sendInviteEmail = sendInviteEmail;
/**
 * Space-Contact-Members Management
 * Get members list by specific team with pagination
 */
function getMemberListDataInSpace(pageNo, teamId) {
    const pageObjectParams = {
        pageSize: config_1.ConfigConstant.MEMBER_LIST_PAGE_SIZE,
        order: 'createdAt',
        sort: config_1.ConfigConstant.SORT_ASC,
    };
    return (dispatch) => {
        api_1.Api.getMemberListInSpace(JSON.stringify(Object.assign(Object.assign({}, pageObjectParams), { pageNo })), teamId).then(res => {
            const { success, data } = res.data;
            if (success) {
                const memberListInSpace = data.records;
                dispatch(updateMemberListInSpace(memberListInSpace));
            }
        });
    };
}
exports.getMemberListDataInSpace = getMemberListDataInSpace;
/**
 * Space-Contact-Members Management
 * Get Member detail
 */
function getEditMemberInfo(memberId) {
    return (dispatch) => {
        api_1.Api.getMemberInfo({ memberId }).then(res => {
            if (res.data.success) {
                dispatch(updateMemberInfoInSpace(res.data.data));
            }
        });
    };
}
exports.getEditMemberInfo = getEditMemberInfo;
/**
 * Space-Team List
 * Get sub team list by specific team
 */
function getSubTeamListDataInSpace(teamId) {
    return (dispatch) => {
        api_1.Api.getSubTeams(teamId).then(res => {
            const { success, data } = res.data;
            if (success) {
                dispatch(updateSubTeamListInSpace(data));
            }
        });
    };
}
exports.getSubTeamListDataInSpace = getSubTeamListDataInSpace;


/***/ }),

/***/ 34885:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spaceResource = exports.getMainAdminInfo = exports.getSubAdminList = exports.updateSpaceResource = exports.updateMainAdminInfo = exports.updateSubAdminListData = void 0;
const actions = __importStar(__webpack_require__(86256));
const api_1 = __webpack_require__(62625);
const config_1 = __webpack_require__(77511);
function updateSubAdminListData(info) {
    return {
        type: actions.UPDATE_SUB_ADMIN_LIST_DATA,
        payload: info,
    };
}
exports.updateSubAdminListData = updateSubAdminListData;
function updateMainAdminInfo(list) {
    return {
        type: actions.UPDATE_MAIN_ADMIN_INFO,
        payload: list,
    };
}
exports.updateMainAdminInfo = updateMainAdminInfo;
function updateSpaceResource(resource) {
    return {
        type: actions.UPDATE_SPACE_RESOURCE,
        payload: resource,
    };
}
exports.updateSpaceResource = updateSpaceResource;
function getSubAdminList(pageNo) {
    const pageObjectParams = {
        pageSize: config_1.ConfigConstant.SUB_ADMIN_LIST_PAGE_SIZE,
        order: config_1.ConfigConstant.ORDER_CREATE_TIME,
        sort: config_1.ConfigConstant.SORT_ASC,
    };
    return (dispatch) => {
        api_1.Api.getlistRole(JSON.stringify(Object.assign(Object.assign({}, pageObjectParams), { pageNo }))).then(res => {
            const { success, data } = res.data;
            success && dispatch(updateSubAdminListData(data));
        });
    };
}
exports.getSubAdminList = getSubAdminList;
function getMainAdminInfo() {
    return (dispatch) => {
        api_1.Api.getMainAdminInfo().then(res => {
            const { success, data } = res.data;
            success && dispatch(updateMainAdminInfo(data));
        });
    };
}
exports.getMainAdminInfo = getMainAdminInfo;
function spaceResource() {
    return (dispatch) => {
        api_1.Api.getSpaceResource().then(res => {
            const { success, data } = res.data;
            success && dispatch(updateSpaceResource(data));
        });
    };
}
exports.spaceResource = spaceResource;


/***/ }),

/***/ 77638:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.loadLackUnitMap = exports.resetUnitInfo = exports.updateUserMap = exports.updateUnitMap = void 0;
const keyBy_1 = __importDefault(__webpack_require__(63385));
const action_constants_1 = __webpack_require__(86256);
const api_1 = __webpack_require__(62625);
const updateUnitMap = (unitMap) => {
    return {
        type: action_constants_1.UPDATE_UNIT_MAP,
        payload: unitMap,
    };
};
exports.updateUnitMap = updateUnitMap;
const updateUserMap = (userMap) => {
    return {
        type: action_constants_1.UPDATE_USER_MAP,
        payload: userMap,
    };
};
exports.updateUserMap = updateUserMap;
const resetUnitInfo = () => {
    return {
        type: action_constants_1.RESET_UNIT_INFO,
    };
};
exports.resetUnitInfo = resetUnitInfo;
/**
 * load the missing unit information
 * @param names
 * @param linkId
 * @returns
 */
const loadLackUnitMap = (names, linkId) => {
    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {
        if (!names.length) {
            return;
        }
        const { data: { data: resData } } = yield api_1.Api.searchUnitInfoVo(names, linkId);
        if (!resData.length) {
            return;
        }
        // FIXME: edit type
        return dispatch((0, exports.updateUnitMap)((0, keyBy_1.default)(resData, 'unitId')));
    });
};
exports.loadLackUnitMap = loadLackUnitMap;


/***/ }),

/***/ 75521:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 46827:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 3860:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 55655:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 10763:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 4259:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 7551:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.addressList = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    teamList: [],
    // selected team
    selectedTeamInfo: {
        teamTitle: '',
        teamId: '',
    },
    // member list
    memberList: [],
    // member info
    memberInfo: {
        memberId: '',
        email: '',
    },
    memberListPageNo: 1,
    memberListTotal: 0,
    memberListLoading: false,
};
const updateMemberInList = (state, payload) => {
    if (!payload.memberId) {
        return state;
    }
    return state.reduce((prev, cur) => {
        if (cur.memberId === payload.memberId) {
            prev.push(Object.assign(Object.assign({}, cur), payload));
            return prev;
        }
        prev.push(Object.assign({}, cur));
        return prev;
    }, []);
};
const findParent = (data, id) => {
    return data.reduce((preValue, item) => {
        if (preValue) {
            return preValue;
        }
        if (item.teamId === id) {
            return item;
        }
        if (item.children) {
            return findParent(item.children, id);
        }
        return null;
    }, null);
};
const reUpdateTeamTree = (originTree, parentId, childrenTree) => {
    var _a;
    const parent = findParent(originTree, parentId);
    if (!parent) {
        return;
    }
    if ((!parent.children || ((_a = parent.children) === null || _a === void 0 ? void 0 : _a.length) === 0) && parent.hasChildren) {
        parent.children = childrenTree;
    }
};
exports.addressList = (0, immer_1.produce)((data = defaultState, action) => {
    switch (action.type) {
        case actions.UPDATE_TEAM_LIST: {
            data.teamList = action.payload;
            return data;
        }
        case actions.UPDATE_MEMBER_LIST_PAGE: {
            if (data.memberListPageNo > 0) {
                const memberList = [...data.memberList, ...action.payload];
                data.memberList = memberList;
                return data;
            }
            data.memberList = action.payload;
            return data;
        }
        case actions.UPDATE_MEMBER_LIST: {
            data.memberList = action.payload;
            return data;
        }
        case actions.UPDATE_SELECTED_TEAM_INFO: {
            data.selectedTeamInfo = action.payload;
            return data;
        }
        case actions.UPDATE_MEMBER_INFO: {
            Object.assign(data.memberInfo, action.payload);
            return data;
        }
        case actions.UPDATE_SINGLE_MEMBER_IN_MEMBERLIST: {
            data.memberList = updateMemberInList(data.memberList, action.payload);
            return data;
        }
        case actions.UPDATE_ADDRESS_TREE: {
            const { parentId, childrenTree } = action.payload;
            reUpdateTeamTree(data.teamList, parentId, childrenTree);
            return data;
        }
        case actions.UPDATE_MEMBER_LIST_TOTAL: {
            data.memberListTotal = action.payload;
            return data;
        }
        case actions.UPDATE_MEMBER_LIST_PAGE_NO: {
            data.memberListPageNo = action.payload;
            return data;
        }
        case actions.UPDATE_MEMBER_LIST_LOADING: {
            data.memberListLoading = action.payload;
            return;
        }
        default:
            return data;
    }
}, defaultState);


/***/ }),

/***/ 74283:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.invite = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    inviteEmailInfo: null,
    teamTreeInvite: [],
    linkList: [],
    inviteLinkInfo: null,
    linkToken: '',
    mailToken: '',
    errCode: null,
};
const findParent = (data, id) => {
    return data.reduce((preValue, item) => {
        if (preValue) {
            return preValue;
        }
        if (item.teamId === id) {
            return item;
        }
        if (item.children) {
            return findParent(item.children, id);
        }
        return null;
    }, null);
};
const reUpdateTeamTree = (originTree, parentId, childrenTree) => {
    const parent = findParent(originTree, parentId);
    if (!parent) {
        return;
    }
    parent.children = childrenTree;
};
exports.invite = (0, immer_1.produce)((data = defaultState, action) => {
    switch (action.type) {
        case actions.UPDATE_INVITE_EMAIL_INFO: {
            data.inviteEmailInfo = action.payload;
            return data;
        }
        case actions.UPDATE_TEAM_TREE_INVITE: {
            data.teamTreeInvite = action.payload;
            return data;
        }
        case actions.UPDATE_SUB_TEAM_TREE_INVITE: {
            const { parentId, childrenTree } = action.payload;
            reUpdateTeamTree(data.teamTreeInvite, parentId, childrenTree);
            return data;
        }
        case actions.UPDATE_LINK_LIST: {
            data.linkList = action.payload;
            return data;
        }
        case actions.UPDATE_INVITE_LINK_INFO: {
            data.inviteLinkInfo = action.payload;
            return data;
        }
        case actions.UPDATE_LINK_TOKEN: {
            data.linkToken = action.payload;
            return data;
        }
        case actions.UPDATE_MAIL_TOKEN: {
            data.mailToken = action.payload;
            return data;
        }
        case actions.UPDATE_INVITE_ERR_CODE: {
            data.errCode = action.payload;
            return data;
        }
        default:
            return data;
    }
}, defaultState);


/***/ }),

/***/ 22810:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spaceMemberManage = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    // selected teams
    selectedTeamInfoInSpace: {
        teamTitle: '',
        teamId: '0',
    },
    // members list
    memberListInSpace: [],
    memberInfoInSpace: {
        memberId: '',
        email: '',
    },
    selectedRows: [],
    selectMemberListInSpace: [],
    rightClickTeamInfoInSpace: {
        teamTitle: '',
        teamId: '',
    },
    subTeamListInSpace: [],
    teamListInSpace: [],
    isInvited: false,
    selectedTeamKeys: [],
    selectedTeamRows: [],
};
exports.spaceMemberManage = (0, immer_1.produce)((storeData = defaultState, action) => {
    switch (action.type) {
        case actions.UPDATE_MEMBER_LIST_IN_SPACE: {
            storeData.memberListInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_SELECTED_TEAM_INFO_IN_SPACE: {
            storeData.selectedTeamInfoInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_RIGHT_CLICK_TEAM_INFO_IN_SPACE: {
            storeData.rightClickTeamInfoInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_MEMBER_INFO_IN_SPACE: {
            storeData.memberInfoInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_SELECT_MEMBER_LIST_IN_SPACE: {
            storeData.selectMemberListInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_SELECTED_ROWS_IN_SPACE: {
            storeData.selectedRows = action.payload;
            return storeData;
        }
        case actions.UPDATE_SUB_TEAM_LIST_IN_SPACE: {
            storeData.subTeamListInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_TEAM_LIST_IN_SPACE: {
            storeData.teamListInSpace = action.payload;
            return storeData;
        }
        case actions.UPDATE_INVITED_STATUS: {
            storeData.isInvited = action.payload;
            return storeData;
        }
        case actions.UPDATE_SELECTED_TEAM_KEYS: {
            storeData.selectedTeamKeys = action.payload;
            return storeData;
        }
        case actions.UPDATE_SELECTED_TEAM_ROWS: {
            storeData.selectedTeamRows = action.payload;
            return storeData;
        }
        default:
            return storeData;
    }
}, defaultState);


/***/ }),

/***/ 88909:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.spacePermissionManage = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    subAdminListData: null,
    mainAdminInfo: null,
    spaceResource: null,
};
exports.spacePermissionManage = (0, immer_1.produce)((data = defaultState, action) => {
    switch (action.type) {
        case actions.UPDATE_SUB_ADMIN_LIST_DATA: {
            data.subAdminListData = action.payload;
            return data;
        }
        case actions.UPDATE_MAIN_ADMIN_INFO: {
            data.mainAdminInfo = action.payload;
            return data;
        }
        case actions.UPDATE_SPACE_RESOURCE: {
            data.spaceResource = action.payload;
            return data;
        }
        default:
            return data;
    }
}, defaultState);


/***/ }),

/***/ 42487:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.unitInfo = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const action_constants_1 = __webpack_require__(86256);
const defaultState = {
    unitMap: null,
    userMap: null,
};
const updateUnitMap = (oldUnitMap, newUnitMap) => {
    return Object.assign(Object.assign({}, (oldUnitMap || {})), newUnitMap);
};
const updateUserMap = (oldUserMap, newUserMap) => {
    if (!oldUserMap) {
        oldUserMap = {};
    }
    const _unitMap = {};
    for (const k in newUserMap) {
        const value = newUserMap[k];
        if (value.unitId) {
            oldUserMap[k] = value.unitId;
            _unitMap[value.unitId] = value;
            continue;
        }
        oldUserMap[k] = value;
    }
    return { oldUserMap, _unitMap };
};
exports.unitInfo = (0, immer_1.default)((state = defaultState, action) => {
    switch (action.type) {
        case action_constants_1.UPDATE_UNIT_MAP: {
            state.unitMap = updateUnitMap(state.unitMap, action.payload);
            break;
        }
        case action_constants_1.UPDATE_USER_MAP: {
            const { oldUserMap: userMap, _unitMap } = updateUserMap(state.userMap, action.payload);
            const unitMap = updateUnitMap(state.unitMap, _unitMap);
            state.userMap = userMap;
            state.unitMap = unitMap;
            break;
        }
        case action_constants_1.RESET_UNIT_INFO: {
            return defaultState;
        }
    }
    return state;
});


/***/ }),

/***/ 42600:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getUserMap = exports.getUnitMap = void 0;
const reselect_1 = __webpack_require__(96814);
const getUnitMap = (state) => {
    return state.unitInfo.unitMap;
};
exports.getUnitMap = getUnitMap;
const getUserMapBase = (state) => {
    return state.unitInfo.userMap;
};
exports.getUserMap = (0, reselect_1.createSelector)([exports.getUnitMap, getUserMapBase], (unitMap, userMap) => {
    if (!userMap) {
        return null;
    }
    const _userMap = {};
    for (const userId in userMap) {
        const userValue = userMap[userId];
        if (userValue == null) {
            continue;
        }
        if (typeof userValue === 'string') {
            if (!unitMap) {
                continue;
            }
            const unit = unitMap[userValue];
            if (!unit) {
                continue;
            }
            _userMap[userId] = unit;
        }
        else {
            _userMap[userId] = userValue;
        }
    }
    return _userMap;
});


/***/ }),

/***/ 82193:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.MindType = void 0;
var MindType;
(function (MindType) {
    MindType[MindType["Member"] = 1] = "Member";
    MindType[MindType["Comment"] = 2] = "Comment";
})(MindType = exports.MindType || (exports.MindType = {}));


/***/ }),

/***/ 38987:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAppstoreApps = exports.getMarketplaceApps = exports.processSpaceJoin = exports.applyJoinSpace = exports.searchTemplate = exports.vCodeExchange = exports.getSpaceAudit = exports.getUserIntegralRecords = exports.getUserIntegral = exports.getFavoriteNodeList = exports.moveFavoriteNode = exports.updateNodeFavoriteStatus = exports.trashDelete = exports.trashRecover = exports.getTrashList = exports.subscribeInfo = exports.submitQuestionnaire = exports.addRole = exports.batchDeleteRole = exports.batchEditRole = exports.editRole = exports.listRole = exports.deleteRole = exports.disableRoleExtend = exports.enableRoleExtend = exports.commitRemind = exports.searchUnitInfoVo = exports.loadOrSearchEmbed = exports.loadOrSearch = exports.templateRecommend = exports.templateNameValidate = exports.triggerWizard = exports.useTemplate = exports.templateDirectory = exports.getTemplateAlbumsRecommend = exports.getTemplateAlbum = exports.deleteTemplate = exports.getTemplateCategories = exports.getTemplateList = exports.getTemplateCategory = exports.createTemplate = exports.transferNoticeToRead = exports.createReport = exports.createNotification = exports.getNotificationList = exports.getNotificationPage = exports.getNotificationStatistics = exports.unBindAccount = exports.getAttachPreviewUrl = exports.uploadAttach = void 0;
exports.getRecentlyBrowsedFolder = exports.initRoles = exports.deleteRoleMember = exports.addRoleMember = exports.getRoleMemberList = exports.updateOrgRole = exports.deleteOrgRole = exports.createRole = exports.getRoleList = exports.getSubscribeActiveEvents = exports.getS3Callback = exports.getUploadCertificate = exports.getURLMetaBatch = exports.getNoPermissionMember = exports.getNodeInfoWindow = exports.applyResourceChangesets = exports.updateSecuritySetting = exports.updateLabsFeatureList = exports.getLabsFeatureList = exports.getLabsFeature = exports.unBindEmail = exports.unBindMobile = exports.getSpaceAdList = exports.getAvInfo = exports.disableApp = exports.enableApp = exports.getAppInstanceById = exports.deleteAppInstance = exports.createAppInstance = exports.getAppInstances = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const config_1 = __webpack_require__(77511);
const Url = __importStar(__webpack_require__(28215));
const urlcat_1 = __importDefault(__webpack_require__(83764));
__exportStar(__webpack_require__(36628), exports);
__exportStar(__webpack_require__(27909), exports);
__exportStar(__webpack_require__(67378), exports);
__exportStar(__webpack_require__(87944), exports);
__exportStar(__webpack_require__(22908), exports);
axios_1.default.defaults.baseURL = Url.BASE_URL;
const nestBaseURL = "/nest/v1";
/**
 * Upload Attachment
 *
 * @param formData attachment data
 */
function uploadAttach(file) {
    return axios_1.default.post(Url.UPLOAD_ATTACH, file, {
        headers: { 'Content-Type': 'multipart/form-data' },
    });
}
exports.uploadAttach = uploadAttach;
/**
 * Get attachment's preview url
 *
 * @param token cloud file token
 */
function getAttachPreviewUrl(spaceId, token, attname) {
    return axios_1.default.post((0, urlcat_1.default)(Url.OFFICE_PREVIEW, { spaceId }), {
        token,
        attname,
    });
}
exports.getAttachPreviewUrl = getAttachPreviewUrl;
/**
 * @description unbind account
 * @export
 * @param {BindAccount} type
 * @returns
 */
function unBindAccount(type) {
    return axios_1.default.post(Url.UN_BIND, {
        type,
    });
}
exports.unBindAccount = unBindAccount;
/**
 * get notifications statistics
 */
function getNotificationStatistics() {
    return axios_1.default.get(Url.NOTIFICATION_STATISTICS);
}
exports.getNotificationStatistics = getNotificationStatistics;
/**
 * notification list with pagination
 * @param pageObjectParams pagination params
 * @param isRead 1:read 2:unread, if empty, get all
 */
function getNotificationPage(isRead, rowNo) {
    return axios_1.default.get(Url.NOTIFICATION_PAGE, {
        params: {
            isRead: isRead ? 1 : 0,
            rowNo,
            pageSize: config_1.ConfigConstant.NOTICE_LIST_SIZE,
        },
    });
}
exports.getNotificationPage = getNotificationPage;
/**
 * get notification list
 *
 * @param isRead
 * @param notifyType
 * @returns
 */
function getNotificationList(isRead, notifyType) {
    return axios_1.default.get(Url.NOTIFICATION_LIST, {
        params: {
            isRead: isRead ? 1 : 0,
            notifyType,
        },
    });
}
exports.getNotificationList = getNotificationList;
/**
 * create notification
 * @param data
 * @returns
 */
function createNotification(data) {
    return axios_1.default.post(Url.CREATE_NOTIFICATION, data);
}
exports.createNotification = createNotification;
/**
 * create tip-off report
 *
 * @param nodeId
 * @param reportReason
 */
function createReport(nodeId, reportReason) {
    return axios_1.default.post(Url.CREATE_REPORTS, {
        nodeId,
        reportReason,
    });
}
exports.createReport = createReport;
/**
 * mark notification as read
 * @param id notification id, batch edit support
 * @param isAll  total or not
 */
function transferNoticeToRead(id, isAll) {
    return axios_1.default.post(Url.TRANSFER_NOTICE_TO_READ, {
        id,
        isAll: isAll ? 1 : 0,
    });
}
exports.transferNoticeToRead = transferNoticeToRead;
/**
 * create template
 * @param nodeId
 * @param name
 * @param data
 * @returns
 */
function createTemplate(nodeId, name, data = true) {
    return axios_1.default.post(Url.CREATE_TEMPLATE, {
        nodeId,
        name,
        data,
    });
}
exports.createTemplate = createTemplate;
/**
 * get official template category list
 * @param categoryCodes
 * @returns
 */
function getTemplateCategory(categoryCodes) {
    return axios_1.default.get(Url.OFFICIAL_TEMPLATE_CATEGORY, {
        params: {
            categoryCodes,
        },
    });
}
exports.getTemplateCategory = getTemplateCategory;
/**
 * get official template list
 * @param spaceId
 * @param categoryCode
 * @param isPrivate
 * @param headers
 * @returns
 */
function getTemplateList(spaceId, categoryCode, isPrivate, headers) {
    return axios_1.default.get((0, urlcat_1.default)(Url.SPACE_TEMPLATES, { spaceId }), {
        params: {
            categoryCode,
            isPrivate,
        },
        headers,
    });
}
exports.getTemplateList = getTemplateList;
/**
 * get official template category content
 * @param categoryCode
 * @param headers
 * @returns
 */
function getTemplateCategories(categoryCode, headers) {
    return axios_1.default.get((0, urlcat_1.default)(Url.TEMPLATE_CATEGORIES, { categoryCode }), {
        headers,
    });
}
exports.getTemplateCategories = getTemplateCategories;
/**
 * Delete templates
 *
 * @param tempalte
 * @returns
 */
const deleteTemplate = (tempalte) => {
    return axios_1.default.delete(`${Url.DELETE_TEMPLATE}${tempalte}`);
};
exports.deleteTemplate = deleteTemplate;
/**
 * Get template album content
 * @param albumId
 * @param headers
 * @returns
 */
function getTemplateAlbum(albumId, headers) {
    return axios_1.default.get((0, urlcat_1.default)(Url.TEMPLATE_ALBUMS, { albumId }), {
        headers,
    });
}
exports.getTemplateAlbum = getTemplateAlbum;
/**
 * Get template album content
 *
 * @param albumId
 * @param maxCount
 * @param headers
 * @returns
 */
function getTemplateAlbumsRecommend(albumId, maxCount, headers) {
    return axios_1.default.get(Url.TEMPLATE_ALBUMS_RECOMMEND, {
        params: {
            excludeAlbumId: albumId,
            maxCount,
        },
        headers,
    });
}
exports.getTemplateAlbumsRecommend = getTemplateAlbumsRecommend;
/**
 * get template directory information
 * @param templateId
 * @param isPrivate
 * @param categoryCode
 * @returns
 */
const templateDirectory = (templateId, isPrivate, categoryCode) => {
    return axios_1.default.get(Url.TEMPLATE_DIRECTORY, {
        params: {
            templateId,
            isPrivate,
            categoryCode,
        },
    });
};
exports.templateDirectory = templateDirectory;
/**
 * use template
 *
 * @param templateId
 * @param parentId
 * @param data
 * @returns
 */
const useTemplate = (templateId, parentId, data) => {
    return axios_1.default.post(Url.USE_TEMPLATE, {
        templateId,
        parentId,
        data,
    });
};
exports.useTemplate = useTemplate;
const triggerWizard = (wizardId) => {
    return axios_1.default.post(Url.TRIGGER_WIZARD, {
        wizardId,
    });
};
exports.triggerWizard = triggerWizard;
/**
 * validate the template's existence
 * @param name
 * @returns
 */
const templateNameValidate = (name) => {
    return axios_1.default.get(Url.TEMPLATE_NAME_VALIDATE, {
        params: {
            name,
        },
    });
};
exports.templateNameValidate = templateNameValidate;
/**
 * get hot recommend content
 * @param headers
 * @returns
 */
const templateRecommend = (headers) => {
    return axios_1.default.get(Url.TEMPLATE_RECOMMEND, {
        headers,
    });
};
exports.templateRecommend = templateRecommend;
/**
 * load or search members.
 * display the most selected recent 10 records for Member Field choices
 * @param param0
 * @returns
 */
function loadOrSearch({ filterIds, keyword, names, unitIds, linkId, all, searchEmail }) {
    if (unitIds && unitIds.includes('opt')) {
        return Promise.reject();
    }
    return axios_1.default.get(Url.LOAD_OR_SEARCH, {
        params: {
            filterIds,
            keyword,
            names,
            unitIds,
            linkId,
            all,
            searchEmail,
        },
    });
}
exports.loadOrSearch = loadOrSearch;
function loadOrSearchEmbed(embedId, { filterIds, keyword, names, unitIds, linkId, all, searchEmail }) {
    return axios_1.default.get((0, urlcat_1.default)(Url.LOAD_OR_SEARCH_EMBED, { embedId }), {
        baseURL: nestBaseURL,
        params: {
            filterIds,
            keyword,
            names,
            unitIds,
            linkId,
            all,
            searchEmail,
        },
    });
}
exports.loadOrSearchEmbed = loadOrSearchEmbed;
/**
 * Search unit(folder/file) info
 *
 * @param names
 * @param linkId
 * @returns
 */
function searchUnitInfoVo(names, linkId) {
    return axios_1.default.post(Url.SEARCH_UNIT_INFO_VO, {
        names,
        linkId,
    });
}
exports.searchUnitInfoVo = searchUnitInfoVo;
/**
 * when member field change, submit increment.
 * backend will aggregate them to send notice.
 * @param data
 * @returns
 */
function commitRemind(data) {
    return axios_1.default.post(Url.COMMIT_REMIND, data);
}
exports.commitRemind = commitRemind;
/**
 * Enable node permission (inheritance parent)
 *
 * @param nodeId
 * @returns
 */
function enableRoleExtend(nodeId) {
    return axios_1.default.post(Url.ENABLE_ROLE_EXTEND + `?nodeId=${nodeId}`);
}
exports.enableRoleExtend = enableRoleExtend;
/**
 * Disable node permission (inheritance parent)
 * @param nodeId
 * @param includeExtend
 * @returns
 */
function disableRoleExtend(nodeId, includeExtend) {
    const params = includeExtend ? { includeExtend } : {};
    return axios_1.default.post(Url.DISABLE_ROLE_EXTEND + `?nodeId=${nodeId}`, params);
}
exports.disableRoleExtend = disableRoleExtend;
/**
 * Delete node role
 * @param nodeId
 * @param unitId
 * @returns
 */
function deleteRole(nodeId, unitId) {
    return axios_1.default.delete(Url.DELETE_ROLE, {
        data: {
            nodeId,
            unitId,
        },
    });
}
exports.deleteRole = deleteRole;
/**
 * Query the node role list
 *
 * @param nodeId
 * @param includeAdmin
 * @param includeExtend
 * @param includeSelf
 * @returns
 */
function listRole(nodeId, includeAdmin, includeExtend, includeSelf) {
    return axios_1.default.get(Url.NODE_LIST_ROLE, {
        params: {
            nodeId,
            includeAdmin,
            includeExtend,
            includeSelf,
        },
    });
}
exports.listRole = listRole;
/**
 * Edit the role of the node's organization unit
 *
 * @param nodeId
 * @param unitId
 * @param role
 * @returns
 */
function editRole(nodeId, unitId, role) {
    return axios_1.default.post(Url.EDIT_ROLE, {
        nodeId,
        unitId,
        role,
    });
}
exports.editRole = editRole;
/**
 * Batch edit the role of the node's organization unit
 * @param nodeId
 * @param unitIds
 * @param role
 * @returns
 */
function batchEditRole(nodeId, unitIds, role) {
    return axios_1.default.post(Url.BATCH_EDIT_ROLE, {
        nodeId,
        unitIds,
        role,
    });
}
exports.batchEditRole = batchEditRole;
/**
 * Batch delete node roles
 * @param nodeId
 * @param unitIds
 * @returns
 */
function batchDeleteRole(nodeId, unitIds) {
    return axios_1.default.delete(Url.BATCH_DELETE_ROLE, {
        data: { unitIds, nodeId },
    });
}
exports.batchDeleteRole = batchDeleteRole;
/**
 * Add role to specified organization unit
 * @param nodeId
 * @param unitIds
 * @param role
 * @returns
 */
function addRole(nodeId, unitIds, role) {
    return axios_1.default.post(Url.ADD_ROLE, {
        nodeId,
        unitIds,
        role,
    });
}
exports.addRole = addRole;
/**
 * Submit questionnaire
 *
 * TODO: remove this hard code api
 *
 * @param data
 * @returns
 */
function submitQuestionnaire(data) {
    return (0, axios_1.default)({
        method: 'post',
        headers: { 'Content-Type': 'application/json;charset=UTF-8' },
        url: 'https://e6l40faiq2.execute-api.cn-northwest-1.amazonaws.com.cn/funsion-feeback-form',
        data: { data },
    });
}
exports.submitQuestionnaire = submitQuestionnaire;
/**
 * get space subscription info
 *
 * @param spaceId
 * @returns
 */
function subscribeInfo(spaceId) {
    return axios_1.default.get(Url.SUBSCRIBE_INFO + spaceId);
}
exports.subscribeInfo = subscribeInfo;
/**
 * Query trash's node list
 * @param params
 * @returns
 */
function getTrashList(params) {
    return axios_1.default.get(Url.TRASH_LIST, { params });
}
exports.getTrashList = getTrashList;
/**
 * Recover trash node
 * @param nodeId
 * @param parentId
 * @returns
 */
function trashRecover(nodeId, parentId) {
    return axios_1.default.post(Url.TRASH_RECOVER, {
        nodeId,
        parentId,
    });
}
exports.trashRecover = trashRecover;
/**
 * Delete trash's node
 * @param nodeId
 * @returns
 */
function trashDelete(nodeId) {
    return axios_1.default.delete(`${Url.TRASH_DELETE}${nodeId}`);
}
exports.trashDelete = trashDelete;
/**
 * update node's favorite status
 *
 * @param nodeId
 * @returns
 */
function updateNodeFavoriteStatus(nodeId) {
    return axios_1.default.post(`${Url.UPDATE_NODE_FAVORITE_STATUS}${nodeId}`);
}
exports.updateNodeFavoriteStatus = updateNodeFavoriteStatus;
/**
 * Move favorite node position
 *
 * @param nodeId
 * @param preNodeId
 * @returns
 */
function moveFavoriteNode(nodeId, preNodeId) {
    return axios_1.default.post(Url.MOVE_FAVORITE_NODE, {
        nodeId,
        preNodeId,
    });
}
exports.moveFavoriteNode = moveFavoriteNode;
/**
 * Query favorite node list
 * @returns
 */
function getFavoriteNodeList() {
    return axios_1.default.get(Url.FAVORITE_NODE_LIST);
}
exports.getFavoriteNodeList = getFavoriteNodeList;
/**
 * get user's point(credit) info
 * @returns
 */
function getUserIntegral() {
    return axios_1.default.get(Url.USER_CREDIT);
}
exports.getUserIntegral = getUserIntegral;
/**
 * get user's point(credit) transaction list
 *
 * @param pageNo
 * @returns
 */
function getUserIntegralRecords(pageNo) {
    const pageObjectParams = JSON.stringify({
        pageSize: config_1.ConfigConstant.USER_INTEGRAL_RECORDS_PAGE_SIZE,
        order: 'createdAt',
        sort: config_1.ConfigConstant.SORT_DESC,
        pageNo,
    });
    return axios_1.default.get(Url.USER_INTEGRAL_RECORDS, {
        params: { pageObjectParams },
    });
}
exports.getUserIntegralRecords = getUserIntegralRecords;
/**
 * query audit log list with pagination
 *
 * @param param0
 * @returns
 */
const getSpaceAudit = (_a) => {
    var { spaceId } = _a, params = __rest(_a, ["spaceId"]);
    return axios_1.default.get((0, urlcat_1.default)(Url.SPACE_AUDIT, { spaceId }), {
        params: Object.assign({}, params),
    });
};
exports.getSpaceAudit = getSpaceAudit;
/**
 * Reedem the code award
 * @param code
 * @returns
 */
function vCodeExchange(code) {
    return axios_1.default.post(Url.CODE_EXCHANGE + code);
}
exports.vCodeExchange = vCodeExchange;
/**
 * fuzzy search template
 *
 * @param keyword
 * @param className
 * @returns
 */
function searchTemplate(keyword, className) {
    return axios_1.default.get(Url.TEMPLATE_SEARCH, {
        params: {
            keyword,
            className,
        },
    });
}
exports.searchTemplate = searchTemplate;
/**
 * apply to join space
 *
 * @param spaceId
 * @returns
 */
function applyJoinSpace(spaceId) {
    return axios_1.default.post(Url.APPLY_JOIN_SPACE, { spaceId });
}
exports.applyJoinSpace = applyJoinSpace;
/**
 * process the message of "someone join space"
 *
 * @param notifyId
 * @param agree
 * @returns
 */
function processSpaceJoin(notifyId, agree) {
    return axios_1.default.post(Url.PROCESS_SPACE_JOIN, {
        notifyId,
        agree,
    });
}
exports.processSpaceJoin = processSpaceJoin;
/**
 * get 3rd apps list (marketplace)
 *
 * @param spaceId
 * @returns
 */
function getMarketplaceApps(spaceId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_MARKETPLACE_APPS, { spaceId }));
}
exports.getMarketplaceApps = getMarketplaceApps;
/**
 * get 3rd apps list (marketplace)
 * @returns
 */
function getAppstoreApps() {
    return axios_1.default.get(Url.GET_APPSTORES_APPS);
}
exports.getAppstoreApps = getAppstoreApps;
/**
 * get app instances (enabled)
 * @param spaceId
 * @returns
 */
function getAppInstances(spaceId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.APP_INSTANCE, { spaceId }));
}
exports.getAppInstances = getAppInstances;
/**
 *
 * create app instances (before use it, you need to create it(wecom/lark) first)
 *
 * @param spaceId
 * @param appId
 * @returns
 */
function createAppInstance(spaceId, appId) {
    return axios_1.default.post(Url.APP_INSTANCE, { spaceId, appId });
}
exports.createAppInstance = createAppInstance;
/**
 *
 * delete app instance
 *
 * @param appInstanceId
 * @returns
 */
function deleteAppInstance(appInstanceId) {
    return axios_1.default.delete((0, urlcat_1.default)(Url.SINGLE_APP_INSTANCE, { appInstanceId }));
}
exports.deleteAppInstance = deleteAppInstance;
/**
 *
 * get app instance by id
 *
 * @param appInstanceId
 * @returns
 */
function getAppInstanceById(appInstanceId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.SINGLE_APP_INSTANCE, { appInstanceId }));
}
exports.getAppInstanceById = getAppInstanceById;
/**
 * enable app
 * @param spaceId
 * @param appId
 * @returns
 */
function enableApp(spaceId, appId) {
    return axios_1.default.post((0, urlcat_1.default)(Url.APP_ENABLE, { spaceId, appId }));
}
exports.enableApp = enableApp;
/**
 * disable app
 * @param spaceId
 * @param appId
 * @returns
 */
function disableApp(spaceId, appId) {
    return axios_1.default.post((0, urlcat_1.default)(Url.APP_DISABLE, { spaceId, appId }));
}
exports.disableApp = disableApp;
/**
 * get audio and video metadata
 *
 * @param url
 * @returns
 */
// https://developer.qiniu.com/dora/1247/audio-and-video-metadata-information-avinfo
function getAvInfo(url) {
    return axios_1.default.get(url);
}
exports.getAvInfo = getAvInfo;
/**
 * get space admin ad list
 * the config data stored in the space's config: https://vika.cn/workbench/dst9vf4SSYhEAme66b/viwRvDFWeP11B
 * if use cloud function to get API, every 10 minutes will sync once
 * @returns
 */
function getSpaceAdList() {
    return axios_1.default.get('https://service-p4w3x0tq-1254196833.gz.apigw.tencentcs.com/release/ads');
}
exports.getSpaceAdList = getSpaceAdList;
function unBindMobile(code) {
    return axios_1.default.post(Url.USER_UNBIND_MOBILE, { code });
}
exports.unBindMobile = unBindMobile;
function unBindEmail(code) {
    return axios_1.default.post(Url.USER_UNBIND_EMAIL, { code });
}
exports.unBindEmail = unBindEmail;
/**
 * get labs features
 * @param spaceId
 * @returns
 */
function getLabsFeature(spaceId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_LABS_FEATURE, { spaceId }));
}
exports.getLabsFeature = getLabsFeature;
/**
 * get labs features list
 * @returns
 */
function getLabsFeatureList() {
    return axios_1.default.get(Url.GET_LABS_FEATURE_LIST);
}
exports.getLabsFeatureList = getLabsFeatureList;
/**
 * update labs features list
 * @param key
 * @param isEnabled
 * @param spaceId
 * @returns
 */
function updateLabsFeatureList(key, isEnabled, spaceId) {
    return axios_1.default.post(Url.GET_LABS_FEATURE, {
        key,
        isEnabled,
        spaceId,
    });
}
exports.updateLabsFeatureList = updateLabsFeatureList;
function updateSecuritySetting(config) {
    return axios_1.default.post(Url.UPDATE_SECURITY_SETTING, config);
}
exports.updateSecuritySetting = updateSecuritySetting;
function applyResourceChangesets(changesets, roomId) {
    return axios_1.default.post(Url.APPLY_RESOURCE_CHANGESETS, {
        changesets,
        roomId,
    }, {
        baseURL: nestBaseURL,
    });
}
exports.applyResourceChangesets = applyResourceChangesets;
/**
 * get node info - (file info UI modal)
 * @param nodeId
 * @returns
 */
function getNodeInfoWindow(nodeId) {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_NODE_INFO_WINDOW, { nodeId }));
}
exports.getNodeInfoWindow = getNodeInfoWindow;
/**
 * get members that have no permissions
 *
 * @param nodeId
 * @param unitIds
 * @returns
 */
function getNoPermissionMember(nodeId, unitIds) {
    return axios_1.default.post(Url.NO_PERMISSION_MEMBER, { nodeId, unitIds });
}
exports.getNoPermissionMember = getNoPermissionMember;
/**
 * batch get url info,  for URL field recognition
 *
 * @param urls
 * @returns
 */
const getURLMetaBatch = (urls) => axios_1.default.post(Url.GET_URL_META_BATCH, { urls });
exports.getURLMetaBatch = getURLMetaBatch;
const getUploadCertificate = (params) => {
    return axios_1.default.post(Url.UPLOAD_PRESIGNED_URL, params);
};
exports.getUploadCertificate = getUploadCertificate;
const getS3Callback = (params) => {
    return axios_1.default.post(Url.UPLOAD_CALLBACK, params);
};
exports.getS3Callback = getS3Callback;
const getSubscribeActiveEvents = () => {
    return axios_1.default.get(Url.SUBSCRIBE_ACTIVE_EVENT);
};
exports.getSubscribeActiveEvents = getSubscribeActiveEvents;
/**
 * get role list
 * @returns
 */
const getRoleList = () => {
    return axios_1.default.get(Url.GET_ROLE_LIST);
};
exports.getRoleList = getRoleList;
/**
 * create organization role
 * @param roleName
 * @returns
 */
const createRole = (roleName) => {
    return axios_1.default.post(Url.CREATE_NEW_ROLE, { roleName });
};
exports.createRole = createRole;
/**
 * delete organization role
 * @param roleId
 * @returns
 */
const deleteOrgRole = (roleId) => {
    return axios_1.default.delete((0, urlcat_1.default)(Url.DELETE_ORG_ROLE, { roleId }));
};
exports.deleteOrgRole = deleteOrgRole;
/**
 * update organization role
 * @param roleId
 * @param roleName
 * @returns
 */
const updateOrgRole = (roleId, roleName) => {
    return axios_1.default.patch((0, urlcat_1.default)(Url.UPDATE_ORG_ROLE, { roleId }), { roleName });
};
exports.updateOrgRole = updateOrgRole;
/**
 * get role's members list
 * @param roleId
 * @param page
 * @returns
 */
const getRoleMemberList = (roleId, page) => {
    const pageObjectParams = JSON.stringify(page);
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_MEMBER_LIST_BY_ROLE, { roleId }), {
        params: { pageObjectParams },
    });
};
exports.getRoleMemberList = getRoleMemberList;
/**
 * add member to role
 * @param roleId
 * @param unitList
 * @returns
 */
const addRoleMember = (roleId, unitList) => {
    return axios_1.default.post((0, urlcat_1.default)(Url.ADD_ROLE_MEMBER, { roleId }), { unitList });
};
exports.addRoleMember = addRoleMember;
/**
 * delete member from role
 * @param roleId
 * @param unitIds
 * @returns
 */
const deleteRoleMember = (roleId, unitIds) => {
    return axios_1.default.delete((0, urlcat_1.default)(Url.DELETE_ROLE_MEMBER, { roleId }), { data: { unitIds } });
};
exports.deleteRoleMember = deleteRoleMember;
/**
 * init roles
 * @returns
 */
const initRoles = () => {
    return axios_1.default.post(Url.INIT_ROLE);
};
exports.initRoles = initRoles;
// recently browsed folder
const getRecentlyBrowsedFolder = () => {
    return axios_1.default.get(Url.NODE_RECENTLY_BROWSED);
};
exports.getRecentlyBrowsedFolder = getRecentlyBrowsedFolder;


/***/ }),

/***/ 86978:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(38987), exports);
__exportStar(__webpack_require__(82193), exports);
__exportStar(__webpack_require__(28215), exports);


/***/ }),

/***/ 28215:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.LOAD_OR_SEARCH_EMBED = exports.EMBED_LINK_INFO = exports.UPLOAD_CALLBACK = exports.UPLOAD_PRESIGNED_URL = exports.GET_URL_META_BATCH = exports.GET_URL_META = exports.GET_LABS_FEATURE_LIST = exports.GET_LABS_FEATURE = exports.CREATE_REPORTS = exports.CODE_EXCHANGE = exports.APP_DISABLE = exports.APP_ENABLE = exports.GET_MARKETPLACE_APPS = exports.OFFICE_PREVIEW = exports.UPLOAD_ATTACH = exports.NEST_BASE_URL = exports.BASE_URL = void 0;
__exportStar(__webpack_require__(43633), exports);
__exportStar(__webpack_require__(22568), exports);
__exportStar(__webpack_require__(61057), exports);
__exportStar(__webpack_require__(27850), exports);
__exportStar(__webpack_require__(36628), exports);
__exportStar(__webpack_require__(30020), exports);
__exportStar(__webpack_require__(17544), exports);
__exportStar(__webpack_require__(19179), exports);
__exportStar(__webpack_require__(11546), exports);
__exportStar(__webpack_require__(33896), exports);
__exportStar(__webpack_require__(37833), exports);
/**
 * Main API URL Address
 */
exports.BASE_URL = '/api/v1';
/**
 * Nest Base Url
 */
exports.NEST_BASE_URL = '/nest/v1';
/**
 * Upload attachments
 */
exports.UPLOAD_ATTACH = '/base/attach/upload';
/**
 * The url to get attachment preview
 */
exports.OFFICE_PREVIEW = '/base/attach/officePreview/:spaceId';
// Space Station - Get a list of third-party apps SINGLE_APP_INSTANCE
exports.GET_MARKETPLACE_APPS = '/marketplace/integration/space/:spaceId/apps';
// space station - start the application
exports.APP_ENABLE = '/marketplace/integration/space/:spaceId/app/:appId/open';
// space station - close the app
exports.APP_DISABLE = 'marketplace/integration/space/:spaceId/app/:appId/stop';
// =============== V code =======================
exports.CODE_EXCHANGE = '/vcode/exchange/';
// =============== player related =======================
// ================ Risk control related =======================
// Content risk control
exports.CREATE_REPORTS = '/censor/createReports';
// ================ Risk control related =======================
// Get the experimental features that are enabled
exports.GET_LABS_FEATURE = 'user/labs/features';
// Get a list of experimental features
exports.GET_LABS_FEATURE_LIST = 'labs/features';
// Get URL related information, used for URL column identification
exports.GET_URL_META = '/internal/field/url/awareContent';
exports.GET_URL_META_BATCH = '/internal/field/url/awareContents';
// Attachment direct upload
exports.UPLOAD_PRESIGNED_URL = '/asset/upload/preSignedUrl';
exports.UPLOAD_CALLBACK = 'asset/upload/callback';
// ============ Character related end =====================//
// Get EmbedLink Info
exports.EMBED_LINK_INFO = 'embedlinks';
exports.LOAD_OR_SEARCH_EMBED = 'embedlinks/:embedId/org/loadOrSearch';


/***/ }),

/***/ 63325:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports._getEventName = exports.Events = exports.Player = void 0;
const Player = __importStar(__webpack_require__(74972));
exports.Player = Player;
const system_config_1 = __webpack_require__(7942);
const player_1 = __webpack_require__(74972);
Object.defineProperty(exports, "_getEventName", ({ enumerable: true, get: function () { return player_1._getEventName; } }));
const Events = system_config_1.SystemConfig.player.events;
exports.Events = Events;


/***/ }),

/***/ 74972:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getAppHook = exports.bindFilter = exports.applyFilters = exports.doTrigger = exports.bindTrigger = exports._getEventName = void 0;
/*
 *
 * Player user system, including novice guide, event system binding, red dot, notification and other managers closely related to user experience
 * Provide an initialization function, which can execute the initialization (init) function during restart,
 * and read and explain the player configuration table
 *
 * @Author: Kelly Peilin Chan (kelly@apitable.com)
 * @Date: 2020-03-10 14:16:06
 * @Last Modified by: Kelly Peilin Chan (kelly@apitable.com)
 * @Last Modified time: 2020-03-21 17:58:29
 */
const apphook_1 = __webpack_require__(90643);
// The apphook engine is declared here and becomes a global singleton
const apphook = new apphook_1.AppHook();
/**
 * When configuring, module and name are configured separately, which is convenient for product planning to identify events and better readability
 * When the system is actually used, splicing module and name: modulexxx_namexxx
 *
 * @param {IEvent} event
 * @returns
 */
function _getEventName(event) {
    return (event === null || event === void 0 ? void 0 : event.module) + '_' + (event === null || event === void 0 ? void 0 : event.name);
}
exports._getEventName = _getEventName;
/**
 * Bind events.
 * Why use bindTrigger here instead of addTrigger?
 * addTrigger can be added, that is, it can bind a lot of actions, which is suitable for the unrestrained development of third-party plug-ins;
 * In our own program code, we do not respect the use of add, so our own code is difficult to maintain, so we put it in the event_bindings.ts file.
 *
 * @export
 * @param {IEvent} event
 * @param {TriggerCommand} command
 * @param {number} [priority=0]
 * @returns
 */
function bindTrigger(event, command, priority = 0, force = false) {
    const eventStr = _getEventName(event);
    if (!force && apphook.hasAnyTriggers(eventStr)) {
        console.error(`Event ${eventStr} has triggers, cannot bind anymore`);
        return undefined;
    }
    return apphook.addTrigger(_getEventName(event), command, [], undefined, priority);
}
exports.bindTrigger = bindTrigger;
/**
 * execute event
 *
 * @export
 * @param {IEvent} event
 * @param {*} [eventState]
 */
function doTrigger(event, eventState) {
    const eventStr = _getEventName(event);
    // console.debug('[DO_EVENT] ' + eventStr + ' ' + eventState);
    apphook.doTriggers(eventStr, eventState);
}
exports.doTrigger = doTrigger;
/**
 * Apply filters
 *
 * @export
 * @param {IEvent} event
 * @param {*} defaultValue
 * @param {*} [eventState]
 * @returns
 */
function applyFilters(event, defaultValue, eventState) {
    const eventStr = _getEventName(event);
    return apphook.applyFilters(eventStr, defaultValue, eventState);
}
exports.applyFilters = applyFilters;
function bindFilter(event, command, commandArg, priority = 0, force = false) {
    const eventStr = _getEventName(event);
    if (!force && apphook.hasAnyFilters(eventStr)) {
        console.error(`Event ${eventStr} has triggers, cannot bind anymore`);
        return;
    }
    apphook.addFilter(eventStr, command, commandArg, undefined, priority);
}
exports.bindFilter = bindFilter;
/**
 * Direct access to apphook event manager
 *
 * @export
 * @returns
 */
function getAppHook() {
    return apphook;
}
exports.getAppHook = getAppHook;


/***/ }),

/***/ 86256:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.UPDATE_SELECTED_ROWS_IN_SPACE = exports.UPDATE_MEMBER_INFO_IN_SPACE = exports.UPDATE_MEMBER_LIST_IN_SPACE = exports.UPDATE_RIGHT_CLICK_TEAM_INFO_IN_SPACE = exports.UPDATE_SELECTED_TEAM_INFO_IN_SPACE = exports.UPDATE_INVITED_STATUS = exports.UPDATE_TEAM_LIST_IN_SPACE = exports.UPDATE_MEMBER_INFO = exports.UPDATE_MEMBER_LIST = exports.UPDATE_SELECTED_TEAM_INFO = exports.UPDATE_TEAM_LIST = exports.SET_ROOT_ID = exports.SET_FILL_HANDLE_STATUS = exports.SET_FIELD_RANGES = exports.CLEAR_SELECTION_BUT_KEEP_CHECKED_RECORD = exports.CLEAR_SELECTION = exports.SET_RECORD_SELECTION = exports.SET_ACTIVE_CELL = exports.SET_SELECTION = exports.GET_SELECTION = exports.SET_LOADING_RECORD = exports.ADD_DATASHEET = exports.RESET_DATASHEET = exports.MIRROR_DEACTIVATE_COLLABORATOR = exports.DASHBOARD_DEACTIVATE_COLLABORATOR = exports.DATASHEET_DEACTIVATE_COLLABORATOR = exports.CURSOR_MOVE = exports.SET_HIGHLIGHT_FIELD_ID = exports.MIRROR_ACTIVE_COLLABORATOR = exports.DASHBOARD_ACTIVE_COLLABORATOR = exports.DATASHEET_ACTIVE_COLLABORATOR = exports.SEND_USERCHANGE_REJECT = exports.SEND_USERCHANGE_ACK = exports.SEND_USERCHANGE = exports.DATAPACK_REQUEST = exports.RESET_EXPORT_VIEW_ID = exports.ACTIVE_EXPORT_VIEW_ID = exports.RESET_OPERATE_VIEW_ID = exports.ACTIVE_OPERATE_VIEW_ID = exports.CACHE_TEMPORARY_VIEW = exports.DATAPACK_LOADED = exports.SWITCH_VIEW = exports.TOGGLE_EDITING = exports.SWITCH_CARD_EDITOR = exports.APPLY_OPERATION = exports.REFRESH_SNAPSHOT = exports.SET_ACTIVE_ROW_INFO = exports.CLEAR_ACTIVE_ROW_INFO = exports.SET_NEW_RECORD_EXPECT_INDEX = exports.SET_ROBOT_PANEL_STATUS = void 0;
exports.SET_EDIT_NODE_ID = exports.SET_ERR = exports.SET_OPT_NODE = exports.CO_LAYER_MOVE_NODE = exports.MOVE_NODE_TO_FOLDER = exports.DELETE_NODE = exports.SET_DEL_NODE_ID = exports.CHANGE_VIEW = exports.SET_NODE_ERROR_TYPE = exports.SET_NODE_NAME = exports.SCROLL_OFFSET = exports.GET_NEW_MSG_FROM_WS_AND_LOOK = exports.UPDATE_NEW_NOTICE_LIST_FROM_WS = exports.DEL_UNREAD_NOTICE_LIST = exports.UPDATE_UNREAD_NOTICE_LIST = exports.UPDATE_READ_NOTICE_LIST = exports.UPDATE_READ_MSG_COUNT = exports.UPDATE_UNREAD_MSG_COUNT = exports.UPDATE_INVITE_ERR = exports.UPDATE_INVITE_EMAIL_INFO = exports.SET_NO_PERMISSION_MEMBERS = exports.SET_PERMISSION_COMMIT_REMIND_PARAMETER = exports.SET_PERMISSION_COMMIT_REMIND_STATUS = exports.UPDATE_SPACE_RESOURCE = exports.UPDATE_INVITE_ERR_CODE = exports.UPDATE_MAIL_TOKEN = exports.UPDATE_LINK_TOKEN = exports.UPDATE_INVITE_LINK_INFO = exports.UPDATE_SUB_TEAM_TREE_INVITE = exports.UPDATE_TEAM_TREE_INVITE = exports.UPDATE_SUBSCRIPTION = exports.SET_GRID_VIEW_HOVER_FIELD_ID = exports.ADD_WIZARD_NUMBER = exports.UPDATE_USERINFO_ERR = exports.UPDATE_SINGLE_MEMBER_IN_MEMBERLIST = exports.UPDATE_DATASHEET_NAME = exports.SET_CONNECTED = exports.SET_RECONNECTING = exports.UPDATE_MAIN_ADMIN_INFO = exports.UPDATE_MEMBER_LIST_PAGE = exports.UPDATE_MEMBER_LIST_LOADING = exports.UPDATE_MEMBER_LIST_TOTAL = exports.UPDATE_MEMBER_LIST_PAGE_NO = exports.UPDATE_ADDRESS_TREE = exports.UPDATE_PERMISSION_LIST = exports.UPDATE_SUB_ADMIN_LIST_DATA = exports.UPDATE_SELECTED_TEAM_ROWS = exports.UPDATE_SELECTED_TEAM_KEYS = exports.UPDATE_SUB_TEAM_LIST_IN_SPACE = exports.UPDATE_SELECT_MEMBER_LIST_IN_SPACE = void 0;
exports.TOGGLE_API_PANEL = exports.SET_EXPANDED_KEYS = exports.INIT_TAB_BAR = exports.INIT_TAB_BAR_INFO = exports.SET_DRAG_NODE_ID = exports.SET_EDIT_INDEX = exports.SET_TAB_ITEM_TO_INDEX = exports.COPY_TAB_ITEM = exports.RENAME_TAB_ITEM = exports.MOVE_TAB_ITEM = exports.REMOVE_TAB_ITEM = exports.ADD_TAB_ITEM = exports.UPDATE_MOVE_TO_NODE_IDS = exports.SET_LOADED_KEYS = exports.UPDATE_IMPORT_MODAL_NODE_ID = exports.UPDATE_SAVE_AS_TEMPLATE_MODAL_NODE_ID = exports.UPDATE_SHARE_MODAL_NODE_ID = exports.UPDATE_PERMISSION_MODAL_NODE_ID = exports.INIT_FAVORITE_TREE_NODES = exports.MOVE_FAVORITE_NODE = exports.DELETE_NODE_FROM_FAVORITE_LIST = exports.SET_FAVORITE_LOADING = exports.SET_FAVORITE_DEL_NODE_ID = exports.SET_FAVORITE_EDIT_NODE_ID = exports.SET_FAVORITE_EXPANDED_KEYS = exports.REMOVE_FAVORITE_NODE = exports.ADD_NODE_TO_FAVORITE_LIST = exports.SET_TREE_ROOT_ID = exports.SET_ACTIVE_NODE_ERROR = exports.REFRESH_TREE = exports.UPDATE_SOCKET_DATA = exports.UPDATE_IS_PERMISSION = exports.REMOVE_NODE_FROM_TREE = exports.REMOVE_NODE_FROM_MAP = exports.UPDATE_USERINFO = exports.SET_NICKNAME = exports.CLEAR_NODE = exports.UPDATE_TREE_NODES_MAP = exports.NODE_MOVE_TO = exports.UPDATE_HAS_CHILDREN = exports.TREE_LOADING = exports.SET_ALL_VISIBLE = exports.SET_COPY_NODE_ID = exports.UPDATE_LINK_LIST = exports.INIT_CATALOG_TREE = exports.SET_IS_COPY_ALL = exports.SET_ACTIVE_DST_ID = exports.CLEAR_TASK_QUEUE = exports.ADD_NODE_TO_MAP = exports.ADD_TASK = void 0;
exports.TOGGLE_ORG_CHART_GUIDE_STATUS = exports.SET_CALENDAR_SETTING_PANEL_WIDTH = exports.TOGGLE_CALENDAR_SETTING_PANEL = exports.SET_CALENDAR_GRID_WIDTH = exports.TOGGLE_CALENDAR_GRID = exports.TOGGLE_CALENDAR_GUIDE_STATUS = exports.SET_GANTT_DATE_UNIT_TYPE = exports.SET_GANTT_SETTING_PANEL_WIDTH = exports.TOGGLE_GANTT_SETTING_PANEL = exports.SET_GANTT_GRID_WIDTH = exports.TOGGLE_GANTT_GRID = exports.TOGGLE_KANBAN_GROUP_SETTING_VISIBLE = exports.SET_KANBAN_GROUPING_EXPAND = exports.SET_GROUPING_COLLAPSE = exports.SET_CHANGE_COLUMNS_WIDTH = exports.SET_ENVS = exports.SET_ACTIVE_SPACE_ID = exports.SET_MARKETPLACE_APPS = exports.SET_SHORTCUT_KEY_PANEL_VISIBLE = exports.SET_SPACE_FEATURES = exports.SET_SPACE_INFO = exports.SET_SPACE_LOADING = exports.SET_SPACE_ERR = exports.SET_QUIT_SPACE_ID = exports.SET_SPACE_LIST = exports.SET_TEMP_SELECTION = exports.SET_ACTIVE_FIELD_STATE = exports.SET_PAGE_PARAMS = exports.UPDATE_SOCIAL_CONFIG = exports.SET_HOVER_RECORD_ID = exports.SET_DRAG_MOVE = exports.SET_DRAG_TARGET = exports.SET_PWD = exports.SET_ACTIVE_RECORD_ID = exports.SET_HTTP_ERR_INFO = exports.SET_REQ_STATUS = exports.SET_USER_TIMEZONE = exports.SET_USER_AVATAR_COLOR = exports.SET_USER_AVATAR = exports.SIGN_OUT = exports.SET_LOADING = exports.SET_IS_CREATE_SPACE = exports.SET_IS_CODE = exports.SET_USED_INVITE_REWARD = exports.SET_REGISTER_STATUS = exports.SET_HOME_ERR = exports.SET_IS_LOGIN = exports.SET_USER_ME = exports.TOGGLE_RECORD_PANEL_FULL_SCREEN = exports.TOGGLE_SIDE_RECORD_PANEL = void 0;
exports.SET_RIGHT_CLICK_INFO = exports.UPDATE_FORM_UNIT_MAP = exports.CHANGE_RESOURCE_SYNCING_STATUS = exports.RESOURCE_CONNECTED = exports.SET_THEME = exports.SET_RECORD_VISION_MODE = exports.RESET_FORM = exports.FORM_ACTIVE_COLLABORATOR = exports.FORM_DEACTIVATE_COLLABORATOR = exports.UPDATE_FORM_NAME = exports.SET_FORM_SYNCING = exports.SET_FORM_DATA = exports.SET_FORM_LOADING = exports.SET_FORM_CLIENT = exports.FORM_ROOM_INFO_SYNC = exports.UPDATE_FORM = exports.FORM_PROP_UPDATE = exports.FORM_CONNECTED = exports.FORM_LOADED = exports.FORM_REQUEST = exports.FORM_JOT_ACTION = exports.TOGGLE_TIME_MACHINE_PANEL = exports.SET_HOVER_ROW_OF_ADD_RECORD = exports.SET_HOVER_GROUP_PATH = exports.SET_SEARCH_RESULT_CURSOR_INDEX = exports.RESET_UNIT_INFO = exports.SET_SEARCH_KEYWORD = exports.UPDATE_USER_MAP = exports.UPDATE_UNIT_MAP = exports.SET_RIGHT_PANE_WIDTH = exports.SET_TOOLBAR_MENU_CARD_OPEN = exports.CLEAR_WIZARDS_DATA = exports.UPDATE_CURRENT_GUIDE_WIZARD_ID = exports.INIT_HOOKS_DATA = exports.UPDATE_TRIGGERED_GUIDE_INFO = exports.UPDATE_CONFIG = exports.UPDATE_CURRENT_GUIDE_STEP_IDS = exports.UPDATE_PENDING_GUIDE_WIZARD_IDS = exports.CLEAR_FIELD_INFO = exports.SET_NODE_ICON = exports.SET_SIDEBAR_VISIBLE = exports.SET_SCREEN_WIDTH = exports.RECORD_NODE_SHARED = exports.SET_SHARE_MEMBER_ID = exports.RECORD_NODE_DESC = exports.SET_EDIT_STATUS = exports.SET_ORG_CHART_SETTING_PANEL_WIDTH = exports.TOGGLE_ORG_CHART_SETTING_PANEL = exports.SET_ORG_CHART_GRID_WIDTH = exports.TOGGLE_ORG_CHART_GRID = void 0;
exports.UPDATE_FIELD_PERMISSION_MAP = exports.SET_PREVIEW_MODAL_VISIBLE = exports.SET_SHARE_INFO = exports.UPDATE_TEMPLATE_DIRECTORY = exports.UPDATE_TEMPLATE_CATEGORY = exports.EXPAND_STATUS = exports.UPDATE_SNAPSHOT = exports.UPDATE_MIRROR = exports.UPDATE_DASHBOARD = exports.UPDATE_DATASHEET = exports.MIRROR_ERROR_CODE = exports.DASHBOARD_ERROR_CODE = exports.DATASHEET_ERROR_CODE = exports.FORM_ERROR_CODE = exports.MIRROR_ROOM_INFO_SYNC = exports.DASHBOARD_ROOM_INFO_SYNC = exports.DATASHEET_ROOM_INFO_SYNC = exports.SET_MIRROR_SYNCING = exports.SET_DASHBOARD_SYNCING = exports.SET_DATASHEET_SYNCING = exports.MIRROR_CONNECTED = exports.DASHBOARD_CONNECTED = exports.DATASHEET_CONNECTED = exports.FORM_UPDATE_REVISION = exports.WIDGET_UPDATE_REVISION = exports.DASHBOARD_UPDATE_REVISION = exports.DATASHEET_UPDATE_REVISION = exports.MIRROR_UPDATE_REVISION = exports.WIDGET_JOT_ACTION = exports.DASHBOARD_JOT_ACTION = exports.DATASHEET_JOT_ACTION = exports.MIRROR_JOT_ACTION = exports.UPDATE_MIRROR_INFO = exports.UPDATE_MIRROR_NAME = exports.RESET_MIRROR = exports.SET_MIRROR_CLIENT = exports.SET_MIRROR_DATA = exports.SET_MIRROR_LOADING = exports.UPDATE_DASHBOARD_INFO = exports.UPDATE_DASHBOARD_NAME = exports.RESET_DASHBOARD = exports.SET_DASHBOARD_CLIENT = exports.SET_DASHBOARD_DATA = exports.SET_DASHBOARD_LOADING = exports.RESET_WIDGET = exports.RECEIVE_INSTALLATIONS_WIDGET = exports.SET_WIDGET_PANEL_LOADING = exports.SWITCH_ACTIVE_PANEL = exports.CHANGE_WIDGET_PANEL_WIDTH = exports.TOGGLE_WIDGET_PANEL = void 0;
exports.TRIGGER_VIEW_DERIVATION_COMPUTED = exports.PATCH_VIEW_DERIVATION = exports.DELETE_VIEW_DERIVATION = exports.SET_VIEW_DERIVATION = exports.SET_PREVIEW_DEFAULT_ACTIVE = exports.SET_PREVIEW_FILE_CELL_ACTIVE = exports.SET_PREVIEW_FILE = exports.SET_SUBSCRIPTIONS = exports.SET_LABS = exports.SET_CLOSE_SYNC_VIEW_ID = exports.SET_DATASHEET_COMPUTED_STATUS = exports.UPDATE_DATASHEET_COMPUTED_COLUMNS = exports.UPDATE_DATASHEET_COMPUTED_ROWS = exports.SET_DATASHEET_COMPUTED = exports.UPDATE_DATASHEET_COMPUTED = exports.UPDATE_FIELD_PERMISSION_SETTING = exports.LOAD_FIELD_PERMISSION_MAP = exports.RESET_FIELD_PERMISSION_MAP = void 0;
exports.SET_ROBOT_PANEL_STATUS = 'SET_ROBOT_PANEL_STATUS';
exports.SET_NEW_RECORD_EXPECT_INDEX = 'SET_NEW_RECORD_EXPECT_INDEX';
exports.CLEAR_ACTIVE_ROW_INFO = 'CLEAR_ACTIVE_ROW_INFO';
exports.SET_ACTIVE_ROW_INFO = 'SET_ACTIVE_ROW_INFO';
exports.REFRESH_SNAPSHOT = 'REFRESH_SNAPSHOT';
exports.APPLY_OPERATION = 'APPLY_OPERATION';
exports.SWITCH_CARD_EDITOR = 'SWITCH_CARD_EDITOR';
exports.TOGGLE_EDITING = 'TOGGLE_EDITING';
exports.SWITCH_VIEW = 'SWITCH_VIEW';
exports.DATAPACK_LOADED = 'DATAPACK_LOADED';
exports.CACHE_TEMPORARY_VIEW = 'CACHE_TEMPORARY_VIEW';
exports.ACTIVE_OPERATE_VIEW_ID = 'ACTIVE_OPERATE_VIEW_ID';
exports.RESET_OPERATE_VIEW_ID = 'RESET_OPERATE_VIEW_ID';
exports.ACTIVE_EXPORT_VIEW_ID = 'ACTIVE_EXPORT_VIEW_ID';
exports.RESET_EXPORT_VIEW_ID = 'RESET_EXPORT_VIEW_ID';
exports.DATAPACK_REQUEST = 'DATAPACK_REQUEST';
exports.SEND_USERCHANGE = 'SEND_USERCHANGE';
exports.SEND_USERCHANGE_ACK = 'SEND_USERCHANGE_ACK';
exports.SEND_USERCHANGE_REJECT = 'SEND_USERCHANGE_REJECT';
exports.DATASHEET_ACTIVE_COLLABORATOR = 'DATASHEET_ACTIVE_COLLABORATOR';
exports.DASHBOARD_ACTIVE_COLLABORATOR = 'DASHBOARD_ACTIVE_COLLABORATOR';
exports.MIRROR_ACTIVE_COLLABORATOR = 'MIRROR_ACTIVE_COLLABORATOR';
exports.SET_HIGHLIGHT_FIELD_ID = 'SET_HIGHLIGHT_FIELD_ID';
exports.CURSOR_MOVE = 'CURSOR_MOVE';
exports.DATASHEET_DEACTIVATE_COLLABORATOR = 'DATASHEET_DEACTIVATE_COLLABORATOR';
exports.DASHBOARD_DEACTIVATE_COLLABORATOR = 'DASHBOARD_DEACTIVATE_COLLABORATOR';
exports.MIRROR_DEACTIVATE_COLLABORATOR = 'MIRROR_DEACTIVATE_COLLABORATOR';
exports.RESET_DATASHEET = 'RESET_DATASHEET';
exports.ADD_DATASHEET = 'ADD_DATASHEET';
exports.SET_LOADING_RECORD = 'SET_LOADING_RECORD';
exports.GET_SELECTION = 'GET_SELECTION';
exports.SET_SELECTION = 'SET_SELECTION';
exports.SET_ACTIVE_CELL = 'SET_ACTIVE_CELL';
exports.SET_RECORD_SELECTION = 'SET_RECORD_SELECTION';
exports.CLEAR_SELECTION = 'CLEAR_SELECTION';
exports.CLEAR_SELECTION_BUT_KEEP_CHECKED_RECORD = 'CLEAR_SELECTION_BUT_KEEP_CHECKED_RECORD';
exports.SET_FIELD_RANGES = 'SET_FIELD_RANGES';
exports.SET_FILL_HANDLE_STATUS = 'SET_FILL_HANDLE_STATUS';
exports.SET_ROOT_ID = 'SET_ROOT_ID';
exports.UPDATE_TEAM_LIST = 'UPDATE_TEAM_LIST';
exports.UPDATE_SELECTED_TEAM_INFO = 'UPDATE_SELECTED_TEAM_INFO';
exports.UPDATE_MEMBER_LIST = 'UPDATE_MEMBER_LIST';
exports.UPDATE_MEMBER_INFO = 'UPDATE_MEMBER_INFO';
exports.UPDATE_TEAM_LIST_IN_SPACE = 'UPDATE_TEAM_LIST_IN_SPACE';
exports.UPDATE_INVITED_STATUS = 'UPDATE_INVITED_STATUS';
exports.UPDATE_SELECTED_TEAM_INFO_IN_SPACE = 'UPDATE_SELECTED_TEAM_INFO_IN_SPACE';
exports.UPDATE_RIGHT_CLICK_TEAM_INFO_IN_SPACE = 'UPDATE_RIGHT_CLICK_TEAM_INFO_IN_SPACE';
exports.UPDATE_MEMBER_LIST_IN_SPACE = 'UPDATE_MEMBER_LIST_IN_SPACE';
exports.UPDATE_MEMBER_INFO_IN_SPACE = 'UPDATE_MEMBER_INFO_IN_SPACE';
exports.UPDATE_SELECTED_ROWS_IN_SPACE = 'UPDATE_SELECTED_ROWS_IN_SPACE';
exports.UPDATE_SELECT_MEMBER_LIST_IN_SPACE = 'UPDATE_SELECT_MEMBER_LIST_IN_SPACE';
exports.UPDATE_SUB_TEAM_LIST_IN_SPACE = 'UPDATE_SUB_TEAM_LIST_IN_SPACE';
exports.UPDATE_SELECTED_TEAM_KEYS = 'UPDATE_SELECTED_TEAM_KEYS';
exports.UPDATE_SELECTED_TEAM_ROWS = 'UPDATE_SELECTED_TEAM_ROWS';
exports.UPDATE_SUB_ADMIN_LIST_DATA = 'UPDATE_SUB_ADMIN_LIST_DATA';
exports.UPDATE_PERMISSION_LIST = 'UPDATE_PERMISSION_LIST';
exports.UPDATE_ADDRESS_TREE = 'UPDATE_ADDRESS_TREE';
exports.UPDATE_MEMBER_LIST_PAGE_NO = 'UPDATE_MEMBER_LIST_PAGE_NO';
exports.UPDATE_MEMBER_LIST_TOTAL = 'UPDATE_MEMBER_LIST_TOTAL';
exports.UPDATE_MEMBER_LIST_LOADING = 'UPDATE_MEMBER_LIST_LOADING';
exports.UPDATE_MEMBER_LIST_PAGE = 'UPDATE_MEMBER_LIST_PAGE';
/**
 * update main admin info
 */
exports.UPDATE_MAIN_ADMIN_INFO = 'UPDATE_MAIN_ADMIN_INFO';
exports.SET_RECONNECTING = 'SET_RECONNECTING';
exports.SET_CONNECTED = 'SET_CONNECTED';
exports.UPDATE_DATASHEET_NAME = 'UPDATE_DATASHEET_NAME';
exports.UPDATE_SINGLE_MEMBER_IN_MEMBERLIST = 'UPDATE_SINGLE_MEMBER_IN_MEMBERLIST';
exports.UPDATE_USERINFO_ERR = 'UPDATE_USERINFO_ERR';
exports.ADD_WIZARD_NUMBER = 'ADD_WIZARD_NUMBER';
exports.SET_GRID_VIEW_HOVER_FIELD_ID = 'SET_GRID_VIEW_HOVER_FIELD_ID';
// billing
exports.UPDATE_SUBSCRIPTION = 'UPDATE_SUBSCRIPTION';
// invite
exports.UPDATE_TEAM_TREE_INVITE = 'UPDATE_TEAM_TREE_INVITE';
exports.UPDATE_SUB_TEAM_TREE_INVITE = 'UPDATE_SUB_TEAM_TREE_INVITE';
exports.UPDATE_INVITE_LINK_INFO = 'UPDATE_INVITE_LINK_INFO';
exports.UPDATE_LINK_TOKEN = 'UPDATE_LINK_TOKEN';
exports.UPDATE_MAIL_TOKEN = 'UPDATE_MAIL_TOKEN';
exports.UPDATE_INVITE_ERR_CODE = 'UPDATE_INVITE_ERR_CODE';
/**
 * permission related
 */
exports.UPDATE_SPACE_RESOURCE = 'UPDATE_SPACE_RESOURCE';
exports.SET_PERMISSION_COMMIT_REMIND_STATUS = 'SET_PERMISSION_COMMIT_REMIND_STATUS';
exports.SET_PERMISSION_COMMIT_REMIND_PARAMETER = 'SET_PERMISSION__COMMIT_REMIND_PARAMETER';
exports.SET_NO_PERMISSION_MEMBERS = 'SET_NO_PERMISSION_MEMBERS';
/**
 * invite email
 */
exports.UPDATE_INVITE_EMAIL_INFO = 'UPDATE_INVITE_EMAIL_INFO';
exports.UPDATE_INVITE_ERR = 'UPDATE_INVITE_ERR';
/**
 * notification center
 */
exports.UPDATE_UNREAD_MSG_COUNT = 'UPDATE_UNREAD_MSG_COUNT';
exports.UPDATE_READ_MSG_COUNT = 'UPDATE_READ_MSG_COUNT';
exports.UPDATE_READ_NOTICE_LIST = 'ADD_READ_NOTICE_LIST';
exports.UPDATE_UNREAD_NOTICE_LIST = 'ADD_UNREAD_NOTICE_LIST';
exports.DEL_UNREAD_NOTICE_LIST = 'DEL_UNREAD_NOTICE_LIST';
exports.UPDATE_NEW_NOTICE_LIST_FROM_WS = 'UPDATE_NEW_NOTICE_LIST_FROM_WS';
exports.GET_NEW_MSG_FROM_WS_AND_LOOK = 'GET_NEW_MSG_FROM_WS_AND_LOOK';
/**
 * mouse scrolling position
 */
exports.SCROLL_OFFSET = 'SCROLL_OFFSET';
exports.SET_NODE_NAME = 'SET_NODE_NAME';
/**
 * if the sub-node request failed
 */
exports.SET_NODE_ERROR_TYPE = 'SET_NODE_ERROR_TYPE';
/**
 * update the view
 */
exports.CHANGE_VIEW = 'CHANGE_VIEW';
exports.SET_DEL_NODE_ID = 'SET_DEL_NODE_ID';
exports.DELETE_NODE = 'DELETE_NODE';
exports.MOVE_NODE_TO_FOLDER = 'MOVE_NODE_TO_FOLDER';
exports.CO_LAYER_MOVE_NODE = 'CO_LAYER_MOVE_NODE';
exports.SET_OPT_NODE = 'SET_OPT_NODE';
exports.SET_ERR = 'SET_ERR';
exports.SET_EDIT_NODE_ID = 'SET_EDIT_NODE_ID';
exports.ADD_TASK = 'ADD_TASK';
exports.ADD_NODE_TO_MAP = 'ADD_NODE_TO_MAP';
exports.CLEAR_TASK_QUEUE = 'CLEAR_TASK_QUEUE';
exports.SET_ACTIVE_DST_ID = 'SET_ACTIVE_DST_ID';
exports.SET_IS_COPY_ALL = 'SET_IS_COPY_ALL';
exports.INIT_CATALOG_TREE = 'INIT_CATALOG_TREE';
exports.UPDATE_LINK_LIST = 'UPDATE_LINK_LIST';
// catalog
exports.SET_COPY_NODE_ID = 'SET_COPY_NODE_ID';
exports.SET_ALL_VISIBLE = 'SET_ALL_VISIBLE';
exports.TREE_LOADING = 'TREE_LOADING';
exports.UPDATE_HAS_CHILDREN = 'UPDATE_HAS_CHILDREN';
exports.NODE_MOVE_TO = 'NODE_MOVE_TO';
exports.UPDATE_TREE_NODES_MAP = 'UPDATE_TREE_NODES_MAP';
exports.CLEAR_NODE = 'CLEAR_NODE';
exports.SET_NICKNAME = 'SET_NICKNAME';
exports.UPDATE_USERINFO = 'UPDATE_USERINFO';
exports.REMOVE_NODE_FROM_MAP = 'REMOVE_NODE_FROM_MAP';
exports.REMOVE_NODE_FROM_TREE = 'REMOVE_NODE_FROM_TREE';
exports.UPDATE_IS_PERMISSION = 'UPDATE_IS_PERMISSION';
exports.UPDATE_SOCKET_DATA = 'UPDATE_SOCKET_DATA';
exports.REFRESH_TREE = 'REFRESH_TREE';
exports.SET_ACTIVE_NODE_ERROR = 'SET_ACTIVE_NODE_ERROR';
exports.SET_TREE_ROOT_ID = 'SET_TREE_ROOT_ID';
exports.ADD_NODE_TO_FAVORITE_LIST = 'ADD_NODE_TO_FAVORITE_LIST';
exports.REMOVE_FAVORITE_NODE = 'REMOVE_FAVORITE_NODE';
exports.SET_FAVORITE_EXPANDED_KEYS = 'SET_FAVORITE_EXPANDED_KEYS';
exports.SET_FAVORITE_EDIT_NODE_ID = 'SET_FAVORITE_EDIT_NODE_ID';
exports.SET_FAVORITE_DEL_NODE_ID = 'SET_FAVORITE_DEL_NODE_ID';
exports.SET_FAVORITE_LOADING = 'SET_FAVORITE_LOADING';
exports.DELETE_NODE_FROM_FAVORITE_LIST = 'DELETE_NODE_FROM_FAVORITE_LIST';
exports.MOVE_FAVORITE_NODE = 'MOVE_FAVORITE_NODE';
exports.INIT_FAVORITE_TREE_NODES = 'INIT_FAVORITE_TREE_NODES';
exports.UPDATE_PERMISSION_MODAL_NODE_ID = 'UPDATE_PERMISSION_MODAL_NODE_ID';
exports.UPDATE_SHARE_MODAL_NODE_ID = 'UPDATE_SHARE_MODAL_NODE_ID';
exports.UPDATE_SAVE_AS_TEMPLATE_MODAL_NODE_ID = 'UPDATE_SAVE_AS_TEMPLATE_MODAL_NODE_ID';
exports.UPDATE_IMPORT_MODAL_NODE_ID = 'UPDATE_IMPORT_MODAL_NODE_ID';
exports.SET_LOADED_KEYS = 'SET_LOADED_KEYS';
exports.UPDATE_MOVE_TO_NODE_IDS = 'UPDATE_MOVE_TO_NODE_IDS';
// tabBar
exports.ADD_TAB_ITEM = 'ADD_TAB_ITEM';
exports.REMOVE_TAB_ITEM = 'REMOVE_TAB_ITEM';
exports.MOVE_TAB_ITEM = 'MOVE_TAB_ITEM';
exports.RENAME_TAB_ITEM = 'RENAME_TAB_ITEM';
exports.COPY_TAB_ITEM = 'COPY_TAB_ITEM';
exports.SET_TAB_ITEM_TO_INDEX = 'SET_TAB_ITEM_TO_INDEX';
exports.SET_EDIT_INDEX = 'SET_EDIT_INDEX';
exports.SET_DRAG_NODE_ID = 'SET_DRAG_NODE_ID';
exports.INIT_TAB_BAR_INFO = 'INIT_TAB_BAR_INFO';
exports.INIT_TAB_BAR = 'INIT_TAB_BAR';
exports.SET_EXPANDED_KEYS = 'SET_EXPANDED_KEYS';
exports.TOGGLE_API_PANEL = 'TOGGLE_API_PANEL';
exports.TOGGLE_SIDE_RECORD_PANEL = 'TOGGLE_SIDE_RECORD_PANEL';
exports.TOGGLE_RECORD_PANEL_FULL_SCREEN = 'TOGGLE_RECORD_PANEL_FULL_SCREEN';
// user
exports.SET_USER_ME = 'SET_USER_ME';
exports.SET_IS_LOGIN = 'SET_IS_LOGIN';
exports.SET_HOME_ERR = 'SET_HOME_ERR';
exports.SET_REGISTER_STATUS = 'SET_REGISTER_STATUS';
exports.SET_USED_INVITE_REWARD = 'SET_USED_INVITE_REWARD';
exports.SET_IS_CODE = 'SET_IS_CODE';
exports.SET_IS_CREATE_SPACE = 'SET_IS_CREATE_SPACE';
exports.SET_LOADING = 'SET_LOADING';
exports.SIGN_OUT = 'SIGN_OUT';
exports.SET_USER_AVATAR = 'SET_USER_AVATAR';
exports.SET_USER_AVATAR_COLOR = 'SET_USER_AVATAR_COLOR';
exports.SET_USER_TIMEZONE = 'SET_USER_TIMEZONE';
exports.SET_REQ_STATUS = 'SET_REQ_STATUS';
exports.SET_HTTP_ERR_INFO = 'SET_HTTP_ERR_INFO';
exports.SET_ACTIVE_RECORD_ID = 'SET_ACTIVE_RECORD_ID';
exports.SET_PWD = 'SET_PWD';
/**
 * current row record that can be drag
 */
exports.SET_DRAG_TARGET = 'SET_DRAG_TARGET';
/**
 * set drag move target
 */
exports.SET_DRAG_MOVE = 'SET_DRAG_MOVE';
/**
 * set current mouse hover state
 */
exports.SET_HOVER_RECORD_ID = 'SET_HOVER_RECORD_ID';
exports.UPDATE_SOCIAL_CONFIG = 'UPDATE_SOCIAL_CONFIG';
// page params
exports.SET_PAGE_PARAMS = 'SET_PAGE_PARAMS';
exports.SET_ACTIVE_FIELD_STATE = 'SET_ACTIVE_FIELD_STATE';
exports.SET_TEMP_SELECTION = 'SET_TEMP_SELECTION';
// space 
exports.SET_SPACE_LIST = 'SET_SPACE_LIST';
exports.SET_QUIT_SPACE_ID = 'SET_QUIT_SPACE_ID';
exports.SET_SPACE_ERR = 'SET_SPACE_ERR';
exports.SET_SPACE_LOADING = 'SET_SPACE_LOADING';
exports.SET_SPACE_INFO = 'SET_SPACE_INFO';
exports.SET_SPACE_FEATURES = 'SET_SPACE_FEATURES';
exports.SET_SHORTCUT_KEY_PANEL_VISIBLE = 'SET_SHORTCUT_KEY_PANEL_VISIBLE';
exports.SET_MARKETPLACE_APPS = 'SET_MARKETPLACE_APPS';
exports.SET_ACTIVE_SPACE_ID = 'SET_ACTIVE_SPACE_ID';
exports.SET_ENVS = 'SET_ENVS';
exports.SET_CHANGE_COLUMNS_WIDTH = 'SET_CHANGE_COLUMNS_WIDTH';
/**
 * the collapse of grouping
 */
exports.SET_GROUPING_COLLAPSE = 'SET_GROUPING_COLLAPSE';
/**
 * the collapse of kanban(board view)
 */
exports.SET_KANBAN_GROUPING_EXPAND = 'SET_KANBAN_GROUPING_EXPAND';
/**
 * control kanban view setting menu's collapse
 */
exports.TOGGLE_KANBAN_GROUP_SETTING_VISIBLE = 'TOGGLE_KANBAN_GROUP_SETTING_VISIBLE';
// Gantt View
/**
 * Gantt View left side panel hide/show
 */
exports.TOGGLE_GANTT_GRID = 'TOGGLE_GANTT_GRID';
/**
 * Gantt View left side task panel width
 */
exports.SET_GANTT_GRID_WIDTH = 'SET_GANTT_GRID_WIDTH';
/**
 * Gantt View right side setting panel hide/show
 */
exports.TOGGLE_GANTT_SETTING_PANEL = 'TOGGLE_GANTT_SETTING_PANEL';
/**
 * Gantt View right side setting panel width
 */
exports.SET_GANTT_SETTING_PANEL_WIDTH = 'SET_GANTT_SETTING_PANEL_WIDTH';
/**
 * Gantt View's time unit type
 */
exports.SET_GANTT_DATE_UNIT_TYPE = 'SET_GANTT_DATE_UNIT_TYPE';
// Calendar View
exports.TOGGLE_CALENDAR_GUIDE_STATUS = 'TOGGLE_CALENDAR_GUIDE_STATUS';
exports.TOGGLE_CALENDAR_GRID = 'TOGGLE_CALENDAR_GRID';
exports.SET_CALENDAR_GRID_WIDTH = 'SET_CALENDAR_GRID_WIDTH';
exports.TOGGLE_CALENDAR_SETTING_PANEL = 'TOGGLE_CALENDAR_SETTING_PANEL';
exports.SET_CALENDAR_SETTING_PANEL_WIDTH = 'SET_CALENDAR_SETTING_PANEL_WIDTH';
// OrgChart View
exports.TOGGLE_ORG_CHART_GUIDE_STATUS = 'TOGGLE_ORG_CHART_GUIDE_STATUS';
exports.TOGGLE_ORG_CHART_GRID = 'TOGGLE_ORG_CHART_GRID';
exports.SET_ORG_CHART_GRID_WIDTH = 'SET_ORG_CHART_GRID_WIDTH';
exports.TOGGLE_ORG_CHART_SETTING_PANEL = 'TOGGLE_ORG_CHART_SETTING_PANEL';
exports.SET_ORG_CHART_SETTING_PANEL_WIDTH = 'SET_ORG_CHART_SETTING_PANEL_WIDTH';
/**
 * the state of edit
 */
exports.SET_EDIT_STATUS = 'SET_EDIT_STATUS';
/**
 * write it down, the modified node description
 */
exports.RECORD_NODE_DESC = 'RECORD_NODE_DESC';
exports.SET_SHARE_MEMBER_ID = 'SET_SHARE_MEMBER_ID';
exports.RECORD_NODE_SHARED = 'RECORD_NODE_SHARED';
exports.SET_SCREEN_WIDTH = 'SET_SCREEN_WIDTH';
exports.SET_SIDEBAR_VISIBLE = 'SET_SIDEBAR_VISIBLE';
exports.SET_NODE_ICON = 'SET_NODE_ICON';
exports.CLEAR_FIELD_INFO = 'CLEAR_FIELD_INFO';
// hook
exports.UPDATE_PENDING_GUIDE_WIZARD_IDS = 'UPDATE_PENDING_GUIDE_WIZARD_IDS';
exports.UPDATE_CURRENT_GUIDE_STEP_IDS = 'UPDATE_CURRENT_GUIDE_STEP_IDS';
exports.UPDATE_CONFIG = 'UPDATE_CONFIG';
exports.UPDATE_TRIGGERED_GUIDE_INFO = 'UPDATE_TRIGGERED_GUIDE_INFO';
exports.INIT_HOOKS_DATA = 'INIT_HOOKS_DATA';
exports.UPDATE_CURRENT_GUIDE_WIZARD_ID = 'UPDATE_CURRENT_GUIDE_WIZARD_ID';
exports.CLEAR_WIZARDS_DATA = 'CLEAR_WIZARDS_DATA';
// toolbar
exports.SET_TOOLBAR_MENU_CARD_OPEN = 'SET_TOOLBAR_MENU_CARD_OPEN';
// rightPane
exports.SET_RIGHT_PANE_WIDTH = 'SET_RIGHT_PANE_WIDTH';
exports.UPDATE_UNIT_MAP = 'UPDATE_UNIT_MAP';
exports.UPDATE_USER_MAP = 'UPDATE_USER_MAP';
exports.SET_SEARCH_KEYWORD = 'SET_SEARCH_KEYWORD';
exports.RESET_UNIT_INFO = 'RESET_UNIT_INFO';
exports.SET_SEARCH_RESULT_CURSOR_INDEX = 'SET_SEARCH_RESULT_CURSOR_INDEX';
exports.SET_HOVER_GROUP_PATH = 'SET_HOVER_GROUP_PATH';
exports.SET_HOVER_ROW_OF_ADD_RECORD = 'SET_HOVER_ROW_OF_ADD_RECORD';
exports.TOGGLE_TIME_MACHINE_PANEL = 'TOGGLE_TIME_MACHINE_PANEL';
// Form
exports.FORM_JOT_ACTION = 'FORM_JOT_ACTION';
exports.FORM_REQUEST = 'FORM_REQUEST';
exports.FORM_LOADED = 'FORM_LOADED';
exports.FORM_CONNECTED = 'FORM_CONNECTED';
exports.FORM_PROP_UPDATE = 'FORM_PROP_UPDATE';
exports.UPDATE_FORM = 'UPDATE_FORM';
exports.FORM_ROOM_INFO_SYNC = 'FORM_ROOM_INFO_SYNC';
exports.SET_FORM_CLIENT = 'SET_FORM_CLIENT';
exports.SET_FORM_LOADING = 'SET_FORM_LOADING';
exports.SET_FORM_DATA = 'SET_FORM_DATA';
exports.SET_FORM_SYNCING = 'SET_FORM_SYNCING';
exports.UPDATE_FORM_NAME = 'UPDATE_FORM_NAME';
exports.FORM_DEACTIVATE_COLLABORATOR = 'FORM_DEACTIVATE_COLLABORATOR';
exports.FORM_ACTIVE_COLLABORATOR = 'FORM_ACTIVE_COLLABORATOR';
exports.RESET_FORM = 'RESET_FORM';
exports.SET_RECORD_VISION_MODE = 'SET_RECORD_VISION_MODE';
exports.SET_THEME = 'SET_THEME';
// resource
exports.RESOURCE_CONNECTED = 'RESOURCE_CONNECTED';
exports.CHANGE_RESOURCE_SYNCING_STATUS = 'CHANGE_RESOURCE_SYNCING_STATUS';
exports.UPDATE_FORM_UNIT_MAP = 'UPDATE_FORM_UNIT_MAP';
// globalState
exports.SET_RIGHT_CLICK_INFO = 'SET_RIGHT_CLICK_INFO';
// Widget Panel
exports.TOGGLE_WIDGET_PANEL = 'TOGGLE_WIDGET_PANEL';
exports.CHANGE_WIDGET_PANEL_WIDTH = 'CHANGE_WIDGET_PANEL_WIDTH';
exports.SWITCH_ACTIVE_PANEL = 'SWITCH_ACTIVE_PANEL';
exports.SET_WIDGET_PANEL_LOADING = 'SET_WIDGET_PANEL_LOADING';
// Widget
exports.RECEIVE_INSTALLATIONS_WIDGET = 'RECEIVE_INSTALLATIONS_WIDGET';
exports.RESET_WIDGET = 'RESET_WIDGET';
// Dashboard
exports.SET_DASHBOARD_LOADING = 'SET_DASHBOARD_LOADING';
exports.SET_DASHBOARD_DATA = 'SET_DASHBOARD_DATA';
exports.SET_DASHBOARD_CLIENT = 'SET_DASHBOARD_CLIENT';
exports.RESET_DASHBOARD = 'RESET_DASHBOARD';
exports.UPDATE_DASHBOARD_NAME = 'UPDATE_DASHBOARD_NAME';
exports.UPDATE_DASHBOARD_INFO = 'UPDATE_DASHBOARD_INFO';
// Mirror
exports.SET_MIRROR_LOADING = 'SET_MIRROR_LOADING';
exports.SET_MIRROR_DATA = 'SET_MIRROR_DATA';
exports.SET_MIRROR_CLIENT = 'SET_MIRROR_CLIENT';
exports.RESET_MIRROR = 'RESET_MIRROR';
exports.UPDATE_MIRROR_NAME = 'UPDATE_MIRROR_NAME';
exports.UPDATE_MIRROR_INFO = 'UPDATE_MIRROR_INFO';
exports.MIRROR_JOT_ACTION = 'MIRROR_JOT_ACTION';
// RESOURCE JOT_ACTION
exports.DATASHEET_JOT_ACTION = 'DATASHEET_JOT_ACTION';
exports.DASHBOARD_JOT_ACTION = 'DASHBOARD_JOT_ACTION';
exports.WIDGET_JOT_ACTION = 'WIDGET_JOT_ACTION';
// RESOURCE UPDATE_REVISION
exports.MIRROR_UPDATE_REVISION = 'MIRROR_UPDATE_REVISION';
exports.DATASHEET_UPDATE_REVISION = 'DATASHEET_UPDATE_REVISION';
exports.DASHBOARD_UPDATE_REVISION = 'DASHBOARD_UPDATE_REVISION';
exports.WIDGET_UPDATE_REVISION = 'WIDGET_UPDATE_REVISION';
exports.FORM_UPDATE_REVISION = 'FORM_UPDATE_REVISION';
// RESOURCE CONNECTING
exports.DATASHEET_CONNECTED = 'DATASHEET_CONNECTED';
exports.DASHBOARD_CONNECTED = 'DASHBOARD_CONNECTED';
exports.MIRROR_CONNECTED = 'MIRROR_CONNECTED';
// RESOURCE SYNC
exports.SET_DATASHEET_SYNCING = 'SET_DATASHEET_SYNCING';
exports.SET_DASHBOARD_SYNCING = 'SET_DASHBOARD_SYNCING';
exports.SET_MIRROR_SYNCING = 'SET_MIRROR_SYNCING';
// RESOURCE ROOM_INFO
exports.DATASHEET_ROOM_INFO_SYNC = 'DATASHEET_ROOM_INFO_SYNC';
exports.DASHBOARD_ROOM_INFO_SYNC = 'DASHBOARD_ROOM_INFO_SYNC';
exports.MIRROR_ROOM_INFO_SYNC = 'MIRROR_ROOM_INFO_SYNC';
// RESOURCE ERR CODE
exports.FORM_ERROR_CODE = 'FORM_ERROR_CODE';
exports.DATASHEET_ERROR_CODE = 'DATASHEET_ERROR_CODE';
exports.DASHBOARD_ERROR_CODE = 'DASHBOARD_ERROR_CODE';
exports.MIRROR_ERROR_CODE = 'MIRROR_ERROR_CODE';
// RESOURCE UPDATE
exports.UPDATE_DATASHEET = 'UPDATE_DATASHEET';
exports.UPDATE_DASHBOARD = 'UPDATE_DASHBOARD';
exports.UPDATE_MIRROR = 'UPDATE_MIRROR';
exports.UPDATE_SNAPSHOT = 'UPDATE_SNAPSHOT';
// EXPAND RECORD
exports.EXPAND_STATUS = 'EXPAND_STATUS';
// template
exports.UPDATE_TEMPLATE_CATEGORY = 'UPDATE_TEMPLATE_CATEGORY';
exports.UPDATE_TEMPLATE_DIRECTORY = 'UPDATE_TEMPLATE_DIRECTORY';
// share
exports.SET_SHARE_INFO = 'SET_SHARE_INFO';
// preview
exports.SET_PREVIEW_MODAL_VISIBLE = 'SET_PREVIEW_MODAL_VISIBLE';
// fieldPermissionMap
exports.UPDATE_FIELD_PERMISSION_MAP = 'UPDATE_FIELD_PERMISSION_MAP';
exports.RESET_FIELD_PERMISSION_MAP = 'RESET_FIELD_PERMISSION_MAP';
exports.LOAD_FIELD_PERMISSION_MAP = 'LOAD_FIELD_PERMISSION_MAP';
exports.UPDATE_FIELD_PERMISSION_SETTING = 'UPDATE_FIELD_PERMISSION_SETTING';
// browser worker computed datasheet cached data.
exports.UPDATE_DATASHEET_COMPUTED = 'UPDATE_DATASHEET_COMPUTED';
exports.SET_DATASHEET_COMPUTED = 'SET_DATASHEET_COMPUTED';
exports.UPDATE_DATASHEET_COMPUTED_ROWS = 'UPDATE_DATASHEET_COMPUTED_ROWS';
exports.UPDATE_DATASHEET_COMPUTED_COLUMNS = 'UPDATE_DATASHEET_COMPUTED_COLUMNS';
exports.SET_DATASHEET_COMPUTED_STATUS = 'SET_DATASHEET_COMPUTED_STATUS';
exports.SET_CLOSE_SYNC_VIEW_ID = 'SET_CLOSE_SYNC_VIEW_ID';
/**
 * Labs Features
 */
exports.SET_LABS = 'SET_LABS';
/**
 * Data subscribe(follow) features
 */
exports.SET_SUBSCRIPTIONS = 'SET_SUBSCRIPTIONS';
/**
 * Preview file
 */
exports.SET_PREVIEW_FILE = 'SET_PREVIEW_FILE';
exports.SET_PREVIEW_FILE_CELL_ACTIVE = 'SET_PREVIEW_FILE_CELL_ACTIVE';
exports.SET_PREVIEW_DEFAULT_ACTIVE = 'SET_PREVIEW_DEFAULT_ACTIVE';
/**
 * View derivation
 */
exports.SET_VIEW_DERIVATION = 'SET_VIEW_DERIVATION'; // Update view derivation
exports.DELETE_VIEW_DERIVATION = 'DELETE_VIEW_DERIVATION'; // Delete
exports.PATCH_VIEW_DERIVATION = 'PATCH_VIEW_DERIVATION'; // Update part of the view derivation.
exports.TRIGGER_VIEW_DERIVATION_COMPUTED = 'TRIGGER_VIEW_DERIVATION_COMPUTED'; // Calculating view-derived data triggers action


/***/ }),

/***/ 12690:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.DispatchToStore = exports.PREVIEW_DATASHEET_ID = exports.DEFAULT_FIELD_PERMISSION = exports.DateUnitType = exports.WhyRecordMoveType = exports.RecordMoveType = exports.SearchResultType = exports.UN_GROUP = exports.FieldOperateType = exports.QrAction = exports.BindAccount = exports.OrgChartStyleKeyType = exports.CalendarStyleKeyType = exports.GanttStyleKeyType = exports.GanttColorType = exports.CalendarColorType = exports.KanbanStyleKey = exports.GalleryStyleKeyType = exports.CellType = exports.PageType = exports.LayoutType = exports.MIN_COLUMN_WIDTH = exports.DEFAULT_COLUMN_WIDTH = exports.GanttRowHeight = exports.RowHeight = exports.RowHeightLevel = exports.ViewType = exports.DropDirectionType = exports.GuideWizardModule = exports.GuideUiTypeConstant = exports.ScreenWidth = exports.ToolBarMenuCardOpenState = exports.NotSupportFieldInstance = exports.DEFAULT_READ_ONLY_PERMISSION = exports.DEFAULT_EDITOR_PERMISSION = exports.DEFAULT_MANAGER_PERMISSION = exports.DEFAULT_PERMISSION = void 0;
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
exports.DEFAULT_PERMISSION = {
    allowEditConfigurable: false,
    allowSaveConfigurable: false,
    childCreatable: false,
    copyable: false,
    descriptionEditable: false,
    editable: false,
    iconEditable: false,
    importable: false,
    manageable: false,
    movable: false,
    nodeAssignable: false,
    readable: false,
    removable: false,
    renamable: false,
    sharable: false,
    templateCreatable: false,
    exportable: false,
    viewCreatable: false,
    viewRenamable: false,
    viewRemovable: false,
    viewMovable: false,
    viewExportable: false,
    viewFilterable: false,
    columnSortable: false,
    columnHideable: false,
    fieldSortable: false,
    fieldGroupable: false,
    rowHighEditable: false,
    columnWidthEditable: false,
    columnCountEditable: false,
    fieldCreatable: false,
    fieldRenamable: false,
    fieldPropertyEditable: false,
    fieldRemovable: false,
    rowCreatable: false,
    rowRemovable: false,
    cellEditable: false,
    rowSortable: false,
    fieldPermissionManageable: false,
    viewLayoutEditable: false,
    viewStyleEditable: false,
    viewKeyFieldEditable: false,
    viewColorOptionEditable: false,
    viewManualSaveManageable: false,
    viewOptionSaveEditable: false
};
/**
 * manageable manager's permissions
 */
exports.DEFAULT_MANAGER_PERMISSION = {
    allowEditConfigurable: true,
    allowSaveConfigurable: true,
    childCreatable: true,
    copyable: true,
    descriptionEditable: true,
    editable: true,
    iconEditable: true,
    exportable: true,
    importable: true,
    manageable: true,
    movable: true,
    nodeAssignable: true,
    readable: true,
    removable: true,
    renamable: true,
    sharable: true,
    templateCreatable: true,
    viewCreatable: true,
    viewRenamable: true,
    viewRemovable: true,
    viewMovable: true,
    viewExportable: true,
    viewFilterable: true,
    columnSortable: true,
    columnHideable: true,
    rowSortable: true,
    fieldSortable: true,
    fieldGroupable: true,
    rowHighEditable: true,
    columnWidthEditable: true,
    columnCountEditable: true,
    fieldCreatable: true,
    fieldRenamable: true,
    fieldPropertyEditable: true,
    fieldRemovable: true,
    rowCreatable: true,
    rowRemovable: true,
    cellEditable: true,
    fieldPermissionManageable: true,
    viewLayoutEditable: true,
    viewStyleEditable: true,
    viewKeyFieldEditable: true,
    viewColorOptionEditable: true,
    viewManualSaveManageable: true,
    viewOptionSaveEditable: true
};
/**
 * editor's permissions
 */
exports.DEFAULT_EDITOR_PERMISSION = {
    allowEditConfigurable: false,
    allowSaveConfigurable: false,
    childCreatable: false,
    copyable: false,
    descriptionEditable: false,
    editable: true,
    iconEditable: false,
    exportable: false,
    importable: false,
    manageable: false,
    movable: false,
    nodeAssignable: false,
    readable: true,
    removable: false,
    renamable: false,
    sharable: true,
    templateCreatable: false,
    viewCreatable: true,
    viewRenamable: true,
    viewRemovable: true,
    viewMovable: true,
    viewExportable: false,
    viewFilterable: true,
    columnSortable: true,
    columnHideable: true,
    rowSortable: true,
    fieldSortable: true,
    fieldGroupable: true,
    rowHighEditable: true,
    columnWidthEditable: true,
    columnCountEditable: true,
    fieldCreatable: false,
    fieldRenamable: false,
    fieldPropertyEditable: false,
    fieldRemovable: false,
    rowCreatable: true,
    rowRemovable: true,
    cellEditable: true,
    fieldPermissionManageable: false,
    viewLayoutEditable: true,
    viewStyleEditable: true,
    viewKeyFieldEditable: true,
    viewColorOptionEditable: true,
    viewManualSaveManageable: false,
    viewOptionSaveEditable: true
};
/**
 * default readonly permissions
 */
exports.DEFAULT_READ_ONLY_PERMISSION = {
    allowEditConfigurable: false,
    allowSaveConfigurable: false,
    childCreatable: false,
    copyable: false,
    descriptionEditable: false,
    exportable: false,
    editable: false,
    iconEditable: false,
    importable: false,
    manageable: false,
    movable: false,
    nodeAssignable: false,
    readable: true,
    removable: false,
    renamable: false,
    sharable: false,
    templateCreatable: false,
    viewCreatable: false,
    viewRenamable: false,
    viewRemovable: false,
    viewMovable: false,
    viewExportable: false,
    viewFilterable: false,
    columnSortable: false,
    columnHideable: false,
    fieldSortable: false,
    fieldGroupable: false,
    rowHighEditable: false,
    columnWidthEditable: false,
    columnCountEditable: false,
    fieldCreatable: false,
    fieldRenamable: false,
    fieldPropertyEditable: false,
    fieldRemovable: false,
    rowCreatable: false,
    rowRemovable: false,
    cellEditable: false,
    rowSortable: false,
    fieldPermissionManageable: false,
    viewLayoutEditable: false,
    viewStyleEditable: false,
    viewKeyFieldEditable: false,
    viewColorOptionEditable: false,
    viewManualSaveManageable: false,
    viewOptionSaveEditable: false
};
exports.NotSupportFieldInstance = {
    id: 'fldError',
    name: (0, i18n_1.t)(i18n_1.Strings.error_wrong_data_in_current_column),
    type: types_1.FieldType.NotSupport,
    property: null,
};
var ToolBarMenuCardOpenState;
(function (ToolBarMenuCardOpenState) {
    ToolBarMenuCardOpenState["None"] = "None";
    ToolBarMenuCardOpenState["FieldHidden"] = "FieldHidden";
    ToolBarMenuCardOpenState["ExclusiveFieldHidden"] = "ExclusiveFieldHidden";
    ToolBarMenuCardOpenState["Filter"] = "Filter";
    ToolBarMenuCardOpenState["Group"] = "Group";
    ToolBarMenuCardOpenState["Sort"] = "Sort";
    ToolBarMenuCardOpenState["RowHeight"] = "RowHeight";
    ToolBarMenuCardOpenState["GallerySetting"] = "GallerySetting";
    ToolBarMenuCardOpenState["OrgChartSetting"] = "OrgChartSetting";
    // special: this is a component in the toolbar, just clean for "display" component, so place it here to control.by @mayne
    ToolBarMenuCardOpenState["ViewSwitcher"] = "ViewSwitcher";
    ToolBarMenuCardOpenState["KanbanFieldHidden"] = "KanbanFieldHidden";
    ToolBarMenuCardOpenState["Share"] = "Share";
})(ToolBarMenuCardOpenState = exports.ToolBarMenuCardOpenState || (exports.ToolBarMenuCardOpenState = {}));
exports.ScreenWidth = {
    xs: 0,
    sm: 576,
    md: 768,
    lg: 992,
    xl: 1200,
    xxl: 1440,
    xxxl: 1600,
};
var GuideUiTypeConstant;
(function (GuideUiTypeConstant) {
    GuideUiTypeConstant["Modal"] = "modal";
    GuideUiTypeConstant["Slideout"] = "slideout";
    GuideUiTypeConstant["Hotspot"] = "hotspot";
    GuideUiTypeConstant["Popover"] = "popover";
    GuideUiTypeConstant["Notice"] = "notice";
    GuideUiTypeConstant["Questionnaire"] = "questionnaire";
    GuideUiTypeConstant["Breath"] = "breath";
    GuideUiTypeConstant["PrivacyModal"] = "privacyModal";
})(GuideUiTypeConstant = exports.GuideUiTypeConstant || (exports.GuideUiTypeConstant = {}));
var GuideWizardModule;
(function (GuideWizardModule) {
    GuideWizardModule["Notice"] = "notice";
    GuideWizardModule["Guide"] = "guide";
})(GuideWizardModule = exports.GuideWizardModule || (exports.GuideWizardModule = {}));
var DropDirectionType;
(function (DropDirectionType) {
    DropDirectionType["BEFORE"] = "before";
    DropDirectionType["AFTER"] = "after";
    DropDirectionType["NONE"] = "";
})(DropDirectionType = exports.DropDirectionType || (exports.DropDirectionType = {}));
var ViewType;
(function (ViewType) {
    ViewType[ViewType["NotSupport"] = 0] = "NotSupport";
    ViewType[ViewType["Grid"] = 1] = "Grid";
    ViewType[ViewType["Kanban"] = 2] = "Kanban";
    ViewType[ViewType["Gallery"] = 3] = "Gallery";
    ViewType[ViewType["Form"] = 4] = "Form";
    ViewType[ViewType["Calendar"] = 5] = "Calendar";
    ViewType[ViewType["Gantt"] = 6] = "Gantt";
    ViewType[ViewType["OrgChart"] = 7] = "OrgChart";
})(ViewType = exports.ViewType || (exports.ViewType = {}));
var RowHeightLevel;
(function (RowHeightLevel) {
    RowHeightLevel[RowHeightLevel["Short"] = 1] = "Short";
    RowHeightLevel[RowHeightLevel["Medium"] = 2] = "Medium";
    RowHeightLevel[RowHeightLevel["Tall"] = 3] = "Tall";
    RowHeightLevel[RowHeightLevel["ExtraTall"] = 4] = "ExtraTall";
})(RowHeightLevel = exports.RowHeightLevel || (exports.RowHeightLevel = {}));
exports.RowHeight = {
    Short: 32,
    Medium: 57,
    Tall: 104,
    ExtraTall: 152,
};
exports.GanttRowHeight = {
    Short: 32,
    Medium: 40,
    Tall: 56,
};
exports.DEFAULT_COLUMN_WIDTH = 200;
exports.MIN_COLUMN_WIDTH = 80;
var LayoutType;
(function (LayoutType) {
    LayoutType["Flex"] = "flex";
    LayoutType["List"] = "list";
})(LayoutType = exports.LayoutType || (exports.LayoutType = {}));
var PageType;
(function (PageType) {
    PageType[PageType["Datasheet"] = 0] = "Datasheet";
    PageType[PageType["DataSpace"] = 1] = "DataSpace";
})(PageType = exports.PageType || (exports.PageType = {}));
var CellType;
(function (CellType) {
    CellType["GroupTab"] = "GroupTab";
    CellType["Add"] = "AddRecord";
    CellType["Blank"] = "Blank";
    CellType["Record"] = "Record";
})(CellType = exports.CellType || (exports.CellType = {}));
var GalleryStyleKeyType;
(function (GalleryStyleKeyType) {
    GalleryStyleKeyType["LayoutType"] = "layoutType";
    GalleryStyleKeyType["CardCount"] = "cardCount";
    GalleryStyleKeyType["CoverFieldId"] = "coverFieldId";
    GalleryStyleKeyType["IsCoverFit"] = "isCoverFit";
    GalleryStyleKeyType["IsAutoLayout"] = "isAutoLayout";
    GalleryStyleKeyType["IsColNameVisible"] = "isColNameVisible";
})(GalleryStyleKeyType = exports.GalleryStyleKeyType || (exports.GalleryStyleKeyType = {}));
var KanbanStyleKey;
(function (KanbanStyleKey) {
    KanbanStyleKey["CoverFieldId"] = "coverFieldId";
    KanbanStyleKey["IsCoverFit"] = "isCoverFit";
    KanbanStyleKey["KanbanFieldId"] = "kanbanFieldId";
    KanbanStyleKey["IsColNameVisible"] = "isColNameVisible";
    KanbanStyleKey["HiddenGroupMap"] = "hiddenGroupMap";
})(KanbanStyleKey = exports.KanbanStyleKey || (exports.KanbanStyleKey = {}));
var CalendarColorType;
(function (CalendarColorType) {
    CalendarColorType["Custom"] = "Custom";
})(CalendarColorType = exports.CalendarColorType || (exports.CalendarColorType = {}));
var GanttColorType;
(function (GanttColorType) {
    GanttColorType["Custom"] = "Custom";
    GanttColorType["SingleSelect"] = "SingleSelect";
})(GanttColorType = exports.GanttColorType || (exports.GanttColorType = {}));
var GanttStyleKeyType;
(function (GanttStyleKeyType) {
    GanttStyleKeyType["ColorOption"] = "colorOption";
    GanttStyleKeyType["StartFieldId"] = "startFieldId";
    GanttStyleKeyType["EndFieldId"] = "endFieldId";
    GanttStyleKeyType["WorkDays"] = "workDays";
    GanttStyleKeyType["OnlyCalcWorkDay"] = "onlyCalcWorkDay";
    GanttStyleKeyType["LinkFieldId"] = "linkFieldId";
    GanttStyleKeyType["AutoTaskLayout"] = "autoTaskLayout";
})(GanttStyleKeyType = exports.GanttStyleKeyType || (exports.GanttStyleKeyType = {}));
var CalendarStyleKeyType;
(function (CalendarStyleKeyType) {
    CalendarStyleKeyType["ColorOption"] = "colorOption";
    CalendarStyleKeyType["StartFieldId"] = "startFieldId";
    CalendarStyleKeyType["EndFieldId"] = "endFieldId";
    CalendarStyleKeyType["IsColNameVisible"] = "isColNameVisible";
})(CalendarStyleKeyType = exports.CalendarStyleKeyType || (exports.CalendarStyleKeyType = {}));
var OrgChartStyleKeyType;
(function (OrgChartStyleKeyType) {
    OrgChartStyleKeyType["CoverFieldId"] = "coverFieldId";
    OrgChartStyleKeyType["IsCoverFit"] = "isCoverFit";
    OrgChartStyleKeyType["IsColNameVisible"] = "isColNameVisible";
    OrgChartStyleKeyType["LinkFieldId"] = "linkFieldId";
    OrgChartStyleKeyType["Horizontal"] = "horizontal";
})(OrgChartStyleKeyType = exports.OrgChartStyleKeyType || (exports.OrgChartStyleKeyType = {}));
var BindAccount;
(function (BindAccount) {
    BindAccount[BindAccount["DINGDING"] = 0] = "DINGDING";
    BindAccount[BindAccount["WECHAT"] = 1] = "WECHAT";
    BindAccount[BindAccount["QQ"] = 2] = "QQ";
    BindAccount[BindAccount["WECOM"] = 3] = "WECOM";
})(BindAccount = exports.BindAccount || (exports.BindAccount = {}));
var QrAction;
(function (QrAction) {
    QrAction[QrAction["LOGIN"] = 0] = "LOGIN";
    QrAction[QrAction["BIND"] = 1] = "BIND";
    QrAction[QrAction["TO_WORK_SPACE"] = 2] = "TO_WORK_SPACE";
})(QrAction = exports.QrAction || (exports.QrAction = {}));
var FieldOperateType;
(function (FieldOperateType) {
    FieldOperateType[FieldOperateType["FieldSetting"] = 0] = "FieldSetting";
    FieldOperateType[FieldOperateType["FieldDesc"] = 1] = "FieldDesc";
})(FieldOperateType = exports.FieldOperateType || (exports.FieldOperateType = {}));
exports.UN_GROUP = 'UN_GROUP';
var SearchResultType;
(function (SearchResultType) {
    SearchResultType["Cell"] = "Cell";
    SearchResultType["Record"] = "Record";
})(SearchResultType = exports.SearchResultType || (exports.SearchResultType = {}));
var RecordMoveType;
(function (RecordMoveType) {
    RecordMoveType["OutOfView"] = "OutOfView";
    RecordMoveType["WillMove"] = "WillMove";
    RecordMoveType["NotMove"] = "NotMove";
    RecordMoveType["Deleted"] = "Deleted";
})(RecordMoveType = exports.RecordMoveType || (exports.RecordMoveType = {}));
var WhyRecordMoveType;
(function (WhyRecordMoveType) {
    WhyRecordMoveType["UpdateRecord"] = "UpdateRecord";
    WhyRecordMoveType["NewRecord"] = "NewRecord";
})(WhyRecordMoveType = exports.WhyRecordMoveType || (exports.WhyRecordMoveType = {}));
var DateUnitType;
(function (DateUnitType) {
    DateUnitType["Week"] = "Week";
    DateUnitType["Month"] = "Month";
    DateUnitType["Quarter"] = "Quarter";
    DateUnitType["Year"] = "Year";
})(DateUnitType = exports.DateUnitType || (exports.DateUnitType = {}));
exports.DEFAULT_FIELD_PERMISSION = {
    editable: false,
    readable: false,
};
exports.PREVIEW_DATASHEET_ID = 'previewDatasheet';
var DispatchToStore;
(function (DispatchToStore) {
    DispatchToStore["Local"] = "local";
    DispatchToStore["Remote"] = "remote";
    DispatchToStore["All"] = "all";
})(DispatchToStore = exports.DispatchToStore || (exports.DispatchToStore = {}));


/***/ }),

/***/ 87944:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.switchNodeAssignableStatus = exports.getSpaceFeatures = exports.updateWorkbenchSetting = exports.updateMemberSetting = exports.deleteSubAdmin = exports.updateRole = exports.getSubUnitList = exports.getAllVisibleStatus = exports.updateAllVisible = exports.searchUnit = exports.editSubMember = exports.addSubMember = exports.searchMember = exports.subAdminPermission = exports.getlistRole = exports.changeMainAdmin = exports.getMainAdminInfo = exports.removeSpaceRedPoint = exports.getSpaceResource = exports.getSpaceNodeNumber = exports.searchSpaceSize = exports.recoverSpace = exports.spaceInfo = exports.updateSpace = exports.deleteSpaceNow = exports.deleteSpace = exports.switchSpace = exports.importFile = exports.allowVisiableSetting = exports.searchNode = exports.findNode = exports.quitSpace = exports.spaceList = exports.positionNode = exports.keepTabbar = exports.getDstId = exports.copyNode = exports.editNode = exports.getSpecifyNodeList = exports.delNode = exports.addNode = exports.nodeMove = exports.createSpace = exports.getRelateNodeByDstId = exports.getNodeListByParentId = exports.getNodeInfo = exports.getParents = exports.getChildNodeList = exports.getRootNode = exports.getNodeTree = void 0;
exports.checkoutOrder = exports.nodeShowcase = exports.updateShare = exports.getShareSettings = exports.regenerateShareLink = exports.disableShare = exports.storeShareData = exports.getEmbedLinkInfo = exports.readShareInfo = exports.changeNodeDesc = exports.getCapacityRewardList = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const config_1 = __webpack_require__(77511);
const urlcat_1 = __importDefault(__webpack_require__(83764));
const Url = __importStar(__webpack_require__(28215));
const CancelToken = axios_1.default.CancelToken;
/**
 *
 * Query the node tree of the workbench, limit the query to two layers
 *
 * @param depth
 * @returns
 */
function getNodeTree(depth) {
    return axios_1.default.get(Url.GET_NODE_TREE, {
        params: {
            depth,
        },
    });
}
exports.getNodeTree = getNodeTree;
/**
 *
 * Get and query the root node
 *
 * @returns
 */
function getRootNode() {
    return axios_1.default.get(Url.GET_ROOT_NODE);
}
exports.getRootNode = getRootNode;
/**
 *
 * Query the child node list
 *
 * @param nodeId
 * @param nodeType
 * @returns
 */
function getChildNodeList(nodeId, nodeType) {
    return axios_1.default.get(Url.GET_NODE_LIST, {
        params: {
            nodeId,
            nodeType
        },
    });
}
exports.getChildNodeList = getChildNodeList;
/**
 * Get Node's Parent Node List
 *
 * @param nodeId
 * @returns
 */
function getParents(nodeId) {
    return axios_1.default.get(Url.GET_PARENTS, {
        params: {
            nodeId,
        },
    });
}
exports.getParents = getParents;
/**
 *
 * Get Node Info
 *
 * @param nodeIds
 * @returns
 */
function getNodeInfo(nodeIds) {
    return axios_1.default.get(Url.GET_NODE_INFO, {
        params: {
            nodeIds,
        },
    });
}
exports.getNodeInfo = getNodeInfo;
/**
 * query the child nodes with the parent node id,
 *
 * @param parentId parent node id
 */
function getNodeListByParentId(parentId) {
    return axios_1.default.get(Url.SELECTBYPARENTID + parentId);
}
exports.getNodeListByParentId = getNodeListByParentId;
/**
 *
 * Get relevant nodes(form/mirror) of the node
 *
 * @param dstId datasheet id
 * @param viewId view id. if empty, query all views' relevant nodes.
 * @param type   relevant nodes type. if empty, query all types.
 */
function getRelateNodeByDstId(dstId, viewId, type) {
    return axios_1.default.get(Url.DATASHEET_FOREIGN_FORM, {
        params: {
            nodeId: dstId,
            viewId,
            type,
        },
    });
}
exports.getRelateNodeByDstId = getRelateNodeByDstId;
/**
 * Create Space
 *
 * @param name Space Name
 */
function createSpace(name) {
    return axios_1.default.post(Url.CREATE_SPACE, {
        name,
    });
}
exports.createSpace = createSpace;
/**
 * Move Nodes
 *
 * @param nodeId the node id that will be moved.
 * @param parentId the parent node id that will be placed here.
 * @param preNodeId
 */
function nodeMove(nodeId, parentId, preNodeId) {
    return axios_1.default.post(Url.MOVE_NODE, {
        nodeId,
        parentId,
        preNodeId,
    });
}
exports.nodeMove = nodeMove;
/**
 * Add Node
 */
function addNode(nodeInfo) {
    return axios_1.default.post(Url.ADD_NODE, nodeInfo);
}
exports.addNode = addNode;
/**
 * Delete Node
 * @param nodeId Node Id
 */
function delNode(nodeId) {
    return axios_1.default.delete(Url.DELETE_NODE + nodeId);
}
exports.delNode = delNode;
function getSpecifyNodeList(nodeType) {
    return axios_1.default.get(Url.GET_SPECIFY_NODE_LIST, {
        params: {
            type: nodeType,
        },
    });
}
exports.getSpecifyNodeList = getSpecifyNodeList;
/**
 * Edit Node
 *
 * @param nodeId Node ID
 * @param data
 */
function editNode(nodeId, data) {
    return axios_1.default.post(Url.EDIT_NODE + nodeId, data);
}
exports.editNode = editNode;
/**
 * duplicate the node
 *
 */
function copyNode(nodeId, copyAll) {
    return axios_1.default.post(Url.COPY_NODE, {
        nodeId,
        data: copyAll,
    });
}
exports.copyNode = copyNode;
/**
 * Get Datasheet ID by Node ID
 *
 * @param nodeId Node ID
 */
function getDstId(nodeId) {
    return axios_1.default.get(Url.GET_DST_ID + nodeId);
}
exports.getDstId = getDstId;
/**
 * Save the active datasheet tab
 */
function keepTabbar(data) {
    return axios_1.default.post(Url.KEEP_TAB_BAR, data);
}
exports.keepTabbar = keepTabbar;
/**
 * Positioning the node, where it is.
 */
function positionNode(nodeId) {
    return axios_1.default.get(Url.POSITION_NODE + nodeId);
}
exports.positionNode = positionNode;
/**
 * Get space list
 */
function spaceList(onlyManageable) {
    return axios_1.default.get(Url.SPACE_LIST, { params: { onlyManageable } });
}
exports.spaceList = spaceList;
/**
 * Quit the Space
 * @param spaceId
 */
function quitSpace(spaceId) {
    return axios_1.default.post(`${Url.QUIT_SPACE}${spaceId}`);
}
exports.quitSpace = quitSpace;
/**
 * Find nodes
 *
 * @param keyword the keyword to search
 */
function findNode(keyword, ctx) {
    return axios_1.default.get(Url.SEARCH_NODE, {
        params: {
            keyword,
        },
        cancelToken: new CancelToken(ctx),
    });
}
exports.findNode = findNode;
/**
 * Search nodes
 *
 * @param spaceId
 * @param keyword
 * @returns
 */
function searchNode(spaceId, keyword) {
    return axios_1.default.get(Url.SEARCH_NODE, {
        params: {
            spaceId,
            keyword,
        },
    });
}
exports.searchNode = searchNode;
/**
 * Get the setting of "whether the space is visible to all members"
 * @param nodeId current node id
 */
function allowVisiableSetting(nodeId) {
    return axios_1.default.get(Url.ALLOW_VISIBLE_SETTING, {
        params: {
            nodeId,
        },
    });
}
exports.allowVisiableSetting = allowVisiableSetting;
/**
 *
 * import datasheet by file
 *
 * @param formData
 * @param onUploadProgress
 * @param ctx
 * @returns
 */
function importFile(formData, onUploadProgress, ctx) {
    return axios_1.default.post(Url.IMPORT_FILE, formData, {
        headers: { 'Content-Type': 'multipart/form-data' },
        cancelToken: new CancelToken(ctx),
        onUploadProgress,
    });
}
exports.importFile = importFile;
/**
 * Switch Space
 * @param spaceId
 * @returns
 */
function switchSpace(spaceId) {
    return axios_1.default.post((0, urlcat_1.default)(Url.SWITCH_SPACE, { spaceId }));
}
exports.switchSpace = switchSpace;
/**
 * Delete Space
 *
 * @param spaceId
 * @param code
 * @param type
 * @returns
 */
function deleteSpace(spaceId, code, type) {
    return axios_1.default.delete((0, urlcat_1.default)(Url.DELETE_SPACE, { spaceId }), {
        data: {
            code,
            type,
        },
    });
}
exports.deleteSpace = deleteSpace;
/**
 *
 * Delete the space immediately
 *
 * @returns
 */
function deleteSpaceNow() {
    return axios_1.default.delete(Url.DELETE_SPACE_NOW);
}
exports.deleteSpaceNow = deleteSpaceNow;
/**
 * Update/Edit the space
 *
 * @param name
 * @param logo
 */
function updateSpace(name, logo) {
    return axios_1.default.post(Url.UPDATE_SPACE, {
        name,
        logo,
    });
}
exports.updateSpace = updateSpace;
/**
 * Get space info
 *
 * @param spaceId
 * @returns
 */
function spaceInfo(spaceId) {
    return axios_1.default.get(Url.SPACE_INFO + spaceId);
}
exports.spaceInfo = spaceInfo;
/**
 * Recover space
 *
 * @param spaceId
 * @returns
 */
function recoverSpace(spaceId) {
    return axios_1.default.post(Url.RECOVER_SPACE + spaceId);
}
exports.recoverSpace = recoverSpace;
/**
 * Search space size
 * @returns
 */
function searchSpaceSize() {
    return axios_1.default.get(Url.SPACE_MEMORY);
}
exports.searchSpaceSize = searchSpaceSize;
/**
 * Get the number of nodes(folders and files) in the specified space
 * @param spaceId
 */
function getSpaceNodeNumber() {
    return axios_1.default.get(Url.NODE_NUMBER);
}
exports.getSpaceNodeNumber = getSpaceNodeNumber;
/**
 * Get the permissions resources of the specified space
 * @param spaceId
 */
function getSpaceResource() {
    return axios_1.default.get(Url.SPACE_RESOURCE);
}
exports.getSpaceResource = getSpaceResource;
/**
 * clean the red dot of space
 * @param spaceId
 */
function removeSpaceRedPoint(spaceId) {
    return axios_1.default.post(`${Url.REMOVE_RED_POINT}${spaceId}`);
}
exports.removeSpaceRedPoint = removeSpaceRedPoint;
/**
 * get main admin info
 */
function getMainAdminInfo() {
    return axios_1.default.get(Url.MAIN_ADMIN_INFO);
}
exports.getMainAdminInfo = getMainAdminInfo;
/**
 * change main admin
 */
function changeMainAdmin(memberId) {
    return axios_1.default.post(Url.CHANGE_MAIN_ADMIN, { memberId });
}
exports.changeMainAdmin = changeMainAdmin;
/**
 * query the list of admins
 *
 * @param pageObjectParams pagination params
 */
function getlistRole(pageObjectParams) {
    return axios_1.default.get(Url.LIST_ROLE, {
        params: {
            pageObjectParams,
        },
    });
}
exports.getlistRole = getlistRole;
/**
 * get sub-admin's permission
 */
function subAdminPermission(memberId) {
    return axios_1.default.get(Url.SUB_ADMIN_PERMISSION, {
        params: {
            memberId,
        },
    });
}
exports.subAdminPermission = subAdminPermission;
/**
 * fuzzy search members
 *
 * @param keyword the keyword to search
 */
function searchMember(keyword, filter) {
    return axios_1.default.get(Url.MEMBER_SEARCH, {
        params: {
            keyword,
            filter,
        },
    });
}
exports.searchMember = searchMember;
/**
 * add sub-admin
 *
 * @param memberId member id
 * @param resourceCodes operation resources set, no orders, auto verify
 */
function addSubMember(memberIds, resourceCodes) {
    return axios_1.default.post(Url.ADD_SUB_ADMIN, {
        memberIds,
        resourceCodes,
    });
}
exports.addSubMember = addSubMember;
/**
 * edit sub-admin
 *
 * @param memberId member id
 * @param resourceCodes operation resources set, no orders, auto verify
 */
function editSubMember(id, memberId, resourceCodes) {
    return axios_1.default.post(Url.EDIT_SUB_ADMIN, {
        id,
        memberId,
        resourceCodes,
    });
}
exports.editSubMember = editSubMember;
/**
 * search organization resource
 *
 * @param keyword keywords(tag/team)
 */
function searchUnit(keyword, linkId) {
    return axios_1.default.get(Url.SEARCH_UNIT, {
        params: {
            keyword,
            linkId,
        },
    });
}
exports.searchUnit = searchUnit;
/**
 * update the all visibility of the current space
 */
function updateAllVisible() {
    return axios_1.default.post(Url.UPDATE_ALL_VISIBLE);
}
exports.updateAllVisible = updateAllVisible;
/**
 * get all visible status of the current space
 */
function getAllVisibleStatus() {
    return axios_1.default.get(Url.GET_ALL_VISIBLE);
}
exports.getAllVisibleStatus = getAllVisibleStatus;
/**
 * get child teams and members
 * @param teamId Team ID
 */
function getSubUnitList(teamId, linkId) {
    return axios_1.default.get(Url.GET_SUB_UNIT_LIST, {
        params: {
            teamId,
            linkId,
        },
    });
}
exports.getSubUnitList = getSubUnitList;
/**
 * Update(edit) role
 *
 * @param data data info
 */
function updateRole(data) {
    return axios_1.default.post(Url.UPDATE_ROLE, data);
}
exports.updateRole = updateRole;
/**
 * delete sub-admin
 */
function deleteSubAdmin(memberId) {
    return axios_1.default.delete(Url.DELETE_SUB_ADMIN + memberId);
}
exports.deleteSubAdmin = deleteSubAdmin;
/**
 * update member setting
 */
function updateMemberSetting(data) {
    return axios_1.default.post(Url.UPDATE_MEMBER_SETTING, Object.assign({}, data));
}
exports.updateMemberSetting = updateMemberSetting;
/**
 * update workbench setting
 */
function updateWorkbenchSetting(data) {
    return axios_1.default.post(Url.UPDATE_WORKBENCH_SETTING, Object.assign({}, data));
}
exports.updateWorkbenchSetting = updateWorkbenchSetting;
/**
 * get space features
 */
function getSpaceFeatures() {
    return axios_1.default.get(Url.GET_SPACE_FEATURES);
}
exports.getSpaceFeatures = getSpaceFeatures;
/**
 * switch the status of the node role assignment
 */
function switchNodeAssignableStatus() {
    return axios_1.default.post(Url.SWITCH_NODEROLE_ASSIGNALE);
}
exports.switchNodeAssignableStatus = switchNodeAssignableStatus;
/**
 * Get Space Reward infos
 *
 * @param isExpire
 * @param pageNo
 * @returns
 */
function getCapacityRewardList(isExpire, pageNo) {
    const pageObjectParams = JSON.stringify({
        pageSize: config_1.ConfigConstant.CAPACITY_REWARD_LIST_PAGE_SIZE,
        order: 'createdAt',
        sort: config_1.ConfigConstant.SORT_DESC,
        pageNo,
    });
    return axios_1.default.get(Url.CAPACITY_REWARD_LIST, {
        params: {
            pageObjectParams,
            isExpire,
        },
    });
}
exports.getCapacityRewardList = getCapacityRewardList;
/**
 * change node's description
 *
 * @param nodeId
 * @param desc
 * @returns
 */
function changeNodeDesc(nodeId, desc) {
    return axios_1.default.post(Url.CHANGE_NODE_DESC, {
        nodeId,
        description: desc,
    });
}
exports.changeNodeDesc = changeNodeDesc;
function readShareInfo(shareId, headers) {
    return axios_1.default.get(Url.READ_SHARE_INFO + `/${shareId}`, {
        headers,
    });
}
exports.readShareInfo = readShareInfo;
/**
 * get embed Info
 */
const baseURL = "/nest/v1";
function getEmbedLinkInfo(linkId, headers) {
    return axios_1.default.get(Url.EMBED_LINK_INFO + `/${linkId}`, {
        baseURL,
        headers,
    });
}
exports.getEmbedLinkInfo = getEmbedLinkInfo;
function storeShareData(shareId, spaceId) {
    return axios_1.default.post(Url.STORE_SHARE_DATA, {
        spaceId,
        shareId,
    });
}
exports.storeShareData = storeShareData;
/**
 * disable the node's share link
 *
 * @export
 * @param {string} nodeId
 * @returns
 */
function disableShare(nodeId) {
    return axios_1.default.post(Url.DISABLE_SHARE + nodeId);
}
exports.disableShare = disableShare;
/**
 * refresh node's share link
 *
 * @export
 * @param {string} nodeId
 * @returns
 */
function regenerateShareLink(nodeId) {
    return axios_1.default.post(Url.REGENERATE_SHARE_LINK + nodeId);
}
exports.regenerateShareLink = regenerateShareLink;
/**
 * get node's share setting
 *
 * @export
 * @param {string} nodeId
 * @returns
 */
function getShareSettings(nodeId) {
    return axios_1.default.get(Url.SHARE_SETTINGS + nodeId);
}
exports.getShareSettings = getShareSettings;
function updateShare(nodeId, permission) {
    return axios_1.default.post(Url.UPDATE_SHARE + nodeId, {
        props: JSON.stringify(permission),
    });
}
exports.updateShare = updateShare;
/**
 * folder node preview
 *
 * @param nodeId
 */
function nodeShowcase(nodeId, shareId) {
    return axios_1.default.get(Url.NODE_SHOWCASE, {
        params: {
            nodeId,
            shareId,
        },
    });
}
exports.nodeShowcase = nodeShowcase;
function checkoutOrder(spaceId, priceId) {
    return axios_1.default.post(Url.CHECKOUT_ORDER, {
        spaceId,
        priceId,
    });
}
exports.checkoutOrder = checkoutOrder;


/***/ }),

/***/ 37833:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SINGLE_APP_INSTANCE = exports.APP_INSTANCE = exports.GET_APPSTORES_APPS = void 0;
/**
  * Third-party application integration revision
  */
// space station - get a list of 3rd party app stores
exports.GET_APPSTORES_APPS = '/appstores/apps';
// space station - query/create application instance
exports.APP_INSTANCE = '/appInstances';
// space station - delete application instance
exports.SINGLE_APP_INSTANCE = '/appInstances/:appInstanceId';
/* ----- Third-party application integration revision dividing line ----- */


/***/ }),

/***/ 27850:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CHECKOUT_ORDER = exports.GET_NODE_INFO_WINDOW = exports.NODE_RECENTLY_BROWSED = exports.GET_SPECIFY_NODE_LIST = exports.DATASHEET_FOREIGN_FORM = exports.FAVORITE_NODE_LIST = exports.MOVE_FAVORITE_NODE = exports.UPDATE_NODE_FAVORITE_STATUS = exports.TRASH_DELETE = exports.TRASH_RECOVER = exports.TRASH_LIST = exports.ADD_ROLE = exports.BATCH_DELETE_ROLE = exports.BATCH_EDIT_ROLE = exports.EDIT_ROLE = exports.NODE_LIST_ROLE = exports.DELETE_ROLE = exports.DISABLE_ROLE_EXTEND = exports.ENABLE_ROLE_EXTEND = exports.COMMIT_REMIND = exports.NODE_SHOWCASE = exports.UPDATE_SHARE = exports.STORE_SHARE_DATA = exports.READ_SHARE_INFO = exports.CHANGE_NODE_DESC = exports.SHARE_SETTINGS = exports.REGENERATE_SHARE_LINK = exports.DISABLE_SHARE = exports.UPDATE_ROLE = exports.NODE_NUMBER = exports.IMPORT_FILE = exports.SEARCH_NODE = exports.FIND_NODE = exports.POSITION_NODE = exports.KEEP_TAB_BAR = exports.GET_DST_ID = exports.COPY_NODE = exports.EDIT_NODE = exports.DELETE_NODE = exports.ADD_NODE = exports.MOVE_NODE = exports.SELECTBYPARENTID = exports.GET_NODE_INFO = exports.GET_NODE_TREE = exports.GET_PARENTS = exports.ALLOW_VISIBLE_SETTING = exports.GET_NODE_LIST = exports.GET_ROOT_NODE = void 0;
// =============== Node related =======================
// get the root node
exports.GET_ROOT_NODE = '/node/root';
// Query the list of child nodes
exports.GET_NODE_LIST = '/node/children';
// Get whether you can manage the visible state of all members
exports.ALLOW_VISIBLE_SETTING = '/node/allowManageWorkbenchSetting';
// Query the chain from parent node to root node
exports.GET_PARENTS = '/node/parents';
// Query the node tree of the workbench, limit the query to two layers
exports.GET_NODE_TREE = '/node/tree';
// Query node information
exports.GET_NODE_INFO = '/node/get';
// Query the child node to which it belongs based on the parent node id
exports.SELECTBYPARENTID = '/node/selectByParentId/';
// move node
exports.MOVE_NODE = '/node/move';
// add node
exports.ADD_NODE = '/node/create';
// delete node
exports.DELETE_NODE = '/node/delete/';
// edit node
exports.EDIT_NODE = '/node/update/';
// copy node
exports.COPY_NODE = '/node/copy';
// Get the table ID
exports.GET_DST_ID = '/node/getDstId/';
// record active table tab
exports.KEEP_TAB_BAR = '/node/active';
// directory tree location
exports.POSITION_NODE = '/node/position/';
// retrieve node
// TODO: to be discarded
exports.FIND_NODE = '/node/select';
// search node
exports.SEARCH_NODE = '/node/search';
// import datasheet
exports.IMPORT_FILE = '/node/import';
// Get the number of folders and files
exports.NODE_NUMBER = '/node/count';
// modify the character
exports.UPDATE_ROLE = '/node/updateRole';
// close node sharing
exports.DISABLE_SHARE = '/node/disableShare/';
// Refresh the node share link
exports.REGENERATE_SHARE_LINK = '/node/regenerateShareLink/';
// Get node sharing settings
exports.SHARE_SETTINGS = '/node/shareSettings/';
// update node description
exports.CHANGE_NODE_DESC = '/node/updateDesc';
// Get the information of the shared node
exports.READ_SHARE_INFO = '/node/readShareInfo';
// dump node
exports.STORE_SHARE_DATA = '/node/storeShareData';
// Change node sharing settings
exports.UPDATE_SHARE = '/node/updateShare/';
exports.NODE_SHOWCASE = '/node/showcase';
// Member field mentions other records
exports.COMMIT_REMIND = '/node/remind';
// Enable node inheritance mode
exports.ENABLE_ROLE_EXTEND = '/node/enableRoleExtend';
// Turn off node inheritance mode
exports.DISABLE_ROLE_EXTEND = '/node/disableRoleExtend';
// delete node role
exports.DELETE_ROLE = '/node/deleteRole';
// Query the list of node roles
exports.NODE_LIST_ROLE = '/node/listRole';
// Modify the role of the node's organizational unit
exports.EDIT_ROLE = '/node/editRole';
// Batch modify node permissions
exports.BATCH_EDIT_ROLE = '/node/batchEditRole';
// delete node permissions
exports.BATCH_DELETE_ROLE = 'node/batchDeleteRole';
// Add the organizational unit of the specified role of the node
exports.ADD_ROLE = '/node/addRole';
// Query the node list of the recycle bin
exports.TRASH_LIST = '/node/rubbish/list';
// restore node
exports.TRASH_RECOVER = '/node/rubbish/recover';
// delete the node from the recycle bin
exports.TRASH_DELETE = '/node/rubbish/delete/';
// Change the node collection state
exports.UPDATE_NODE_FAVORITE_STATUS = '/node/favorite/updateStatus/';
// Move the collection node position
exports.MOVE_FAVORITE_NODE = '/node/favorite/move';
// Query the list of favorite nodes
exports.FAVORITE_NODE_LIST = '/node/favorite/list';
// Query the magic form/mirror associated with the data table node
exports.DATASHEET_FOREIGN_FORM = '/node/getRelNode';
// Get the node of the specified type in the directory tree
exports.GET_SPECIFY_NODE_LIST = '/node/list';
// =============== Node related =======================
// recently browsed folder
exports.NODE_RECENTLY_BROWSED = '/node/recentList';
// Get node information - file information window
exports.GET_NODE_INFO_WINDOW = 'node/window';
exports.CHECKOUT_ORDER = '/checkout';


/***/ }),

/***/ 33896:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TRIGGER_WIZARD = exports.SUBSCRIBE_ACTIVE_EVENT = exports.TRANSFER_NOTICE_TO_READ = exports.NOTIFICATION_STATISTICS = exports.CREATE_NOTIFICATION = exports.NOTIFICATION_LIST = exports.NOTIFICATION_PAGE = void 0;
// Message Center
exports.NOTIFICATION_PAGE = '/player/notification/page';
exports.NOTIFICATION_LIST = '/player/notification/list';
exports.CREATE_NOTIFICATION = '/player/notification/create';
exports.NOTIFICATION_STATISTICS = '/player/notification/statistics';
exports.TRANSFER_NOTICE_TO_READ = '/player/notification/read';
exports.SUBSCRIBE_ACTIVE_EVENT = '/events/active';
// Beginner's guide
exports.TRIGGER_WIZARD = '/player/activity/triggerWizard';


/***/ }),

/***/ 61057:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.APPLY_JOIN_SPACE = exports.JOIN_VIA_LINK = exports.LINK_VALID = exports.DELETE_LINK = exports.LINK_LIST = exports.CREATE_LINK = exports.CAPACITY_REWARD_LIST = exports.NO_PERMISSION_MEMBER = exports.SPACE_RESOURCE = exports.SUBSCRIBE_INFO = exports.SPACE_STATISTICS = exports.GET_ALL_VISIBLE = exports.UPDATE_ALL_VISIBLE = exports.SPACE_MEMORY = exports.RECOVER_SPACE = exports.SPACE_INFO = exports.SPACE_CONTENT = exports.UPDATE_SECURITY_SETTING = exports.SWITCH_NODEROLE_ASSIGNALE = exports.GET_SPACE_FEATURES = exports.UPDATE_WORKBENCH_SETTING = exports.FORBID_STATUS = exports.UPDATE_MEMBER_SETTING = exports.DELETE_SUB_ADMIN = exports.EDIT_SUB_ADMIN = exports.ADD_SUB_ADMIN = exports.SUB_ADMIN_PERMISSION = exports.LIST_ROLE = exports.CHANGE_MAIN_ADMIN = exports.MAIN_ADMIN_INFO = exports.QUIT_SPACE = exports.REMOVE_RED_POINT = exports.UPDATE_SPACE = exports.DELETE_SPACE_NOW = exports.SWITCH_SPACE = exports.DELETE_SPACE = exports.CREATE_SPACE = exports.SPACE_LIST = exports.SPACE_AUDIT = void 0;
// ================ Audit ======================
/**
 * Query space audit logs with pagination
 */
exports.SPACE_AUDIT = '/space/:spaceId/audit';
// =============== Space related =======================
// get the space list
exports.SPACE_LIST = '/space/list';
// create space
exports.CREATE_SPACE = '/space/create';
// delete space
exports.DELETE_SPACE = '/space/delete/:spaceId';
// switch space station
exports.SWITCH_SPACE = '/space/:spaceId/switch';
// immediately delete the space
exports.DELETE_SPACE_NOW = '/space/del';
// edit space
exports.UPDATE_SPACE = '/space/update';
// remove the red dot from the space list
exports.REMOVE_RED_POINT = '/space/remove/';
// exit space
exports.QUIT_SPACE = '/space/quit/';
// space station-main administrator-get main administrator information
exports.MAIN_ADMIN_INFO = '/space/manager';
// space station-main administrator-change main administrator
exports.CHANGE_MAIN_ADMIN = '/space/changeManager';
// Space Station-Sub-Administrator-Query the list of administrators
exports.LIST_ROLE = '/space/listRole';
// space station-sub-admin-get administrator information
exports.SUB_ADMIN_PERMISSION = '/space/getRoleDetail';
// space station-sub-admin-add admin
exports.ADD_SUB_ADMIN = '/space/addRole';
// space station-sub-admin-edit sub-admin
exports.EDIT_SUB_ADMIN = '/space/editRole';
// space station-sub-admin-delete-admin
exports.DELETE_SUB_ADMIN = '/space/deleteRole/';
// space station - change member settings
exports.UPDATE_MEMBER_SETTING = '/space/updateMemberSetting';
// Space Station - Get the status of prohibiting all members from exporting the Wig table
exports.FORBID_STATUS = '/space/getForbidStatus';
// space station - change workbench settings
exports.UPDATE_WORKBENCH_SETTING = '/space/updateWorkbenchSetting';
// space station - get the properties of space
exports.GET_SPACE_FEATURES = '/space/features';
// space station - get the properties of space
exports.SWITCH_NODEROLE_ASSIGNALE = '/space/updateNodeRoleAssignable';
// space station - update enterprise security settings
exports.UPDATE_SECURITY_SETTING = '/space/updateSecuritySetting';
// get the space content
exports.SPACE_CONTENT = '/space/content/';
// Spatial information
exports.SPACE_INFO = '/space/info/';
// restore space
exports.RECOVER_SPACE = '/space/cancel/';
// space capacity
exports.SPACE_MEMORY = '/space/capacity';
// Toggle the working directory to be visible to all members
exports.UPDATE_ALL_VISIBLE = '/space/updateNodeVisibleStatus';
// Query the visibility status of all members of the working directory
exports.GET_ALL_VISIBLE = '/space/getNodeVisible';
// spatial statistics
exports.SPACE_STATISTICS = '/space/statistics';
// subscribe
exports.SUBSCRIBE_INFO = '/space/subscribe/';
// permission related
exports.SPACE_RESOURCE = '/space/resource';
exports.NO_PERMISSION_MEMBER = '/node/remind/units/noPermission';
// Give attachment space capacity details
exports.CAPACITY_REWARD_LIST = '/space/capacity/detail';
// link invite
exports.CREATE_LINK = '/space/link/generate';
exports.LINK_LIST = '/space/link/list';
exports.DELETE_LINK = '/space/link/delete';
exports.LINK_VALID = '/space/link/valid';
exports.JOIN_VIA_LINK = '/space/link/join';
// apply to join the space
exports.APPLY_JOIN_SPACE = '/space/apply/join';
// =============== Space related =======================


/***/ }),

/***/ 17544:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TEMPLATE_SEARCH = exports.TEMPLATE_RECOMMEND = exports.TEMPLATE_NAME_VALIDATE = exports.USE_TEMPLATE = exports.TEMPLATE_ALBUMS_RECOMMEND = exports.TEMPLATE_ALBUMS = exports.TEMPLATE_DIRECTORY = exports.DELETE_TEMPLATE = exports.SPACE_TEMPLATES = exports.TEMPLATE_CATEGORIES = exports.TEMPLATE_LIST = exports.OFFICIAL_TEMPLATE_CATEGORY = exports.CREATE_TEMPLATE = void 0;
// =============== Template related =======================
exports.CREATE_TEMPLATE = '/template/create';
exports.OFFICIAL_TEMPLATE_CATEGORY = '/template/categoryList';
exports.TEMPLATE_LIST = '/template/list';
/*
* Get official template category content
 */
exports.TEMPLATE_CATEGORIES = '/template/categories/:categoryCode';
/*
* Load all templates of space station
 */
exports.SPACE_TEMPLATES = '/spaces/:spaceId/templates';
exports.DELETE_TEMPLATE = '/template/delete/';
exports.TEMPLATE_DIRECTORY = '/template/directory';
/*
  * Template topic content
  */
exports.TEMPLATE_ALBUMS = '/template/albums/:albumId';
/*
  * Template topic recommendation
  */
exports.TEMPLATE_ALBUMS_RECOMMEND = '/template/albums/recommend';
exports.USE_TEMPLATE = '/template/quote';
exports.TEMPLATE_NAME_VALIDATE = '/template/validate';
exports.TEMPLATE_RECOMMEND = '/template/recommend';
exports.TEMPLATE_SEARCH = '/template/global/search';


/***/ }),

/***/ 17506:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateMoveToNodeIds = exports.setNoPermissionMembers = exports.setPermissionCommitRemindParameter = exports.setPermissionCommitRemindStatus = exports.updateNodeInfo = exports.getNodeInfo = exports.setLoadedKeys = exports.setActiveNodeError = exports.initFavoriteTreeNodes = exports.moveFavoriteNode = exports.deleteNodeFromFavoriteList = exports.removeFavorite = exports.addNodeToFavoriteTree = exports.generateFavoriteTree = exports.collectionNodeAndExpand = exports.deleteNode = exports.refreshTree = exports.updateTreeNodesMap = exports.updateIsPermission = exports.deleteNodeAction = exports.removeNodeFromTree = exports.removeNodeFromMap = exports.initCatalogTree = exports.clearNode = exports.moveTo = exports.setTreeLoading = exports.updateHasChildren = exports.getChildNode = exports.setNodeErrorType = exports.setNodeName = exports.updateSocketData = exports.addNode = exports.addNodeToMap = exports.setExpandedKeys = exports.updateImportModalNodeId = exports.updateSaveAsTemplateModalNodeId = exports.updateShareModalNodeId = exports.updatePermissionModalNodeId = exports.setTreeRootId = exports.setCopyNodeId = exports.setDelNodeId = exports.setEditNodeId = exports.setErr = void 0;
const interfaces_1 = __webpack_require__(37848);
const actions_1 = __webpack_require__(6021);
const actions = __importStar(__webpack_require__(86256));
const redux_batched_actions_1 = __webpack_require__(11498);
const api_1 = __webpack_require__(62625);
const utils_1 = __webpack_require__(26854);
const form_1 = __webpack_require__(55738);
const config_1 = __webpack_require__(77511);
const store_1 = __webpack_require__(56791);
/**
 * Set Error Message
 *
 * @param err
 */
function setErr(err) {
    return {
        type: actions.SET_ERR,
        payload: err,
    };
}
exports.setErr = setErr;
/**
 * set current edit state node ID
 *
 * @param nodeId Node ID
 */
function setEditNodeId(nodeId, module = config_1.ConfigConstant.Modules.CATALOG) {
    return {
        type: actions.SET_EDIT_NODE_ID,
        payload: {
            nodeId,
            module,
        },
    };
}
exports.setEditNodeId = setEditNodeId;
/**
 * Set the node ID to delete
 *
 * @param nodeId Node ID
 */
function setDelNodeId(nodeId, module = config_1.ConfigConstant.Modules.CATALOG) {
    return {
        type: actions.SET_DEL_NODE_ID,
        payload: { nodeId, module },
    };
}
exports.setDelNodeId = setDelNodeId;
/**
 * set the node ID to copy
 *
 * @param nodeId Node ID
 */
function setCopyNodeId(nodeId) {
    return {
        type: actions.SET_COPY_NODE_ID,
        payload: nodeId,
    };
}
exports.setCopyNodeId = setCopyNodeId;
/**
 * Set the root Node ID
 *
 * @param nodeId
 * @returns
 */
const setTreeRootId = (nodeId) => {
    return {
        type: actions.SET_TREE_ROOT_ID,
        payload: nodeId,
    };
};
exports.setTreeRootId = setTreeRootId;
/**
 * Current Node that is opening permission UI window
 * @param nodeId Node ID
 */
function updatePermissionModalNodeId(nodeId) {
    return {
        type: actions.UPDATE_PERMISSION_MODAL_NODE_ID,
        payload: nodeId,
    };
}
exports.updatePermissionModalNodeId = updatePermissionModalNodeId;
/**
 * Current node that is opening share window.
 * @param nodeId Node ID
 */
function updateShareModalNodeId(nodeId) {
    return {
        type: actions.UPDATE_SHARE_MODAL_NODE_ID,
        payload: nodeId,
    };
}
exports.updateShareModalNodeId = updateShareModalNodeId;
/**
 * Current node that is opening save as template window.
 *
 * @param nodeId
 */
function updateSaveAsTemplateModalNodeId(nodeId) {
    return {
        type: actions.UPDATE_SAVE_AS_TEMPLATE_MODAL_NODE_ID,
        payload: nodeId,
    };
}
exports.updateSaveAsTemplateModalNodeId = updateSaveAsTemplateModalNodeId;
/**
 * Current node that is opening the import UI window.
 *
 * @param nodeId Node ID
 */
function updateImportModalNodeId(nodeId) {
    return {
        type: actions.UPDATE_IMPORT_MODAL_NODE_ID,
        payload: nodeId,
    };
}
exports.updateImportModalNodeId = updateImportModalNodeId;
/**
 * Set the array of expanded nodes
 *
 * @param expandedKeys the keys array of expanded nodes
 */
function setExpandedKeys(expandedKeys, module = config_1.ConfigConstant.Modules.CATALOG) {
    return {
        type: actions.SET_EXPANDED_KEYS,
        payload: {
            expandedKeys,
            module,
        },
    };
}
exports.setExpandedKeys = setExpandedKeys;
/**
 * add single or multiple nodes to treeNodeMap (catalog tree data source)
 *
 * @param Node Single node or collection of nodes
 */
const addNodeToMap = (data, isCoverChildren = true) => {
    return {
        type: actions.ADD_NODE_TO_MAP,
        payload: { data, isCoverChildren },
    };
};
exports.addNodeToMap = addNodeToMap;
/**
 * add nodes to files tree(catalog)
 *
 * @param node the node info of new
 */
const addNode = (node) => {
    return (dispatch) => {
        dispatch((0, redux_batched_actions_1.batchActions)([(0, exports.addNodeToMap)([node]), setEditNodeId(node.nodeId)], 'ADD_NODE'));
    };
};
exports.addNode = addNode;
/**
 * update treeNodeMap (catalog tree data source) by socket data
 * @param data
 * @returns
 */
const updateSocketData = (data) => {
    return {
        type: actions.UPDATE_SOCKET_DATA,
        payload: data,
    };
};
exports.updateSocketData = updateSocketData;
/**
 * set the name of node
 *
 * @param nodeId Node ID
 * @param nodeName Node Name
 */
function setNodeName(nodeId, nodeName) {
    return {
        type: actions.SET_NODE_NAME,
        payload: {
            nodeId,
            nodeName,
        },
    };
}
exports.setNodeName = setNodeName;
function setNodeErrorType(nodeId, errType) {
    return {
        type: actions.SET_NODE_ERROR_TYPE,
        payload: {
            nodeId,
            errType,
        },
    };
}
exports.setNodeErrorType = setNodeErrorType;
/**
 * get specified node's child nodes.
 * and attach them to files tree.
 *
 * @param nodeId Node ID
 */
function getChildNode(nodeId) {
    return (dispatch, getState) => __awaiter(this, void 0, void 0, function* () {
        const state = getState();
        const { loadedKeys } = state.catalogTree;
        dispatch((0, exports.setTreeLoading)(true));
        const nodeData = yield getChildNodeList(nodeId);
        if (nodeData === interfaces_1.NodeErrorType.ChildNodes) {
            dispatch((0, exports.setTreeLoading)(false));
            dispatch(setNodeErrorType(nodeId, interfaces_1.NodeErrorType.ChildNodes));
            return;
        }
        if (!nodeData || (Array.isArray(nodeData) && !nodeData.length)) {
            dispatch((0, exports.setTreeLoading)(false));
            dispatch(setLoadedKeys([...loadedKeys, nodeId]));
            dispatch(setNodeErrorType(nodeId, null));
            return;
        }
        // update current node has child nodes
        dispatch((0, exports.addNodeToMap)(store_1.Selectors.flatNodeTree(nodeData), false));
        dispatch(updateHasChildren(nodeId));
        dispatch(setNodeErrorType(nodeId, null));
        dispatch((0, exports.setTreeLoading)(false));
    });
}
exports.getChildNode = getChildNode;
/**
 * update node's hasChildren state
 *
 * @param nodeId the node that want to update
 */
function updateHasChildren(nodeId) {
    return {
        type: actions.UPDATE_HAS_CHILDREN,
        payload: nodeId,
    };
}
exports.updateHasChildren = updateHasChildren;
/**
 * get specified node's child nodes.
 * @param nodeId
 * @returns
 */
const getChildNodeList = (nodeId) => {
    return api_1.Api.getChildNodeList(nodeId).then(res => {
        const { success, data } = res.data;
        if (success) {
            return data;
        }
        return interfaces_1.NodeErrorType.ChildNodes;
    }).catch(() => interfaces_1.NodeErrorType.ChildNodes);
};
/**
 * the loading state of current files tree.
 *
 * @param loading
 * @param module
 * @returns
 */
const setTreeLoading = (loading, module = config_1.ConfigConstant.Modules.CATALOG) => {
    return {
        type: actions.TREE_LOADING,
        payload: {
            loading,
            module,
        },
    };
};
exports.setTreeLoading = setTreeLoading;
/**
 * move node to specified position
 *
 * @param {string} nodeId Node ID
 * @param {string} targetNodeId target node ID
 * @param {number} pos -1: above the target node | 0：move into target node | 1：below the target node
 * @returns
 */
const moveTo = (nodeId, targetNodeId, pos) => {
    return {
        type: actions.NODE_MOVE_TO,
        payload: {
            nodeId,
            targetNodeId,
            pos,
        },
    };
};
exports.moveTo = moveTo;
/**
 * clear node attribute
 */
const clearNode = () => {
    return {
        type: actions.CLEAR_NODE,
    };
};
exports.clearNode = clearNode;
/**
 * init files tree(catalog)
 */
function initCatalogTree() {
    return {
        type: actions.INIT_CATALOG_TREE,
    };
}
exports.initCatalogTree = initCatalogTree;
/**
 * remove single or multi nodes from treeNodeMap(catalog tree data source)
 * @param Node single node or collection of nodes
 */
const removeNodeFromMap = (nodeId) => {
    return {
        type: actions.REMOVE_NODE_FROM_MAP,
        payload: nodeId,
    };
};
exports.removeNodeFromMap = removeNodeFromMap;
/**
 * remove single or multi nodes from tree
 * @param data single node or collection of nodes
 */
const removeNodeFromTree = (nodeId) => {
    return {
        type: actions.REMOVE_NODE_FROM_TREE,
        payload: nodeId,
    };
};
exports.removeNodeFromTree = removeNodeFromTree;
/**
 * delete node
 * @param optNode
 */
function deleteNodeAction(optNode) {
    return {
        type: actions.DELETE_NODE,
        payload: optNode,
    };
}
exports.deleteNodeAction = deleteNodeAction;
/**
 * update the state of `isPermission`
 */
function updateIsPermission(status) {
    return {
        type: actions.UPDATE_IS_PERMISSION,
        payload: status,
    };
}
exports.updateIsPermission = updateIsPermission;
/**
 * update specify nodes in treeNodeMap
 *
 * @param nodeId Node ID
 * @param data new data
 */
const updateTreeNodesMap = (nodeId, data) => {
    return {
        type: actions.UPDATE_TREE_NODES_MAP,
        payload: {
            nodeId,
            data,
        },
    };
};
exports.updateTreeNodesMap = updateTreeNodesMap;
/**
 * refresh tree (some layer)
 *
 * @param data
 */
const refreshTree = (data) => {
    return {
        type: actions.REFRESH_TREE,
        payload: data,
    };
};
exports.refreshTree = refreshTree;
/**
 * Delete node from the files tree(catalog)
 *
 * @param optNode the node info that is under operation.
 */
const deleteNode = (optNode) => {
    const actions = [
        deleteNodeAction(optNode),
        deleteNodeFromFavoriteList(optNode),
        setDelNodeId(''),
        setDelNodeId('', config_1.ConfigConstant.Modules.FAVORITE),
    ];
    return (dispatch) => {
        dispatch((0, redux_batched_actions_1.batchActions)(actions));
    };
};
exports.deleteNode = deleteNode;
/**
 * find the path of the node by parentId, and expand all the folders on them.
 *
 * @param nodeId Node ID
 */
const collectionNodeAndExpand = (nodeId) => {
    return (dispatch, getState) => {
        const state = getState();
        const { rootId, expandedKeys, treeNodesMap, favoriteExpandedKeys, favoriteTreeNodeIds } = state.catalogTree;
        const newExpandKeys = [...(new Set([...expandedKeys, ...(0, utils_1.getExpandNodeIds)(treeNodesMap, nodeId, rootId)]))];
        const newFavoriteExpandKeys = [...(new Set([...favoriteExpandedKeys, ...(0, utils_1.getExpandNodeIds)(treeNodesMap, nodeId, rootId, favoriteTreeNodeIds)]))];
        dispatch(setExpandedKeys(newExpandKeys));
        dispatch(setExpandedKeys(newFavoriteExpandKeys, config_1.ConfigConstant.Modules.FAVORITE));
    };
};
exports.collectionNodeAndExpand = collectionNodeAndExpand;
/**
 * generate favorite (star)
 * @param node
 * @returns
 */
const generateFavoriteTree = (node) => {
    return (dispatch) => {
        dispatch((0, exports.addNodeToMap)(node));
        const nodeIds = node.map(item => item.nodeId);
        dispatch((0, exports.addNodeToFavoriteTree)(nodeIds));
    };
};
exports.generateFavoriteTree = generateFavoriteTree;
/**
 * add favorite(star) into the specified node
 * @param nodeIds
 * @param parentId
 * @returns
 */
const addNodeToFavoriteTree = (nodeIds, parentId = '') => {
    return {
        type: actions.ADD_NODE_TO_FAVORITE_LIST,
        payload: {
            nodeIds,
            parentId,
        },
    };
};
exports.addNodeToFavoriteTree = addNodeToFavoriteTree;
/**
 * remove favorite (star)
 * @param nodeId
 * @returns
 */
const removeFavorite = (nodeId) => {
    return (dispatch, getState) => {
        const state = getState();
        const type = state.catalogTree.treeNodesMap[nodeId].type;
        dispatch((0, exports.updateNodeInfo)(nodeId, type, { nodeFavorite: false }));
        dispatch({
            type: actions.REMOVE_FAVORITE_NODE,
            payload: nodeId,
        });
    };
};
exports.removeFavorite = removeFavorite;
function deleteNodeFromFavoriteList(optNode) {
    return {
        type: actions.DELETE_NODE_FROM_FAVORITE_LIST,
        payload: optNode,
    };
}
exports.deleteNodeFromFavoriteList = deleteNodeFromFavoriteList;
function moveFavoriteNode(nodeId, preNodeId) {
    return {
        type: actions.MOVE_FAVORITE_NODE,
        payload: {
            nodeId,
            preNodeId,
        },
    };
}
exports.moveFavoriteNode = moveFavoriteNode;
function initFavoriteTreeNodes() {
    return {
        type: actions.INIT_FAVORITE_TREE_NODES,
    };
}
exports.initFavoriteTreeNodes = initFavoriteTreeNodes;
function setActiveNodeError(status) {
    return {
        type: actions.SET_ACTIVE_NODE_ERROR,
        payload: status,
    };
}
exports.setActiveNodeError = setActiveNodeError;
function setLoadedKeys(keys) {
    return {
        type: actions.SET_LOADED_KEYS,
        payload: keys,
    };
}
exports.setLoadedKeys = setLoadedKeys;
/**
 * get single node info, put it in data source
 * @param nodeId
 * @returns
 */
const getNodeInfo = (nodeId) => {
    return (dispatch) => {
        api_1.Api.getNodeInfo(nodeId).then(res => {
            const { success, data } = res.data;
            if (success) {
                dispatch((0, exports.addNodeToMap)(data));
            }
        });
    };
};
exports.getNodeInfo = getNodeInfo;
/**
 * update data source
 * for example, the data source of datasheet / form...
 * @param nodeId
 * @param nodeType
 * @param data
 * @returns
 */
const updateNodeInfo = (nodeId, nodeType, data) => {
    return (dispatch) => {
        switch (nodeType) {
            case config_1.ConfigConstant.NodeType.DATASHEET: {
                dispatch((0, actions_1.updateDatasheet)(nodeId, data));
                break;
            }
            case config_1.ConfigConstant.NodeType.FORM: {
                dispatch((0, form_1.updateForm)(nodeId, data));
                break;
            }
            case config_1.ConfigConstant.NodeType.DASHBOARD: {
                dispatch((0, actions_1.updateDashboard)(nodeId, data));
                break;
            }
            case config_1.ConfigConstant.NodeType.MIRROR: {
                dispatch((0, actions_1.updateMirror)(nodeId, data));
                break;
            }
        }
        const { name } = data, info = __rest(data, ["name"]);
        const nodeData = name ? Object.assign(Object.assign({}, info), { nodeName: name }) : info;
        dispatch((0, exports.updateTreeNodesMap)(nodeId, nodeData));
    };
};
exports.updateNodeInfo = updateNodeInfo;
/**
 * set permissions, whether or not to send a notification when popup window closed.
 *
 * @param status
 * @returns
 */
function setPermissionCommitRemindStatus(status) {
    return {
        type: actions.SET_PERMISSION_COMMIT_REMIND_STATUS,
        payload: status
    };
}
exports.setPermissionCommitRemindStatus = setPermissionCommitRemindStatus;
/**
 * set commenter change remind params by yiliu
 * @param Param
 * @returns
 */
function setPermissionCommitRemindParameter(Param) {
    return {
        type: actions.SET_PERMISSION_COMMIT_REMIND_PARAMETER,
        payload: Param
    };
}
exports.setPermissionCommitRemindParameter = setPermissionCommitRemindParameter;
/**
 * set members that no permission
 * @param Param
 * @returns
 */
function setNoPermissionMembers(Param) {
    return {
        type: actions.SET_NO_PERMISSION_MEMBERS,
        payload: Param
    };
}
exports.setNoPermissionMembers = setNoPermissionMembers;
/**
 * update the node that will move.
 *
 * @param nodeIds
 */
function updateMoveToNodeIds(nodeIds) {
    return {
        type: actions.UPDATE_MOVE_TO_NODE_IDS,
        payload: nodeIds,
    };
}
exports.updateMoveToNodeIds = updateMoveToNodeIds;


/***/ }),

/***/ 93270:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setLabs = void 0;
const store_1 = __webpack_require__(56791);
/**
 * set labs features
 */
const setLabs = (labs) => {
    return {
        type: store_1.ActionConstants.SET_LABS,
        payload: labs,
    };
};
exports.setLabs = setLabs;


/***/ }),

/***/ 78571:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setShareInfo = void 0;
const store_1 = __webpack_require__(56791);
/**
 * get share info
 */
const setShareInfo = (shareInfo) => {
    return {
        type: store_1.ActionConstants.SET_SHARE_INFO,
        payload: shareInfo,
    };
};
exports.setShareInfo = setShareInfo;


/***/ }),

/***/ 2187:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setEnvs = exports.setActiveSpaceId = exports.fetchMarketplaceApps = exports.setMarketPlaceApps = exports.getSpaceFeatures = exports.getSpaceInfo = exports.toggleRecordFullScreen = exports.toggleSideRecord = exports.toggleApiPanel = exports.setShortcutKeyPanelVisible = exports.setPreviewModalVisible = exports.setSideBarVisible = exports.setScreenWidth = exports.setConnected = exports.setReconnecting = exports.setSpaceFeatures = exports.setSpaceInfo = exports.setSpaceLoading = exports.setSpaceErr = exports.quitSpace = exports.setQuitSpaceId = exports.removeRedPoint = exports.setSpaceList = exports.spaceList = void 0;
const api_1 = __webpack_require__(62625);
const axios_1 = __importDefault(__webpack_require__(52167));
const config_1 = __webpack_require__(77511);
const store_1 = __webpack_require__(56791);
const catalog_tree_1 = __webpack_require__(17506);
const user_1 = __webpack_require__(83739);
/**
 * Get Space List
 */
const spaceList = () => {
    return (dispatch) => {
        api_1.Api.spaceList().then((res) => {
            const { success, data } = res.data;
            if (success) {
                dispatch((0, exports.setSpaceList)(data));
            }
        });
    };
};
exports.spaceList = spaceList;
/**
 * Set Space List
 */
const setSpaceList = (data) => {
    return {
        type: store_1.ActionConstants.SET_SPACE_LIST,
        payload: data,
    };
};
exports.setSpaceList = setSpaceList;
/**
 * Remove Red dot
 * @param spaceId Space ID
 */
const removeRedPoint = (spaceId) => {
    return (dispatch) => {
        api_1.Api.removeSpaceRedPoint(spaceId).then((res) => {
            const { success } = res.data;
            if (success) {
                dispatch((0, exports.spaceList)());
            }
        });
    };
};
exports.removeRedPoint = removeRedPoint;
/**
 * set the space id will quite
 * @param spaceId
 */
const setQuitSpaceId = (spaceId) => {
    return {
        type: store_1.ActionConstants.SET_QUIT_SPACE_ID,
        payload: spaceId,
    };
};
exports.setQuitSpaceId = setQuitSpaceId;
/**
 * quit space
 * @param spaceId space ID
 */
const quitSpace = (spaceId) => {
    return (dispatch) => {
        api_1.Api.quitSpace(spaceId).then((res) => {
            const { success } = res.data;
            if (success) {
                dispatch((0, exports.setQuitSpaceId)(''));
                dispatch((0, catalog_tree_1.initCatalogTree)());
                dispatch((0, user_1.getUserMe)());
            }
        });
    };
};
exports.quitSpace = quitSpace;
/**
 * set space error info
 * @param err error info
 */
const setSpaceErr = (err) => {
    return {
        type: store_1.ActionConstants.SET_SPACE_ERR,
        payload: err,
    };
};
exports.setSpaceErr = setSpaceErr;
/**
 * set current loading state
 *
 * @param status current state
 */
const setSpaceLoading = (statu) => {
    return {
        type: store_1.ActionConstants.SET_SPACE_LOADING,
        payload: statu,
    };
};
exports.setSpaceLoading = setSpaceLoading;
/**
 * set current space info
 * @param spaceInfo
 */
const setSpaceInfo = (spaceInfo) => {
    return {
        type: store_1.ActionConstants.SET_SPACE_INFO,
        payload: spaceInfo,
    };
};
exports.setSpaceInfo = setSpaceInfo;
/**
 * set space features
 * @param spaceInfo
 */
const setSpaceFeatures = (data) => {
    return {
        type: store_1.ActionConstants.SET_SPACE_FEATURES,
        payload: data,
    };
};
exports.setSpaceFeatures = setSpaceFeatures;
const setReconnecting = (reconnecting) => {
    return {
        type: store_1.ActionConstants.SET_RECONNECTING,
        payload: reconnecting,
    };
};
exports.setReconnecting = setReconnecting;
const setConnected = (connected) => {
    return {
        type: store_1.ActionConstants.SET_CONNECTED,
        payload: connected,
    };
};
exports.setConnected = setConnected;
const setScreenWidth = (screenWidth) => {
    return {
        type: store_1.ActionConstants.SET_SCREEN_WIDTH,
        payload: screenWidth,
    };
};
exports.setScreenWidth = setScreenWidth;
const setSideBarVisible = (status) => {
    return {
        type: store_1.ActionConstants.SET_SIDEBAR_VISIBLE,
        payload: status,
    };
};
exports.setSideBarVisible = setSideBarVisible;
const setPreviewModalVisible = (status) => {
    return {
        type: store_1.ActionConstants.SET_PREVIEW_MODAL_VISIBLE,
        payload: status,
    };
};
exports.setPreviewModalVisible = setPreviewModalVisible;
const setShortcutKeyPanelVisible = (status) => {
    return {
        type: store_1.ActionConstants.SET_SHORTCUT_KEY_PANEL_VISIBLE,
        payload: status,
    };
};
exports.setShortcutKeyPanelVisible = setShortcutKeyPanelVisible;
const toggleApiPanel = (status) => {
    return {
        type: store_1.ActionConstants.TOGGLE_API_PANEL,
        payload: status,
    };
};
exports.toggleApiPanel = toggleApiPanel;
const toggleSideRecord = (status) => {
    return {
        type: store_1.ActionConstants.TOGGLE_SIDE_RECORD_PANEL,
        payload: status,
    };
};
exports.toggleSideRecord = toggleSideRecord;
const toggleRecordFullScreen = (status) => {
    return {
        type: store_1.ActionConstants.TOGGLE_RECORD_PANEL_FULL_SCREEN,
        payload: status,
    };
};
exports.toggleRecordFullScreen = toggleRecordFullScreen;
/**
 * get space info
 * @param spaceId
 * @param ignoreTimeLimit
 * @returns
 */
const getSpaceInfo = (spaceId, ignoreTimeLimit = false) => {
    return (dispatch, getState) => {
        var _a;
        const curSpace = getState().space;
        const lastUpdateTime = ((_a = curSpace === null || curSpace === void 0 ? void 0 : curSpace.curSpaceInfo) === null || _a === void 0 ? void 0 : _a.lastUpdateTime) || 0;
        // prevent too many requests.
        // after last call > 1 min
        if (!ignoreTimeLimit && (Date.now() - lastUpdateTime < 1000 * 60)) {
            return;
        }
        api_1.Api.spaceInfo(spaceId).then((res) => {
            const { data, success } = res.data;
            if (success) {
                dispatch((0, exports.setSpaceInfo)(Object.assign(Object.assign({}, data), { lastUpdateTime: Date.now() })));
            }
        });
    };
};
exports.getSpaceInfo = getSpaceInfo;
/**
 * get workbench settings info
 * @returns
 */
const getSpaceFeatures = () => {
    return (dispatch) => {
        api_1.Api.getSpaceFeatures().then((res) => {
            const { data, success } = res.data;
            if (success) {
                dispatch((0, exports.setSpaceFeatures)(data));
            }
        });
    };
};
exports.getSpaceFeatures = getSpaceFeatures;
const setMarketPlaceApps = (apps) => {
    return {
        type: store_1.ActionConstants.SET_MARKETPLACE_APPS,
        payload: apps,
    };
};
exports.setMarketPlaceApps = setMarketPlaceApps;
/**
 * get space's 3rd apps list
 * @param spaceId
 * @returns
 */
const fetchMarketplaceApps = (spaceId) => {
    return (dispatch) => {
        if (!(0, config_1.getCustomConfig)().SPACE_INTEGRATION_PAGE_VISIBLE) {
            dispatch((0, exports.setMarketPlaceApps)([]));
            return;
        }
        api_1.Api.getMarketplaceApps(spaceId).then((res) => {
            const { success, data } = res.data;
            if (success) {
                dispatch((0, exports.setMarketPlaceApps)(data));
            }
        });
    };
};
exports.fetchMarketplaceApps = fetchMarketplaceApps;
const setActiveSpaceId = (spaceId) => {
    if (spaceId) {
        axios_1.default.defaults.headers.common['X-Space-Id'] = spaceId;
    }
    return {
        type: store_1.ActionConstants.SET_ACTIVE_SPACE_ID,
        payload: spaceId,
    };
};
exports.setActiveSpaceId = setActiveSpaceId;
const setEnvs = (envs) => {
    return {
        type: store_1.ActionConstants.SET_ENVS,
        payload: envs,
    };
};
exports.setEnvs = setEnvs;


/***/ }),

/***/ 38512:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateTemplateDirectory = exports.updateTemplateCategory = void 0;
const actions = __importStar(__webpack_require__(86256));
function updateTemplateCategory(data) {
    return {
        type: actions.UPDATE_TEMPLATE_CATEGORY,
        payload: data,
    };
}
exports.updateTemplateCategory = updateTemplateCategory;
function updateTemplateDirectory(data) {
    return {
        type: actions.UPDATE_TEMPLATE_DIRECTORY,
        payload: data,
    };
}
exports.updateTemplateDirectory = updateTemplateDirectory;


/***/ }),

/***/ 176:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.NodeErrorType = exports.Role = void 0;
const constant_1 = __webpack_require__(83039);
Object.defineProperty(exports, "Role", ({ enumerable: true, get: function () { return constant_1.Role; } }));
var NodeErrorType;
(function (NodeErrorType) {
    NodeErrorType["ChildNodes"] = "ChildNodes";
})(NodeErrorType = exports.NodeErrorType || (exports.NodeErrorType = {}));


/***/ }),

/***/ 67540:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 99855:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 9551:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SocialAppType = void 0;
var SocialAppType;
(function (SocialAppType) {
    SocialAppType[SocialAppType["SelfApp"] = 1] = "SelfApp";
    SocialAppType[SocialAppType["ThirdPartyAtt"] = 2] = "ThirdPartyAtt";
})(SocialAppType = exports.SocialAppType || (exports.SocialAppType = {}));


/***/ }),

/***/ 94782:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 94004:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.removeFavoriteNode = exports.moveFavoriteNode = exports.addMultiNodeToTree = exports.addSingleNodeToTree = exports.addNodeToTree = exports.mergeObj = exports.getPropertyByTree = exports.catalogTree = void 0;
const config_1 = __webpack_require__(77511);
const immer_1 = __webpack_require__(7133);
const utils_1 = __webpack_require__(26854);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    /**
     * whether catalog tree is loading
     */
    loading: true,
    /**
     * the information of the new node
     */
    node: null,
    /**
     * current operation node info
     */
    optNode: null,
    /**
     * node to delete ID
     */
    delNodeId: '',
    /**
     * the node ID that is being edited
     */
    editNodeId: '',
    /**
     * the node to copy ID
     */
    copyNodeId: '',
    /**
     * whether or not to copy data
     */
    isCopyAll: false,
    /**
     * error message when processing fails
     */
    err: '',
    /**
     * root node ID
     */
    rootId: '',
    /**
     * the map of the tree nodes (share by tab bar and catalog)
     */
    treeNodesMap: {},
    /**
     * the array of the expanded nodes
     */
    expandedKeys: [],
    /**
     * the array of the loaded nodes
     */
    loadedKeys: [],
    /**
     * units (members, teams)
     */
    unit: null,
    /**
     * all visible
     */
    allVisible: false,
    // whether or not to have current datasheet permission
    isPermission: true,
    /**
     * the push data by socket
     */
    socketData: null,
    // favorite tree node ids
    favoriteTreeNodeIds: [],
    // the loading state of favorite star
    favoriteLoading: true,
    favoriteExpandedKeys: [],
    favoriteEditNodeId: '',
    favoriteDelNodeId: '',
    activeNodeError: false,
    /**
     * the node IDs that is opening permission UI window
     */
    permissionModalNodeId: '',
    /**
     * the node id that current opening share UI window
     */
    shareModalNodeId: '',
    /**
     * the node id that current opening save as template UI window
     */
    saveAsTemplateModalNodeId: '',
    /**
     * the node id that current opening import UI window
     */
    importModalNodeId: '',
    /**
     * whether or not the permission UI window comes from notification call
     */
    permissionCommitRemindStatus: false,
    /**
     * arguments that need to be sent to the member message
     */
    permissionCommitRemindParameter: null,
    /**
     * the unit(member) ids that have no permission
     */
    noPermissionMembers: []
};
exports.catalogTree = (0, immer_1.produce)((draftCatalogTree = defaultState, action) => {
    switch (action.type) {
        case actions.SET_ERR: {
            draftCatalogTree.err = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_DEL_NODE_ID: {
            const { nodeId, module } = action.payload;
            switch (module) {
                case config_1.ConfigConstant.Modules.CATALOG: {
                    draftCatalogTree.delNodeId = nodeId;
                    break;
                }
                case config_1.ConfigConstant.Modules.FAVORITE: {
                    draftCatalogTree.favoriteDelNodeId = nodeId;
                    break;
                }
            }
            return draftCatalogTree;
        }
        case actions.SET_OPT_NODE: {
            draftCatalogTree.optNode = action.payload;
            return draftCatalogTree;
        }
        case actions.DELETE_NODE: {
            deleteNode(draftCatalogTree, action.payload);
            return draftCatalogTree;
        }
        case actions.SET_EDIT_NODE_ID: {
            const { nodeId, module } = action.payload;
            switch (module) {
                case config_1.ConfigConstant.Modules.CATALOG: {
                    draftCatalogTree.editNodeId = nodeId;
                    break;
                }
                case config_1.ConfigConstant.Modules.FAVORITE: {
                    draftCatalogTree.favoriteEditNodeId = nodeId;
                    break;
                }
            }
            return draftCatalogTree;
        }
        case actions.SET_NODE_NAME: {
            const { nodeId, nodeName } = action.payload;
            draftCatalogTree.treeNodesMap[nodeId].nodeName = nodeName;
            return draftCatalogTree;
        }
        case actions.SET_NODE_ERROR_TYPE: {
            const { nodeId, errType } = action.payload;
            draftCatalogTree.treeNodesMap[nodeId].errType = errType;
            return draftCatalogTree;
        }
        case actions.ADD_NODE_TO_MAP: {
            const { data, isCoverChildren } = action.payload;
            addNodeToMap(draftCatalogTree, data, isCoverChildren);
            return draftCatalogTree;
        }
        case actions.REFRESH_TREE: {
            const childNodeIds = action.payload.map(item => item.nodeId);
            draftCatalogTree.treeNodesMap[action.payload[0].parentId].children = childNodeIds;
            const parentNode = draftCatalogTree.treeNodesMap[action.payload[0].parentId];
            if (!parentNode.hasChildren && action.payload.length) {
                parentNode.hasChildren = true;
            }
            return draftCatalogTree;
        }
        case actions.SET_EXPANDED_KEYS: {
            const { expandedKeys, module } = action.payload;
            switch (module) {
                case config_1.ConfigConstant.Modules.CATALOG: {
                    draftCatalogTree.expandedKeys = expandedKeys;
                    break;
                }
                case config_1.ConfigConstant.Modules.FAVORITE: {
                    draftCatalogTree.favoriteExpandedKeys = expandedKeys;
                    break;
                }
            }
            return draftCatalogTree;
        }
        case actions.SET_LOADED_KEYS: {
            draftCatalogTree.loadedKeys = action.payload;
            return draftCatalogTree;
        }
        case actions.INIT_CATALOG_TREE: {
            return defaultState;
        }
        case actions.SET_COPY_NODE_ID: {
            draftCatalogTree.copyNodeId = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_ALL_VISIBLE: {
            draftCatalogTree.allVisible = action.payload;
            return draftCatalogTree;
        }
        case actions.TREE_LOADING: {
            const { loading, module } = action.payload;
            switch (module) {
                case config_1.ConfigConstant.Modules.CATALOG: {
                    draftCatalogTree.loading = loading;
                    break;
                }
                case config_1.ConfigConstant.Modules.FAVORITE: {
                    draftCatalogTree.favoriteLoading = loading;
                    break;
                }
            }
            return draftCatalogTree;
        }
        case actions.UPDATE_HAS_CHILDREN: {
            updateHasChildren(draftCatalogTree.treeNodesMap, action.payload);
            return draftCatalogTree;
        }
        case actions.NODE_MOVE_TO: {
            const { nodeId, targetNodeId, pos } = action.payload;
            const prevName = draftCatalogTree.treeNodesMap[nodeId].nodeName;
            moveTo(draftCatalogTree.treeNodesMap, nodeId, targetNodeId, pos);
            if (prevName !== draftCatalogTree.treeNodesMap[nodeId].nodeName) {
                draftCatalogTree.editNodeId = nodeId;
            }
            return draftCatalogTree;
        }
        case actions.UPDATE_TREE_NODES_MAP: {
            const { nodeId, data } = action.payload;
            if (!draftCatalogTree.treeNodesMap[nodeId]) {
                return draftCatalogTree;
            }
            draftCatalogTree.treeNodesMap[nodeId] = Object.assign(Object.assign({}, draftCatalogTree.treeNodesMap[nodeId]), data);
            return draftCatalogTree;
        }
        case actions.CLEAR_NODE: {
            draftCatalogTree.node = null;
            return draftCatalogTree;
        }
        case actions.UPDATE_IS_PERMISSION: {
            draftCatalogTree.isPermission = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_SOCKET_DATA: {
            draftCatalogTree.socketData = action.payload;
            return draftCatalogTree;
        }
        case actions.ADD_NODE_TO_FAVORITE_LIST: {
            const { nodeIds } = action.payload;
            if (!nodeIds.length || !draftCatalogTree.favoriteTreeNodeIds.length) {
                draftCatalogTree.favoriteTreeNodeIds = nodeIds;
                return draftCatalogTree;
            }
            draftCatalogTree.favoriteTreeNodeIds = [...nodeIds, ...draftCatalogTree.favoriteTreeNodeIds];
            return draftCatalogTree;
        }
        case actions.REMOVE_FAVORITE_NODE: {
            (0, exports.removeFavoriteNode)(draftCatalogTree, action.payload);
            return draftCatalogTree;
        }
        case actions.DELETE_NODE_FROM_FAVORITE_LIST: {
            const deleteNodeId = action.payload.nodeId;
            if (draftCatalogTree.favoriteTreeNodeIds.findIndex(id => id === deleteNodeId) !== -1) {
                draftCatalogTree.favoriteTreeNodeIds = draftCatalogTree.favoriteTreeNodeIds.filter(id => id !== deleteNodeId);
            }
            return draftCatalogTree;
        }
        case actions.INIT_FAVORITE_TREE_NODES: {
            draftCatalogTree.favoriteTreeNodeIds = [];
            return draftCatalogTree;
        }
        case actions.MOVE_FAVORITE_NODE: {
            (0, exports.moveFavoriteNode)(draftCatalogTree, action.payload);
            return draftCatalogTree;
        }
        case actions.SET_ACTIVE_NODE_ERROR: {
            draftCatalogTree.activeNodeError = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_PERMISSION_MODAL_NODE_ID: {
            draftCatalogTree.permissionModalNodeId = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_SHARE_MODAL_NODE_ID: {
            draftCatalogTree.shareModalNodeId = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_SAVE_AS_TEMPLATE_MODAL_NODE_ID: {
            draftCatalogTree.saveAsTemplateModalNodeId = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_IMPORT_MODAL_NODE_ID: {
            draftCatalogTree.importModalNodeId = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_TREE_ROOT_ID: {
            draftCatalogTree.rootId = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_PERMISSION_COMMIT_REMIND_STATUS: {
            draftCatalogTree.permissionCommitRemindStatus = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_PERMISSION_COMMIT_REMIND_PARAMETER: {
            draftCatalogTree.permissionCommitRemindParameter = action.payload;
            return draftCatalogTree;
        }
        case actions.SET_NO_PERMISSION_MEMBERS: {
            draftCatalogTree.noPermissionMembers = action.payload;
            return draftCatalogTree;
        }
        case actions.UPDATE_MOVE_TO_NODE_IDS: {
            draftCatalogTree.moveToNodeIds = action.payload;
            return draftCatalogTree;
        }
        default:
            return draftCatalogTree;
    }
}, defaultState);
/**
 * delete node
 * attention, sub nodes may be a favorite(star).
 * it need to update favorite trees.
 * @param tree
 * @param optNode the nodes info that will deleted
 */
const deleteNode = (catalogTree, optNode) => {
    const { treeNodesMap, favoriteTreeNodeIds, delNodeId, editNodeId, favoriteEditNodeId, favoriteDelNodeId, permissionModalNodeId, shareModalNodeId, saveAsTemplateModalNodeId, importModalNodeId, expandedKeys, loadedKeys } = catalogTree;
    // the nodeIDs collection that is operating
    const operationsIdArr = [delNodeId, editNodeId, favoriteEditNodeId, favoriteDelNodeId, permissionModalNodeId,
        shareModalNodeId, saveAsTemplateModalNodeId, importModalNodeId];
    const { nodeId, parentId } = optNode;
    const parentNode = treeNodesMap[parentId];
    const deleteIds = (0, utils_1.collectProperty)(treeNodesMap, nodeId);
    if (parentNode) {
        const nextNodeId = parentNode.children[parentNode.children.findIndex(item => item === nodeId) + 1];
        const nextNode = treeNodesMap[nextNodeId];
        if (nextNode && nextNode.preNodeId === nodeId) {
            nextNode.preNodeId = treeNodesMap[nodeId].preNodeId;
        }
        parentNode.children = parentNode.children.filter(id => id !== nodeId);
    }
    for (const nodeId of deleteIds) {
        if (operationsIdArr.includes(nodeId)) {
            catalogTree.delNodeId = '';
            catalogTree.editNodeId = '';
            catalogTree.favoriteEditNodeId = '';
            catalogTree.favoriteDelNodeId = '';
            catalogTree.permissionModalNodeId = '';
            catalogTree.shareModalNodeId = '';
            catalogTree.saveAsTemplateModalNodeId = '';
            catalogTree.importModalNodeId = '';
        }
        if (loadedKeys.includes(nodeId)) {
            catalogTree.loadedKeys = loadedKeys.filter(item => item !== nodeId);
        }
        if (favoriteTreeNodeIds.findIndex(id => id === nodeId) !== -1) {
            (0, exports.removeFavoriteNode)(catalogTree, nodeId);
        }
        // remove the deleted node from expanded collection
        if (expandedKeys.includes(nodeId)) {
            catalogTree.expandedKeys = expandedKeys.filter(item => item !== nodeId);
        }
        delete treeNodesMap[nodeId];
    }
};
/**
 * add nodes to treeNodeMap (catalog tree data source)
 *
 * @param treeNodesMap map of tree
 * @param data tree nodes info
 */
const addNodeToMap = (catalogTree, data, isCoverChildren) => {
    const { treeNodesMap } = catalogTree;
    data.forEach(node => {
        var _a, _b;
        const { nodeId, parentId } = node;
        const parentNode = treeNodesMap[parentId];
        // if nodes don't exist in data, and have no children property, it need to add children property
        if (!treeNodesMap[nodeId] && !(node === null || node === void 0 ? void 0 : node.children)) {
            node = Object.assign(Object.assign({}, node), { children: [] });
        }
        // whether to put this node into the collection of loaded nodes
        if (node.hasChildren && node.type === config_1.ConfigConstant.NodeType.FOLDER && ((_a = node.children) === null || _a === void 0 ? void 0 : _a.length) && !catalogTree.loadedKeys.includes(nodeId)) {
            catalogTree.loadedKeys = [...catalogTree.loadedKeys, nodeId];
        }
        if (isCoverChildren) {
            treeNodesMap[nodeId] = Object.assign(Object.assign({}, treeNodesMap[nodeId]), node);
        }
        else {
            const children = ((_b = treeNodesMap[nodeId]) === null || _b === void 0 ? void 0 : _b.children) || node.children;
            treeNodesMap[nodeId] = Object.assign(Object.assign(Object.assign({}, treeNodesMap[nodeId]), node), { children: children });
        }
        if (!parentNode) {
            return;
        }
        // whether to put this node into the collection of loaded nodes
        if (!catalogTree.loadedKeys.includes(parentId) && parentNode.type === config_1.ConfigConstant.NodeType.FOLDER) {
            catalogTree.loadedKeys = [...catalogTree.loadedKeys, parentId];
        }
        // update parent node's hasChildren property
        if (!parentNode.hasChildren) {
            parentNode.hasChildren = true;
        }
        // update parent node's first child node's prevNodeId property
        if (parentNode.children.length && !parentNode.children.includes(nodeId)) {
            treeNodesMap[parentNode.children[0]].preNodeId = '';
        }
        // whether this node has been added to children
        let isAdded = false;
        // update parent node's children property
        if (!parentNode.children.includes(nodeId)) {
            if (node.preNodeId) {
                parentNode.children = parentNode.children.reduce((prev, item, index) => {
                    prev.push(item);
                    if (item === node.preNodeId || (!prev.includes(nodeId) && index === parentNode.children.length - 1)) {
                        isAdded = true;
                        prev.push(nodeId);
                    }
                    return prev;
                }, []);
            }
            else {
                isAdded = true;
                parentNode.children = [nodeId, ...parentNode.children];
            }
            if (!isAdded) {
                parentNode.children = [...parentNode.children, nodeId];
            }
        }
    });
};
/**
 * update node's hasChildren state
 * @param treeNodesMap
 * @param tree
 * @param parentId
 */
const updateHasChildren = (treeNodesMap, parentId) => {
    const parentNode = treeNodesMap[parentId];
    if (!parentNode) {
        return;
    }
    if (parentNode.children.length && !treeNodesMap[parentId].hasChildren) {
        treeNodesMap[parentId].hasChildren = true;
        return;
    }
    if (!parentNode.children.length && treeNodesMap[parentId].hasChildren) {
        treeNodesMap[parentId].hasChildren = false;
    }
};
const moveTo = (treeNodesMap, nodeId, targetNodeId, pos) => {
    if (pos === 0) {
        crossLevelMove(treeNodesMap, nodeId, targetNodeId, pos);
    }
    // the parent node id for the dragged node
    const parentNodeId = treeNodesMap[nodeId].parentId;
    const targetParentNodeId = treeNodesMap[targetNodeId].parentId;
    // if two nodes' parents are the same, it means that they are moved in the same level
    if (parentNodeId === targetParentNodeId) {
        sameLevelMove(treeNodesMap, nodeId, targetNodeId, pos);
    }
    else {
        crossLevelMove(treeNodesMap, nodeId, targetNodeId, pos);
    }
};
/**
 * move in the same level
 *
 * @param treeNodes tree nodes
 * @param treeNodesMap the map of tree nodes
 * @param nodeId be moved nodes
 * @param targetNodeId target node
 * @param pos relative target node's position
 */
const sameLevelMove = (treeNodesMap, nodeId, targetNodeId, pos) => {
    const parentNodeId = treeNodesMap[nodeId].parentId;
    const parentNode = treeNodesMap[parentNodeId];
    const targetParentNode = treeNodesMap[treeNodesMap[targetNodeId].parentId];
    const dragNode = treeNodesMap[nodeId];
    if (!parentNode || !dragNode) {
        return;
    }
    const nextNodeId = parentNode.children[parentNode.children.findIndex(id => id === nodeId) + 1];
    // whether affect the preNodeId of the next node of the moved node
    if (nextNodeId && treeNodesMap[nextNodeId].preNodeId === nodeId) {
        treeNodesMap[nextNodeId].preNodeId = dragNode.preNodeId;
    }
    // update the node which is affected by the target position
    if (pos === -1) {
        dragNode.preNodeId = treeNodesMap[targetNodeId].preNodeId;
        treeNodesMap[targetNodeId].preNodeId = nodeId;
    }
    if (pos === 1) {
        dragNode.preNodeId = targetNodeId;
        const nextNodeIdOfTargetNode = targetParentNode.children[targetParentNode.children.findIndex(id => id === targetNodeId) + 1];
        if (nextNodeIdOfTargetNode && treeNodesMap[nextNodeIdOfTargetNode].preNodeId === targetNodeId) {
            treeNodesMap[nextNodeIdOfTargetNode].preNodeId = nodeId;
        }
    }
    parentNode.children = parentNode.children.reduce((prevNodeIds, id) => {
        // delete node from original position
        if (id === nodeId) {
            return prevNodeIds;
        }
        if (id === targetNodeId) {
            // move the dragged node to the front of the target node
            pos === -1 && prevNodeIds.push(nodeId) && prevNodeIds.push(id);
            // move the dragged node to the back of the target node
            pos === 1 && prevNodeIds.push(id) && prevNodeIds.push(nodeId);
        }
        else {
            prevNodeIds.push(id);
        }
        return prevNodeIds;
    }, []);
};
/**
 * cross level move
 * @param treeNodesMap the collection of catalog tree's nodes info
 * @param nodeId moved node
 * @param targetNodeId target node ID
 * @param pos relative target node's position
 */
const crossLevelMove = (treeNodesMap, nodeId, targetNodeId, pos) => {
    const parentNodeId = treeNodesMap[nodeId].parentId;
    const targetParentNodeId = pos === 0 ? targetNodeId : treeNodesMap[targetNodeId].parentId;
    const parentNode = treeNodesMap[parentNodeId];
    const targetParentNode = treeNodesMap[targetParentNodeId];
    const dragNode = treeNodesMap[nodeId];
    if (!parentNode || !targetParentNode || !dragNode) {
        return;
    }
    parentNode.children = parentNode.children.filter(id => id !== nodeId);
    if (pos === 0) {
        targetParentNode.children.unshift(nodeId);
    }
    else {
        targetParentNode.children = targetParentNode.children.reduce((preNodeIds, id) => {
            if (id === targetNodeId) {
                // move the dragged node to the front of the target node
                pos === -1 && preNodeIds.push(nodeId) && preNodeIds.push(id);
                // move the dragged node to the back of the target node
                pos === 1 && preNodeIds.push(id) && preNodeIds.push(nodeId);
            }
            else {
                preNodeIds.push(id);
            }
            return preNodeIds;
        }, []);
    }
    // last modified the parent node of the moved node
    treeNodesMap[nodeId].parentId = targetParentNodeId;
    const names = (0, exports.getPropertyByTree)(treeNodesMap, targetParentNodeId, [nodeId], 'nodeName');
    treeNodesMap[nodeId].nodeName = (0, utils_1.getUniqName)(treeNodesMap[nodeId].nodeName, names);
};
/**
 * get current node's children's property
 * @param treeNodesMap data source tree of nodes
 * @param treeNodes nodes tree
 * @param nodeId the node id want to find
 * @param exceptArr the node id will remove
 * @param property the node attributes to get
 */
const getPropertyByTree = (treeNodesMap, nodeId, exceptArr, property) => {
    const node = treeNodesMap[nodeId];
    if (!node) {
        return [];
    }
    return node.children.reduce((names, nodeId) => {
        if (!exceptArr.includes(nodeId)) {
            names.push(treeNodesMap[nodeId][property]);
        }
        return names;
    }, []);
};
exports.getPropertyByTree = getPropertyByTree;
const mergeObj = (oldTree, newTree, treeNodesMap) => {
    oldTree.forEach(item => {
        const node = (0, utils_1.findNode)(newTree, item.nodeId);
        if (item.children.length === 0 && node && node.children.length) {
            item.children = node.children;
        }
        else {
            (0, exports.mergeObj)(item.children, newTree, treeNodesMap);
        }
    });
};
exports.mergeObj = mergeObj;
/**
 * (newest)
 * attention: when you pass in multiple nodes,
 * you need to note that these multiple nodes must be the children of the same parent node
 *
 * @param tree
 * @param newNode
 */
const addNodeToTree = (tree, newNode) => {
    // single node
    if (!Array.isArray(newNode)) {
        (0, exports.addSingleNodeToTree)(tree, newNode);
    }
    else {
        (0, exports.addMultiNodeToTree)(tree, newNode);
    }
};
exports.addNodeToTree = addNodeToTree;
/**
 * a single node to tree
 *
 * @param tree
 * @param newNode
 * @returns
 */
const addSingleNodeToTree = (tree, newNode) => {
    const { nodeId, parentId, preNodeId } = newNode;
    const parentNode = (0, utils_1.findNode)(tree, parentId);
    if (!parentNode) {
        return;
    }
    // if no pre nodes, the default position is the first position of the parent node
    if (!preNodeId) {
        parentNode.children.unshift({ nodeId, children: [] });
        return;
    }
    const index = parentNode.children.findIndex(item => item.nodeId === preNodeId);
    if (index !== -1) {
        parentNode.children.splice(index + 1, 0, { nodeId, children: [] });
    }
};
exports.addSingleNodeToTree = addSingleNodeToTree;
/**
 * new multi nodes
 *
 * @param tree
 * @param newNodes
 * @returns
 */
const addMultiNodeToTree = (tree, newNodes) => {
    const { parentId } = newNodes[0];
    const parentNode = (0, utils_1.findNode)(tree, parentId);
    if (!parentNode) {
        return;
    }
    const formatNodes = newNodes.map(item => ({ nodeId: item.nodeId, children: [] }));
    parentNode.children = formatNodes;
};
exports.addMultiNodeToTree = addMultiNodeToTree;
const moveFavoriteNode = (draftCatalogTree, data) => {
    const { favoriteTreeNodeIds } = draftCatalogTree;
    const { nodeId, preNodeId } = data;
    if (!favoriteTreeNodeIds.includes(nodeId)) {
        return;
    }
    draftCatalogTree.favoriteTreeNodeIds = favoriteTreeNodeIds.reduce((prev, id, index) => {
        if (index === 0 && !preNodeId) {
            prev.push(nodeId);
        }
        if (id !== nodeId) {
            prev.push(id);
        }
        if (id === preNodeId) {
            prev.push(nodeId);
        }
        return prev;
    }, []);
};
exports.moveFavoriteNode = moveFavoriteNode;
/**
 * cancel favorite star
 * not only remove nodes from favorite trees, but also update node's next node's info(position)
 *
 * @param catalogTree
 * @param removeNodeId the node that cancel favorite
 */
const removeFavoriteNode = (catalogTree, removeNodeId) => {
    const { favoriteTreeNodeIds, treeNodesMap } = catalogTree;
    const removeIndex = favoriteTreeNodeIds.findIndex(id => id === removeNodeId);
    if (favoriteTreeNodeIds.length > 1 && removeIndex !== favoriteTreeNodeIds.length - 1) {
        const nextNodeId = favoriteTreeNodeIds[removeIndex + 1];
        treeNodesMap[nextNodeId].preFavoriteNodeId = removeIndex === 0 ? '' : treeNodesMap[removeNodeId].preFavoriteNodeId;
    }
    catalogTree.favoriteTreeNodeIds = favoriteTreeNodeIds.filter(id => id !== removeNodeId);
    delete treeNodesMap[removeNodeId].preFavoriteNodeId;
};
exports.removeFavoriteNode = removeFavoriteNode;


/***/ }),

/***/ 40034:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.labs = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const actions = __importStar(__webpack_require__(86256));
const defaultLabs = [];
exports.labs = (0, immer_1.default)((labs = defaultLabs, action) => {
    switch (action.type) {
        case actions.SET_LABS: {
            labs = action.payload;
            return labs;
        }
        default:
            return labs;
    }
}, defaultLabs);


/***/ }),

/***/ 46601:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.share = void 0;
const immer_1 = __importDefault(__webpack_require__(7133));
const actions = __importStar(__webpack_require__(86256));
const defaultShareInfo = {};
exports.share = (0, immer_1.default)((shareInfoDraft = defaultShareInfo, action) => {
    switch (action.type) {
        case actions.SET_SHARE_INFO: {
            return Object.assign(Object.assign({}, shareInfoDraft), action.payload);
        }
        default:
            return shareInfoDraft;
    }
}, defaultShareInfo);


/***/ }),

/***/ 57754:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.space = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultSpace = {
    spaceList: [],
    curSpaceInfo: null,
    spaceFeatures: null,
    quitSpaceId: '',
    loading: false,
    reconnecting: false,
    connected: false,
    err: null,
    screenWidth: null,
    sideBarVisible: true,
    shortcutKeyPanelVisible: false,
    isApiPanelOpen: false,
    isSideRecordOpen: false,
    isRecordFullScreen: false,
    marketplaceApps: [],
    previewModalVisible: false,
    activeId: null,
    envs: {}
};
exports.space = (0, immer_1.produce)((spaceDraft = defaultSpace, action) => {
    switch (action.type) {
        case actions.SET_SPACE_LIST: {
            spaceDraft.spaceList = action.payload;
            return spaceDraft;
        }
        case actions.SET_QUIT_SPACE_ID: {
            spaceDraft.quitSpaceId = action.payload;
            return spaceDraft;
        }
        case actions.SET_SPACE_ERR: {
            spaceDraft.err = action.payload;
            return spaceDraft;
        }
        case actions.SET_SPACE_LOADING: {
            spaceDraft.loading = action.payload;
            return spaceDraft;
        }
        case actions.SET_SPACE_INFO: {
            spaceDraft.curSpaceInfo = Object.assign({}, spaceDraft.curSpaceInfo, action.payload);
            return spaceDraft;
        }
        case actions.SET_SPACE_FEATURES: {
            spaceDraft.spaceFeatures = Object.assign({}, spaceDraft.spaceFeatures, action.payload);
            return spaceDraft;
        }
        case actions.SET_RECONNECTING: {
            spaceDraft.reconnecting = action.payload;
            return spaceDraft;
        }
        case actions.SET_CONNECTED: {
            spaceDraft.connected = action.payload;
            return spaceDraft;
        }
        case actions.SET_SCREEN_WIDTH: {
            spaceDraft.screenWidth = action.payload;
            return spaceDraft;
        }
        case actions.SET_SIDEBAR_VISIBLE: {
            spaceDraft.sideBarVisible = action.payload;
            return spaceDraft;
        }
        case actions.SET_PREVIEW_MODAL_VISIBLE: {
            spaceDraft.previewModalVisible = action.payload;
            return spaceDraft;
        }
        case actions.SET_SHORTCUT_KEY_PANEL_VISIBLE: {
            spaceDraft.shortcutKeyPanelVisible = action.payload;
            return spaceDraft;
        }
        case actions.TOGGLE_API_PANEL: {
            spaceDraft.isApiPanelOpen = action.payload != null ? action.payload : !spaceDraft.isApiPanelOpen;
            return spaceDraft;
        }
        case actions.TOGGLE_SIDE_RECORD_PANEL: {
            spaceDraft.isSideRecordOpen = action.payload != null ? action.payload : !spaceDraft.isSideRecordOpen;
            return spaceDraft;
        }
        case actions.TOGGLE_RECORD_PANEL_FULL_SCREEN: {
            spaceDraft.isRecordFullScreen = action.payload != null ? action.payload : !spaceDraft.isRecordFullScreen;
            return spaceDraft;
        }
        case actions.SET_MARKETPLACE_APPS: {
            spaceDraft.marketplaceApps = action.payload;
            return spaceDraft;
        }
        case actions.SET_ACTIVE_SPACE_ID: {
            spaceDraft.activeId = action.payload;
            if (spaceDraft.curSpaceInfo) {
                spaceDraft.curSpaceInfo.lastUpdateTime = 0;
            }
            return spaceDraft;
        }
        case actions.SET_ENVS: {
            spaceDraft.envs = action.payload;
            return spaceDraft;
        }
        default:
            return spaceDraft;
    }
}, defaultSpace);


/***/ }),

/***/ 66072:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.templateCentre = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultTemplateCentre = {
    category: [],
    directory: null,
};
exports.templateCentre = (0, immer_1.produce)((draftSidebar = defaultTemplateCentre, action) => {
    switch (action.type) {
        case actions.UPDATE_TEMPLATE_CATEGORY: {
            draftSidebar.category = action.payload;
            return draftSidebar;
        }
        case actions.UPDATE_TEMPLATE_DIRECTORY: {
            draftSidebar.directory = action.payload;
            return draftSidebar;
        }
        default:
            return draftSidebar;
    }
}, defaultTemplateCentre);


/***/ }),

/***/ 96380:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.labsFeatureOpen = void 0;
const labsFeatureOpen = (state, key) => {
    return state.labs.includes(key);
};
exports.labsFeatureOpen = labsFeatureOpen;


/***/ }),

/***/ 26383:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.activeSpaceId = void 0;
const activeSpaceId = (state) => {
    return state.space.activeId;
};
exports.activeSpaceId = activeSpaceId;


/***/ }),

/***/ 35568:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.flatNodeTree = void 0;
/**
 * flat tree(transfer tree structure to one dimension array)
 *
 * @param nodeTree tree type of INode
 */
const flatNodeTree = (nodeTree) => {
    return nodeTree.reduce((prev, item) => {
        var _a;
        const nodeItem = Object.assign(Object.assign({}, item), { errType: null, children: ((_a = item.children) === null || _a === void 0 ? void 0 : _a.map(child => child.nodeId)) || [] });
        prev.push(nodeItem);
        if (Array.isArray(item.children) && item.children.length > 0) {
            prev.push(...(0, exports.flatNodeTree)(item.children));
        }
        return prev;
    }, []);
};
exports.flatNodeTree = flatNodeTree;


/***/ }),

/***/ 27909:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.refreshApiKey = exports.createApiKey = exports.retrievePwd = exports.updatePwd = exports.isExistEmail = exports.emailCodeVerify = exports.smsVerify = exports.bindMobile = exports.bindEmail = exports.getEmailCode = exports.getSmsCode = exports.register = exports.signUp = exports.revokeLogout = exports.logout = exports.signOut = exports.signIn = exports.signInOrSignUp = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(28215));
/**
 * Login / Register (get identity token directly)
 * @param data
 * @returns
 */
function signInOrSignUp(data) {
    return axios_1.default.post(Url.SIGN_IN_OR_SIGN_UP, Object.assign({}, data));
}
exports.signInOrSignUp = signInOrSignUp;
/**
 * Sign In
 * @param data
 * @returns
 */
function signIn(data) {
    return axios_1.default.post(Url.SIGN_IN, Object.assign({}, data));
}
exports.signIn = signIn;
/**
 * Sign Out
 *
 * @returns
 */
function signOut() {
    return axios_1.default.post(Url.SIGN_OUT);
}
exports.signOut = signOut;
/**
 * Close the user, delete the account
 *
 * @returns
 */
function logout() {
    return axios_1.default.post(Url.CLOSE_USER);
}
exports.logout = logout;
/**
 * Cancel close the user, cancel delete the account
 * @returns
 */
function revokeLogout() {
    return axios_1.default.post(Url.CANCEL_CLOSE_USER);
}
exports.revokeLogout = revokeLogout;
/**
 *
 * Register
 *
 * @param phone phone number
 * @param password password
 * @param code verify code
 */
function signUp(token, inviteCode) {
    return axios_1.default.post(Url.SIGN_UP, {
        token,
        inviteCode,
    });
}
exports.signUp = signUp;
/**
 * APITable CE Register
 *
 */
function register(username, credential) {
    return axios_1.default.post(Url.REGISTER, {
        username,
        credential
    });
}
exports.register = register;
/**
 *
 * Get phone verification code
 *
 * @param phone Phone Number
 * @param type 1:Register, 3:Edit password
 * @param data CAPTCHA arguments
 */
function getSmsCode(areaCode, phone, type, data) {
    return axios_1.default.post(Url.SEND_SMS_CODE, {
        areaCode,
        phone,
        type,
        data,
    });
}
exports.getSmsCode = getSmsCode;
/**
 * Get Email Verify Code
 *
 * @param email mail
 */
function getEmailCode(email, type) {
    return axios_1.default.post(Url.SEND_EMAIL_CODE, {
        email,
        type,
    });
}
exports.getEmailCode = getEmailCode;
/**
 * Bind the email
 * @param email
 * @param code
 */
function bindEmail(email, code) {
    return axios_1.default.post(Url.BIND_EMAIL, {
        email,
        code,
    });
}
exports.bindEmail = bindEmail;
/**
 * Bind the mobile phone
 *
 * @param phone
 * @param code
 */
function bindMobile(areaCode, phone, code) {
    return axios_1.default.post(Url.BIND_MOBILE, {
        areaCode,
        phone,
        code,
    });
}
exports.bindMobile = bindMobile;
/**
 * Verify the mobile phone code
 * @param phone
 * @param code
 */
function smsVerify(areaCode, phone, code) {
    return axios_1.default.post(Url.VALIDATE_SMS_CODE, {
        areaCode,
        phone,
        code,
    });
}
exports.smsVerify = smsVerify;
/**
 * Verify the email code
 * When you don't have a mobile phone
 * you can verify your identity before changing your mailbox or changing the main administrator
 */
function emailCodeVerify(email, code) {
    return axios_1.default.post(Url.VALIDATE_EMAIL_CODE, {
        email,
        code,
    });
}
exports.emailCodeVerify = emailCodeVerify;
/**
 * Check whether the email exists in the space
 * @param email
 */
function isExistEmail(email) {
    return axios_1.default.get(Url.EXIST_EMAIL, {
        params: {
            email,
        },
    });
}
exports.isExistEmail = isExistEmail;
/**
 * Edit password
 * @param phone
 * @param code verify code
 * @param password password
 */
function updatePwd(password, code, type) {
    return axios_1.default.post(Url.UPDATE_PWD, {
        code,
        password,
        type,
    });
}
exports.updatePwd = updatePwd;
/**
 * Forgot password
 *
 * @param phone
 * @param password
 */
function retrievePwd(areaCode, username, code, password, type) {
    return axios_1.default.post(Url.RETRIEVE_PWD, {
        areaCode,
        username,
        code,
        password,
        type,
    });
}
exports.retrievePwd = retrievePwd;
/**
 * create developer access token
 * @returns
 */
function createApiKey() {
    return axios_1.default.post(Url.CREATE_API_KEY);
}
exports.createApiKey = createApiKey;
/**
 * refresh developer access token
 * @param code
 * @param type
 * @returns
 */
function refreshApiKey(code, type) {
    return axios_1.default.post(Url.REFRESH_API_KEY, { code, type });
}
exports.refreshApiKey = refreshApiKey;


/***/ }),

/***/ 67378:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.updateOwnerMemberInfo = exports.updateUser = exports.emailBind = exports.submitInviteCode = exports.linkInviteEmail = exports.validateEmail = exports.getUserCanLogout = exports.getUserMe = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(28215));
/**
 *
 * Get My Info
 *
 * @param locateIdMap
 * @param filter
 * @param headers
 * @returns
 */
function getUserMe(locateIdMap = { spaceId: '', nodeId: '' }, filter = false, headers) {
    return axios_1.default.get(Url.USER_ME, {
        params: Object.assign(Object.assign({}, locateIdMap), { filter }),
        headers,
    });
}
exports.getUserMe = getUserMe;
/**
 * Check user can delete or close
 * @returns
 */
function getUserCanLogout() {
    return axios_1.default.get(Url.USER_CAN_LOGOUT);
}
exports.getUserCanLogout = getUserCanLogout;
/**
 *
 * Space - check if the user's email is the same as the specified email
 * @param email
 * @returns
 */
function validateEmail(email) {
    return axios_1.default.post(Url.EMAIL_VALIDATE, { email });
}
exports.validateEmail = validateEmail;
/**
 *
 * Space - binding the invited email
 *
 * @param spaceId
 * @param email
 * @returns
 */
function linkInviteEmail(spaceId, email) {
    return axios_1.default.post(Url.LINK_INVITE_EMAIL, { spaceId, email });
}
exports.linkInviteEmail = linkInviteEmail;
/**
 * invite code reward
 */
function submitInviteCode(inviteCode) {
    return axios_1.default.post(Url.INVITE_CODE_REWARD, { inviteCode });
}
exports.submitInviteCode = submitInviteCode;
/**
 * Space - check if the user has bound the email
 */
function emailBind() {
    return axios_1.default.get(Url.EMAIL_BIND);
}
exports.emailBind = emailBind;
/**
 * Update (Edit) the user info
 * @param info
 */
function updateUser(info) {
    return axios_1.default.post(Url.UPDATE_USER, info);
}
exports.updateUser = updateUser;
/**
 * Edit Member Info and nickname
 * @param memberName nickname
 */
function updateOwnerMemberInfo(memberName) {
    return axios_1.default.post(Url.MEMBER_UPDATE, { memberName });
}
exports.updateOwnerMemberInfo = updateOwnerMemberInfo;


/***/ }),

/***/ 43633:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.REGISTER = exports.INVITE_EMAIL_VERIFY = exports.VALIDATE_EMAIL_CODE = exports.VALIDATE_SMS_CODE = exports.SEND_EMAIL_CODE = exports.SEND_SMS_CODE = exports.SIGN_UP = exports.SIGN_IN = exports.SIGN_OUT = exports.SIGN_IN_OR_SIGN_UP = void 0;
// login signin, register
exports.SIGN_IN_OR_SIGN_UP = '/signIn';
// logout, sign out
exports.SIGN_OUT = '/signOut';
/**
 * login, sign in, deprecated
 *
 * @deprecate
 */
exports.SIGN_IN = '/auth/signIn';
/**
  * register, sign up, deprecated
  *
  * @deprecate
  */
exports.SIGN_UP = '/auth/signUp';
// ================ Authorization======================
// ================ Public stuffs ======================
/**
 * Send SMS verify code
 */
exports.SEND_SMS_CODE = '/base/action/sms/code';
/**
  * Send email verify code
  */
exports.SEND_EMAIL_CODE = '/base/action/mail/code';
/**
  * Validate SMS verify code
  */
exports.VALIDATE_SMS_CODE = '/base/action/sms/code/validate';
/**
  *
  * Validate email verify code.
  *
  * When to use:
  *   change email or space main admin when no phone number.
  *
  */
exports.VALIDATE_EMAIL_CODE = '/base/action/email/code/validate';
/**
  * Space - invite verify code validate
  */
exports.INVITE_EMAIL_VERIFY = '/base/action/invite/valid';
exports.REGISTER = '/register';


/***/ }),

/***/ 22568:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.CANCEL_CLOSE_USER = exports.CLOSE_USER = exports.INVITE_CODE_REWARD = exports.USER_UNBIND_EMAIL = exports.USER_UNBIND_MOBILE = exports.USER_INTEGRAL_RECORDS = exports.USER_CREDIT = exports.UN_BIND = exports.BIND_MOBILE = exports.BIND_EMAIL = exports.REFRESH_API_KEY = exports.CREATE_API_KEY = exports.RETRIEVE_PWD = exports.UPDATE_PWD = exports.UPDATE_USER = exports.EMAIL_BIND = exports.LINK_INVITE_EMAIL = exports.EMAIL_VALIDATE = exports.USER_VALIDATE = exports.USER_CAN_LOGOUT = exports.USER_ME = void 0;
// ================ Account ======================
/**
 * Get My Info (me)
 */
exports.USER_ME = '/user/me';
/**
  * Check if the user can close or delete
  */
exports.USER_CAN_LOGOUT = '/user/checkForClosing';
/**
  * Validate phone number and check if it has been registered
  */
exports.USER_VALIDATE = '/user/validate';
/**
  * Space - check if the user's email is the same as the specified email
  */
exports.EMAIL_VALIDATE = '/user/validate/email';
/**
  * Space - binding the invited email
  */
exports.LINK_INVITE_EMAIL = '/user/link/inviteEmail';
/**
  * Space - check if the user has bound the email
  */
exports.EMAIL_BIND = '/user/email/bind';
/**
  * Update (Edit) the user info
  */
exports.UPDATE_USER = '/user/update';
/**
  * Change password
  */
exports.UPDATE_PWD = '/user/updatePwd';
/**
  * Getting back the password
  */
exports.RETRIEVE_PWD = '/user/retrievePwd';
/**
  * Create developer access token
  */
exports.CREATE_API_KEY = '/user/createApiKey';
/**
  * Refresh developer access token
  */
exports.REFRESH_API_KEY = '/user/refreshApiKey';
/**
  * Bind Email
  */
exports.BIND_EMAIL = '/user/bindEmail';
/**
  * Bind phone number
  */
exports.BIND_MOBILE = '/user/bindPhone';
/**
  * UnBind 3rd social account
  */
exports.UN_BIND = '/user/unbind';
/**
  * Get user's points/credit
  */
exports.USER_CREDIT = '/user/integral';
/**
  * query user's points/credit with with pagination
  */
exports.USER_INTEGRAL_RECORDS = '/user/integral/records';
/**
  * Unbind phone number
  */
exports.USER_UNBIND_MOBILE = '/user/unbindPhone';
/**
  * Unbind email
  */
exports.USER_UNBIND_EMAIL = '/user/unbindEmail';
/**
  * invite code reward
  */
exports.INVITE_CODE_REWARD = '/user/invite/reward';
// ================ User Authentication ====================
// Close user, delete user
exports.CLOSE_USER = '/user/applyForClosing';
// cancel delete user
exports.CANCEL_CLOSE_USER = '/user/cancelClosing';


/***/ }),

/***/ 32885:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getNewMsgFromWsAndLook = exports.updateNewNoticeListFromWs = exports.delUnReadNoticeList = exports.updateUnReadNoticeList = exports.updateReadNoticeList = exports.updateReadMsgCount = exports.updateUnReadMsgCount = void 0;
const actions = __importStar(__webpack_require__(86256));
/**
 * update unread notification count
 * @param count
 * @returns
 */
const updateUnReadMsgCount = (count) => {
    return {
        type: actions.UPDATE_UNREAD_MSG_COUNT,
        payload: count,
    };
};
exports.updateUnReadMsgCount = updateUnReadMsgCount;
const updateReadMsgCount = (count) => {
    return {
        type: actions.UPDATE_READ_MSG_COUNT,
        payload: count,
    };
};
exports.updateReadMsgCount = updateReadMsgCount;
/**
 * update notification that have read
 * @param list
 * @param unshift
 * @param push
 * @param updateCount
 * @returns
 */
const updateReadNoticeList = (list, unshift, push, updateCount) => {
    return {
        type: actions.UPDATE_READ_NOTICE_LIST,
        payload: { list, unshift, push, updateCount },
    };
};
exports.updateReadNoticeList = updateReadNoticeList;
const updateUnReadNoticeList = (list, unshift, push, updateCount) => {
    return {
        type: actions.UPDATE_UNREAD_NOTICE_LIST,
        payload: { list, unshift, push, updateCount },
    };
};
exports.updateUnReadNoticeList = updateUnReadNoticeList;
const delUnReadNoticeList = (idList, isAll) => {
    return {
        type: actions.DEL_UNREAD_NOTICE_LIST,
        payload: { idList, isAll },
    };
};
exports.delUnReadNoticeList = delUnReadNoticeList;
const updateNewNoticeListFromWs = (notice) => {
    return {
        type: actions.UPDATE_NEW_NOTICE_LIST_FROM_WS,
        payload: notice,
    };
};
exports.updateNewNoticeListFromWs = updateNewNoticeListFromWs;
const getNewMsgFromWsAndLook = (inNotice) => {
    return {
        type: actions.GET_NEW_MSG_FROM_WS_AND_LOOK,
        payload: inNotice,
    };
};
exports.getNewMsgFromWsAndLook = getNewMsgFromWsAndLook;


/***/ }),

/***/ 83739:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setActiveRecordId = exports.addWizardNumber = exports.updateUserInfoErr = exports.updateUserInfo = exports.unBindAccount = exports.updatePwd = exports.setHttpErrInfo = exports.setReqStatus = exports.getEmailCode = exports.setUserTimeZone = exports.setUserAvatarColor = exports.setUserAvatar = exports.signOut = exports.setNickName = exports.setLoading = exports.setIsLogin = exports.setUserMe = exports.getUserMe = exports.setHomeErr = exports.setUsedInviteReward = exports.setRegisterStatus = exports.setIsCode = exports.getRegisterCode = exports.signIn = void 0;
const api_1 = __webpack_require__(62625);
const space_1 = __webpack_require__(2187);
const config_1 = __webpack_require__(77511);
const actions = __importStar(__webpack_require__(86256));
/**
 * login
 * @param username
 * @param password
 */
const signIn = (data) => {
    return (dispatch) => {
        api_1.Api.signIn(data).then(res => {
            const { success, message, code } = res.data;
            if (success) {
                dispatch((0, exports.getUserMe)());
                dispatch((0, exports.setHomeErr)(null));
                dispatch((0, exports.setHttpErrInfo)(null));
            }
            else {
                dispatch((0, exports.setHomeErr)({
                    code,
                    msg: message,
                }));
            }
        });
    };
};
exports.signIn = signIn;
/**
 * get verify code in register
 * @param phone
 */
const getRegisterCode = (areaCode, phone) => {
    return (dispatch) => {
        api_1.Api.getSmsCode(areaCode, phone, config_1.ConfigConstant.REGISTER_ACCOUNT).then(res => {
            const { code, message } = res.data;
            dispatch((0, exports.setHomeErr)({
                code,
                msg: message,
            }));
        });
    };
};
exports.getRegisterCode = getRegisterCode;
/**
 * get current state of getting verify code
 * @param status current state
 */
const setIsCode = (status) => {
    return {
        type: actions.SET_IS_CODE,
        payload: status,
    };
};
exports.setIsCode = setIsCode;
/**
 * set current register state
 * @param status
 */
const setRegisterStatus = (status) => {
    return {
        type: actions.SET_REGISTER_STATUS,
        payload: status,
    };
};
exports.setRegisterStatus = setRegisterStatus;
/**
 * set state of whether used invite award
 * @param status new state
 */
const setUsedInviteReward = (status) => {
    return {
        type: actions.SET_USED_INVITE_REWARD,
        payload: status,
    };
};
exports.setUsedInviteReward = setUsedInviteReward;
/**
 * set error message on login
 * @param err
 */
const setHomeErr = (err) => {
    return {
        type: actions.SET_HOME_ERR,
        payload: err,
    };
};
exports.setHomeErr = setHomeErr;
/**
 * get my user info
 */
const getUserMe = (locateIdMap = {}) => {
    return (dispatch, getState) => {
        api_1.Api.getUserMe(locateIdMap).then(res => {
            const { success, data } = res.data;
            if (success) {
                const { needCreate, needPwd } = data;
                if (needPwd || needCreate) {
                    dispatch((0, exports.setUserMe)(data));
                    return;
                }
                dispatch((0, exports.setIsLogin)(true));
                dispatch((0, exports.setUserMe)(data));
                const state = getState();
                if (!state.space.activeId) {
                    dispatch((0, space_1.setActiveSpaceId)(data.spaceId));
                }
            }
            else {
                dispatch((0, exports.setIsLogin)(false));
            }
        });
    };
};
exports.getUserMe = getUserMe;
/**
 * set my user info
 * @param user
 */
const setUserMe = (user) => {
    return {
        type: actions.SET_USER_ME,
        payload: user,
    };
};
exports.setUserMe = setUserMe;
/**
 * set state of getting user info
 * @param status
 */
const setIsLogin = (status) => {
    return {
        type: actions.SET_IS_LOGIN,
        payload: status,
    };
};
exports.setIsLogin = setIsLogin;
/**
 * set loading state
 * @param status
 */
const setLoading = (status) => {
    return {
        type: actions.SET_LOADING,
        payload: status,
    };
};
exports.setLoading = setLoading;
/**
 * set nickname
 * @param nickName
 */
const setNickName = (nickName) => {
    return {
        type: actions.SET_NICKNAME,
        payload: nickName,
    };
};
exports.setNickName = setNickName;
/**
 * logout
 */
const signOut = () => {
    return {
        type: actions.SIGN_OUT,
    };
};
exports.signOut = signOut;
/**
 * set user avatar
 * @param avatar avatar url
 */
const setUserAvatar = (data) => {
    return {
        type: actions.SET_USER_AVATAR,
        payload: data,
    };
};
exports.setUserAvatar = setUserAvatar;
/**
 * set user avatar
 * @param avatar avatar url
 */
const setUserAvatarColor = (data) => {
    return {
        type: actions.SET_USER_AVATAR_COLOR,
        payload: data,
    };
};
exports.setUserAvatarColor = setUserAvatarColor;
/**
 * set user timezone
 * @param data timezone
 */
const setUserTimeZone = (data) => {
    return {
        type: actions.SET_USER_TIMEZONE,
        payload: data,
    };
};
exports.setUserTimeZone = setUserTimeZone;
/**
 * get verify code by email
 * @param email
 */
const getEmailCode = (email, type = 1) => {
    return (dispatch) => {
        api_1.Api.getEmailCode(email, type).then(res => {
            const { code, message } = res.data;
            dispatch((0, exports.setHomeErr)({
                code,
                msg: message,
            }));
        });
    };
};
exports.getEmailCode = getEmailCode;
/**
 * set request status
 * @param status
 */
const setReqStatus = (status) => {
    return {
        type: actions.SET_REQ_STATUS,
        payload: status,
    };
};
exports.setReqStatus = setReqStatus;
/**
 * set http request error message
 * @param info
 */
const setHttpErrInfo = (info) => {
    return {
        type: actions.SET_HTTP_ERR_INFO,
        payload: info,
    };
};
exports.setHttpErrInfo = setHttpErrInfo;
/**
 * update password
 */
const updatePwd = (password) => {
    return (dispatch) => {
        api_1.Api.updatePwd(password).then(res => {
            const { success, code, message: msg } = res.data;
            if (success) {
                dispatch((0, exports.getUserMe)());
            }
            else {
                dispatch((0, exports.setHomeErr)({
                    code,
                    msg,
                }));
            }
        });
    };
};
exports.updatePwd = updatePwd;
/**
 * unbind account
 */
const unBindAccount = (type) => {
    return (dispatch) => {
        api_1.Api.unBindAccount(type).then(res => {
            const { success, code, message: msg } = res.data;
            if (success) {
                dispatch((0, exports.getUserMe)());
            }
            else {
                dispatch((0, exports.setHomeErr)({
                    code,
                    msg,
                }));
            }
        });
    };
};
exports.unBindAccount = unBindAccount;
/**
 * update user info
 */
const updateUserInfo = (info) => {
    return {
        type: actions.UPDATE_USERINFO,
        payload: info,
    };
};
exports.updateUserInfo = updateUserInfo;
const updateUserInfoErr = (err) => {
    return {
        type: actions.UPDATE_USERINFO_ERR,
        payload: err,
    };
};
exports.updateUserInfoErr = updateUserInfoErr;
const addWizardNumber = (wizardId) => {
    return {
        type: actions.ADD_WIZARD_NUMBER,
        payload: wizardId,
    };
};
exports.addWizardNumber = addWizardNumber;
const setActiveRecordId = (activeRecordId) => {
    return {
        type: actions.SET_ACTIVE_RECORD_ID,
        payload: activeRecordId
    };
};
exports.setActiveRecordId = setActiveRecordId;


/***/ }),

/***/ 90856:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 95537:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 83049:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.notification = void 0;
const immer_1 = __webpack_require__(7133);
const actions = __importStar(__webpack_require__(86256));
const defaultState = {
    unReadCount: 0,
    readCount: 0,
    unReadNoticeList: [],
    readNoticeList: [],
    newNoticeListFromWs: [],
};
exports.notification = (0, immer_1.produce)((data = defaultState, action) => {
    switch (action.type) {
        case actions.UPDATE_NEW_NOTICE_LIST_FROM_WS: {
            data.newNoticeListFromWs.unshift(action.payload);
            return data;
        }
        case actions.UPDATE_UNREAD_MSG_COUNT: {
            data.unReadCount = action.payload;
            return data;
        }
        case actions.UPDATE_READ_MSG_COUNT: {
            data.readCount = action.payload;
            return data;
        }
        case actions.UPDATE_READ_NOTICE_LIST: {
            const length = action.payload.list.length;
            const needUpdateCount = action.payload.updateCount;
            if (needUpdateCount) {
                data.readCount = data.readCount + length;
            }
            if (action.payload.unshift) {
                data.readNoticeList.unshift(...action.payload.list);
                return data;
            }
            if (action.payload.push) {
                data.readNoticeList.push(...action.payload.list);
                return data;
            }
            data.readNoticeList = action.payload.list;
            return data;
        }
        case actions.UPDATE_UNREAD_NOTICE_LIST: {
            const length = action.payload.list.length;
            const needUpdateCount = action.payload.updateCount;
            if (needUpdateCount) {
                data.unReadCount = data.unReadCount + length;
            }
            if (action.payload.unshift) {
                data.unReadNoticeList.unshift(...action.payload.list);
                return data;
            }
            if (action.payload.push) {
                data.unReadNoticeList.push(...action.payload.list);
                return data;
            }
            data.unReadNoticeList = action.payload.list;
            data.newNoticeListFromWs = [];
            return data;
        }
        case actions.DEL_UNREAD_NOTICE_LIST: {
            if (action.payload.isAll) {
                data.unReadNoticeList = [];
                data.unReadCount = 0;
                return data;
            }
            const newUnReadNoticeList = data.unReadNoticeList.filter(item => !action.payload.idList.includes(item.id));
            data.unReadNoticeList = newUnReadNoticeList;
            data.unReadCount = data.unReadCount - action.payload.idList.length;
            return data;
        }
        case actions.GET_NEW_MSG_FROM_WS_AND_LOOK: {
            if (action.payload) {
                data.unReadNoticeList.unshift(...data.newNoticeListFromWs);
            }
            data.unReadCount = data.unReadCount + data.newNoticeListFromWs.length;
            data.newNoticeListFromWs = [];
            return data;
        }
        default:
            return data;
    }
}, defaultState);


/***/ }),

/***/ 69837:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.user = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const immer_1 = __webpack_require__(7133);
const store_1 = __webpack_require__(56791);
const initValue = {
    info: null,
    isLogin: false,
    isRegister: false,
    isCreateSpace: false,
    err: null,
    loading: false,
    // http request status
    reqStatus: false,
    httpErrInfo: null,
    userInfoErr: null,
    activeRecordId: null,
};
const userInfo = (typeof window === 'object' &&
    window.__initialization_data__ &&
    window.__initialization_data__.userInfo) || null;
if (userInfo) {
    axios_1.default.defaults.headers.common['X-Space-Id'] = userInfo.spaceId;
}
const defaultValue = {
    info: userInfo,
    isLogin: Boolean(userInfo),
    isRegister: false,
    isCreateSpace: false,
    err: null,
    loading: !userInfo,
    // http request status
    reqStatus: false,
    httpErrInfo: null,
    userInfoErr: null,
    activeRecordId: null,
};
exports.user = (0, immer_1.produce)((userDraft = defaultValue, action) => {
    switch (action.type) {
        case store_1.ActionConstants.SET_USER_ME: {
            userDraft.info = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_IS_LOGIN: {
            userDraft.isLogin = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_HOME_ERR: {
            userDraft.err = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_REGISTER_STATUS: {
            userDraft.isRegister = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_USED_INVITE_REWARD: {
            if (userDraft.info) {
                userDraft.info.usedInviteReward = action.payload;
            }
            return userDraft;
        }
        case store_1.ActionConstants.SET_LOADING: {
            userDraft.loading = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_USER_AVATAR: {
            userDraft.info.avatar = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_USER_AVATAR_COLOR: {
            userDraft.info.avatarColor = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_USER_TIMEZONE: {
            userDraft.info.timeZone = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SIGN_OUT: {
            return initValue;
        }
        case store_1.ActionConstants.SET_REQ_STATUS: {
            userDraft.reqStatus = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_HTTP_ERR_INFO: {
            userDraft.httpErrInfo = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.SET_NICKNAME: {
            userDraft.info.nickName = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.UPDATE_USERINFO: {
            userDraft.info = Object.assign({}, userDraft.info, action.payload);
            return userDraft;
        }
        case store_1.ActionConstants.UPDATE_USERINFO_ERR: {
            userDraft.userInfoErr = action.payload;
            return userDraft;
        }
        case store_1.ActionConstants.ADD_WIZARD_NUMBER: {
            const wizardId = action.payload;
            if (userDraft.info && wizardId in userDraft.info.wizards) {
                userDraft.info.wizards[wizardId]++;
                return userDraft;
            }
            if (userDraft.info && !(wizardId in userDraft.info.wizards)) {
                userDraft.info.wizards[wizardId] = 1;
                return userDraft;
            }
            return userDraft;
        }
        case store_1.ActionConstants.SET_ACTIVE_RECORD_ID: {
            userDraft.activeRecordId = action.payload;
            return userDraft;
        }
        default:
            return userDraft;
    }
}, defaultValue);


/***/ }),

/***/ 21711:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.userStateSelector = void 0;
function userStateSelector(state) {
    return state.user;
}
exports.userStateSelector = userStateSelector;


/***/ }),

/***/ 19179:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TRANSFER_OWNER = exports.UNPUBLISH_WIDGET = exports.GET_TEMPLATE_LIST = exports.GET_NODE_WIDGETS_PREVIOUS = exports.CREATE_WIDGET = exports.GET_NODE_WIDGETS = exports.RECENT_INSTALL_WIDGET = exports.COPY_WIDGET = exports.INSTALL_WIDGET = exports.WIDGET_CENTER_LIST = exports.INSTALLATION_WIDGETS = void 0;
// ================ Widget related =======================
exports.INSTALLATION_WIDGETS = '/widget/get';
exports.WIDGET_CENTER_LIST = '/widget/package/store/list';
exports.INSTALL_WIDGET = '/widget/create';
exports.COPY_WIDGET = '/widget/copy';
exports.RECENT_INSTALL_WIDGET = '/space/:spaceId/widget';
exports.GET_NODE_WIDGETS = '/node/:nodeId/widgetPack';
exports.CREATE_WIDGET = '/widget/package/create';
// Get the widget information installed by the node, which is only provided for preview, does not contain complete data
exports.GET_NODE_WIDGETS_PREVIOUS = '/node/:nodeId/widget';
// Get a list of widget templates
exports.GET_TEMPLATE_LIST = '/widget/template/package/list';
// remove widget
exports.UNPUBLISH_WIDGET = '/widget/package/unpublish';
// hand over widget
exports.TRANSFER_OWNER = '/widget/package/transfer/owner';
// ================ Widget related =======================


/***/ }),

/***/ 38856:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 25265:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transferWidget = exports.unpublishWidget = exports.getTemplateList = exports.createWidget = exports.getWidgetsInfoByNodeId = exports.getRecentInstalledWidgets = exports.copyWidgetsToDashboard = exports.installWidget = exports.getWidgetsByNodeId = exports.getWidgetCenterList = exports.readInstallationWidgets = void 0;
const axios_1 = __importDefault(__webpack_require__(52167));
const Url = __importStar(__webpack_require__(19179));
const qs_1 = __importDefault(__webpack_require__(87104));
const urlcat_1 = __importDefault(__webpack_require__(83764));
const store_1 = __webpack_require__(56791);
// const baseURL = '/nest/v1';
const readInstallationWidgets = (widgetIds, linkId) => {
    return axios_1.default.get(Url.INSTALLATION_WIDGETS, {
        params: {
            widgetIds: widgetIds.join(','),
            linkId,
        },
        // serialize arguement revisions: [1,2,3] to normal GET params revisions=1&revisions=2&revisions=3
        paramsSerializer: params => {
            return qs_1.default.stringify(params, { arrayFormat: 'repeat' });
        },
    });
};
exports.readInstallationWidgets = readInstallationWidgets;
/**
 * get widget list from widget center
 */
const getWidgetCenterList = (type, filter = true) => {
    return axios_1.default.post(Url.WIDGET_CENTER_LIST, { type, filter });
};
exports.getWidgetCenterList = getWidgetCenterList;
const getWidgetsByNodeId = (nodeId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_NODE_WIDGETS, { nodeId }));
};
exports.getWidgetsByNodeId = getWidgetsByNodeId;
const installWidget = (nodeId, packageId, name) => {
    return axios_1.default.post(Url.INSTALL_WIDGET, {
        nodeId: nodeId,
        widgetPackageId: packageId,
        name
    });
};
exports.installWidget = installWidget;
/**
 * in widget panel, send widget to dashboard or import widget in dashboard
 *
 * @param dashboardId
 * @param widgetId
 */
const copyWidgetsToDashboard = (dashboardId, widgetIds) => {
    return axios_1.default.post(Url.COPY_WIDGET, {
        dashboardId,
        widgetIds: widgetIds,
    });
};
exports.copyWidgetsToDashboard = copyWidgetsToDashboard;
const getRecentInstalledWidgets = (spaceId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.RECENT_INSTALL_WIDGET, { spaceId }));
};
exports.getRecentInstalledWidgets = getRecentInstalledWidgets;
const getWidgetsInfoByNodeId = (nodeId) => {
    return axios_1.default.get((0, urlcat_1.default)(Url.GET_NODE_WIDGETS_PREVIOUS, { nodeId }));
};
exports.getWidgetsInfoByNodeId = getWidgetsInfoByNodeId;
/**
 * create widget
 * @param name
 * @param spaceId
 * @param packageType
 * @param releaseType
 * @returns
 */
const createWidget = (name, spaceId, packageType = store_1.WidgetPackageType.Custom, releaseType = store_1.WidgetReleaseType.Space) => {
    return axios_1.default.post(Url.CREATE_WIDGET, { name, spaceId, packageType, releaseType });
};
exports.createWidget = createWidget;
const getTemplateList = () => {
    return axios_1.default.get(Url.GET_TEMPLATE_LIST);
};
exports.getTemplateList = getTemplateList;
/**
 * unpublish widget
 * @param widgetPackageId
 * @returns
 */
const unpublishWidget = (widgetPackageId) => {
    return axios_1.default.post(Url.UNPUBLISH_WIDGET, { packageId: widgetPackageId });
};
exports.unpublishWidget = unpublishWidget;
/**
 * transfer widget to others
 *
 * @param packageId
 * @param transferMemberId
 * @returns
 */
const transferWidget = (packageId, transferMemberId) => {
    return axios_1.default.post(Url.TRANSFER_OWNER, { packageId, transferMemberId });
};
exports.transferWidget = transferWidget;


/***/ }),

/***/ 97154:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(93221), exports);


/***/ }),

/***/ 93221:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.SubscribeUsageCheck = void 0;
class SubscribeUsageCheck {
    constructor(store) {
        this.store = store;
    }
    /**
      * @description According to functionName , check whether the current value exceeds the limit of the specification
      * @param {keyof ISubscription} functionName
      * @param usage The current usage, which can be omitted for subscription functions
      * @returns {boolean} true - usage is within limit; false - usage exceeds limit
      */
    underUsageLimit(functionName, usage) {
        var _a;
        const state = this.store.getState();
        const subscription = (_a = state.billing) === null || _a === void 0 ? void 0 : _a.subscription;
        if (!subscription) {
            return true;
        }
        if (typeof subscription[functionName] === 'number' && usage !== null) {
            if (subscription[functionName] === -1) {
                return true;
            }
            if (subscription[functionName] === 0) {
                return false;
            }
            return usage <= subscription[functionName];
        }
        return Boolean(subscription[functionName]);
    }
}
exports.SubscribeUsageCheck = SubscribeUsageCheck;


/***/ }),

/***/ 57590:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.EnhanceError = void 0;
class EnhanceError extends Error {
    constructor(e) {
        super(e.message);
        this.code = e.code !== undefined ? String(e.code) : undefined;
        this.message = e.message;
        this.extra = e.extra;
        this.title = e.title;
        this.okText = e.okText;
        this.modalType = e.modalType;
        this.onOkType = e.onOkType;
        this.isShowQrcode = e.isShowQrcode;
    }
}
exports.EnhanceError = EnhanceError;


/***/ }),

/***/ 8336:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(76151), exports);
__exportStar(__webpack_require__(22919), exports);


/***/ }),

/***/ 76151:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.RoomService = void 0;
const api_1 = __webpack_require__(62625);
const config_1 = __webpack_require__(77511);
const constant_1 = __webpack_require__(83039);
const dayjs_1 = __importDefault(__webpack_require__(1635));
const buffer_storage_1 = __webpack_require__(78008);
const i18n_1 = __webpack_require__(47511);
const io_1 = __webpack_require__(89434);
const lodash_1 = __webpack_require__(46517);
const player_1 = __webpack_require__(63325);
__webpack_require__(18087);
const store_1 = __webpack_require__(56791);
const actions_1 = __webpack_require__(6021);
const enhance_error_1 = __webpack_require__(57590);
const types_1 = __webpack_require__(73578);
const utils_1 = __webpack_require__(26854);
const socket_guard_1 = __webpack_require__(27928);
const types_2 = __webpack_require__(22919);
// The maximum number of data retransmission actions is online, beyond this value, no timeout retry operation will be performed
const MAX_RETRY_LENGTH = 5000;
const VIKA_OP_BACKUP = 'VIKA_OP_BACKUP';
/**
 * Room module, responsible for data synchronization in the collaborative room, retry, sending and receiving messages
 * It is not coupled with the resource entity, and the operation of the data entity is handled by CollaEngine
 * 1 Room can manage multiple CollaEngines
 */
class RoomService {
    constructor(roomId, socket, isConnect, store, collaEngineMap, event, fetchResource, lsStore, localForage) {
        this.roomId = roomId;
        this.socket = socket;
        this.isConnect = isConnect;
        this.store = store;
        this.fetchResource = fetchResource;
        this.lsStore = lsStore;
        this.localForage = localForage;
        this.collaEngineMap = new Map();
        this.io = new io_1.IO(this.roomId, this.socket);
        this.connected = false;
        /**
         * Send user-generated changeset
         */
        this.sendUserChanges = (changesets) => {
            console.log('Submission data: ', changesets, changesets.length);
            // mark the send queue waiting to return
            this.event.setRoomIOClear(false);
            this.event.setRoomLastSendTime();
            if (!this.connected) {
                console.error('room has been destroy,can\'t send anything');
                return;
            }
            // Load after 500ms, to prevent the icon from flashing when the network is fast
            const collaEngine = this.collaEngineMap.get(this.roomId);
            const resourceType = collaEngine === null || collaEngine === void 0 ? void 0 : collaEngine.resourceType;
            const timer = setTimeout(() => {
                this.store.dispatch((0, actions_1.changeResourceSyncingStatus)(this.roomId, resourceType, true));
            }, 500);
            const state = this.store.getState();
            const shareId = state.pageParams.shareId;
            return this.io.request({
                type: types_2.SyncRequestTypes.CLIENT_ROOM_CHANGE,
                roomId: this.roomId,
                changesets,
                shareId,
            }).then((data) => {
                clearTimeout(timer);
                this.event.setRoomIOClear(true);
                if (data.success && data.data) {
                    this.store.dispatch((0, actions_1.changeResourceSyncingStatus)(this.roomId, resourceType, false));
                    this.handleAcceptCommit(data.data.changesets);
                    data.data;
                    return Promise.resolve();
                }
                // Unsuccessful requests, divert traffic to the following catch
                return Promise.reject(data);
            }).catch(e => {
                this.event.setRoomIOClear(true);
                let errMsg = e;
                clearTimeout(timer);
                if (!('success' in errMsg)) {
                    errMsg = {
                        success: false,
                        code: 0,
                        message: (0, i18n_1.t)(i18n_1.Strings.exception_network_exception),
                    };
                }
                this.handleRejectCommit(errMsg);
                return Promise.reject();
            });
        };
        /**
         * @description for the next round of sending
         * @private
         * When there are currently no queued requests, you can start sending directly
         * Otherwise, after waiting for the current request to end, opBuffer will be sent automatically
         * Called immediately when triggered for the first time, and will be called again after the interval expires
         */
        this.nextSend = (0, lodash_1.throttle)(() => {
            if (!this.event.getRoomIOClear()) {
                console.error('throttledNextSend pending reject');
                return;
            }
            const nextChangesets = [];
            for (const resourceId of this.collaEngineMap.keys()) {
                const collaEngine = this.collaEngineMap.get(resourceId);
                const cs = collaEngine.getNextChangeset();
                if (cs) {
                    nextChangesets.push(cs);
                }
            }
            if (nextChangesets.length) {
                this.event.setRoomLastSendTime();
                this.sendUserChanges(nextChangesets);
            }
        }, 500);
        /**
         * Handle messages actively pushed by io
         */
        this.bindSocketMessage = () => {
            if (!this.io.socket) {
                throw new Error((0, i18n_1.t)(i18n_1.Strings.error_please_bind_message_after_connected));
            }
            this.io.offAll();
            this.io.on(types_2.BroadcastTypes.SERVER_ROOM_CHANGE, (data) => {
                this.handleNewChanges(data);
            });
            this.io.on(types_2.BroadcastTypes.ENGAGEMENT_CURSOR, (data) => {
                this.handleCursor(data);
            });
            this.io.on(types_2.BroadcastTypes.ACTIVATE_COLLABORATORS, data => {
                this.handleActiveCollaborators(data);
            });
            this.io.on(types_2.BroadcastTypes.DEACTIVATE_COLLABORATOR, data => {
                this.handleDeactivateCollaborator(data);
            });
            this.io.on(types_2.BroadcastTypes.NODE_SHARE_DISABLED, data => {
                this.handleNodeShareDisabled(data);
            });
            this.io.on(types_2.BroadcastTypes.FIELD_PERMISSION_ENABLE, data => {
                this.handleFieldPermissionEnabled(data);
            });
            this.io.on(types_2.BroadcastTypes.FIELD_PERMISSION_CHANGE, data => {
                this.handleFieldPermissionChange(data);
            });
            this.io.on(types_2.BroadcastTypes.FIELD_PERMISSION_DISABLE, data => {
                this.handleFieldPermissionDisabled(data);
            });
            this.io.on(types_2.BroadcastTypes.FIELD_PERMISSION_SETTING_CHANGE, data => {
                this.handleFieldPermissionSetting(data);
            });
        };
        this.event = event;
        this.backupDB = localForage.createInstance({ name: VIKA_OP_BACKUP });
        if (!collaEngineMap) {
            return;
        }
        collaEngineMap.forEach(engine => {
            this.addCollaEngine(engine);
        });
    }
    /**
     * Create a roomId based on the resource main resource ID
     * What is a resource resource, a resource is a summary of data entities,
     * such as a datasheet, a widget, and a dashboard. Their data are collectively referred to as resources
     * The main resource ID generally refers to the node page that the current user mainly accesses, such as the datasheet, dashboard, etc.
     * The main resource may come with multiple other resources, such as an associated table of a table, a widget on a dashboard
     * @param resourceId Resource ID, which can be the ID of entity resources such as datasheetId, DashboardId, WidgetId, etc.
     */
    static createRoomId(resourceId) {
        return `${resourceId}`;
    }
    /**
     * Add an OT engine responsible for real-time collaborative collaboration on resources.
     */
    addCollaEngine(collaEngine) {
        if (collaEngine.cancelQuit) {
            collaEngine.cancelQuit();
            return;
        }
        // await collaEngine.prepare();
        if (this.collaEngineMap.has(collaEngine.resourceId)) {
            console.error('Do not add CollaEngine');
        }
        this.collaEngineMap.set(collaEngine.resourceId, collaEngine);
    }
    nextTick() {
        return __awaiter(this, void 0, void 0, function* () {
            yield new Promise(resolve => {
                setTimeout(resolve, 10);
            });
        });
    }
    init(firstRoomInit = false) {
        return __awaiter(this, void 0, void 0, function* () {
            // Ensure that the collaborative engine has been initialized
            const hasCollaEngine = () => {
                return this.collaEngineMap.has(this.roomId);
            };
            do {
                yield this.nextTick();
            } while (!hasCollaEngine());
            firstRoomInit && this.sendLocalChangesetWithInit();
            // Initialize the collaboration engine first
            yield Promise.all(Array.from(this.collaEngineMap.keys()).map(resourceId => {
                const collaEngine = this.collaEngineMap.get(resourceId);
                return collaEngine.waitPrepareComplete();
            }));
            yield this.watch();
        });
    }
    // When initializing, you need to send the locally cached localPendingChangeset (if any) to the server
    sendLocalChangesetWithInit() {
        return __awaiter(this, void 0, void 0, function* () {
            const localPendingChangesetStorage = this.lsStore.namespace(buffer_storage_1.BufferStorage.pendingChangesetsNamespace);
            const opBufferStorage = this.lsStore.namespace(buffer_storage_1.BufferStorage.bufferStorageNamespace);
            const changesetMap = localPendingChangesetStorage.getAll();
            const opBufferMap = opBufferStorage.getAll();
            if (!Object.keys(changesetMap).length && !Object.keys(opBufferMap).length) {
                return;
            }
            this.event.setRoomIOClear(false);
            opBufferStorage.clearAll();
            localPendingChangesetStorage.clearAll();
            this.clearAllStorage();
            try {
                yield this.applyLocalData(changesetMap, opBufferMap);
            }
            catch (e) {
                try {
                    yield this.backupDB.setItem(String(Date.now()), {
                        changesetMap,
                        opBufferMap
                    });
                }
                catch (e) {
                    if (e.name === 'QuotaExceededError') {
                        yield this.backupDB.clear();
                        this.backupDB.setItem(String(Date.now()), { changesetMap, opBufferMap });
                    }
                }
                const timestamps = yield this.backupDB.keys();
                timestamps.map(timestamp => {
                    // Clean up data whose backup time is greater than two weeks
                    if ((0, dayjs_1.default)().diff(Date.now(), 'day') > 14) {
                        this.backupDB.removeItem(timestamp);
                    }
                });
                player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                    error: new Error(`Failed to initialize applyChangeset: ${e.message}`),
                    metaData: {
                        roomId: this.roomId,
                        changesetMap: JSON.stringify(changesetMap),
                        opBufferMap: JSON.stringify(opBufferMap)
                    },
                });
                throw new enhance_error_1.EnhanceError({
                    code: types_1.ErrorCode.CollaModalError,
                    message: (0, i18n_1.t)(i18n_1.Strings.initialization_failed_message),
                    modalType: types_1.ModalType.Warning
                });
            }
            this.event.setRoomIOClear(true);
        });
    }
    applyLocalData(changesetMap, opBufferMap) {
        return __awaiter(this, void 0, void 0, function* () {
            if (Object.keys(changesetMap).length) {
                const res = yield api_1.Api.applyResourceChangesets(Object.values(changesetMap), this.roomId);
                const { success, message, code } = res.data;
                if (!success && code !== 4001) {
                    throw new Error(`changesetMap: ${message}`);
                }
            }
            if (Object.keys(opBufferMap).length) {
                const changesets = [];
                for (const resourceId in opBufferMap) {
                    if (changesetMap[resourceId]) {
                        const changeset = buffer_storage_1.BufferStorage.ops2Changeset(opBufferMap[resourceId], changesetMap[resourceId].baseRevision + 1, resourceId, changesetMap[resourceId].resourceType);
                        changesets.push(changeset);
                        continue;
                    }
                    const opBuffer = opBufferMap[resourceId];
                    const revision = opBuffer[0].revision;
                    const resourceType = opBuffer[0].resourceType;
                    const changeset = buffer_storage_1.BufferStorage.ops2Changeset(opBuffer, revision, resourceId, resourceType);
                    if (opBuffer.every(operation => !operation.mainLinkDstId)) {
                        const res = yield api_1.Api.applyResourceChangesets([changeset], this.roomId);
                        const { success, message } = res.data;
                        if (!success) {
                            throw new Error(`single changesets: ${message}`);
                        }
                        delete opBufferMap[resourceId];
                        continue;
                    }
                    changesets.push(changeset);
                }
                if (!changesets.length) {
                    return;
                }
                const res = yield api_1.Api.applyResourceChangesets(Object.values(changesets), this.roomId);
                const { success, message } = res.data;
                if (!success) {
                    throw new Error(`opBufferMap: ${message}`);
                }
            }
        });
    }
    /**
     * The backend server actively pushes changesets submitted by others
     * Or actively compensate for missing versions of changeset
     */
    handleNewChanges(data) {
        data.changesets.forEach(cs => {
            const resourceId = cs.resourceId;
            const collaEngine = this.collaEngineMap.get(resourceId);
            if (collaEngine) {
                collaEngine.handleNewChanges(cs);
            }
            else if (resourceId.startsWith(constant_1.NodeTypeReg.DATASHEET) &&
                !store_1.Selectors.getDatasheet(this.store.getState(), resourceId)) {
                // The data obtained at this time is the latest version, no need to apply cs anymore
                this.fetchResource(resourceId, types_1.ResourceType.Datasheet);
            }
        });
    }
    /**
     * The @description watch method is mainly used to do 3 things
     * 1. Create a room on the client side and add it to the service
     * 2. Register listening events for various sockets
     * 3. Start the event coordination monitor on the client to ensure that blocked messages will be processed at intervals
     * Originally considered to compensate for the missing version in watch,
     * but the compensation behavior is already in init, handled by each engine itself,
     * so watch does not need to pay attention to version compensation anymore
     * @returns
     */
    watch() {
        return __awaiter(this, void 0, void 0, function* () {
            const state = this.store.getState();
            const shareId = state.pageParams.shareId;
            const embedId = state.pageParams.embedId;
            const watchResponse = yield this.io.watch(this.roomId, shareId, embedId).catch(e => {
                throw new enhance_error_1.EnhanceError(e);
            });
            this.setConnected(true);
            if (!watchResponse) {
                return;
            }
            const { resourceRevisions, collaborators } = watchResponse.data;
            console.log('resourceRevisions:', resourceRevisions);
            const collaEngine = this.collaEngineMap.get(this.roomId);
            if (!collaEngine) {
                return;
            }
            yield this.checkVersion(resourceRevisions);
            const resourceType = collaEngine.resourceType;
            this.store.dispatch((0, actions_1.roomInfoSync)(this.roomId, resourceType, collaborators || []));
            this.store.dispatch((0, actions_1.setResourceConnect)(this.roomId, resourceType));
            this.loadFieldPermissionMap();
            this.bindSocketMessage();
            this.setSendingWatcher();
        });
    }
    /**
     * Switching resources or reconnecting after disconnection requires the column permissions of all data tables in the room
     */
    loadFieldPermissionMap() {
        const dstIds = [];
        this.collaEngineMap.forEach(collaEngine => {
            if (collaEngine.resourceType !== types_1.ResourceType.Datasheet) {
                return;
            }
            dstIds.push(collaEngine.resourceId);
        });
        dstIds.length && this.store.dispatch(store_1.StoreActions.fetchFieldPermission(dstIds));
    }
    checkVersion(resourceRevisions) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            const missVersionEngines = [];
            if (!resourceRevisions || !resourceRevisions.length) {
                console.log('The current resource has not been operated for a long time, and the data is automatically updated');
                yield ((_a = this.collaEngineMap.get(this.roomId)) === null || _a === void 0 ? void 0 : _a.event.reloadResourceData());
                return;
            }
            for (const { resourceId, revision } of resourceRevisions) {
                const collaEngine = this.collaEngineMap.get(resourceId);
                if (!collaEngine) {
                    continue;
                }
                const baseRevision = collaEngine.getRevision();
                const versionDiffs = (0, utils_1.numbersBetween)(baseRevision, revision + 1);
                if (!versionDiffs.length) {
                    continue;
                }
                if (versionDiffs.length >= 100) {
                    throw new enhance_error_1.EnhanceError({
                        code: config_1.StatusCode.FRONT_VERSION_ERROR,
                        message: (0, i18n_1.t)(i18n_1.Strings.changeset_diff_big_tip),
                        modalType: types_1.ModalType.Info
                    });
                }
                missVersionEngines.push({ collaEngine, revision });
            }
            return yield Promise.all(missVersionEngines.map(({ collaEngine, revision }) => {
                return collaEngine.prepare(revision + 1);
            }));
        });
    }
    /**
     * @description unwatch no longer needs to pay attention to whether the coordinator queue is emptied,
     * there are two cases here: switch table and complete disconnection of ƒ socket.
     * The processing of the latter needs to rely on locally stored data, and the unwatch event here will not be triggered.
     * For the former, the service has already converted the engine data in the process of switching rooms,
     * which ensures that even if there is unsent data in the previous room, it can be coordinated after switching rooms.
     * So here you only need to pay attention to the notification that the middle server(room) leaves the room
     * @private
     */
    unwatch() {
        return __awaiter(this, void 0, void 0, function* () {
            yield this.io.unWatch();
        });
    }
    /**
     * leave room
     * 1. Remove long chain message monitoring
     * 2. Clear data sending status monitoring timer
     */
    leaveRoom() {
        return __awaiter(this, void 0, void 0, function* () {
            this.setConnected(false);
            /**
             * After switching the space, the socket of the previous space is closed, so the event of leave_room will not be triggered, so
             * You can check the connection status of the item socket here
             */
            if (this.socket.connected) {
                yield this.unwatch();
            }
            else {
                console.log('socket has been closed, room needn\'t leave again');
            }
            this.clearSendingWatcher();
            return this.collaEngineMap;
        });
    }
    /**
     * @description supports a single Resource to exit the current collaborative Room without destroying the current Room
     * @param {string} resourceId
     * @returns
     */
    quit(resourceId) {
        var _a;
        const collaEngine = this.collaEngineMap.get(resourceId);
        if (!collaEngine) {
            return;
        }
        if (collaEngine.isStorageClear()) {
            this.collaEngineMap.delete(resourceId);
            (_a = collaEngine.cancelQuit) === null || _a === void 0 ? void 0 : _a.call(collaEngine);
            this.store.dispatch(store_1.StoreActions.resetResource(resourceId, collaEngine.resourceType));
            return;
        }
        if (collaEngine.cancelQuit) {
            return;
        }
        const cancelId = setInterval(() => {
            this.quit(resourceId);
        }, 100);
        collaEngine.cancelQuit = () => {
            clearInterval(cancelId);
        };
    }
    /**
      * Data sending status listener
      * Regular polling to check whether user data has been sent and confirmed
      * If it has not been confirmed for a long time (1 minute), execute a retry mechanism
      * This situation usually occurs with an error
     */
    setSendingWatcher() {
        this.clearSendingWatcher();
        this.sendingWatcherTimer = setInterval(() => {
            if (!this.isConnect()) {
                return;
            }
            const changesets = [];
            for (const key of this.collaEngineMap.keys()) {
                const localChangeset = this.collaEngineMap.get(key).bufferStorage.localPendingChangeset;
                if (localChangeset) {
                    changesets.push(localChangeset);
                }
            }
            if (changesets.length > 0 && Date.now() - this.event.getRoomLastSendTime() > 60 * 1000) {
                this.forceSend(changesets);
            }
        }, 10 * 1000);
    }
    clearSendingWatcher() {
        clearInterval(this.sendingWatcherTimer);
    }
    // Force data to be sent to the server to avoid data jamming and not sending due to process problems.
    // As long as a persistent connection exists, data will be sent.
    forceSend(changesets) {
        const actionLength = changesets.reduce((pre, cur) => {
            return pre + cur.operations.reduce((p, c) => {
                return p + c.actions.length;
            }, 0);
        }, 0);
        // Note: In the case of pasting large data, the server may return slowly, and the data will not be re-sent at this time.
        if (actionLength > MAX_RETRY_LENGTH) {
            console.error('Paste data in large batches, the retry operation will not be performed');
            return;
        }
        player_1.Player.doTrigger(player_1.Events.app_error_logger, {
            error: new Error('force send userChanges'),
        });
        this.event.setRoomLastSendTime();
        this.sendUserChanges(changesets);
    }
    handleAcceptCommit(changesets) {
        return __awaiter(this, void 0, void 0, function* () {
            for (const cs of changesets) {
                const collaEngine = this.collaEngineMap.get(cs.resourceId);
                if (!collaEngine) {
                    console.log('The room has been switched, the collaEngine is updated');
                    continue;
                }
                yield collaEngine.handleAcceptCommit(cs);
                // TODO: There are cookies in changesets to be removed in the middle layer
                console.log('Data returned successfully: ', cs);
            }
            this.nextSend();
        });
    }
    handleRejectCommit(data, clearAllStorage = true) {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            // If the message is repeated, no need to refresh
            if (data.code === types_2.OtErrorCode.MSG_ID_DUPLICATE) {
                console.log(data.message);
                this.nextSend();
                return;
            }
            const bufferStorage = (_a = this.collaEngineMap.get(this.roomId)) === null || _a === void 0 ? void 0 : _a.bufferStorage;
            player_1.Player.doTrigger(player_1.Events.app_error_logger, {
                error: new Error(`Incorrect op message: ${data.message}`),
                metaData: {
                    roomId: this.roomId,
                    connected: this.connected,
                    socketConnected: this.io.socket.connected,
                    opBuffer: JSON.stringify(bufferStorage === null || bufferStorage === void 0 ? void 0 : bufferStorage.opBuffer),
                    localPendingChangeset: JSON.stringify(bufferStorage === null || bufferStorage === void 0 ? void 0 : bufferStorage.localPendingChangeset),
                },
            });
            if (clearAllStorage) {
                // Before clearing the data, make a local backup of the cleared data
                yield this.backupDB.setItem(String(Date.now()), {
                    opBufferMap: this.getBufferOperateMap(),
                    changesetMap: (0, lodash_1.keyBy)(this.getLocalPendingChangesets(), 'resourceId')
                });
                this.clearAllStorage();
            }
            console.trace('Wrong op information');
            throw new enhance_error_1.EnhanceError(data);
        });
    }
    getBufferOperateMap() {
        const bufferOperateMap = {};
        for (const resourceId of this.collaEngineMap.keys()) {
            const collaEngine = this.collaEngineMap.get(resourceId);
            const operate = collaEngine.getOpBuffer();
            if (operate) {
                bufferOperateMap[resourceId] = operate;
            }
        }
        return bufferOperateMap;
    }
    getLocalPendingChangesets() {
        const localPendingChangeset = [];
        for (const resourceId of this.collaEngineMap.keys()) {
            const collaEngine = this.collaEngineMap.get(resourceId);
            const cs = collaEngine.getLocalPendingChangeset();
            if (cs) {
                localPendingChangeset.push(cs);
            }
        }
        return localPendingChangeset;
    }
    // Clear all pending ops and pending changesets
    clearAllStorage() {
        for (const resourceId of this.collaEngineMap.keys()) {
            const collaEngine = this.collaEngineMap.get(resourceId);
            collaEngine.clearLocalPendingChangeset();
            collaEngine.clearOpBuffer();
        }
    }
    /**
     * Push the operation into the send queue, SyncEngine will ensure that the data is sent to the server in version order
     * And provide temporary local persistence capabilities to
     * prevent users from losing data in the case of accidental network disconnection and active refresh
     *
     * Notice: Multiple operations may be merged into one changeset and sent to the server at one time
     *
     */
    syncOperations(localOperations) {
        localOperations.forEach(lop => {
            const collaEngine = this.collaEngineMap.get(lop.resourceId);
            lop.operations.forEach(op => collaEngine === null || collaEngine === void 0 ? void 0 : collaEngine.pushOpBuffer(op));
        });
        this.nextSend();
    }
    /**
     * Is it safe to close?
     * When there is still data that has not been successfully synchronized, return false, otherwise return true
     */
    isSafeToClose() {
        for (const resourceId of this.collaEngineMap.keys()) {
            const collaEngine = this.collaEngineMap.get(resourceId);
            if (!collaEngine.isStorageClear()) {
                return false;
            }
        }
        return true;
    }
    /**
     * A simple message sender for situations where only notifications need to be sent and no persistence is required.
     * message will be sent to all online
     */
    sendMessages(type, data) {
        return this.io.request(Object.assign({ type }, data));
    }
    getCollaEngine() {
        return this.collaEngineMap.get(this.roomId);
    }
    /**
     * Activate the collaborator. After calling this method,
     * the avatar of the current user will be displayed on the interface of all collaborators who open this table
     */
    handleActiveCollaborators(data) {
        console.log('active collaborators', data);
        const collaEngine = this.getCollaEngine();
        if (!collaEngine) {
            return;
        }
        data.collaborators.forEach(item => {
            this.store.dispatch(store_1.StoreActions.activeCollaborator(item, this.roomId, collaEngine.resourceType));
        });
    }
    /**
     * Deactivate the collaborator.
     * After calling this method, the avatar of the current user will be left on the interface of all collaborators who open this table
     */
    handleDeactivateCollaborator(data) {
        console.log('deactivate collaborator', data);
        const collaEngine = this.getCollaEngine();
        if (!collaEngine) {
            return;
        }
        this.store.dispatch(store_1.StoreActions.deactivateCollaborator(data, this.roomId, collaEngine.resourceType));
    }
    handleCursor(data) {
        console.log('RECEIVED IEngagementCursorData: ', { data });
        const { cursorInfo } = data;
        this.store.dispatch(store_1.StoreActions.cursorMove({
            fieldId: cursorInfo.fieldId,
            recordId: cursorInfo.recordId,
            time: cursorInfo.time,
            socketId: data.socketId,
        }, this.roomId));
    }
    handleNodeShareDisabled(data) {
        var _a, _b;
        console.log('RECEIVED INodeShareDisabledData: ', { data });
        const state = this.store.getState();
        const shareId = state.pageParams.shareId;
        if (shareId && data.shareIds.includes(shareId)) {
            (_b = (_a = this.event).destroy) === null || _b === void 0 ? void 0 : _b.call(_a);
            throw new enhance_error_1.EnhanceError({
                code: config_1.StatusCode.NODE_NOT_EXIST,
                message: (0, i18n_1.t)(i18n_1.Strings.error_please_close_sharing_page),
                okText: (0, i18n_1.t)(i18n_1.Strings.okay),
                modalType: types_1.ModalType.Warning,
                onOkType: types_1.OnOkType.BackWorkBench
            });
        }
    }
    generateStdFieldPermission(data, manageable = false) {
        return {
            [data.fieldId]: {
                role: data.role || config_1.ConfigConstant.Role.None,
                setting: data.setting || {
                    formSheetAccessible: false,
                },
                permission: data.permission || store_1.DEFAULT_FIELD_PERMISSION,
                manageable,
            },
        };
    }
    // Enable column permissions
    handleFieldPermissionEnabled(data) {
        console.log('RECEIVED handleFieldPermissionEnabled: ', { data });
        const fieldPermission = this.generateStdFieldPermission(data, true);
        this.store.dispatch((0, actions_1.updateFieldPermissionMap)(fieldPermission, data.datasheetId));
    }
    // change column permissions
    handleFieldPermissionChange(data) {
        console.log('RECEIVED handleFieldPermissionChange: ', { data });
        const fieldPermission = this.generateStdFieldPermission(data);
        this.store.dispatch((0, actions_1.updateFieldPermissionMap)(fieldPermission, data.datasheetId));
    }
    // disable column permissions
    handleFieldPermissionDisabled(data) {
        console.log('RECEIVED handleFieldPermissionDisabled: ', { data });
        this.store.dispatch((0, actions_1.resetFieldPermissionMap)(data.fieldId, data.datasheetId));
    }
    // Modify the configuration of column permissions
    // 0.7 don't handle the event
    handleFieldPermissionSetting(data) {
        console.log('RECEIVED IFieldPermissionMessage: ', { data });
        if (!data.setting) {
            return;
        }
        this.store.dispatch((0, actions_1.updateFieldPermissionSetting)(data.fieldId, data.setting, data.datasheetId));
    }
    setConnected(status) {
        this.connected = status;
    }
    getStatus() {
        return this.event.getRoomIOClear();
    }
}
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], RoomService.prototype, "sendLocalChangesetWithInit", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], RoomService.prototype, "handleNewChanges", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", Promise)
], RoomService.prototype, "watch", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", Promise)
], RoomService.prototype, "checkVersion", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Array]),
    __metadata("design:returntype", Promise)
], RoomService.prototype, "handleAcceptCommit", null);
__decorate([
    (0, utils_1.errorCapture)(),
    (0, socket_guard_1.socketGuard)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object, Object]),
    __metadata("design:returntype", Promise)
], RoomService.prototype, "handleRejectCommit", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Array]),
    __metadata("design:returntype", void 0)
], RoomService.prototype, "syncOperations", null);
__decorate([
    (0, utils_1.errorCapture)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", [Object]),
    __metadata("design:returntype", void 0)
], RoomService.prototype, "handleNodeShareDisabled", null);
exports.RoomService = RoomService;


/***/ }),

/***/ 22919:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OtErrorCode = exports.BroadcastTypes = exports.SyncRequestTypes = void 0;
/**
 * The type of request message that is sent out actively
 */
var SyncRequestTypes;
(function (SyncRequestTypes) {
    /**
     * Establish a long connection channel
     */
    SyncRequestTypes["WATCH_ROOM"] = "WATCH_ROOM";
    /**
     * leave the collaboration room
     */
    SyncRequestTypes["LEAVE_ROOM"] = "LEAVE_ROOM";
    /**
     * Messages in Room
     * Can send multiple changesets at one time
     */
    SyncRequestTypes["CLIENT_ROOM_CHANGE"] = "CLIENT_ROOM_CHANGE";
    /**
     * ROOM message for NEST service
     */
    SyncRequestTypes["NEST_ROOM_CHANGE"] = "NEST_ROOM_CHANGE";
})(SyncRequestTypes = exports.SyncRequestTypes || (exports.SyncRequestTypes = {}));
/**
 * Type of message to broadcast
 */
var BroadcastTypes;
(function (BroadcastTypes) {
    /**
     * Other users in the room operated changeset
     * Because compared to the client, it is actively pushed by the server, so it starts with Server
     */
    BroadcastTypes["SERVER_ROOM_CHANGE"] = "SERVER_ROOM_CHANGE";
    /**
     * There are newly activated collaboration (multiple) people
     */
    BroadcastTypes["ACTIVATE_COLLABORATORS"] = "ACTIVATE_COLLABORATORS";
    /**
     * A collaborator has been deactivated
     */
    BroadcastTypes["DEACTIVATE_COLLABORATOR"] = "DEACTIVATE_COLLABORATOR";
    /**
     * A user updated the cursor
     */
    BroadcastTypes["ENGAGEMENT_CURSOR"] = "ENGAGEMENT_CURSOR";
    /**
     * Node sharing is turned off
     */
    BroadcastTypes["NODE_SHARE_DISABLED"] = "NODE_SHARE_DISABLED";
    /**
     * Field permission is enabled
     */
    BroadcastTypes["FIELD_PERMISSION_ENABLE"] = "FIELD_PERMISSION_ENABLE";
    /**
     * Field permission change
     */
    BroadcastTypes["FIELD_PERMISSION_CHANGE"] = "FIELD_PERMISSION_CHANGE";
    /**
     * Field permission off
     */
    BroadcastTypes["FIELD_PERMISSION_DISABLE"] = "FIELD_PERMISSION_DISABLE";
    /**
     * Field configuration property changes
     */
    BroadcastTypes["FIELD_PERMISSION_SETTING_CHANGE"] = "FIELD_PERMISSION_SETTING_CHANGE";
})(BroadcastTypes = exports.BroadcastTypes || (exports.BroadcastTypes = {}));
var OtErrorCode;
(function (OtErrorCode) {
    // server exception
    OtErrorCode[OtErrorCode["SERVER_ERROR"] = 4000] = "SERVER_ERROR";
    // message repeats
    OtErrorCode[OtErrorCode["MSG_ID_DUPLICATE"] = 4001] = "MSG_ID_DUPLICATE";
    // commit version conflict
    OtErrorCode[OtErrorCode["VERSION_CONFLICT"] = 4002] = "VERSION_CONFLICT";
    // Commit version overrun
    OtErrorCode[OtErrorCode["REVISION_OVER_LIMIT"] = 4003] = "REVISION_OVER_LIMIT";
    // commit version error
    OtErrorCode[OtErrorCode["REVISION_ERROR"] = 4004] = "REVISION_ERROR";
    // Failed to update column header
    OtErrorCode[OtErrorCode["APPLY_META_ERROR"] = 4005] = "APPLY_META_ERROR";
    // structure is missing
    OtErrorCode[OtErrorCode["META_LOST_ERROR"] = 4006] = "META_LOST_ERROR";
    // version numbers do not match
    OtErrorCode[OtErrorCode["MATCH_VERSION_ERROR"] = 4007] = "MATCH_VERSION_ERROR";
    // The space capacity exceeds the limit
    OtErrorCode[OtErrorCode["SPACE_CAPACITY_OVER_LIMIT"] = 4008] = "SPACE_CAPACITY_OVER_LIMIT";
    // cell data format write error
    OtErrorCode[OtErrorCode["DATA_FORMAT_ERROR"] = 4009] = "DATA_FORMAT_ERROR";
    // operation conflict
    OtErrorCode[OtErrorCode["OPERATION_CONFLICT"] = 4010] = "OPERATION_CONFLICT";
})(OtErrorCode = exports.OtErrorCode || (exports.OtErrorCode = {}));


/***/ }),

/***/ 54097:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 88787:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.OnOkType = exports.ModalType = exports.ErrorType = exports.ErrorCode = exports.ServerErrorCode = void 0;
var ServerErrorCode;
(function (ServerErrorCode) {
    // The node server exception is 5 digits, and the java server exception is 3~4 digits
    ServerErrorCode[ServerErrorCode["ServerError"] = 50000] = "ServerError";
    ServerErrorCode[ServerErrorCode["Deny"] = 50001] = "Deny";
    ServerErrorCode[ServerErrorCode["Reject"] = 50002] = "Reject";
    ServerErrorCode[ServerErrorCode["BaseRevisionMaxExceed"] = 50003] = "BaseRevisionMaxExceed";
    ServerErrorCode[ServerErrorCode["BaseRevisionDiffExceed"] = 50004] = "BaseRevisionDiffExceed";
    ServerErrorCode[ServerErrorCode["ChangesetLengthError"] = 50005] = "ChangesetLengthError";
    ServerErrorCode[ServerErrorCode["MetaApplyError"] = 50006] = "MetaApplyError";
    ServerErrorCode[ServerErrorCode["NoRoom"] = 50007] = "NoRoom";
    ServerErrorCode[ServerErrorCode["MessageDuplicate"] = 423] = "MessageDuplicate";
})(ServerErrorCode = exports.ServerErrorCode || (exports.ServerErrorCode = {}));
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["Unknown"] = "F0001";
    ErrorCode["TableDeleted"] = "F0002";
    ErrorCode["RecordDeleted"] = "F0003";
    ErrorCode["FieldDeleted"] = "F0004";
    ErrorCode["ViewDeleted"] = "F0005";
    ErrorCode["RequestTimeout"] = "F1001";
    ErrorCode["ResponseInvalidMessage"] = "F2001";
    ErrorCode["ResponseUnexpectedResponse"] = "F2002";
    ErrorCode["InvalidOperation"] = "F3001";
    ErrorCode["CommandExecuteFailed"] = "F3002";
    ErrorCode["CollaFollowRejected"] = "F3003";
    ErrorCode["EngineCreateFailed"] = "F3004";
    /**
     * The difference between the local document version and the latest server version exceeds the threshold
     */
    ErrorCode["CollaRevGap"] = "F3005";
    ErrorCode["CollaSyncError"] = "F3006";
    ErrorCode["CollaModalError"] = "F3007";
    ErrorCode["ModelInvalidJSON"] = "F4001";
    /**
     * Type error codes are not supported
     */
    ErrorCode["NotSupportAction"] = "F5001";
    /**
     * Insufficient permissions
     */
    ErrorCode["PermissionDenied"] = "F6001";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
var ErrorType;
(function (ErrorType) {
    /**
     * unknown mistake
     */
    ErrorType["UnknownError"] = "Error.Unknown";
    ErrorType["Warning"] = "Error.Warning";
    /**
     * An error occurred while requesting
     */
    ErrorType["RequestError"] = "Error.Request";
    /**
     * Error responding to request
     */
    ErrorType["ResponseError"] = "Error.Response";
    /**
     * Collaboration error
     */
    ErrorType["CollaError"] = "Error.Colla";
    /**
     * data error
     */
    ErrorType["ModelError"] = "Error.Model";
    /**
     * Error returned by the server
     */
    ErrorType["ServerError"] = "Error.Sever";
    /**
     * Unsupported Action
     */
    ErrorType["NotSupportError"] = "Error.NotSupport";
    /**
     * Insufficient permissions
     */
    ErrorType["PermissionDeniedError"] = "Error.PermissionDenied";
})(ErrorType = exports.ErrorType || (exports.ErrorType = {}));
var ModalType;
(function (ModalType) {
    ModalType["Error"] = "error";
    ModalType["Success"] = "success";
    ModalType["Warning"] = "warning";
    ModalType["Info"] = "info";
})(ModalType = exports.ModalType || (exports.ModalType = {}));
var OnOkType;
(function (OnOkType) {
    OnOkType["Refresh"] = "Refresh";
    OnOkType["BackWorkBench"] = "BackWorkBranch";
})(OnOkType = exports.OnOkType || (exports.OnOkType = {}));


/***/ }),

/***/ 75292:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.TSymbolAlign = exports.APIMetaFieldPropertyFormatEnums = exports.APIMetaFieldPermissionLevel = exports.APIMetaMemberType = exports.APIMetaViewType = exports.APIMetaFieldType = void 0;
var APIMetaFieldType;
(function (APIMetaFieldType) {
    APIMetaFieldType["NotSupport"] = "NotSupport";
    APIMetaFieldType["Text"] = "Text";
    APIMetaFieldType["Number"] = "Number";
    APIMetaFieldType["SingleSelect"] = "SingleSelect";
    APIMetaFieldType["MultiSelect"] = "MultiSelect";
    APIMetaFieldType["DateTime"] = "DateTime";
    APIMetaFieldType["Attachment"] = "Attachment";
    APIMetaFieldType["MagicLink"] = "MagicLink";
    APIMetaFieldType["URL"] = "URL";
    APIMetaFieldType["Email"] = "Email";
    APIMetaFieldType["Phone"] = "Phone";
    APIMetaFieldType["Checkbox"] = "Checkbox";
    APIMetaFieldType["Rating"] = "Rating";
    APIMetaFieldType["Member"] = "Member";
    APIMetaFieldType["MagicLookUp"] = "MagicLookUp";
    // RollUp = 'RollUp',
    APIMetaFieldType["Formula"] = "Formula";
    APIMetaFieldType["Currency"] = "Currency";
    APIMetaFieldType["Percent"] = "Percent";
    APIMetaFieldType["SingleText"] = "SingleText";
    APIMetaFieldType["AutoNumber"] = "AutoNumber";
    APIMetaFieldType["CreatedTime"] = "CreatedTime";
    APIMetaFieldType["LastModifiedTime"] = "LastModifiedTime";
    APIMetaFieldType["CreatedBy"] = "CreatedBy";
    APIMetaFieldType["LastModifiedBy"] = "LastModifiedBy";
})(APIMetaFieldType = exports.APIMetaFieldType || (exports.APIMetaFieldType = {}));
var APIMetaViewType;
(function (APIMetaViewType) {
    APIMetaViewType["Grid"] = "Grid";
    APIMetaViewType["Gallery"] = "Gallery";
    APIMetaViewType["Kanban"] = "Kanban";
    APIMetaViewType["Gantt"] = "Gantt";
    APIMetaViewType["Calendar"] = "Calendar";
    APIMetaViewType["Architecture"] = "Architecture";
})(APIMetaViewType = exports.APIMetaViewType || (exports.APIMetaViewType = {}));
var APIMetaMemberType;
(function (APIMetaMemberType) {
    APIMetaMemberType["Team"] = "Team";
    APIMetaMemberType["Member"] = "Member";
})(APIMetaMemberType = exports.APIMetaMemberType || (exports.APIMetaMemberType = {}));
/**
  * Field Meta describes cell data. Columns can be read, that is, cells can be read. Cell permissions and column permissions are strongly related.
  * Permission level: Manage > Edit > Read
  */
var APIMetaFieldPermissionLevel;
(function (APIMetaFieldPermissionLevel) {
    APIMetaFieldPermissionLevel["Read"] = "Read";
    APIMetaFieldPermissionLevel["Edit"] = "Edit";
    APIMetaFieldPermissionLevel["Manage"] = "Manage";
})(APIMetaFieldPermissionLevel = exports.APIMetaFieldPermissionLevel || (exports.APIMetaFieldPermissionLevel = {}));
var APIMetaFieldPropertyFormatEnums;
(function (APIMetaFieldPropertyFormatEnums) {
    APIMetaFieldPropertyFormatEnums["DateTime"] = "DateTime";
    APIMetaFieldPropertyFormatEnums["Number"] = "Number";
    APIMetaFieldPropertyFormatEnums["Percent"] = "Percent";
    APIMetaFieldPropertyFormatEnums["Currency"] = "Currency";
})(APIMetaFieldPropertyFormatEnums = exports.APIMetaFieldPropertyFormatEnums || (exports.APIMetaFieldPropertyFormatEnums = {}));
var TSymbolAlign;
(function (TSymbolAlign) {
    TSymbolAlign["Default"] = "Default";
    TSymbolAlign["Left"] = "Left";
    TSymbolAlign["Right"] = "Right";
})(TSymbolAlign = exports.TSymbolAlign || (exports.TSymbolAlign = {}));


/***/ }),

/***/ 95216:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 92957:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 80360:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FieldTypeDescriptionMap = exports.FieldGroup = exports.readonlyFields = exports.FieldType = exports.LinkFieldSet = exports.TimeFormat = exports.DateFormat = exports.DateRange = exports.CollectType = exports.SymbolAlign = exports.NumberPrecisionType = exports.DefaultCommaStyle = exports.SegmentType = exports.MentionType = exports.MemberType = exports.RollUpFuncType = exports.BasicValueType = exports.FormulaFuncType = void 0;
const i18n_1 = __webpack_require__(47511);
var FormulaFuncType;
(function (FormulaFuncType) {
    FormulaFuncType["Array"] = "Array";
    FormulaFuncType["DateTime"] = "DataTime";
    FormulaFuncType["Logical"] = "Logical";
    FormulaFuncType["Numeric"] = "Numeric";
    FormulaFuncType["Record"] = "Record";
    FormulaFuncType["Text"] = "Text";
})(FormulaFuncType = exports.FormulaFuncType || (exports.FormulaFuncType = {}));
/**
  * The underlying type of the cell value.
  */
var BasicValueType;
(function (BasicValueType) {
    BasicValueType["String"] = "String";
    BasicValueType["Number"] = "Number";
    BasicValueType["DateTime"] = "DateTime";
    BasicValueType["Array"] = "Array";
    BasicValueType["Boolean"] = "Boolean";
})(BasicValueType = exports.BasicValueType || (exports.BasicValueType = {}));
var RollUpFuncType;
(function (RollUpFuncType) {
    RollUpFuncType["VALUES"] = "VALUES";
    // Take formula calculation, there is expression
    RollUpFuncType["AVERAGE"] = "AVERAGE";
    RollUpFuncType["COUNT"] = "COUNT";
    RollUpFuncType["COUNTA"] = "COUNTA";
    RollUpFuncType["COUNTALL"] = "COUNTALL";
    RollUpFuncType["SUM"] = "SUM";
    RollUpFuncType["MIN"] = "MIN";
    RollUpFuncType["MAX"] = "MAX";
    RollUpFuncType["AND"] = "AND";
    RollUpFuncType["OR"] = "OR";
    RollUpFuncType["XOR"] = "XOR";
    // Currently processed in lookup
    // // will be converted to string
    RollUpFuncType["CONCATENATE"] = "CONCATENATE";
    RollUpFuncType["ARRAYJOIN"] = "ARRAYJOIN";
    // // still an array
    RollUpFuncType["ARRAYUNIQUE"] = "ARRAYUNIQUE";
    RollUpFuncType["ARRAYCOMPACT"] = "ARRAYCOMPACT";
})(RollUpFuncType = exports.RollUpFuncType || (exports.RollUpFuncType = {}));
var MemberType;
(function (MemberType) {
    MemberType[MemberType["Team"] = 1] = "Team";
    MemberType[MemberType["Role"] = 2] = "Role";
    MemberType[MemberType["Member"] = 3] = "Member";
})(MemberType = exports.MemberType || (exports.MemberType = {}));
var MentionType;
(function (MentionType) {
    MentionType[MentionType["Unknown"] = 0] = "Unknown";
    MentionType[MentionType["User"] = 1] = "User";
    MentionType[MentionType["DataSheet"] = 2] = "DataSheet";
    MentionType[MentionType["Group"] = 3] = "Group";
})(MentionType = exports.MentionType || (exports.MentionType = {}));
var SegmentType;
(function (SegmentType) {
    SegmentType[SegmentType["Unknown"] = 0] = "Unknown";
    SegmentType[SegmentType["Text"] = 1] = "Text";
    SegmentType[SegmentType["Mention"] = 1] = "Mention";
    SegmentType[SegmentType["Url"] = 2] = "Url";
    SegmentType[SegmentType["Image"] = 3] = "Image";
    SegmentType[SegmentType["Email"] = 4] = "Email";
})(SegmentType = exports.SegmentType || (exports.SegmentType = {}));
exports.DefaultCommaStyle = ',';
var NumberPrecisionType;
(function (NumberPrecisionType) {
    NumberPrecisionType[NumberPrecisionType["level0"] = 0] = "level0";
    NumberPrecisionType[NumberPrecisionType["level1"] = 1] = "level1";
    NumberPrecisionType[NumberPrecisionType["level2"] = 2] = "level2";
    NumberPrecisionType[NumberPrecisionType["level3"] = 3] = "level3";
    NumberPrecisionType[NumberPrecisionType["level4"] = 4] = "level4";
})(NumberPrecisionType = exports.NumberPrecisionType || (exports.NumberPrecisionType = {}));
var SymbolAlign;
(function (SymbolAlign) {
    /** default */
    SymbolAlign[SymbolAlign["default"] = 0] = "default";
    /** left */
    SymbolAlign[SymbolAlign["left"] = 1] = "left";
    /** to the right */
    SymbolAlign[SymbolAlign["right"] = 2] = "right";
})(SymbolAlign = exports.SymbolAlign || (exports.SymbolAlign = {}));
var CollectType;
(function (CollectType) {
    // all fields
    CollectType[CollectType["AllFields"] = 0] = "AllFields";
    // specify the field
    CollectType[CollectType["SpecifiedFields"] = 1] = "SpecifiedFields";
})(CollectType = exports.CollectType || (exports.CollectType = {}));
var DateRange;
(function (DateRange) {
    /**
     * 1901/01/01 00:00:00 UTC+0000
     * Reason for minimum time limit
     */
    DateRange[DateRange["MinTimeStamp"] = -2177452800000] = "MinTimeStamp";
    /** 3000/12/31 24:00:00 UTC+0000 */
    DateRange[DateRange["MaxTimeStamp"] = 32535216000000] = "MaxTimeStamp";
})(DateRange = exports.DateRange || (exports.DateRange = {}));
var DateFormat;
(function (DateFormat) {
    /** year month day */
    DateFormat[DateFormat["YYYY/MM/DD"] = 0] = "YYYY/MM/DD";
    /** year month day */
    DateFormat[DateFormat["YYYY-MM-DD"] = 1] = "YYYY-MM-DD";
    /** day/month/year */
    DateFormat[DateFormat["DD/MM/YYYY"] = 2] = "DD/MM/YYYY";
    /** year-month */
    DateFormat[DateFormat["YYYY-MM"] = 3] = "YYYY-MM";
    /** Month Day */
    DateFormat[DateFormat["MM-DD"] = 4] = "MM-DD";
    /** year */
    DateFormat[DateFormat["YYYY"] = 5] = "YYYY";
    /** month */
    DateFormat[DateFormat["MM"] = 6] = "MM";
    /** day */
    DateFormat[DateFormat["DD"] = 7] = "DD";
})(DateFormat = exports.DateFormat || (exports.DateFormat = {}));
var TimeFormat;
(function (TimeFormat) {
    /** 'HH:mm', 00 - 24 hour */
    TimeFormat[TimeFormat["HH:mm"] = 0] = "HH:mm";
    /** 'hh:mm', 00 - 12 hour */
    TimeFormat[TimeFormat["hh:mm"] = 1] = "hh:mm";
})(TimeFormat = exports.TimeFormat || (exports.TimeFormat = {}));
var LinkFieldSet;
(function (LinkFieldSet) {
    LinkFieldSet["Add"] = "add";
})(LinkFieldSet = exports.LinkFieldSet || (exports.LinkFieldSet = {}));
var FieldType;
(function (FieldType) {
    FieldType[FieldType["NotSupport"] = 0] = "NotSupport";
    FieldType[FieldType["Text"] = 1] = "Text";
    FieldType[FieldType["Number"] = 2] = "Number";
    FieldType[FieldType["SingleSelect"] = 3] = "SingleSelect";
    FieldType[FieldType["MultiSelect"] = 4] = "MultiSelect";
    FieldType[FieldType["DateTime"] = 5] = "DateTime";
    FieldType[FieldType["Attachment"] = 6] = "Attachment";
    FieldType[FieldType["Link"] = 7] = "Link";
    FieldType[FieldType["URL"] = 8] = "URL";
    FieldType[FieldType["Email"] = 9] = "Email";
    FieldType[FieldType["Phone"] = 10] = "Phone";
    FieldType[FieldType["Checkbox"] = 11] = "Checkbox";
    FieldType[FieldType["Rating"] = 12] = "Rating";
    FieldType[FieldType["Member"] = 13] = "Member";
    FieldType[FieldType["LookUp"] = 14] = "LookUp";
    // RollUp = 15,
    FieldType[FieldType["Formula"] = 16] = "Formula";
    FieldType[FieldType["Currency"] = 17] = "Currency";
    FieldType[FieldType["Percent"] = 18] = "Percent";
    FieldType[FieldType["SingleText"] = 19] = "SingleText";
    FieldType[FieldType["AutoNumber"] = 20] = "AutoNumber";
    FieldType[FieldType["CreatedTime"] = 21] = "CreatedTime";
    FieldType[FieldType["LastModifiedTime"] = 22] = "LastModifiedTime";
    FieldType[FieldType["CreatedBy"] = 23] = "CreatedBy";
    FieldType[FieldType["LastModifiedBy"] = 24] = "LastModifiedBy";
    FieldType[FieldType["DeniedField"] = 999] = "DeniedField";
})(FieldType = exports.FieldType || (exports.FieldType = {}));
exports.readonlyFields = new Set([
    FieldType.Formula,
    FieldType.LookUp,
    FieldType.AutoNumber,
    FieldType.CreatedTime,
    FieldType.LastModifiedTime,
    FieldType.CreatedBy,
    FieldType.LastModifiedBy,
]);
var FieldGroup;
(function (FieldGroup) {
    FieldGroup[FieldGroup["Common"] = 0] = "Common";
    FieldGroup[FieldGroup["Advanced"] = 1] = "Advanced";
})(FieldGroup = exports.FieldGroup || (exports.FieldGroup = {}));
/**
 * Fields description
 */
exports.FieldTypeDescriptionMap = {
    [FieldType.DeniedField]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_single_text),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_single_text),
        type: FieldType.SingleText,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_text),
        hasOptSetting: false,
    },
    [FieldType.SingleText]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_single_text),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_single_text),
        type: FieldType.SingleText,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_single_text),
        hasOptSetting: true,
    },
    [FieldType.Text]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_text),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_text),
        type: FieldType.Text,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_text),
        hasOptSetting: false,
    },
    [FieldType.Number]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_number),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_number),
        type: FieldType.Number,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_number),
        hasOptSetting: true,
    },
    [FieldType.SingleSelect]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_single_select),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_single_select),
        type: FieldType.SingleSelect,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_single_select),
        hasOptSetting: true,
    },
    [FieldType.MultiSelect]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_multi_select),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_multi_select),
        type: FieldType.MultiSelect,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_multi_select),
        hasOptSetting: true,
    },
    [FieldType.DateTime]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_datetime),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_datetime),
        type: FieldType.DateTime,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_datetime),
        hasOptSetting: true,
    },
    [FieldType.Attachment]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_attachment),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_attachment),
        type: FieldType.Attachment,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_attachment),
        hasOptSetting: false,
    },
    [FieldType.Link]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_link),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_link),
        type: FieldType.Link,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_link),
        hasOptSetting: true,
    },
    [FieldType.LookUp]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_lookup),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_lookup),
        type: FieldType.LookUp,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_lookup),
        hasOptSetting: true,
    },
    [FieldType.Formula]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_formula),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_formula),
        type: FieldType.Formula,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_formula),
        hasOptSetting: true,
    },
    [FieldType.Member]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_member),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_member),
        type: FieldType.Member,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_member),
        hasOptSetting: true,
    },
    [FieldType.Checkbox]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_checkbox),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_checkbox),
        type: FieldType.Checkbox,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_checkbox),
        hasOptSetting: true,
    },
    [FieldType.Rating]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_rating),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_rating),
        type: FieldType.Rating,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_rating),
        hasOptSetting: true,
    },
    [FieldType.URL]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_url),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_url),
        type: FieldType.URL,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_url),
        hasOptSetting: false,
    },
    [FieldType.Phone]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_phone),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_phone),
        type: FieldType.Phone,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_phone),
        hasOptSetting: false,
    },
    [FieldType.Email]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_email),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_email),
        type: FieldType.Email,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_email),
        hasOptSetting: false,
    },
    [FieldType.Currency]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_currency),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_currency),
        type: FieldType.Currency,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_currency),
        hasOptSetting: true,
    },
    [FieldType.Percent]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_percent),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_percent),
        type: FieldType.Percent,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Common,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_percent),
        hasOptSetting: true,
    },
    [FieldType.AutoNumber]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_autonumber),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_autonumber),
        type: FieldType.AutoNumber,
        canBePrimaryField: true,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_autonumber),
        hasOptSetting: false,
    },
    [FieldType.CreatedTime]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_created_time),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_created_time),
        type: FieldType.CreatedTime,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_created_time),
        hasOptSetting: true,
    },
    [FieldType.LastModifiedTime]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_last_modified_time),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_last_modified_time),
        type: FieldType.LastModifiedTime,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_last_modified_time),
        hasOptSetting: true,
    },
    [FieldType.CreatedBy]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_created_by),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_created_by),
        type: FieldType.CreatedBy,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_created_by),
        hasOptSetting: false,
    },
    [FieldType.LastModifiedBy]: {
        title: (0, i18n_1.t)(i18n_1.Strings.field_title_last_modified_by),
        subTitle: (0, i18n_1.t)(i18n_1.Strings.field_desc_last_modified_by),
        type: FieldType.LastModifiedBy,
        canBePrimaryField: false,
        fieldGroup: FieldGroup.Advanced,
        help: (0, i18n_1.t)(i18n_1.Strings.field_help_last_modified_by),
        hasOptSetting: true,
    },
};


/***/ }),

/***/ 80352:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 73578:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(88471), exports);
__exportStar(__webpack_require__(88787), exports);
__exportStar(__webpack_require__(80360), exports);
__exportStar(__webpack_require__(27722), exports);
__exportStar(__webpack_require__(43263), exports);
__exportStar(__webpack_require__(75292), exports);
__exportStar(__webpack_require__(92957), exports);
__exportStar(__webpack_require__(95216), exports);
__exportStar(__webpack_require__(80352), exports);
__exportStar(__webpack_require__(89407), exports);
__exportStar(__webpack_require__(54097), exports);


/***/ }),

/***/ 89407:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(16871), exports);
__exportStar(__webpack_require__(97408), exports);
__exportStar(__webpack_require__(40335), exports);


/***/ }),

/***/ 16871:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 97408:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.Conversion = void 0;
var Conversion;
(function (Conversion) {
    /** delete the associated field of the associated table */
    Conversion["Delete"] = "delete";
    /** Keep the associated fields of the associated table and convert them to text type */
    Conversion["KeepText"] = "keepText";
})(Conversion = exports.Conversion || (exports.Conversion = {}));


/***/ }),

/***/ 40335:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
const types_1 = __webpack_require__(73578);
const view_types_1 = __webpack_require__(88471);


/***/ }),

/***/ 27722:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.ResourceIdPrefix = exports.ResourceType = void 0;
// The enumeration value is aligned with the field resource_type of the database table `resource_changeset`, please do not modify it
var ResourceType;
(function (ResourceType) {
    ResourceType[ResourceType["Datasheet"] = 0] = "Datasheet";
    ResourceType[ResourceType["Form"] = 1] = "Form";
    ResourceType[ResourceType["Dashboard"] = 2] = "Dashboard";
    ResourceType[ResourceType["Widget"] = 3] = "Widget";
    ResourceType[ResourceType["Mirror"] = 4] = "Mirror";
})(ResourceType = exports.ResourceType || (exports.ResourceType = {}));
var ResourceIdPrefix;
(function (ResourceIdPrefix) {
    ResourceIdPrefix["Datasheet"] = "dst";
    ResourceIdPrefix["Form"] = "fom";
    ResourceIdPrefix["Dashboard"] = "dsb";
    ResourceIdPrefix["Widget"] = "wdt";
    ResourceIdPrefix["Mirror"] = "mir";
})(ResourceIdPrefix = exports.ResourceIdPrefix || (exports.ResourceIdPrefix = {}));


/***/ }),

/***/ 43263:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 88471:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.FilterConjunctionDescMap = exports.FilterConjunction = exports.FilterDuration = exports.FOperatorDescMap = exports.FOperator = void 0;
const i18n_1 = __webpack_require__(47511);
var FOperator;
(function (FOperator) {
    FOperator["Is"] = "is";
    FOperator["IsNot"] = "isNot";
    FOperator["Contains"] = "contains";
    FOperator["DoesNotContain"] = "doesNotContain";
    FOperator["IsEmpty"] = "isEmpty";
    FOperator["IsNotEmpty"] = "isNotEmpty";
    FOperator["IsGreater"] = "isGreater";
    FOperator["IsGreaterEqual"] = "isGreaterEqual";
    FOperator["IsLess"] = "isLess";
    FOperator["IsLessEqual"] = "isLessEqual";
    FOperator["IsRepeat"] = "isRepeat";
})(FOperator = exports.FOperator || (exports.FOperator = {}));
exports.FOperatorDescMap = {
    [FOperator.Is]: (0, i18n_1.t)(i18n_1.Strings.equal),
    [FOperator.IsNot]: (0, i18n_1.t)(i18n_1.Strings.not_equal),
    [FOperator.Contains]: (0, i18n_1.t)(i18n_1.Strings.contains),
    [FOperator.DoesNotContain]: (0, i18n_1.t)(i18n_1.Strings.does_not_contains),
    [FOperator.IsEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_empty),
    [FOperator.IsNotEmpty]: (0, i18n_1.t)(i18n_1.Strings.is_not_empty),
    [FOperator.IsRepeat]: (0, i18n_1.t)(i18n_1.Strings.is_repeat),
};
var FilterDuration;
(function (FilterDuration) {
    FilterDuration["ExactDate"] = "ExactDate";
    FilterDuration["DateRange"] = "DateRange";
    FilterDuration["Today"] = "Today";
    FilterDuration["Tomorrow"] = "Tomorrow";
    FilterDuration["Yesterday"] = "Yesterday";
    FilterDuration["ThisWeek"] = "ThisWeek";
    FilterDuration["PreviousWeek"] = "PreviousWeek";
    FilterDuration["ThisMonth"] = "ThisMonth";
    FilterDuration["PreviousMonth"] = "PreviousMonth";
    FilterDuration["ThisYear"] = "ThisYear";
    FilterDuration["SomeDayBefore"] = "SomeDayBefore";
    FilterDuration["SomeDayAfter"] = "SomeDayAfter";
    FilterDuration["TheLastWeek"] = "TheLastWeek";
    FilterDuration["TheNextWeek"] = "TheNextWeek";
    FilterDuration["TheLastMonth"] = "TheLastMonth";
    FilterDuration["TheNextMonth"] = "TheNextMonth";
})(FilterDuration = exports.FilterDuration || (exports.FilterDuration = {}));
var FilterConjunction;
(function (FilterConjunction) {
    FilterConjunction["And"] = "and";
    FilterConjunction["Or"] = "or";
})(FilterConjunction = exports.FilterConjunction || (exports.FilterConjunction = {}));
exports.FilterConjunctionDescMap = {
    [FilterConjunction.And]: (0, i18n_1.t)(i18n_1.Strings.operator_and),
    [FilterConjunction.Or]: (0, i18n_1.t)(i18n_1.Strings.operator_or),
};


/***/ }),

/***/ 92992:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.setComplement = exports.sortByExtraAnchorIndex = exports.addExtraAnchorIndex = exports.getArrayLoopIndex = exports.array2Map = exports.hasIntersect = exports.isSubSet = exports.isSameSet = exports.moveArrayElement = void 0;
/**
  * move the array
  * @export
  * @template T
  * @param {T[]} array
  * @param {number} from original subscript of mobile data
  * @param {number} to target index of mobile data
  * @returns {(T[] | boolean)}
  */
function moveArrayElement(array, from, to) {
    const length = array.length;
    if (from < 0 || from >= length || to < 0 || to >= length || from === to) {
        return false;
    }
    const fromItem = array[from];
    array.splice(from, 1);
    array.splice(to, 0, fromItem);
    return true;
}
exports.moveArrayElement = moveArrayElement;
/**
 * Check if array1 and array2 are the same set
 * @template T
 * @param {T[]} array1
 * @param {T[]} array2
 * @returns
 */
function isSameSet(array1, array2) {
    if (!Array.isArray(array1) || !Array.isArray(array2)) {
        return false;
    }
    const set1 = new Set(array1);
    const set2 = new Set(array2);
    if (set1.size !== set2.size) {
        return false;
    }
    for (const ele of set1) {
        if (!set2.has(ele)) {
            return false;
        }
    }
    return true;
}
exports.isSameSet = isSameSet;
/**
 * Check if array1 is a subset of array2
 *
 * @export
 * @template T
 * @param {T[]} array1
 * @param {T[]} array2
 * @returns
 */
function isSubSet(array1, array2) {
    if (!Array.isArray(array1) || !Array.isArray(array2)) {
        return false;
    }
    const set1 = new Set(array1);
    const set2 = new Set(array2);
    if (set1.size > set2.size) {
        return false;
    }
    for (const ele of set1) {
        if (!set2.has(ele)) {
            return false;
        }
    }
    return true;
}
exports.isSubSet = isSubSet;
/**
 * Is the intersection empty
 *
 * @export
 * @template T
 * @param {T[]} array1
 * @param {T[]} array2
 * @returns
 */
function hasIntersect(array1, array2) {
    if (!Array.isArray(array1) || !Array.isArray(array2)) {
        return false;
    }
    const set1 = new Set(array1);
    const set2 = new Set(array2);
    for (const ele of set1) {
        if (set2.has(ele)) {
            return true;
        }
    }
    return false;
}
exports.hasIntersect = hasIntersect;
function array2Map(arr, key) {
    return arr.reduce((obj, element) => {
        obj[element[key]] = element;
        return obj;
    }, {});
}
exports.array2Map = array2Map;
/**
  * Get the previous index or the next index of the array, when the index reaches the boundary, start from the beginning.
  * @param length array length
  * @param index current index
  * @param plusOrNot +1 or -1
  */
const getArrayLoopIndex = (length, index, plusOrNot) => {
    if (index == null || length <= 0)
        return 0;
    const newIndex = index + plusOrNot;
    if (newIndex < 0) {
        return (length + newIndex) % length;
    }
    return newIndex % length;
};
exports.getArrayLoopIndex = getArrayLoopIndex;
/**
 * @description adds an anchorIndex to each item in the object array to be sorted, where anchorIndex is the order of the unsorted array
 * @param sortList
 */
const addExtraAnchorIndex = (sortList) => {
    return sortList.map((item, index) => {
        return Object.assign(Object.assign({}, item), { anchorIndex: index });
    });
};
exports.addExtraAnchorIndex = addExtraAnchorIndex;
/**
 * @description Combined with the anchorIndex added above,
 * when the results of the custom sorting function are consistent, compare whether the anchorIndex of the two items are consistent to sort
 * @param sortFunc
 * @param sortList
 */
const sortByExtraAnchorIndex = (sortFunc, sortList) => {
    return sortList.sort((a, b) => {
        return sortFunc(a, b) || a.anchorIndex - b.anchorIndex;
    });
};
exports.sortByExtraAnchorIndex = sortByExtraAnchorIndex;
/**
 * the complement of a with respect to b
 * a = [1,2,3]
 * b = [2,3,4]
 * setComplement(a,b) => [4]
 * @param a array
 * @param b array
 */
const setComplement = (a, b) => {
    const setA = new Set(a);
    return b.filter(itemB => !setA.has(itemB));
};
exports.setComplement = setComplement;


/***/ }),

/***/ 47063:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.wait = void 0;
function wait(ms) {
    return new Promise(resolve => {
        setTimeout(() => {
            resolve();
        }, ms);
    });
}
exports.wait = wait;


/***/ }),

/***/ 19352:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.checkTypeSwitch = void 0;
const field_types_1 = __webpack_require__(80360);
// Check that the column type switch causes the filter to fail
const checkTypeSwitch = (item, field) => {
    const isSameType = (item === null || item === void 0 ? void 0 : item.fieldType) === (field === null || field === void 0 ? void 0 : field.type);
    if (!isSameType) {
        return true;
    }
    // After checking for two type switches (the type didn't change), but the option id changed
    if ((item === null || item === void 0 ? void 0 : item.fieldType) && [field_types_1.FieldType.SingleSelect, field_types_1.FieldType.MultiSelect].includes(item === null || item === void 0 ? void 0 : item.fieldType)) {
        const value = item === null || item === void 0 ? void 0 : item.value;
        const { options } = field.property;
        const ids = options.map(o => o.id);
        // value does not exist, indicating that it has not been selected
        // Determine whether value has a corresponding value in options id
        return Boolean(value) && (Array.isArray(value) ? !value.every(v => ids.includes(v)) : !ids.includes(value));
    }
    return false;
};
exports.checkTypeSwitch = checkTypeSwitch;


/***/ }),

/***/ 44650:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(61941), exports);
__exportStar(__webpack_require__(89298), exports);
__exportStar(__webpack_require__(89661), exports);
__exportStar(__webpack_require__(29937), exports);
__exportStar(__webpack_require__(75036), exports);


/***/ }),

/***/ 29937:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.str2multi = void 0;
const field_types_1 = __webpack_require__(80360);
/**
 * 1. When converting from single selection to multiple selection,
 * the incoming value is a string, here it is judged whether the string exists in newField
 *
 * 2. When converting multiple selections to multiple selections,
 * the incoming value is a string[], here it is judged whether the id in string[] exists in newField
 *
 * 3. For other types to radio selection, a text (name) is passed in.
 * Here it is judged whether the text already exists in the newField option
 *
 * @export
 * @param {(string[] | string | null)} value
 * @param {MultiSelectField} newField
 * @param {Field} oldField
 * @returns {(string[] | null)}
 */
function str2multi(value, newField, oldField) {
    if (value == null)
        return null;
    /* If value is an array, but the old type is not a multi-select type, return null */
    if (Array.isArray(value) && oldField.type !== field_types_1.FieldType.MultiSelect) {
        console.warn(`When the value parameter is an array, the type should be a multi-select type: \
                  ${field_types_1.FieldType.MultiSelect}, the current type: ${oldField.type}`);
        return null;
    }
    if (oldField.type === field_types_1.FieldType.SingleSelect) {
        const option = newField.findOptionById(value);
        return option ? [option.id] : null;
    }
    else if (Array.isArray(value) && oldField.type === field_types_1.FieldType.MultiSelect) {
        const result = [];
        value.forEach(v => {
            const option = newField.findOptionById(v);
            if (option) {
                result.push(option.id);
            }
        });
        return result.length > 0 ? result : null;
    }
    const option = newField.findOptionByName(value);
    if (option) {
        return [option.id];
    }
    return null;
}
exports.str2multi = str2multi;


/***/ }),

/***/ 61941:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.num2number = exports.str2number = void 0;
function str2number(value) {
    if (value.trim() === '') {
        return null;
    }
    const num = Number(value);
    return num2number(num);
}
exports.str2number = str2number;
function num2number(num) {
    if (num == null || !Number.isFinite(num)) {
        return null;
    }
    return numberSpecification(num.toString());
}
exports.num2number = num2number;
/**
 * Change from scientific notation to number format
 * (because large numbers will be automatically converted back to scientific notation, recorded in string mode)
 * @param value The numbers in js will be converted to part of the data in scientific notation
 */
function e2number(value) {
    const val = value.split('e');
    const p = parseInt(val[1], 10); // get the index value
    if (p === 0) {
        return val[0];
    }
    const num = val[0].split('.');
    const dotLeft = num[0]; // value to the left of the decimal point
    const dotRight = num[1] || ''; // value to the right of the decimal point
    if (p > 0) {
        value = dotLeft + dotRight.substr(0, p) +
            (dotRight.length > p ? '.' + dotRight.substr(p) : '0'.repeat(p - dotRight.length));
    }
    else {
        // Scientific notation converted by number has 1 digits to the left of the decimal point by default, so only consider this case
        const left = parseInt(dotLeft, 10);
        value = (left < 0 ? '-0.' : '0.') + '0'.repeat(-p - 1) + Math.abs(left) + dotRight;
    }
    return value;
}
/**
 * Perform unified format processing on the numbers in the digital column, intercept the first 15 significant digits, and convert them into numbers
 * @param value A legal number entered from the cell (string format)
 */
function numberSpecification(value) {
    if (value.includes('e')) {
        value = e2number(value);
    }
    const str = value.replace('.', '').replace('-', '').replace(/^[0]+/, '');
    const len = str.length;
    const demarcationLen = 15; // 15 significant digits are the cutoff point
    if (len > demarcationLen) {
        // Use 0 for positive numbers and 1 for negative numbers, 
        // which is convenient for counting later, because negative numbers need to calculate one more bit of length
        let isNegative = 0;
        if (Number(value) < 0) {
            isNegative = 1;
        }
        // The length of an integer is equal to len, the length with decimals = len + 1, the length of pure decimals - len > 1
        const valLen = value.length - isNegative;
        if (valLen === len) {
            value = value.substr(0, demarcationLen + isNegative) + '0'.repeat(len - demarcationLen);
        }
        else if (valLen === len + 1) {
            const dotIndex = value.indexOf('.') - isNegative;
            if (dotIndex > demarcationLen) {
                value = value.substr(0, demarcationLen + isNegative) + '0'.repeat(dotIndex - demarcationLen);
            }
            else if (dotIndex === demarcationLen) {
                value = value.substr(0, demarcationLen + isNegative);
            }
            else {
                value = value.substr(0, demarcationLen + isNegative + 1);
            }
        }
        else {
            value = (isNegative > 0 ? '-0.' : '0.') + '0'.repeat(valLen - len - 2) + str.substr(0, demarcationLen);
        }
    }
    return Number(value);
}


/***/ }),

/***/ 89298:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.str2single = void 0;
const field_types_1 = __webpack_require__(80360);
/**
 * 1. When converting from multiple selection to single selection,
 * the incoming value is an ISelectedId[], here it is judged whether the first one exists in newField
 * 2. When converting from radio to radio, the incoming value is an ISelectedId, here it is judged whether the ISelectedId exists in newField
 * 3. For other types to radio selection, a text (name) is passed in. Here it is judged whether the text already exists in the newField option
 *
 * @export
 * @param {(string[] | string | null)} value
 * @param {SingleSelectField} newField
 * @param {Field} oldField
 * @returns {(string | null)}
 */
function str2single(value, newField, oldField) {
    if (value == null)
        return null;
    /* If value is an array, but the old type is not a multi-select type, return null */
    if (Array.isArray(value) && oldField.type !== field_types_1.FieldType.MultiSelect) {
        console.warn(`When the value parameter is an array, the type should be a multi-select type: \
                  ${field_types_1.FieldType.MultiSelect}, the current type: ${oldField.type}`);
        return null;
    }
    /* When the old type is multiple selection, value is an array */
    if (Array.isArray(value) && oldField.type === field_types_1.FieldType.MultiSelect) {
        value = value;
        if (value.length > 0) {
            const id = value[0];
            const option = newField.findOptionById(id);
            return option ? option.id : null;
        }
        return null;
    }
    else if (oldField.type === field_types_1.FieldType.SingleSelect) {
        const option = newField.findOptionById(value);
        return option ? option.id : null;
    }
    const option = newField.findOptionByName(value);
    return option ? option.id : null;
}
exports.str2single = str2single;


/***/ }),

/***/ 89661:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.str2text = void 0;
const field_types_1 = __webpack_require__(80360);
function str2text(value) {
    if (!value) {
        return null;
    }
    return [{
            type: field_types_1.SegmentType.Text,
            text: value,
        }];
}
exports.str2text = str2text;


/***/ }),

/***/ 75036:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.diffTimeZone = exports.str2time = exports.str2timestamp = void 0;
const dayjs_1 = __importDefault(__webpack_require__(1635));
const duration_1 = __importDefault(__webpack_require__(90756));
const customParseFormat_1 = __importDefault(__webpack_require__(84125));
const config_1 = __webpack_require__(77511);
dayjs_1.default.extend(duration_1.default);
dayjs_1.default.extend(customParseFormat_1.default);
function str2timestamp(value) {
    if (!value) {
        return null;
    }
    const dateTime = (0, dayjs_1.default)(value);
    return dateTime.isValid() ? dateTime.valueOf() : null;
}
exports.str2timestamp = str2timestamp;
/**
 *
 * Returns the number of milliseconds from 13:45 to 00:00
 * @export
 * @param {string} value 12:34
 * @param {IDateTimeField} [_field]
 * @returns
 */
function str2time(value, _field) {
    // const format = (field && field.property.timeFormat) || DateTimeField.defaultTimeFormat;
    // let dateTime = dayjs(value, format);
    // if (!dateTime.isValid()) {
    //   const format2 = format.replace(':', '');
    //   if (format2 !== format) {
    //     dateTime = dayjs(value, format2);
    //   }
    // }
    // if (!dateTime.isValid()) {
    //   return null;
    // }
    const [hh, mm] = value.split(':');
    const hours = parseInt(hh, 10);
    const minutes = parseInt(mm, 10);
    if (hours < 0 || hours > 23 || minutes < 0 || minutes > 59) {
        return;
    }
    return dayjs_1.default.duration({
        hours,
        minutes,
        // seconds: parseInt(s, 10),
        // milliseconds: dateTime.millisecond(),
    }).asMilliseconds();
}
exports.str2time = str2time;
const diffTimeZone = (timeZone) => {
    if (!timeZone)
        return 0;
    const tzOffset = (0, config_1.getTimeZoneOffsetByUtc)(timeZone);
    const clientTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;
    const clientTzOffset = (0, config_1.getTimeZoneOffsetByUtc)(clientTimeZone);
    return dayjs_1.default.duration({
        hours: clientTzOffset - tzOffset
    }).asMilliseconds();
};
exports.diffTimeZone = diffTimeZone;


/***/ }),

/***/ 39671:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getDate = exports.isSameDay = exports.getDay = exports.getToday = void 0;
function getToday() {
    const today = new Date();
    return getDay(today);
}
exports.getToday = getToday;
function getDay(day, dayOffset) {
    if (dayOffset != null) {
        day.setDate(day.getDate() + dayOffset);
    }
    day.setMilliseconds(0);
    day.setSeconds(0);
    day.setMinutes(0);
    day.setHours(0);
    return day;
}
exports.getDay = getDay;
function isSameDay(day1, day2) {
    day1 = new Date(day1);
    day2 = new Date(day2);
    return day1.getFullYear() === day2.getFullYear() &&
        day1.getMonth() === day2.getMonth() &&
        day1.getDate() === day2.getDate();
}
exports.isSameDay = isSameDay;
function getDate(date) {
    date = new Date(date);
    const { getMonth, getDate, getFullYear } = Date.prototype;
    return new Date(getFullYear.call(date), getMonth.call(date), getDate.call(date)).valueOf();
}
exports.getDate = getDate;


/***/ }),

/***/ 13799:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isClient = exports.isServer = void 0;
// The logic in the `core` sometimes needs to distinguish between the client and the server.
const isServer = () => typeof global === 'object' && global.process && !global['document'];
exports.isServer = isServer;
const isClient = () => typeof global === 'object' && global['document'];
exports.isClient = isClient;


/***/ }),

/***/ 96461:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.errorCapture = exports.OVER_LIMIT_SPACE_RECORDS = exports.OVER_LIMIT_PER_SHEET_RECORDS = void 0;
const config_1 = __webpack_require__(77511);
const i18n_1 = __webpack_require__(47511);
const types_1 = __webpack_require__(73578);
exports.OVER_LIMIT_PER_SHEET_RECORDS = '305';
exports.OVER_LIMIT_SPACE_RECORDS = '309';
const OVER_LIMIT_GANTT_VIEW_NUMBER = '307';
const OVER_LIMIT_CALENDAR_NUMBER = '308';
const errorCapture = () => {
    return (_target, name, descriptor) => {
        const fn = descriptor.value;
        return {
            configurable: true,
            get() {
                const boundFn = fn.bind(this);
                Reflect.defineProperty(this, name, {
                    value: boundFn,
                    configurable: true,
                    writable: true,
                });
                const i18nMessage = (code, message) => {
                    switch (code) {
                        case 50000:
                            return (0, i18n_1.t)(i18n_1.Strings.socket_error_server);
                        case 50001:
                            return (0, i18n_1.t)(i18n_1.Strings.socket_error_network);
                        case config_1.StatusCode.FRONT_VERSION_ERROR:
                            return (0, i18n_1.t)(i18n_1.Strings.front_version_error_desc);
                    }
                    return message;
                };
                const getErrorType = (code) => {
                    if ([exports.OVER_LIMIT_PER_SHEET_RECORDS, exports.OVER_LIMIT_SPACE_RECORDS, OVER_LIMIT_GANTT_VIEW_NUMBER, OVER_LIMIT_CALENDAR_NUMBER].includes(code)) {
                        return 'subscribeUsage';
                    }
                    return;
                };
                const onError = (e) => {
                    const code = e.code || types_1.ErrorCode.CollaSyncError;
                    this.event.onError && this.event.onError(Object.assign(Object.assign({}, e), { type: types_1.ErrorType.CollaError, code: code, message: i18nMessage(code, e.message) }), getErrorType(code));
                    throw e;
                };
                return (...args) => {
                    try {
                        const promise = boundFn(...args);
                        // If it is a promise, you need to listen catch catch
                        if (promise instanceof Promise) {
                            promise.catch(e => {
                                onError(e);
                            });
                        }
                        return promise;
                    }
                    catch (e) {
                        onError(e);
                    }
                };
            },
        };
    };
};
exports.errorCapture = errorCapture;


/***/ }),

/***/ 85417:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.integrateCdnHost = exports.cellValueToImageSrc = exports.getHostOfAttachment = exports.getImageThumbSrc = exports.isSvg = exports.isImage = exports.isWebp = exports.isGif = exports.isPdf = exports.CutMethod = void 0;
const attr_accept_1 = __importDefault(__webpack_require__(99308));
const config_1 = __webpack_require__(77511);
const urlcat_1 = __importDefault(__webpack_require__(83764));
var CutMethod;
(function (CutMethod) {
    CutMethod["UNCUT"] = "0";
    CutMethod["CUT"] = "1";
})(CutMethod = exports.CutMethod || (exports.CutMethod = {}));
function isPdf(file) {
    return (0, attr_accept_1.default)(file, 'application/pdf');
}
exports.isPdf = isPdf;
function isGif(file) {
    return (0, attr_accept_1.default)(file, 'image/gif');
}
exports.isGif = isGif;
function isWebp(file) {
    return (0, attr_accept_1.default)(file, 'image/webp');
}
exports.isWebp = isWebp;
function isImage(file) {
    return (0, attr_accept_1.default)(file, 'image/*');
}
exports.isImage = isImage;
function isSvg(file) {
    return (0, attr_accept_1.default)(file, 'image/svg+xml');
}
exports.isSvg = isSvg;
function getFileMethod(option) {
    if (!option.method)
        return '/0';
    return `/${option.method}`;
}
function getFileSize(option) {
    const w = option.w ? option.w : option.size;
    const h = option.h ? option.h : option.size;
    //NOTE: w and h must be integer
    if (w && h) {
        return `/w/${Math.floor(w)}/h/${Math.floor(h)}`;
    }
    if (w) {
        return `/w/${Math.floor(w)}`;
    }
    if (h) {
        return `/h/${Math.floor(h)}`;
    }
    return '';
}
function getFileQuality(option) {
    if (option && option.quality) {
        return `/q/${option.quality}!`;
    }
    return '';
}
function getFileFormat(options) {
    if (options && options.format === 'jpg') {
        return '/format/jpg';
    }
    return '';
}
function getImageThumbSrcForQiniu(src, options) {
    if (!/^http/.test(src)) {
        src[0] !== '/' && (src = '/' + src);
    }
    return [
        src,
        '?imageView2',
        getFileMethod(options),
        getFileSize(options),
        getFileFormat(options),
        getFileQuality(options),
    ].join('');
}
function getImageThumbSrc(src, options) {
    var _a;
    if (!options || ((_a = (0, config_1.getCustomConfig)()) === null || _a === void 0 ? void 0 : _a.DISABLED_QINIU_COMPRESSION_PARAMS)) {
        return src;
    }
    return getImageThumbSrcForQiniu(src, options);
}
exports.getImageThumbSrc = getImageThumbSrc;
const getHostOfAttachment = (bucket) => {
    var _a, _b, _c;
    if (typeof window != 'object') {
        return process.env[bucket.toUpperCase()] || process.env.OSS_HOST;
    }
    const origin = window.location.origin;
    if (bucket.toUpperCase() === 'QNY1') {
        const QNY1 = (_a = window.__initialization_data__) === null || _a === void 0 ? void 0 : _a.envVars.QNY1;
        return QNY1.includes('http') ? QNY1 : (0, urlcat_1.default)(origin, QNY1 + '');
    }
    if (bucket.toUpperCase() === 'QNY2') {
        const QNY2 = (_b = window.__initialization_data__) === null || _b === void 0 ? void 0 : _b.envVars.QNY2;
        return QNY2.includes('http') ? QNY2 : (0, urlcat_1.default)(origin, QNY2 + '');
    }
    const QNY3 = (_c = window.__initialization_data__) === null || _c === void 0 ? void 0 : _c.envVars.QNY3;
    return QNY3.includes('http') ? QNY3 : (0, urlcat_1.default)(origin, QNY3 + '');
};
exports.getHostOfAttachment = getHostOfAttachment;
function cellValueToImageSrc(cellValue, options) {
    if (!cellValue)
        return '';
    const { bucket, token, preview: previewToken, mimeType, name } = cellValue;
    const host = (0, exports.getHostOfAttachment)(bucket);
    if (!host)
        return '';
    const { formatToJPG, isPreview } = options || {};
    const fileArgument = { name, type: mimeType };
    const originSrc = (0, urlcat_1.default)(host, token);
    const defaultSrc = getImageThumbSrc(originSrc, options);
    if (isPdf(fileArgument)) {
        if (isPreview && options && Object.keys(options).length > 1) {
            return getImageThumbSrc((0, urlcat_1.default)(host, previewToken), options);
        }
        return originSrc;
    }
    if (isGif(fileArgument) || isWebp(fileArgument)) {
        // The caller is from Swiper and does not use slice parameters
        if (options == null) {
            return originSrc;
        }
        return getImageThumbSrc(originSrc, Object.assign(Object.assign({}, options), { format: formatToJPG ? 'jpg' : undefined }));
    }
    if (isSvg(fileArgument)) {
        return originSrc;
    }
    return defaultSrc;
}
exports.cellValueToImageSrc = cellValueToImageSrc;
const integrateCdnHost = (pathName) => {
    if (!pathName) {
        return pathName;
    }
    const host = (0, exports.getHostOfAttachment)('QNY1');
    // TODO: delete this. Compatible with old version data
    if (pathName.startsWith('http')) {
        return pathName;
    }
    return (0, urlcat_1.default)(host, pathName);
};
exports.integrateCdnHost = integrateCdnHost;


/***/ }),

/***/ 26854:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
__exportStar(__webpack_require__(92992), exports);
__exportStar(__webpack_require__(92901), exports);
__exportStar(__webpack_require__(71784), exports);
__exportStar(__webpack_require__(86725), exports);
__exportStar(__webpack_require__(44172), exports);
__exportStar(__webpack_require__(44650), exports);
__exportStar(__webpack_require__(39671), exports);
__exportStar(__webpack_require__(44188), exports);
__exportStar(__webpack_require__(85417), exports);
__exportStar(__webpack_require__(47063), exports);
__exportStar(__webpack_require__(54685), exports);
__exportStar(__webpack_require__(96461), exports);
__exportStar(__webpack_require__(35316), exports);
__exportStar(__webpack_require__(41078), exports);
__exportStar(__webpack_require__(19352), exports);
__exportStar(__webpack_require__(95453), exports);
__exportStar(__webpack_require__(44008), exports);
__exportStar(__webpack_require__(80971), exports);


/***/ }),

/***/ 35316:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generateFixInnerConsistencyChangesets = exports.innerConsistencyCheck = void 0;
const commands_1 = __webpack_require__(97018);
const engine_1 = __webpack_require__(39036);
const store_1 = __webpack_require__(56791);
const xor_1 = __importDefault(__webpack_require__(13890));
const types_1 = __webpack_require__(73578);
/**
  *
  * @param array columns or rows
  * @param key id key
  * @return the index of the rows/columns to be deleted
  */
function getDuplicates(array, key) {
    const set = new Set();
    const result = [];
    array.forEach((item, index) => {
        if (!item) {
            result.push(index);
            return;
        }
        const str = item[key];
        set.has(str) ? result.push(index) : set.add(str);
    });
    return result.length ? result.sort() : null;
}
// Consistency check requires that all views in the snapshot are not duplicated, 
// and that rows/columns correspond to recordMap/fieldMap one-to-one without duplication
function innerConsistencyCheck(snapshot) {
    const startTime = Date.now();
    const recordsInMap = Object.keys(snapshot.recordMap || {});
    const fieldsInMap = Object.keys(snapshot.meta.fieldMap || {});
    const consistencyErrors = [];
    const duplicateViews = getDuplicates(snapshot.meta.views, 'id');
    // filter duplicate views
    const views = duplicateViews ? snapshot.meta.views.filter((_, index) => !duplicateViews.some((idx) => idx === index))
        : snapshot.meta.views;
    // remove duplicate views
    if (duplicateViews) {
        consistencyErrors.push({
            duplicateViews,
        });
    }
    views.forEach(view => {
        const recordsInRow = view.rows.filter(row => Boolean(row && row.recordId)).map(row => row.recordId);
        const fieldsInColumn = view.columns.filter(column => Boolean(column && column.fieldId)).map(column => column.fieldId);
        const differentRecords = (0, xor_1.default)(recordsInMap, recordsInRow);
        const differentFields = (0, xor_1.default)(fieldsInMap, fieldsInColumn);
        const duplicateRows = getDuplicates(view.rows, 'recordId');
        const duplicateColumns = getDuplicates(view.columns, 'fieldId');
        const err = {
            viewId: view.id,
            viewName: view.name,
            recordsInMap,
        };
        if (!differentRecords.length && !differentFields.length && !duplicateRows && !duplicateColumns) {
            return;
        }
        duplicateRows && (err.duplicateRows = duplicateRows);
        duplicateColumns && (err.duplicateColumns = duplicateColumns);
        if (differentRecords.length) {
            if (differentRecords.length > 100) {
                err.replaceRows = true;
            }
            else {
                const notExistInRecordMap = differentRecords.filter(record => !snapshot.recordMap[record]);
                const notExistInViewRow = differentRecords.filter(record => snapshot.recordMap[record]);
                err.notExistInRecordMap = notExistInRecordMap; // exists in view.rows, but not in recordMap, indicating that rows add ghost rows
                err.notExistInViewRow = notExistInViewRow; // exists in recordMap, but does not exist in view.rows, indicating that rows are missing in rows
            }
        }
        if (differentFields.length) {
            const notExistInFieldMap = differentFields.filter(record => !snapshot.meta.fieldMap[record]);
            const notExistInViewColumn = differentFields.filter(record => snapshot.meta.fieldMap[record]);
            err.notExistInFieldMap = notExistInFieldMap; // exists in view.columns, but not in fieldMap, indicating that columns have added ghost rows
            // exists in fieldMap, but does not exist in view.columns, indicating that rows are missing in columns
            err.notExistInViewColumn = notExistInViewColumn;
        }
        consistencyErrors.push(err);
    });
    console.log(`dstId:${snapshot.datasheetId}, data consistency check done, duration : ${Date.now() - startTime} ms`);
    return consistencyErrors.length ? consistencyErrors : null;
}
exports.innerConsistencyCheck = innerConsistencyCheck;
function generateFixInnerConsistencyChangesets(datasheetId, errors, state) {
    const actions = [];
    const datasheet = store_1.Selectors.getDatasheet(state, datasheetId);
    if (!datasheet) {
        return [];
    }
    errors.forEach(data => {
        // Delete duplicate view
        if ('duplicateViews' in data) {
            data.duplicateViews.forEach((index, i) => {
                actions.push({
                    n: engine_1.OTActionName.ListDelete,
                    p: ['meta', 'views', index - i],
                    ld: datasheet.snapshot.meta.views[index],
                });
            });
            return;
        }
        const { viewId, notExistInRecordMap, notExistInViewRow, notExistInFieldMap, notExistInViewColumn, duplicateRows, duplicateColumns, replaceRows, recordsInMap, } = data;
        const viewIndex = datasheet.snapshot.meta.views.findIndex(view => view.id === viewId);
        const rows = datasheet.snapshot.meta.views[viewIndex].rows;
        const columns = datasheet.snapshot.meta.views[viewIndex].columns;
        // row/column index is value to prevent duplicate deletions
        const rowsToDelete = new Set(duplicateRows);
        const columnsToDelete = new Set(duplicateColumns);
        // column and row may have null values in them, which should be dealt with in advance
        rows.forEach((item, index) => {
            if (!item) {
                rowsToDelete.add(index);
            }
        });
        columns.forEach((item, index) => {
            if (!item) {
                columnsToDelete.add(index);
            }
        });
        // If there are more than 100 rows of data that cannot be matched, the rows of the view are replaced in their entirety
        if (replaceRows) {
            actions.push({
                n: engine_1.OTActionName.ObjectReplace,
                p: ['meta', 'views', viewIndex, 'rows'],
                od: rows,
                oi: recordsInMap.map(recordId => ({ recordId })),
            });
        }
        // If it does not exist in the recordMap, delete it in the view
        notExistInRecordMap &&
            notExistInRecordMap.forEach((recordId) => {
                const rowIndex = rows.findIndex(row => row && row.recordId === recordId);
                rowIndex > -1 && rowsToDelete.add(rowIndex);
            });
        // If it does not exist in the view, add it to the view
        notExistInViewRow &&
            notExistInViewRow.forEach((recordId) => {
                actions.push({
                    n: engine_1.OTActionName.ListInsert,
                    p: ['meta', 'views', viewIndex, 'rows', rows.length],
                    li: { recordId },
                });
            });
        // If it does not exist in the fieldMap, delete it in the view
        notExistInFieldMap &&
            notExistInFieldMap.forEach((fieldId) => {
                const columnIndex = columns.findIndex(column => column && column.fieldId === fieldId);
                columnIndex > -1 && columnsToDelete.add(columnIndex);
            });
        // If it does not exist in the view, add it to the view
        notExistInViewColumn &&
            notExistInViewColumn.forEach((fieldId) => {
                actions.push({
                    n: engine_1.OTActionName.ListInsert,
                    p: ['meta', 'views', viewIndex, 'columns', columns.length],
                    li: { fieldId },
                });
            });
        Array.from(rowsToDelete)
            .sort()
            .forEach((index, i) => {
            actions.push({
                n: engine_1.OTActionName.ListDelete,
                p: ['meta', 'views', viewIndex, 'rows', index - i],
                ld: rows[index],
            });
        });
        Array.from(columnsToDelete)
            .sort()
            .forEach((index, i) => {
            actions.push({
                n: engine_1.OTActionName.ListDelete,
                p: ['meta', 'views', viewIndex, 'columns', index - i],
                ld: columns[index],
            });
        });
    });
    const operation = {
        cmd: commands_1.CollaCommandName.FixConsistency,
        actions,
    };
    return [{ resourceId: datasheetId, resourceType: types_1.ResourceType.Datasheet, operations: [operation] }];
}
exports.generateFixInnerConsistencyChangesets = generateFixInnerConsistencyChangesets;


/***/ }),

/***/ 80971:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.effectResourceAction = exports.parseAction = exports.ActionType = void 0;
const lodash_1 = __webpack_require__(46517);
var ActionType;
(function (ActionType) {
    ActionType["AddRow"] = "addRow";
    ActionType["AddColumn"] = "addColumn";
    ActionType["AddRecord"] = "addRecord";
    ActionType["AddField"] = "addField";
    ActionType["DelRow"] = "delRow";
    ActionType["MoveRow"] = "moveRow";
    ActionType["DelColumn"] = "delColumn";
    ActionType["UpdateColumn"] = "updateColumn";
    ActionType["DelRecord"] = "delRecord";
    ActionType["DelField"] = "delField";
    ActionType["UpdateField"] = "updateField";
    ActionType["UpdateRecord"] = "updateRecord";
    ActionType["AddView"] = "addView";
    ActionType["DelView"] = "delView";
    ActionType["SetViewProperty"] = "setViewProperty";
    ActionType["ModifyViewName"] = "modifyViewName";
    ActionType["InsertComment"] = "insertComment";
    ActionType["UpdateComment"] = "updateComment";
    ActionType["AddCommentCount"] = "addCommentCount";
    ActionType["DelComment"] = "delComment";
    ActionType["DescCommentCount"] = "descCommentCount";
    ActionType["Unknown"] = "unknown";
})(ActionType = exports.ActionType || (exports.ActionType = {}));
const parseAction = (action) => {
    const hasOi = 'oi' in action;
    const hasOD = 'od' in action;
    const hasLi = 'li' in action;
    const hasLd = 'ld' in action;
    const hasNa = 'na' in action;
    const hasLm = 'lm' in action;
    const path = action.p;
    const modifyType = action.p[0];
    let viewIndex, metaField, viewProperty, propertyIndex, fieldId, recordId, recordPropertyData, recordProperty;
    if (modifyType === 'meta') {
        metaField = path[1];
        if (metaField === 'views') {
            viewIndex = path[2];
            viewProperty = path[3];
            propertyIndex = path[4];
        }
        else if (metaField === 'fieldMap') {
            fieldId = path[2];
        }
    }
    else if (modifyType === 'recordMap') {
        recordId = path[1];
        recordProperty = path[2];
        recordPropertyData = path[3];
    }
    // The changed path is meta -> views -> vIdx -> rows, changing the record of a view
    if (viewProperty === 'rows') {
        if (hasLi && !hasLd) {
            return {
                type: ActionType.AddRow,
                context: { viewIndex, viewProperty, propertyIndex }
            };
        }
        else if (hasLd) {
            return {
                type: ActionType.DelRow,
                context: { viewIndex, viewProperty, propertyIndex }
            };
        }
        else if (hasLm) {
            return {
                type: ActionType.MoveRow,
                context: {
                    viewIndex,
                    viewProperty,
                    propertyIndex,
                }
            };
        }
        // The changed path is meta -> views -> vIdx -> columns, changing the columns of a view
    }
    else if (viewProperty === 'columns') {
        if (hasLi && hasLd) {
            return {
                type: ActionType.UpdateColumn,
                context: { viewIndex, viewProperty, propertyIndex }
            };
        }
        if (hasLi && !hasLd) {
            return {
                type: ActionType.AddColumn,
                context: { viewIndex, viewProperty, propertyIndex }
            };
        }
        else if (hasLd) {
            return {
                type: ActionType.DelColumn,
                context: { viewIndex, viewProperty, propertyIndex, fieldId: action.ld.fieldId }
            };
        }
        // Change the path to meta -> views -> vIdx -> xxx, change the view
    }
    else if (metaField === 'views') {
        // add view
        if (viewProperty == null && hasLi && !hasLd) {
            return {
                type: ActionType.AddView,
                context: { viewIndex }
            };
        }
        // delete view
        if (viewProperty == null && !hasLi && hasLd) {
            return {
                type: ActionType.DelView,
                context: { viewIndex }
            };
        }
        if (viewProperty === 'name' && hasOD && hasOi) {
            return {
                type: ActionType.ModifyViewName,
                context: { viewIndex, viewProperty }
            };
        }
        if ((0, lodash_1.isString)(viewProperty)) {
            return {
                type: ActionType.SetViewProperty,
                context: {
                    viewIndex,
                    viewProperty
                }
            };
        }
        // The changed path is meta -> fieldMap -> fieldId, changing the field data
    }
    else if (fieldId) {
        // add field
        if (hasOi && !hasOD) {
            return {
                type: ActionType.AddField,
                context: { fieldId }
            };
            // delete field
        }
        else if (hasOD && !hasOi) {
            return {
                type: ActionType.DelField,
                context: { fieldId }
            };
            // update field
        }
        else if (hasOi && hasOD) {
            return {
                type: ActionType.UpdateField,
                context: { fieldId }
            };
        }
    }
    else if (recordId) {
        // new record
        if (hasOi && !hasOD && !recordPropertyData) {
            return {
                type: ActionType.AddRecord,
                context: { recordId }
            };
            // delete record
        }
        else if (hasOD && !hasOi && !recordPropertyData) {
            return {
                type: ActionType.DelRecord,
                context: { recordId }
            };
            // insert comment
        }
        else if (recordProperty === 'comments' && hasLi && !recordPropertyData) {
            return {
                type: ActionType.InsertComment,
                context: { recordId, data: action.li }
            };
            // update comment(or like)
        }
        else if (recordProperty === 'comments' && hasLi && recordPropertyData) {
            return {
                type: ActionType.UpdateComment,
                context: { recordId, data: action.li }
            };
            // delete comment
        }
        else if (recordProperty === 'comments' && hasLd) {
            return {
                type: ActionType.DelComment,
                context: { recordId, data: action.li }
            };
            // add comment number
        }
        else if (recordProperty === 'commentCount' && hasNa && action.na > 0) {
            return {
                type: ActionType.AddCommentCount,
                context: { recordId }
            };
            // reduce comments
        }
        else if (recordProperty === 'commentCount' && hasNa && action.na < 0) {
            return {
                type: ActionType.DescCommentCount,
                context: { recordId }
            };
            // update records
        }
        else if (recordProperty === 'data' && recordPropertyData) {
            return {
                type: ActionType.UpdateRecord,
                context: { recordId, fieldId: recordPropertyData }
            };
        }
    }
    return {
        type: ActionType.Unknown,
        context: {}
    };
};
exports.parseAction = parseAction;
const effectResourceAction = (type) => {
    return [
        ActionType.AddField,
        ActionType.AddRecord,
        ActionType.DelField,
        ActionType.DelRecord,
        ActionType.UpdateRecord,
        ActionType.UpdateField
    ].includes(type);
};
exports.effectResourceAction = effectResourceAction;


/***/ }),

/***/ 41078:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.generateFixLinkConsistencyChangesets = exports.checkLinkConsistency = void 0;
const commands_1 = __webpack_require__(97018);
const engine_1 = __webpack_require__(39036);
const store_1 = __webpack_require__(56791);
const selectors_1 = __webpack_require__(964);
const types_1 = __webpack_require__(73578);
const field_types_1 = __webpack_require__(80360);
function checkLinkConsistency(state) {
    var _a, _b, _c, _d;
    const datasheet = (0, selectors_1.getDatasheet)(state);
    if (!datasheet || datasheet.isPartOfData) {
        return;
    }
    const { snapshot, id: mainDstId, name: mainDstName } = datasheet;
    // the check of data consistency
    // datasheet is the only object that should be attention
    // if if all the permission of datasheet is ok, no need to check more
    if (!((_a = datasheet.permissions) === null || _a === void 0 ? void 0 : _a.editable)) {
        // when the permission of datasheet is not ok, then check other factors
        if (!state.pageParams.mirrorId) {
            return;
        }
        const mirror = (0, selectors_1.getMirror)(state, state.pageParams.mirrorId);
        if ((mirror === null || mirror === void 0 ? void 0 : mirror.sourceInfo.datasheetId) !== mainDstId) {
            return;
        }
        // mirror's editable permission can go through the original datasheet's permission
        if (!(mirror === null || mirror === void 0 ? void 0 : mirror.permissions.editable)) {
            return;
        }
    }
    const { recordMap } = snapshot;
    const fieldMap = snapshot.meta.fieldMap;
    /** does not include self-linking fields */
    const linkFieldIds = [];
    const linkedForeignDstIds = new Set();
    const selfLinkingFieldIds = [];
    for (const fieldId in fieldMap) {
        if (fieldMap[fieldId].type === field_types_1.FieldType.Link) {
            const prop = fieldMap[fieldId].property;
            if (prop.foreignDatasheetId === mainDstId) {
                selfLinkingFieldIds.push(fieldId);
            }
            else if (prop.brotherFieldId) {
                linkFieldIds.push(fieldId);
                linkedForeignDstIds.add(prop.foreignDatasheetId);
            }
        }
    }
    // no valid link fields, don't check consistency
    if (!linkFieldIds.length && !selfLinkingFieldIds.length) {
        return;
    }
    // Only when all linked datasheets are fully loaded then link consistency is checked.
    for (const dstId of linkedForeignDstIds) {
        const foreignDst = (0, selectors_1.getDatasheet)(state, dstId);
        if (!foreignDst) {
            return;
        }
        if (foreignDst.isPartOfData) {
            return;
        }
        if (!((_b = foreignDst.permissions) === null || _b === void 0 ? void 0 : _b.editable)) {
            return;
        }
    }
    const errorRecordIds = new Map();
    const addRecordId = (type, dstId, recordId, fieldId, recordIdInCell) => {
        let data = errorRecordIds.get(dstId);
        if (!data) {
            data = new Map();
            errorRecordIds.set(dstId, data);
        }
        const cellId = recordId + ':' + fieldId;
        let recordIds = data.get(cellId);
        if (!recordIds) {
            recordIds = {};
            data.set(cellId, recordIds);
        }
        if (recordIds[type]) {
            recordIds[type].add(recordIdInCell);
        }
        else {
            recordIds[type] = new Set([recordIdInCell]);
        }
    };
    const addMissingRecordId = (dstId, recordId, fieldId, missingRecordId) => addRecordId('missing', dstId, recordId, fieldId, missingRecordId);
    const addRedundantRecordId = (dstId, recordId, fieldId, redundantRecordId) => addRecordId('redundant', dstId, recordId, fieldId, redundantRecordId);
    // Check all self-linking link fields
    for (const fieldId of selfLinkingFieldIds) {
        for (const recordId in recordMap) {
            const record = recordMap[recordId];
            const cellValue = record.data[fieldId];
            if (!Array.isArray(cellValue)) {
                continue;
            }
            for (const linkedRecordId of cellValue) {
                if (!recordMap[linkedRecordId]) {
                    addRedundantRecordId(mainDstId, recordId, fieldId, linkedRecordId);
                }
            }
        }
    }
    // Check all link fields that link foreign datasheets
    for (const fieldId of linkFieldIds) {
        const { foreignDatasheetId, brotherFieldId } = fieldMap[fieldId].property;
        const { snapshot: { recordMap: foreignRecordMap }, } = (0, selectors_1.getDatasheet)(state, foreignDatasheetId);
        // check recordIds that are missing in link cells in foreign datasheet
        for (const recordId in recordMap) {
            const record = recordMap[recordId];
            const cellValue = record.data[fieldId];
            if (!Array.isArray(cellValue)) {
                continue;
            }
            for (const linkedRecordId of cellValue) {
                const foreignRecord = foreignRecordMap[linkedRecordId];
                if (!foreignRecord) {
                    addRedundantRecordId(mainDstId, recordId, fieldId, linkedRecordId);
                }
                else if (!((_c = foreignRecord.data[brotherFieldId]) === null || _c === void 0 ? void 0 : _c.includes(recordId))) {
                    addMissingRecordId(foreignDatasheetId, linkedRecordId, brotherFieldId, recordId);
                }
            }
        }
        // check recordIds that are missing in link cells in main datasheet
        for (const foreignRecordId in foreignRecordMap) {
            const foreignRecord = foreignRecordMap[foreignRecordId];
            const foreignCellValue = foreignRecord.data[brotherFieldId];
            if (!Array.isArray(foreignCellValue)) {
                continue;
            }
            for (const recordId of foreignCellValue) {
                const record = recordMap[recordId];
                if (!record) {
                    addRedundantRecordId(foreignDatasheetId, foreignRecordId, brotherFieldId, recordId);
                }
                else if (!((_d = record.data[fieldId]) === null || _d === void 0 ? void 0 : _d.includes(foreignRecordId))) {
                    addMissingRecordId(mainDstId, recordId, fieldId, foreignRecordId);
                }
            }
        }
    }
    return errorRecordIds.size ? { mainDstId, mainDstName, errorRecordIds } : undefined;
}
exports.checkLinkConsistency = checkLinkConsistency;
function generateFixLinkConsistencyChangesets(error, state) {
    var _a;
    const resourceOps = [];
    for (const [dstId, cells] of error.errorRecordIds) {
        const datasheet = store_1.Selectors.getDatasheet(state, dstId);
        if (!datasheet) {
            continue;
        }
        const { snapshot: { recordMap }, } = datasheet;
        const actions = [];
        for (const [cellId, changes] of cells) {
            const [recordId, fieldId] = cellId.split(':', 2);
            const { missing, redundant } = changes;
            const record = recordMap[recordId];
            if (!record) {
                continue;
            }
            const oldRecordIds = (_a = record.data[fieldId]) !== null && _a !== void 0 ? _a : [];
            let newRecordIds = oldRecordIds;
            if (redundant) {
                newRecordIds = newRecordIds.filter(newRecordIds => !redundant.has(newRecordIds));
            }
            if (missing) {
                newRecordIds = [...newRecordIds, ...missing];
            }
            if (oldRecordIds.length && newRecordIds.length) {
                actions.push({
                    n: engine_1.OTActionName.ObjectReplace,
                    od: oldRecordIds,
                    oi: newRecordIds,
                    p: ['recordMap', recordId, 'data', fieldId],
                });
            }
            else if (oldRecordIds.length) {
                actions.push({
                    n: engine_1.OTActionName.ObjectDelete,
                    od: oldRecordIds,
                    p: ['recordMap', recordId, 'data', fieldId],
                });
            }
            else if (newRecordIds.length) {
                actions.push({
                    n: engine_1.OTActionName.ObjectInsert,
                    oi: newRecordIds,
                    p: ['recordMap', recordId, 'data', fieldId],
                });
            }
        }
        if (actions.length) {
            resourceOps.push({
                resourceId: dstId,
                resourceType: types_1.ResourceType.Datasheet,
                operations: [
                    {
                        cmd: commands_1.CollaCommandName.FixConsistency,
                        actions,
                    },
                ],
            });
        }
    }
    return resourceOps;
}
exports.generateFixLinkConsistencyChangesets = generateFixLinkConsistencyChangesets;


/***/ }),

/***/ 44008:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.transpose = void 0;
/**
 * @description matrix (two-dimensional array) to transpose
 * @param matrix - 2D array
 */
const transpose = (matrix) => {
    const rows = matrix.length;
    const cols = matrix[0].length;
    const result = Array.from({ length: cols }, () => new Array(rows));
    for (let i = 0; i < rows; i++) {
        for (let j = 0; j < cols; j++) {
            result[j][i] = matrix[i][j];
        }
    }
    return result;
};
exports.transpose = transpose;


/***/ }),

/***/ 95453:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.notInTimestampRange = void 0;
const field_types_1 = __webpack_require__(80360);
const notInTimestampRange = (timestamp) => {
    return timestamp < field_types_1.DateRange.MinTimeStamp || timestamp > field_types_1.DateRange.MaxTimeStamp;
};
exports.notInTimestampRange = notInTimestampRange;


/***/ }),

/***/ 44188:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.minus = exports.plus = exports.divide = exports.times = exports.float2Fixed = exports.digitLength = exports.strip = exports.noNaN = exports.numbersBetween = exports.byteMG = exports.byteMGArr = exports.normalByteMGArr = exports.normalDecimal = exports.decimalCeil = exports.numberToShow = exports.toFixed = exports.number2str = exports.numberSpecification = exports.e2number = exports.convertToNumber = void 0;
const i18n_1 = __webpack_require__(47511);
const lodash_1 = __webpack_require__(46517);
/**
 * Filter the strings in the cells of the numeric column, that is, illegal processing
 * @param value The value entered in the cell
 */
function convertToNumber(value) {
    const num = Number(value);
    if (value == null ||
        !Number.isFinite(num) ||
        ((0, lodash_1.isString)(value) && value.trim() === '')) {
        return null;
    }
    return num;
}
exports.convertToNumber = convertToNumber;
/**
 * Change from scientific notation to number format
 * (because large numbers will be automatically converted back to scientific notation, recorded in string mode)
 * @param value The numbers in js will be converted to part of the data in scientific notation
 */
function e2number(value) {
    const val = value.split('e');
    const p = parseInt(val[1], 10); // get index value
    const num = val[0].split('.');
    const dotLeft = num[0]; // value to the left of the decimal point
    const dotRight = num[1] || ''; // right value of decimal point
    if (p > 0) {
        value = dotLeft + dotRight.substr(0, p) +
            (dotRight.length > p ? '.' + dotRight.substr(p) : '0'.repeat(p - dotRight.length));
    }
    else {
        // Scientific notation converted by number has 1 digits to the left of the decimal point by default, so only consider this case
        const left = parseInt(dotLeft, 10);
        value = (left < 0 ? '-0.' : '0.') + '0'.repeat(-p - 1) + Math.abs(left) + dotRight;
    }
    return value;
}
exports.e2number = e2number;
/**
 * Perform unified format processing on the numbers in the digital column, intercept the first 15 significant digits, and convert them into numbers
 * @param value A legal number entered from the cell (string format)
 */
function numberSpecification(value) {
    return Number(number2str(value));
}
exports.numberSpecification = numberSpecification;
function number2str(value) {
    if (value.includes('e')) {
        value = e2number(value);
    }
    const str = value.replace('.', '').replace('-', '').replace(/^[0]+/, '');
    const len = str.length;
    const demarcationLen = 15; // 15 significant digits are the cutoff point
    if (len > demarcationLen) {
        // Use 0 for positive numbers and 1 for negative numbers, 
        // which is convenient for counting later, because negative numbers need to calculate one more bit of length
        let isNegative = 0;
        if (Number(value) < 0) {
            isNegative = 1;
        }
        // The length of an integer is equal to len, the length with decimals = len + 1, the length of pure decimals - len > 1
        const valLen = value.length - isNegative;
        if (valLen === len) {
            value = value.substr(0, demarcationLen + isNegative) + '0'.repeat(len - demarcationLen);
        }
        else if (valLen === len + 1) {
            const dotIndex = value.indexOf('.') - isNegative;
            if (dotIndex > demarcationLen) {
                value = value.substr(0, demarcationLen + isNegative) + '0'.repeat(dotIndex - demarcationLen);
            }
            else if (dotIndex === demarcationLen) {
                value = value.substr(0, demarcationLen + isNegative);
            }
            else {
                value = value.substr(0, demarcationLen + isNegative + 1);
            }
        }
        else {
            value = (isNegative > 0 ? '-0.' : '0.') + '0'.repeat(valLen - len - 2) + str.substr(0, demarcationLen);
        }
    }
    return value;
}
exports.number2str = number2str;
/**
 * Rewrite toFixed precision problem
 * Only supports 20 digits of precision
 */
const toFixed = function (value, precision = 0) {
    if (isNaN(value))
        return '0';
    const that = Math.abs(value);
    let changenum;
    let index;
    // If the input parameter is negative, an error will be reported. Here, it is treated as 0 by default, that is, the form of bits is not reserved.
    if (precision < 0)
        precision = 0;
    changenum = that * Math.pow(10, precision) + 0.5;
    changenum = (parseInt(String(changenum), 10) / Math.pow(10, precision)).toString();
    index = changenum.indexOf('.');
    if (index < 0 && precision > 0) {
        changenum = changenum + '.' + '0'.repeat(precision);
    }
    else {
        index = precision - changenum.length + index + 1;
        if (index < 0)
            index = 0;
        changenum = changenum + '0'.repeat(index);
    }
    if (value < 0) {
        return '-' + changenum;
    }
    return changenum;
};
exports.toFixed = toFixed;
/**
 * The digital form displayed in the cell, intercepted and displayed with precision
 * @param value The last data saved in the model
 * @param precision retains several decimal places
 * @param demarcationLen Several digits show the demarcation point for scientific notation
 */
function numberToShow(value, precision = 0) {
    value = Number(value);
    if (isNaN(value)) {
        return 'NaN';
    }
    if (value === Infinity) {
        return 'Infinity';
    }
    let str = value.toString();
    const integerCount = str.split('.')[0].length;
    const demarcationLen = 17; // 17 digits represent the demarcation point for scientific notation
    // When the integer number is greater than 17, it needs to be displayed in scientific notation form
    if (integerCount >= demarcationLen || (str.includes('e') && !str.includes('e-'))) {
        const significanceDigitCount = 5; // number of significant digits after the decimal point
        // There will also be precision problems, but because there are already precision requirements in the premise, there will be no rounding problems
        str = value.toExponential(significanceDigitCount);
    }
    else {
        str = (0, exports.toFixed)(value, precision);
    }
    return str;
}
exports.numberToShow = numberToShow;
const CapacityUnit = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
// decimal point by 1
// For example, 1.23 and 1.26 both return 1.3
function decimalCeil(decimal) {
    return Math.ceil(decimal * 10) / 10;
}
exports.decimalCeil = decimalCeil;
// decimal point does not advance by 1
// For example, 1.23 and 1.26 both return 1.2
function normalDecimal(decimal) {
    return Math.floor(decimal * 10) / 10;
}
exports.normalDecimal = normalDecimal;
// Storage unit conversion, parameter unit is b
// Rule: normal conversion, do not do 1 processing
function normalByteMGArr(bytes) {
    const i = Math.floor(Math.log(bytes) / Math.log(1024));
    if (i < 2) {
        const res = normalDecimal(bytes / Math.pow(1024, 2));
        return [res, CapacityUnit[2]];
    }
    if (i === 2 || i === 3) {
        const res = normalDecimal(bytes / Math.pow(1024, i));
        return (res === 1024 && i === 2) ? [1, CapacityUnit[i + 1]] : [res, CapacityUnit[i]];
    }
    if (i > 3) {
        const res = normalDecimal(bytes / Math.pow(1024, 3));
        return [res.toLocaleString(), CapacityUnit[3]];
    }
    return [normalDecimal(bytes), CapacityUnit[0]];
}
exports.normalByteMGArr = normalByteMGArr;
// Storage unit conversion, parameter unit is b
// Rule: The decimal point is advanced by 1, and one place is reserved after the decimal point. 
// There are only two units of 'MB' and 'GB'. The returned arr[2] is the corresponding bytes value after the decimal point is advanced by 1.
// Example: interval (greater than 0 and less than 0.1mb) returns ['0.1', 'MB', 104857.6]
// Example: If the incoming storage size is 0.13mb, then return ['0.2','MB', 209715.2]
function byteMGArr(bytes, isCell = true) {
    const minMb = 104857.6;
    if (bytes <= minMb) {
        // 0-0.1MB directly displays 0.1MB, <0MB directly displays 0MB
        const res = bytes <= 0 ? 0 : isCell ? 0.1 : 0;
        return [res, CapacityUnit[2], res * Math.pow(1024, 2)];
    }
    const i = Math.floor(Math.log(bytes) / Math.log(1024));
    if (i < 2) {
        const num = bytes / Math.pow(1024, 2);
        const res = isCell ? decimalCeil(num) : normalDecimal(num);
        return [res, CapacityUnit[2], res * Math.pow(1024, 2)];
    }
    if (i === 2 || i === 3) {
        const num = bytes / Math.pow(1024, i);
        const res = isCell ? decimalCeil(num) : normalDecimal(num);
        return (res === 1024 && i === 2) ? [1, CapacityUnit[i + 1], Math.pow(1024, 3)]
            : [res, CapacityUnit[i], res * Math.pow(1024, i)];
    }
    if (i > 3) {
        const num = bytes / Math.pow(1024, 3);
        const res = isCell ? decimalCeil(num) : normalDecimal(num);
        return [res, CapacityUnit[3], res * Math.pow(1024, 3)];
    }
    return [bytes, CapacityUnit[0], bytes];
}
exports.byteMGArr = byteMGArr;
function byteMG(bytes) {
    if (bytes === Number.POSITIVE_INFINITY) {
        return (0, i18n_1.t)(i18n_1.Strings.unlimited);
    }
    return `${byteMGArr(bytes)[0]} ${byteMGArr(bytes)[1]}`;
}
exports.byteMG = byteMG;
// @description: Given two integers, generate an ordered set of numbers in between. In the form of an array, arranged from smallest to largest.
// left: 5, right: 8
// @return [6, 7];
function numbersBetween(left, right) {
    const _left = Math.min(left, right);
    const _right = Math.max(left, right);
    const diff = _right - _left - 1;
    return Array.from({ length: diff }).map((_, index) => _left + index + 1);
}
exports.numbersBetween = numbersBetween;
// Convert the number to the correct value not NaN;
function noNaN(n) {
    return isNaN(n) ? 0 : n;
}
exports.noNaN = noNaN;
// fix wrong data
function strip(num, precision = 15) {
    return parseFloat(Number(num).toPrecision(precision));
}
exports.strip = strip;
// get the number of digits after the decimal point
function digitLength(num) {
    const eSplit = num.toString().split(/[eE]/);
    const dLen = (eSplit[0].split('.')[1] || '').length;
    const power = Number(eSplit[1]) || 0;
    const len = dLen - power;
    return len > 0 ? len : 0;
}
exports.digitLength = digitLength;
// Scale the float to an integer,
function float2Fixed(num) {
    if (num.toString().indexOf('e') === -1) {
        return Number(num.toString().replace('.', ''));
    }
    const dLen = digitLength(num);
    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);
}
exports.float2Fixed = float2Fixed;
/**
 * Exact multiplication (to resolve loss of precision)
 */
function times(num1, num2) {
    const intNum1 = float2Fixed(num1);
    const intNum2 = float2Fixed(num2);
    const baseNum = digitLength(num1) + digitLength(num2);
    const dividend = intNum1 * intNum2;
    return dividend / Math.pow(10, baseNum);
}
exports.times = times;
/**
 * Exact division (to resolve loss of precision)
  * @param num1 dividend
  * @param num2 divisor
 */
function divide(num1, num2) {
    const intNum1 = float2Fixed(num1);
    const intNum2 = float2Fixed(num2);
    const baseNum = digitLength(num2) - digitLength(num1);
    const dividend = intNum1 / intNum2;
    return times(dividend, strip(Math.pow(10, baseNum)));
}
exports.divide = divide;
/**
 * Precise addition (to resolve loss of precision)
 */
function plus(num1, num2) {
    const baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));
    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;
}
exports.plus = plus;
/**
 * Precise subtraction (to resolve loss of precision)
 */
function minus(num1, num2) {
    const baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));
    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;
}
exports.minus = minus;


/***/ }),

/***/ 44172:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.fastCloneDeep = void 0;
// import pako from 'pako';
// import { Buffer } from 'buffer';
/**
 * JSON conversion, performance is much faster than lodash cloneDeep.
 * Note that circular references will throw Error
 */
function fastCloneDeep(obj) {
    if (obj == null) {
        return obj;
    }
    if (typeof obj !== 'object') {
        return obj;
    }
    return JSON.parse(JSON.stringify(obj));
}
exports.fastCloneDeep = fastCloneDeep;
// /**
//  * @param gzipBase64Str must be base64 encoded
//  */
// export function unBase64Gzip<T = any>(gzipBase64Str: string): T {
//   return JSON.parse(pako.ungzip(Buffer.from(gzipBase64Str, 'base64'), { to: 'string' }));
// }
// export function gzipBase64(data: {}): string {
//   return Buffer.from(pako.gzip(JSON.stringify(data), { level: 9 })).toString('base64');
// }


/***/ }),

/***/ 27928:
/***/ ((__unused_webpack_module, exports) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.socketGuard = void 0;
const socketGuard = () => {
    return function (_target, _propertyKey, descriptor) {
        const originalMethod = descriptor.value;
        let ignoreSocketError = false;
        let timeout;
        const socketErrCodes = [50000, 50001];
        descriptor.value = function (...arg) {
            var _a;
            if (!this.io.socket.connected) {
                return (() => { })();
            }
            if (socketErrCodes.includes((_a = arg[0]) === null || _a === void 0 ? void 0 : _a.code)) {
                if (ignoreSocketError) {
                    ignoreSocketError = false;
                    timeout && clearTimeout(timeout);
                    return originalMethod.apply(this, [...arg, false]);
                }
                ignoreSocketError = true;
                timeout = setTimeout(() => {
                    ignoreSocketError = false;
                }, 15 * 1000);
                return;
            }
            return originalMethod.apply(this, arg);
        };
        return descriptor;
    };
};
exports.socketGuard = socketGuard;


/***/ }),

/***/ 92901:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.truncateText = exports.str2Currency = exports.str2NumericStr = exports.dateStrReplaceCN = exports.string2Segment = exports.stringHash2Number = exports.parseAllUrl = exports.hiddenMobile = exports.isPhoneNumber = exports.isEmail = exports.isEmailUrl = exports.isUrl = exports.hasUrlProtocol = exports.isVCode = exports.LINK_REG = exports.escapeHtml = exports.isValidName = exports.MAX_NAME_STRING_LENGTH = exports.generateRandomString = void 0;
const field_types_1 = __webpack_require__(80360);
const phone_1 = __webpack_require__(78919);
const string_prototype_matchall_1 = __webpack_require__(29804);
(0, string_prototype_matchall_1.shim)();
const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz';
function generateRandomString(length = 20) {
    let randomString = '';
    const size = chars.length;
    for (let i = 0; i < length; i++) {
        const randomNumber = Math.floor(Math.random() * size);
        randomString += chars[randomNumber];
    }
    return randomString;
}
exports.generateRandomString = generateRandomString;
exports.MAX_NAME_STRING_LENGTH = 100;
function isValidName(name) {
    if (!name || (typeof name !== 'string')) {
        return false;
    }
    if (name.length > exports.MAX_NAME_STRING_LENGTH || name.length === 0) {
        return false;
    }
    if (name.trim().length === 0) {
        return false;
    }
    // if (/[*:/?[\]\\]/.test(name)) {
    //   return false;
    // }
    return true;
}
exports.isValidName = isValidName;
/* eslint-disable @typescript-eslint/naming-convention */
var EscapeMap;
(function (EscapeMap) {
    EscapeMap["&"] = "&amp;";
    EscapeMap["<"] = "&lt;";
    EscapeMap[">"] = "&gt;";
    EscapeMap["\""] = "&quot;";
    EscapeMap["'"] = "&#x27;";
    EscapeMap["`"] = "&#x60;";
})(EscapeMap || (EscapeMap = {}));
/* eslint-enable @typescript-eslint/naming-convention */
const escapeHtml = (str) => {
    const replaceReg = new RegExp('(?:&|<|>|"|\'|`)', 'g');
    return replaceReg.test(str) ? str.replace(replaceReg, m => EscapeMap[m]) : str;
};
exports.escapeHtml = escapeHtml;
const URL_PROTOCOL_REG = /^(https?|ftp):\/\/|mailto:/i;
const PROTOCOL = 'https?|s?ftp|ftps|nfs|ssh';
const LINK_SUFFIX = '\\b([/?#][-a-zA-Z0-9@:%_+.~#?&/=;$,!\\*\\[\\]{}^|<>]*)?';
const URL_HOST_BODY = '([\\-a-zA-Z0-9:%_+~#@]{1,256}\\.){1,50}';
const ANY_TOP_DOMAIN = '[a-z\\-]{2,15}';
/* eslint-disable */
const TOP_DOMAIN = 'com|org|net|int|edu|gov|mil|ac|ad|ae|af|ag|ai|al|am|an|ao|aq|ar|as|at|au|aw|ax|az|ba|bb|bd|be|bf|bg|bh|bi|bj|bm|bn|bo|br|bs|bt|bv|bw|by|bz|ca|cc|cf|cg|ch|ci|ck|cl|cm|cn|co|cr|cu|cv|cw|cx|cy|cz|de|dj|dk|dm|do|dz|ec|ee|eg|eh|er|es|et|eu|fi|fj|fk|fm|fo|fr|ga|gb|gd|ge|gf|gh|gi|gl|gm|gn|gp|gr|gs|gt|gu|gw|gy|hk|hm|hn|hr|ht|hu|id|ie|il|im|in|io|iq|ir|is|it|jm|jo|jp|ke|kg|kh|ki|km|kn|kp|kr|kw|ky|kz|la|lb|lc|li|lk|lr|ls|lt|lu|lv|ly|ma|mc|md|me|mf|mg|mh|mk|ml|mm|mn|mo|mp|mq|mr|ms|mt|mu|mv|mw|mx|my|mz|na|nc|ne|nf|ng|ni|nl|no|np|nr|nu|nz|om|pa|pe|pf|pg|ph|pk|pl|pm|pn|pr|ps|pt|pw|py|qa|re|ro|rs|ru|rw|sa|sb|sc|sd|se|sg|sh|si|sj|sk|sl|sm|sn|so|sr|ss|st|su|sv|sx|sy|sz|tc|td|tf|tg|th|tj|tk|tl|tm|tn|to|tp|tr|tt|tv|tw|tz|ua|ug|uk|um|us|uy|uz|va|vc|ve|vg|vi|vn|vu|wf|ws|ye|yt|za|zm|zw|site|top|wtf|xxx|xyz|cloud|engineering|help|one';
const TOP_10_DOMAIN = 'com|cn|tk|de|net|org|uk|info|nl|ru';
// Since the top-level domain name is incomplete, it is changed to a url with a protocol header, ignoring the above top-level domain name and matching directly
const URL_REG = new RegExp(`(((${PROTOCOL}):\\/\\/${URL_HOST_BODY}${ANY_TOP_DOMAIN})|(${URL_HOST_BODY}(${TOP_10_DOMAIN})))(:[0-9]{2,5})?${LINK_SUFFIX}`, 'gi');
// Mailto's greedy matching will be very slow when encountering extremely long strings (English without spaces), and the length needs to be limited.
const EMAIL_URL_BODY = '[\\w.!#$%&\'*+-/=?^_\\`{|}~]{1,2000}@[A-Za-z0-9_.-]+\\.';
const LENGTH_LIMITED_EMAIL_REG = new RegExp(`^(?!data:)((mailto:${EMAIL_URL_BODY}${ANY_TOP_DOMAIN})|(${EMAIL_URL_BODY}(${TOP_DOMAIN})))\\b`, 'gi');
const LOCALHOST_REG = /localhost:[0-9]{2,5}/;
const IP_ADDRESS_REG = /(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}(2[0-4][0-9]|25[0-5]|1[0-9]{2}|[1-9][0-9]|[0-9])(:[0-9]{2,5})?/;
const IP_REG = new RegExp(`((https?|http|ftp)://)?((${LOCALHOST_REG.source})|(${IP_ADDRESS_REG.source}))(/[-a-zA-Z0-9@:%_+.~#?&//=]*)?`, 'gi');
exports.LINK_REG = new RegExp(`(${IP_REG.source})|(${URL_REG.source})|(${LENGTH_LIMITED_EMAIL_REG.source})`, 'gi');
const EMAIL = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
const EMAIL_REG = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/gi;
const VCODE_REG = /[\da-z]{8}/i;
function isVCode(code) {
    return new RegExp(VCODE_REG).test(code);
}
exports.isVCode = isVCode;
function hasUrlProtocol(url) {
    return new RegExp(URL_PROTOCOL_REG).test(url);
}
exports.hasUrlProtocol = hasUrlProtocol;
function isUrl(url) {
    return new RegExp(exports.LINK_REG).test(url);
}
exports.isUrl = isUrl;
function isEmailUrl(url) {
    return new RegExp(`^${LENGTH_LIMITED_EMAIL_REG.source}$`, 'i').test(url);
}
exports.isEmailUrl = isEmailUrl;
function isEmail(email) {
    return new RegExp(EMAIL).test(email);
}
exports.isEmail = isEmail;
function isPhoneNumber(phoneNumber, areaCode) {
    var _a;
    return (_a = (0, phone_1.phone)(areaCode + ' ' + phoneNumber)) === null || _a === void 0 ? void 0 : _a.isValid;
}
exports.isPhoneNumber = isPhoneNumber;
// Hide the middle 4 digits of the phone number
function hiddenMobile(mobileNumber) {
    return mobileNumber.replace(/(\d{3})\d{4}(\d{4})/, '$1****$2');
}
exports.hiddenMobile = hiddenMobile;
function parseAllUrl(value) {
    const valueArray = [];
    let lastEndIndex = 0;
    const regExp = new RegExp(exports.LINK_REG);
    let execResult = regExp.exec(value);
    if (execResult == null) {
        return [{
                type: field_types_1.SegmentType.Text,
                text: value,
            }];
    }
    while (execResult) {
        const startIndex = execResult.index;
        const regExpMatch = execResult[0];
        if (startIndex !== lastEndIndex) {
            valueArray.push({
                type: field_types_1.SegmentType.Text,
                text: value.substring(lastEndIndex, startIndex),
            });
        }
        if (hasUrlProtocol(regExpMatch)) {
            valueArray.push({ type: field_types_1.SegmentType.Url, link: regExpMatch, text: regExpMatch });
        }
        else if (isUrl(regExpMatch)) {
            valueArray.push({ type: field_types_1.SegmentType.Url, link: `http://${regExpMatch}`, text: regExpMatch });
        }
        else if (isEmailUrl(regExpMatch)) {
            valueArray.push({ type: field_types_1.SegmentType.Url, link: `mailto:${regExpMatch}`, text: regExpMatch });
        }
        lastEndIndex = regExp.lastIndex;
        execResult = regExp.exec(value);
    }
    if (lastEndIndex < value.length) {
        valueArray.push({
            type: field_types_1.SegmentType.Text,
            text: value.substring(lastEndIndex),
        });
    }
    return valueArray;
}
exports.parseAllUrl = parseAllUrl;
const stringHash2Number = (str, range) => {
    /**
     * String str is mapped to a value in the specified range [0,range)
     */
    const sumOfStringCharCode = Array.from(str).map(c => c.charCodeAt(0)).reduce((a, b) => a + b);
    return Math.abs(sumOfStringCharCode % range);
};
exports.stringHash2Number = stringHash2Number;
/**
 * String is cut into segment with type by regex matching
 * @export
 * @param {string} str
 * @returns {ISegment[]}
 */
function string2Segment(str) {
    const segmentList = [];
    const urlTmp = {};
    // match URL
    const urlMatch = [...str.matchAll(exports.LINK_REG)];
    const emailMatch = [...str.matchAll(EMAIL_REG)];
    // If there is no URL/Email match, return directly to reduce unnecessary calculations
    if (!urlMatch.length && !emailMatch.length) {
        segmentList.push({
            type: field_types_1.SegmentType.Text,
            text: str,
        });
        return segmentList;
    }
    urlMatch.forEach(element => {
        const text = element[0];
        const hasScheme = Boolean(element[15]);
        const index = element.index;
        urlTmp[index] = { text, hasScheme, type: field_types_1.SegmentType.Url };
    });
    emailMatch.forEach(ele => {
        const text = ele[0];
        const index = ele.index;
        urlTmp[index] = { text, type: field_types_1.SegmentType.Email };
    });
    let seg = '';
    let cur = 0;
    while (cur < str.length) {
        if (cur in urlTmp) {
            if (seg.length) {
                segmentList.push({
                    type: field_types_1.SegmentType.Text,
                    text: seg,
                });
                seg = '';
            }
            const { text, type } = urlTmp[cur];
            segmentList.push({
                type,
                text,
                link: text,
            });
            cur += text.length;
        }
        else {
            seg += str[cur];
            cur++;
        }
    }
    // After the loop is complete, add the text at the end
    if (seg.length) {
        segmentList.push({
            type: field_types_1.SegmentType.Text,
            text: seg,
        });
    }
    return segmentList;
}
exports.string2Segment = string2Segment;
const dateStrReplaceCN = (str) => {
    if (!str) {
        return str;
    }
    return str.replace(/(\s?[年月]\s?)|(\s?[时分]\s?)|([日秒])/g, (_, p1, p2, p3) => {
        if (p1) {
            return '/';
        }
        if (p2) {
            return ':';
        }
        if (p3) {
            return '';
        }
        return _;
    });
};
exports.dateStrReplaceCN = dateStrReplaceCN;
/**
 * Convert ordinary strings to pure numeric strings (only string combinations of "+", "-", numbers, "e" and ".")
 * @param input input string or number
 */
function str2NumericStr(input) {
    if (input == null || input === '') {
        return null;
    }
    const regNumber = /[^0-9\.e+-]/g;
    const regSymbol = /(\+|\-|\.)+/g; // try to keep numbers, compatible with cases like '--', '...'
    let tempStr = (input + '').trim();
    tempStr = tempStr.replace(regNumber, '');
    tempStr = tempStr.replace(regSymbol, '$1');
    const result = parseFloat(tempStr);
    if (!result && result !== 0) {
        return null;
    }
    return result.toString();
}
exports.str2NumericStr = str2NumericStr;
/**
 * Display in currency
 * @param input input number or string
 * @param symbol currency symbol
 * @param digits Separation digits
 * @param splitter separator
 * @param symbolAlign currency symbol position
 */
function str2Currency(input, symbol = '', digits = 3, splitter = ',', symbolAlign = field_types_1.SymbolAlign.default) {
    let tempStr = ('' + input).trim();
    let sign = '';
    if (input == null || tempStr === '') {
        return null;
    }
    if (tempStr.startsWith('-')) {
        sign = '-';
        tempStr = tempStr.substring(1);
    }
    if (tempStr.includes('e')) {
        if (symbolAlign === field_types_1.SymbolAlign.right) {
            return `${sign}${tempStr}${symbol}`;
        }
        return `${sign}${symbol}${tempStr}`;
    }
    if (!tempStr.includes('.')) {
        tempStr += '.';
    }
    const regExp = new RegExp(`(\\d)(?=(\\d{${digits}})+\\.)`, 'g');
    tempStr = tempStr.replace(regExp, function (_$0, $1) {
        return $1 + splitter;
    }).replace(/\.$/, '');
    if (!tempStr) {
        return null;
    }
    if (symbolAlign === field_types_1.SymbolAlign.right) {
        return `${sign}${tempStr}${symbol}`;
    }
    return `${sign}${symbol}${tempStr}`;
}
exports.str2Currency = str2Currency;
function truncateText(text, maxLength = 20, postfix = '...') {
    if (text.length <= maxLength)
        return text;
    return `${text.slice(0, maxLength)}${postfix}`;
}
exports.truncateText = truncateText;


/***/ }),

/***/ 54685:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getExpandNodeIds = exports.flatNodeTree = exports.genarateExpandedKeys = exports.findNode = exports.collectProperty = void 0;
const config_1 = __webpack_require__(77511);
// Collect the ids of all nodes under the specified node (including itself)
const collectProperty = (treeNodesMap, rootId) => {
    const node = treeNodesMap[rootId];
    if (!node) {
        return [rootId];
    }
    const findId = (node) => {
        return node.children.reduce((prev, nodeId) => {
            prev.push(nodeId);
            if (treeNodesMap[nodeId]) {
                prev.push(...findId(treeNodesMap[nodeId]));
            }
            return prev;
        }, []);
    };
    return [node.nodeId, ...findId(node)];
};
exports.collectProperty = collectProperty;
/**
 * Find the specified node
 * @param tree directory tree
 * @param nodeId Node ID to look up
 */
const findNode = (tree, nodeId) => {
    return tree.reduce((preValue, item) => {
        if (preValue) {
            return preValue;
        }
        if (item.nodeId === nodeId) {
            return item;
        }
        if (item.children) {
            return (0, exports.findNode)(item.children, nodeId);
        }
        return null;
    }, null);
};
exports.findNode = findNode;
/**
 * Generate expansion paths based on nodes
 * @param tree directory tree
 * @param expandedKeys array of expanded nodes
 * @param nodeId node ID
 */
function genarateExpandedKeys(treeNodesMap, expandedKeys, nodeId) {
    const expanded = [];
    while (treeNodesMap[nodeId].parentId !== '0') {
        const parentId = treeNodesMap[nodeId].parentId;
        if (!expandedKeys.includes(parentId) && treeNodesMap[parentId].type !== config_1.ConfigConstant.NodeType.ROOT) {
            expanded.push(parentId);
        }
        nodeId = parentId;
    }
    return expanded.reverse();
}
exports.genarateExpandedKeys = genarateExpandedKeys;
/**
 * Flatten the tree (convert the tree structure into a one-dimensional array)
 * @param nodeTree tree of type INode
 */
const flatNodeTree = (nodeTree) => {
    return nodeTree.reduce((prev, item) => {
        prev.push(item);
        if (Array.isArray(item.children) && item.children.length > 0) {
            prev.push(...(0, exports.flatNodeTree)(item.children));
        }
        return prev;
    }, []);
};
exports.flatNodeTree = flatNodeTree;
// Get the expansion path
const getExpandNodeIds = (data, nodeId, end = null, favoriteTreeNodeIds = []) => {
    const expandNodeIds = [];
    // If the chain is found to be broken when searching up the chain recursively, give up this operation directly
    if (!data[nodeId]) {
        return [];
    }
    if (data[nodeId].type === config_1.ConfigConstant.NodeType.ROOT) {
        return expandNodeIds;
    }
    if (favoriteTreeNodeIds.includes(nodeId))
        return expandNodeIds;
    const parentNodeId = data[nodeId].parentId;
    if (parentNodeId !== end) {
        expandNodeIds.push(parentNodeId, ...(0, exports.getExpandNodeIds)(data, parentNodeId, end, favoriteTreeNodeIds));
    }
    return expandNodeIds;
};
exports.getExpandNodeIds = getExpandNodeIds;


/***/ }),

/***/ 86725:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.isNumberBaseType = exports.getTextFieldType = exports.isFormula = exports.isEnhanceTextType = exports.isTextBaseType = exports.isGroupFieldValid = exports.isSelectField = exports.isGroupFieldType = exports.isSelectType = exports.assertNever = void 0;
const field_types_1 = __webpack_require__(80360);
const constants_1 = __webpack_require__(12690);
function assertNever(x) {
    console.error(`${x} is not a never type`);
}
exports.assertNever = assertNever;
function isSelectType(type) {
    return type === field_types_1.FieldType.MultiSelect || type === field_types_1.FieldType.SingleSelect;
}
exports.isSelectType = isSelectType;
function isGroupFieldType(type, viewType = constants_1.ViewType.Kanban) {
    switch (viewType) {
        case constants_1.ViewType.Grid: {
            // All grid fields can be grouped
            return true;
        }
        case constants_1.ViewType.Kanban: {
            return type === field_types_1.FieldType.SingleSelect || type === field_types_1.FieldType.Member;
        }
    }
    return false;
}
exports.isGroupFieldType = isGroupFieldType;
function isSelectField(field) {
    return isSelectType(field.type);
}
exports.isSelectField = isSelectField;
function isGroupFieldValid(snapshot, group, viewType) {
    if (viewType === constants_1.ViewType.Kanban && group.length > 1) {
        return false;
    }
    else if (viewType === constants_1.ViewType.Grid && group.length > 3) {
        return false;
    }
    return group.every(gp => {
        const field = snapshot.meta.fieldMap[gp.fieldId];
        return field && isGroupFieldType(field.type, viewType);
    });
}
exports.isGroupFieldValid = isGroupFieldValid;
function isTextBaseType(type) {
    return [field_types_1.FieldType.Text, field_types_1.FieldType.Phone, field_types_1.FieldType.Email, field_types_1.FieldType.URL, field_types_1.FieldType.SingleText].includes(type);
}
exports.isTextBaseType = isTextBaseType;
function isEnhanceTextType(type) {
    return [field_types_1.FieldType.Phone, field_types_1.FieldType.Email, field_types_1.FieldType.URL].includes(type);
}
exports.isEnhanceTextType = isEnhanceTextType;
function isFormula(type) {
    return type === field_types_1.FieldType.Formula;
}
exports.isFormula = isFormula;
function getTextFieldType(type) {
    return {
        isSingleText: type === field_types_1.FieldType.SingleText,
        isEnhanceText: isEnhanceTextType(type),
    };
}
exports.getTextFieldType = getTextFieldType;
function isNumberBaseType(type) {
    return [field_types_1.FieldType.Number, field_types_1.FieldType.Rating, field_types_1.FieldType.Currency, field_types_1.FieldType.Percent, field_types_1.FieldType.AutoNumber].includes(type);
}
exports.isNumberBaseType = isNumberBaseType;


/***/ }),

/***/ 71784:
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {


/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getUniqName = exports.NamePrefix = exports.getNewIds = exports.getNewId = exports.IDPrefix = void 0;
const i18n_1 = __webpack_require__(47511);
const string_1 = __webpack_require__(92901);
const EFFECTIVE_ID_LENGTH = 10;
var IDPrefix;
(function (IDPrefix) {
    IDPrefix["Table"] = "dst";
    IDPrefix["View"] = "viw";
    IDPrefix["Record"] = "rec";
    IDPrefix["Field"] = "fld";
    IDPrefix["Option"] = "opt";
    IDPrefix["Condition"] = "cdt";
    IDPrefix["File"] = "atc";
    IDPrefix["Comment"] = "cmt";
    IDPrefix["WidgetPanel"] = "wpl";
    IDPrefix["Editor"] = "edt";
    IDPrefix["SPACE"] = "spc";
    IDPrefix["DateTimeAlarm"] = "dta";
    IDPrefix["EmbedLink"] = "emb";
})(IDPrefix = exports.IDPrefix || (exports.IDPrefix = {}));
/**
 * Generate unique new id
 * @param {IDPrefix} prefix new id prefix
 * @param {string[]} [ids=[]] Existing ids, will not be repeated with this group
 * @returns {string}
 */
function getNewId(prefix, ids = []) {
    return getNewIds(prefix, 1, ids)[0];
}
exports.getNewId = getNewId;
/**
 * Generate a new set of unique ids
 * @param {IDPrefix} prefix new id prefix
 * @param {number} num the expected number
 * @param {string[]} [ids=[]] Existing ids, will not be repeated with this group
 * @returns {string[]}
 */
function getNewIds(prefix, num, ids = []) {
    if (num <= 0)
        return [];
    const newIds = [];
    const idMap = ids.reduce((prev, id) => {
        prev[id] = true;
        return prev;
    }, {});
    for (let i = 0; i < num; i++) {
        let newId;
        do {
            newId = `${prefix}${(0, string_1.generateRandomString)(EFFECTIVE_ID_LENGTH)}`;
        } while (idMap[newId]);
        newIds.push(newId);
        idMap[newId] = true;
    }
    return newIds;
}
exports.getNewIds = getNewIds;
exports.NamePrefix = {
    Field: (0, i18n_1.t)(i18n_1.Strings.field),
    GridView: (0, i18n_1.t)(i18n_1.Strings.grid_view),
    KanbanView: (0, i18n_1.t)(i18n_1.Strings.kanban_view),
    GalleryView: (0, i18n_1.t)(i18n_1.Strings.gallery_view),
    FormView: (0, i18n_1.t)(i18n_1.Strings.form_view),
    CalendarView: (0, i18n_1.t)(i18n_1.Strings.calendar_view),
    GanttView: (0, i18n_1.t)(i18n_1.Strings.gantt_view),
    OrgChartView: (0, i18n_1.t)(i18n_1.Strings.org_chart_view),
    View: (0, i18n_1.t)(i18n_1.Strings.view), // 'View',
};
/**
 * Get safe and unique names
 * @param newName the name you want to take
 * @param names An array of existing names, if there are duplicates, suffixes will be added automatically
 */
function getUniqName(newName, names) {
    let index = 1;
    const nameMap = names.reduce((prev, name) => {
        prev[name] = true;
        return prev;
    }, {});
    let uniqName = newName;
    while (nameMap[uniqName]) {
        uniqName = `${newName} ${++index}`;
    }
    return uniqName;
}
exports.getUniqName = getUniqName;


/***/ }),

/***/ 70958:
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));


/***/ }),

/***/ 7226:
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {


var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
/**
 * APITable <https://github.com/apitable/apitable>
 * Copyright (C) 2022 APITable Ltd. <https://apitable.com>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
const strings_json_1 = __importDefault(__webpack_require__(19566));
// @ts-ignore
const enterprise_1 = __webpack_require__(70958);
function loadAllLang() {
    if (typeof window !== 'undefined') {
        window.apitable_i18n = enterprise_1.strings ? Object.assign(Object.assign({}, strings_json_1.default), enterprise_1.strings) : strings_json_1.default;
    }
    else {
        global.apitable_i18n = enterprise_1.strings ? Object.assign(Object.assign({}, strings_json_1.default), enterprise_1.strings) : strings_json_1.default;
    }
}
loadAllLang();


/***/ }),

/***/ 73092:
/***/ ((module) => {

module.exports = JSON.parse('{"api":{"tips":{"api_set_view_lock_error":{"code":400,"id":"api_set_view_lock_error","isRecordTimes":true,"message":"api_set_view_lock_error","statusCode":200,"apiTypes":"fusion_api"},"api_request_success":{"code":200,"id":"api_request_success","isRecordTimes":true,"message":"api_request_success","statusCode":200,"apiTypes":"fusion_api"},"api_datasheet_not_exist":{"code":301,"id":"api_datasheet_not_exist","message":"api_datasheet_not_exist","statusCode":200,"apiTypes":"fusion_api"},"api_upload_attachment_error":{"code":426,"id":"api_upload_attachment_error","isRecordTimes":true,"message":"api_upload_attachment_error","statusCode":200,"apiTypes":"fusion_api"},"api_upload_attachment_exceed_limit":{"code":428,"id":"api_upload_attachment_exceed_limit","isRecordTimes":true,"message":"api_upload_attachment_exceed_limit","statusCode":200,"apiTypes":"fusion_api"},"api_node_permission_error":{"code":602,"id":"api_node_permission_error","isRecordTimes":true,"message":"api_node_permission_error","statusCode":200,"apiTypes":"fusion_api"},"api_unauthorized":{"code":401,"id":"api_unauthorized","message":"api_unauthorized","statusCode":401,"apiTypes":"fusion_api"},"api_forbidden":{"code":403,"id":"api_forbidden","message":"api_forbidden","statusCode":403,"apiTypes":"fusion_api"},"api_forbidden_because_of_not_in_space":{"code":403,"id":"api_forbidden_because_of_not_in_space","message":"api_forbidden_because_of_not_in_space","statusCode":403,"apiTypes":"fusion_api"},"api_forbidden_because_of_usage":{"code":403,"id":"api_forbidden_because_of_usage","message":"api_forbidden_because_of_usage","statusCode":403,"apiTypes":"fusion_api"},"api_params_instance_space_id_error":{"code":400,"id":"api_params_instance_space_id_error","message":"api_params_instance_space_id_error","statusCode":200},"api_param_invalid_space_id_value":{"code":400,"id":"api_param_invalid_space_id_value","message":"api_param_invalid_space_id_value","statusCode":200,"apiTypes":"fusion_api"},"api_not_exists":{"code":404,"id":"api_not_exists","message":"api_not_exists","statusCode":404,"apiTypes":"fusion_api"},"api_frequently_error":{"code":429,"id":"api_frequently_error","message":"api_frequently_error","statusCode":429,"apiTypes":"fusion_api"},"api_server_error":{"code":500,"id":"api_server_error","message":"api_server_error","statusCode":500,"apiTypes":"fusion_api"},"api_param_sort_field_not_exists":{"code":400,"id":"api_param_sort_field_not_exists","isRecordTimes":true,"message":"api_param_sort_field_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_params_can_not_operate":{"code":400,"id":"api_params_can_not_operate","isRecordTimes":true,"message":"api_params_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_value":{"code":400,"id":"api_params_invalid_value","isRecordTimes":true,"message":"api_params_invalid_value","statusCode":200,"apiTypes":"fusion_api"},"api_params_record_ids_must_unique":{"code":400,"id":"api_params_record_ids_must_unique","isRecordTimes":true,"statusCode":200,"apiTypes":"fusion_api"},"api_params_min_error":{"code":400,"id":"api_params_min_error","isRecordTimes":true,"message":"api_params_min_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_max_error":{"code":400,"id":"api_params_max_error","isRecordTimes":true,"message":"api_params_max_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_empty_error":{"code":400,"id":"api_params_empty_error","isRecordTimes":true,"message":"api_params_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_max_count_error":{"code":400,"id":"api_params_max_count_error","isRecordTimes":true,"message":"api_params_max_count_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_error":{"code":400,"id":"api_params_instance_error","isRecordTimes":true,"message":"api_params_instance_error","statusCode":200,"apiTypes":"fusion_api"},"api_delete_error":{"code":214,"id":"api_delete_error","isRecordTimes":true,"message":"api_delete_error","statusCode":200,"apiTypes":"fusion_api"},"api_insert_error":{"code":211,"id":"api_insert_error","isRecordTimes":true,"message":"api_insert_error","statusCode":200,"apiTypes":"fusion_api"},"api_update_error":{"code":212,"id":"api_update_error","isRecordTimes":true,"message":"api_update_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_error":{"code":400,"id":"api_param_formula_error","isRecordTimes":true,"message":"api_param_formula_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_type_error":{"code":400,"id":"api_param_type_error","isRecordTimes":true,"message":"api_param_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_default_error":{"code":400,"id":"api_param_default_error","isRecordTimes":true,"message":"api_param_default_error","statusCode":200,"apiTypes":"fusion_api"},"api_space_capacity_over_limit":{"code":426,"id":"api_space_capacity_over_limit","isRecordTimes":true,"message":"api_space_capacity_over_limit","statusCode":200,"apiTypes":"fusion_api"},"api_query_params_view_id_not_exists":{"code":400,"id":"api_query_params_view_id_not_exists","isRecordTimes":true,"message":"api_query_params_view_id_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_datasheet_not_visible":{"code":301,"id":"api_datasheet_not_visible","isRecordTimes":true,"message":"api_datasheet_not_visible","statusCode":200,"apiTypes":"fusion_api"},"api_upload_attachment_oversize":{"code":428,"id":"api_upload_attachment_oversize","isRecordTimes":true,"message":"api_upload_attachment_oversize","statusCode":200,"apiTypes":"fusion_api"},"api_upload_attachment_exceed_capacity_limit":{"code":428,"id":"api_upload_attachment_exceed_capacity_limit","isRecordTimes":true,"message":"api_upload_attachment_exceed_capacity_limit","statusCode":200,"apiTypes":"fusion_api"},"api_upload_attachment_not_editable":{"code":602,"id":"api_upload_attachment_not_editable","isRecordTimes":true,"message":"api_upload_attachment_not_editable","statusCode":200,"apiTypes":"fusion_api"},"api_params_not_exists":{"code":400,"id":"api_params_not_exists","isRecordTimes":true,"message":"api_params_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_param_view_not_exists":{"code":400,"id":"api_param_view_not_exists","isRecordTimes":true,"message":"api_param_view_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_param_record_not_exists":{"code":400,"id":"api_param_record_not_exists","isRecordTimes":true,"message":"api_param_record_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_param_attachment_not_exists":{"code":400,"id":"api_param_attachment_not_exists","isRecordTimes":true,"message":"api_param_attachment_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_param_unit_not_exists":{"code":400,"id":"api_param_unit_not_exists","isRecordTimes":true,"message":"api_param_unit_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_param_unit_name_type_not_exists":{"code":400,"id":"api_param_unit_name_type_not_exists","message":"api_param_unit_name_type_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_params_automumber_can_not_operate":{"code":400,"id":"api_params_automumber_can_not_operate","isRecordTimes":true,"message":"api_params_automumber_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_createdby_can_not_operate":{"code":400,"id":"api_params_createdby_can_not_operate","isRecordTimes":true,"message":"api_params_createdby_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_created_time_can_not_operate":{"code":400,"id":"api_params_created_time_can_not_operate","isRecordTimes":true,"message":"api_params_created_time_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_formula_can_not_operate":{"code":400,"id":"api_params_formula_can_not_operate","isRecordTimes":true,"message":"api_params_formula_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_updatedby_can_not_operate":{"code":400,"id":"api_params_updatedby_can_not_operate","isRecordTimes":true,"message":"api_params_updatedby_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_updated_time_can_not_operate":{"code":400,"id":"api_params_updated_time_can_not_operate","isRecordTimes":true,"message":"api_params_updated_time_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_lookup_can_not_operate":{"code":400,"id":"api_params_lookup_can_not_operate","isRecordTimes":true,"message":"api_params_lookup_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_fields_value":{"code":400,"id":"api_params_invalid_fields_value","isRecordTimes":true,"message":"api_params_invalid_fields_value","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_field_type":{"code":400,"id":"api_params_invalid_field_type","isRecordTimes":true,"message":"api_params_invalid_field_type","statusCode":200,"apiTypes":"fusion_api"},"api_query_params_invalid_fields":{"code":400,"id":"api_query_params_invalid_fields","isRecordTimes":true,"message":"api_query_params_invalid_fields","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_field_key":{"code":400,"id":"api_params_invalid_field_key","isRecordTimes":true,"message":"api_params_invalid_field_key","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_order_sort":{"code":400,"id":"api_params_invalid_order_sort","isRecordTimes":true,"message":"api_params_invalid_order_sort","statusCode":200,"apiTypes":"fusion_api"},"api_upload_invalid_file":{"code":400,"id":"api_upload_invalid_file","isRecordTimes":true,"message":"api_upload_invalid_file","statusCode":200,"apiTypes":"fusion_api"},"api_upload_invalid_file_name":{"code":400,"id":"api_upload_invalid_file_name","isRecordTimes":true,"message":"api_upload_invalid_file_name","statusCode":200,"apiTypes":"fusion_api"},"api_param_invalid_rating_field":{"code":400,"id":"api_param_invalid_rating_field","isRecordTimes":true,"message":"api_param_invalid_rating_field","statusCode":200,"apiTypes":"fusion_api"},"api_params_must_unique":{"code":400,"id":"api_params_must_unique","isRecordTimes":true,"message":"api_params_must_unique","statusCode":200,"apiTypes":"fusion_api"},"api_params_max_length_error":{"code":400,"id":"api_params_max_length_error","isRecordTimes":true,"message":"api_params_max_length_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_link_field_record_ids_must_unique":{"code":400,"id":"api_params_link_field_record_ids_must_unique","isRecordTimes":true,"statusCode":200,"apiTypes":"fusion_api"},"api_params_multiselect_field_record_ids_must_unique":{"code":400,"id":"api_params_multiselect_field_record_ids_must_unique","isRecordTimes":true,"statusCode":200,"apiTypes":"fusion_api"},"api_params_pagesize_min_error":{"code":400,"id":"api_params_pagesize_min_error","isRecordTimes":true,"message":"api_params_pagesize_min_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_maxrecords_min_error":{"code":400,"id":"api_params_maxrecords_min_error","statusCode":200},"api_params_pagenum_min_error":{"code":400,"id":"api_params_pagenum_min_error","isRecordTimes":true,"message":"api_params_pagenum_min_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_pagesize_max_error":{"code":400,"id":"api_params_pagesize_max_error","isRecordTimes":true,"message":"api_params_pagesize_max_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_rating_field_max_error":{"code":400,"id":"api_params_rating_field_max_error","isRecordTimes":true,"message":"api_params_rating_field_max_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_records_empty_error":{"code":400,"id":"api_params_records_empty_error","isRecordTimes":true,"message":"api_params_records_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_recordids_empty_error":{"code":400,"id":"api_params_recordids_empty_error","isRecordTimes":true,"message":"api_params_recordids_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_link_field_recordids_empty_error":{"code":400,"id":"api_params_link_field_recordids_empty_error","isRecordTimes":true,"message":"api_params_link_field_recordids_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_records_max_count_error":{"code":400,"id":"api_params_records_max_count_error","isRecordTimes":true,"message":"api_params_records_max_count_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_link_field_records_max_count_error":{"code":400,"id":"api_params_link_field_records_max_count_error","isRecordTimes":true,"message":"api_params_link_field_records_max_count_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_member_field_records_max_count_error":{"code":400,"id":"api_params_member_field_records_max_count_error","isRecordTimes":true,"message":"api_params_member_field_records_max_count_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_invalid_primary_field_type_error":{"code":400,"id":"api_params_invalid_primary_field_type_error","isRecordTimes":true,"message":"api_params_invalid_primary_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_fields_error":{"code":400,"id":"api_params_instance_fields_error","isRecordTimes":true,"message":"api_params_instance_fields_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_recordid_error":{"code":400,"id":"api_params_instance_recordid_error","isRecordTimes":true,"message":"api_params_instance_recordid_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_sort_error":{"code":400,"id":"api_params_instance_sort_error","isRecordTimes":true,"message":"api_params_instance_sort_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_attachment_name_error":{"code":400,"id":"api_params_instance_attachment_name_error","isRecordTimes":true,"message":"api_params_instance_attachment_name_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_attachment_token_error":{"code":400,"id":"api_params_instance_attachment_token_error","isRecordTimes":true,"message":"api_params_instance_attachment_token_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_member_name_error":{"code":400,"id":"api_params_instance_member_name_error","isRecordTimes":true,"message":"api_params_instance_member_name_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_instance_member_type_error":{"code":400,"id":"api_params_instance_member_type_error","isRecordTimes":true,"message":"api_params_instance_member_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_delete_error_foreign_datasheet_deleted":{"code":214,"id":"api_delete_error_foreign_datasheet_deleted","isRecordTimes":true,"message":"api_delete_error_foreign_datasheet_deleted","statusCode":200,"apiTypes":"fusion_api"},"api_add_row_failed_wrong_length_of_value":{"code":211,"id":"api_add_row_failed_wrong_length_of_value","isRecordTimes":true,"message":"error_add_row_failed_wrong_length_of_value","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_content_empty":{"code":400,"id":"api_param_formula_function_content_empty","isRecordTimes":true,"message":"function_content_empty","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_no_left_bracket":{"code":400,"id":"api_param_formula_function_err_no_left_bracket","isRecordTimes":true,"message":"function_err_no_left_bracket","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_end_of_right_bracket":{"code":400,"id":"api_param_formula_function_err_end_of_right_bracket","isRecordTimes":true,"message":"function_err_end_of_right_bracket","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_unable_parse_char":{"code":400,"id":"api_param_formula_function_err_unable_parse_char","isRecordTimes":true,"message":"function_err_unable_parse_char","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_wrong_function_suffix":{"code":400,"id":"api_param_formula_function_err_wrong_function_suffix","isRecordTimes":true,"message":"function_err_wrong_function_suffix","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_no_ref_self_column":{"code":400,"id":"api_param_formula_function_err_no_ref_self_column","isRecordTimes":true,"message":"function_err_no_ref_self_column","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_not_definition":{"code":400,"id":"api_param_formula_function_err_not_definition","isRecordTimes":true,"message":"function_err_not_definition","statusCode":200,"apiTypes":"fusion_api"},"api_param_formula_function_err_unknown_operator":{"code":400,"id":"api_param_formula_function_err_unknown_operator","isRecordTimes":true,"message":"function_err_unknown_operator","statusCode":200,"apiTypes":"fusion_api"},"api_param_attachment_token_type_error":{"code":400,"id":"api_param_attachment_token_type_error","isRecordTimes":true,"message":"api_param_attachment_token_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_attachment_name_type_error":{"code":400,"id":"api_param_attachment_name_type_error","isRecordTimes":true,"message":"api_param_attachment_name_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_attachment_array_type_error":{"code":400,"id":"api_param_attachment_array_type_error","isRecordTimes":true,"message":"api_param_attachment_array_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_currency_field_type_error":{"code":400,"id":"api_param_currency_field_type_error","isRecordTimes":true,"message":"api_param_currency_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_number_field_type_error":{"code":400,"id":"api_param_number_field_type_error","isRecordTimes":true,"message":"api_param_number_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_percent_field_type_error":{"code":400,"id":"api_param_percent_field_type_error","isRecordTimes":true,"message":"api_param_percent_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_rating_field_type_error":{"code":400,"id":"api_param_rating_field_type_error","isRecordTimes":true,"message":"api_param_rating_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_email_field_type_error":{"code":400,"id":"api_param_email_field_type_error","isRecordTimes":true,"message":"api_param_email_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_phone_field_type_error":{"code":400,"id":"api_param_phone_field_type_error","isRecordTimes":true,"message":"api_param_phone_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_singletext_field_type_error":{"code":400,"id":"api_param_singletext_field_type_error","isRecordTimes":true,"message":"api_param_singletext_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_text_field_type_error":{"code":400,"id":"api_param_text_field_type_error","isRecordTimes":true,"message":"api_param_text_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_url_field_type_error":{"code":400,"id":"api_param_url_field_type_error","isRecordTimes":true,"message":"api_param_url_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_checkbox_field_type_error":{"code":400,"id":"api_param_checkbox_field_type_error","isRecordTimes":true,"message":"api_param_checkbox_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_datetime_field_type_error":{"code":400,"id":"api_param_datetime_field_type_error","isRecordTimes":true,"message":"api_param_datetime_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_link_field_type_error":{"code":400,"id":"api_param_link_field_type_error","isRecordTimes":true,"message":"api_param_link_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_member_field_type_error":{"code":400,"id":"api_param_member_field_type_error","isRecordTimes":true,"message":"api_param_member_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_member_id_type_error":{"code":400,"id":"api_param_member_id_type_error","isRecordTimes":true,"message":"api_param_member_id_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_params_tree_select_can_not_operate":{"code":400,"id":"api_params_tree_select_can_not_operate","isRecordTimes":true,"message":"api_params_tree_select_can_not_operate","statusCode":200,"apiTypes":"fusion_api"},"api_param_multiselect_field_type_error":{"code":400,"id":"api_param_multiselect_field_type_error","isRecordTimes":true,"message":"api_param_multiselect_field_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_multiselect_field_value_type_error":{"code":400,"id":"api_param_multiselect_field_value_type_error","isRecordTimes":true,"message":"api_param_multiselect_field_value_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_select_field_value_type_error":{"code":400,"id":"api_param_select_field_value_type_error","isRecordTimes":true,"message":"api_param_select_field_value_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_invalid_record_id_value":{"code":400,"id":"api_param_invalid_record_id_value","isRecordTimes":true,"message":"api_param_invalid_record_id_value","statusCode":200},"api_params_link_field_recordids_not_exists":{"code":400,"id":"api_params_link_field_recordids_not_exists","isRecordTimes":true,"message":"api_params_link_field_recordids_not_exists","statusCode":200,"apiTypes":"fusion_api"},"api_params_cellformat_error":{"code":400,"id":"api_params_cellformat_error","isRecordTimes":true,"message":"api_params_cellformat_error","statusCode":200},"api_params_primary_field_not_allowed_to_delete":{"code":400,"id":"api_params_primary_field_not_allowed_to_delete","isRecordTimes":true,"message":"api_params_primary_field_not_allowed_to_delete","statusCode":200,"apiTypes":"fusion_api"},"api_param_node_id_not_empty_key":{"code":400,"id":"api_param_node_id_not_empty_key","isRecordTimes":true,"message":"api_param_node_id_not_empty_key","statusCode":200},"api_param_payload_banner_logo_type_error":{"code":400,"id":"api_param_payload_banner_logo_type_error","isRecordTimes":true,"message":"api_param_payload_banner_logo_type_error","statusCode":200},"api_param_theme_type_error":{"code":400,"id":"api_param_theme_type_error","isRecordTimes":true,"message":"api_param_theme_type_error","statusCode":200},"api_param_payload_editable_type_error":{"code":400,"id":"api_param_payload_editable_type_error","isRecordTimes":true,"message":"api_param_payload_editable_type_error","statusCode":200},"api_param_collapsed_type_error":{"code":400,"id":"api_param_collapsed_type_error","isRecordTimes":true,"message":"api_param_collapsed_type_error","statusCode":200},"api_param_tabbar_type_error":{"code":400,"id":"api_param_tabbar_type_error","isRecordTimes":true,"message":"api_param_tabbar_type_error","statusCode":200},"api_param_toolbar_type_error":{"code":400,"id":"api_param_toolbar_type_error","isRecordTimes":true,"message":"api_param_toolbar_type_error","statusCode":200},"api_param_viewid_type_error":{"code":400,"id":"api_param_viewid_type_error","isRecordTimes":true,"message":"api_param_viewid_type_error","statusCode":200},"api_param_viewid_empty_error":{"code":400,"id":"api_param_viewid_empty_error","isRecordTimes":true,"message":"api_param_viewid_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_view_rules_empty_error":{"code":400,"id":"api_view_rules_empty_error","isRecordTimes":true,"message":"api_view_rules_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_fieldid_empty_error":{"code":400,"id":"api_fieldid_empty_error","isRecordTimes":true,"message":"api_fieldid_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_favicon_value_error":{"code":400,"id":"api_favicon_value_error","isRecordTimes":true,"message":"api_favicon_value_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_basic_tools_type_error":{"code":400,"id":"api_param_basic_tools_type_error","isRecordTimes":true,"message":"api_param_basic_tools_type_error","statusCode":200},"api_param_share_btn_type_error":{"code":400,"id":"api_param_share_btn_type_error","isRecordTimes":true,"message":"api_param_share_btn_type_error","statusCode":200},"api_param_widget_btn_type_error":{"code":400,"id":"api_param_widget_btn_type_error","isRecordTimes":true,"message":"api_param_widget_btn_type_error","statusCode":200},"api_param_api_btn_type_error":{"code":400,"id":"api_param_api_btn_type_error","isRecordTimes":true,"message":"api_param_api_btn_type_error","statusCode":200},"api_param_form_btn_type_error":{"code":400,"id":"api_param_form_btn_type_error","isRecordTimes":true,"message":"api_param_form_btn_type_error","statusCode":200},"api_param_history_btn_type_error":{"code":400,"id":"api_param_history_btn_type_error","isRecordTimes":true,"message":"api_param_history_btn_type_error","statusCode":200},"api_param_robot_btn_type_error":{"code":400,"id":"api_param_robot_btn_type_error","isRecordTimes":true,"message":"api_param_robot_btn_type_error","statusCode":200},"api_param_embed_link_id_not_empty":{"code":400,"id":"api_param_embed_link_id_not_empty","isRecordTimes":true,"message":"api_param_embed_link_id_not_empty","statusCode":200},"api_enterprise_limit":{"code":1502,"id":"api_enterprise_limit","isRecordTimes":true,"message":"api_enterprise_limit","statusCode":200},"api_embed_link_id_not_exist":{"code":1501,"id":"api_embed_link_id_not_exist","isRecordTimes":true,"message":"api_embed_link_id_not_exist","statusCode":200},"api_embed_link_limit":{"code":400,"id":"api_embed_link_limit","isRecordTimes":true,"message":"api_embed_link_limit","statusCode":200},"api_embed_link_instance_limit":{"code":400,"id":"api_embed_link_instance_limit","isRecordTimes":true,"message":"api_embed_link_instance_limit","statusCode":200},"api_param_embed_permission_type_error":{"code":400,"id":"api_param_embed_permission_type_error","isRecordTimes":true,"message":"api_param_embed_permission_type_error","statusCode":200},"api_view_type_error":{"code":400,"id":"api_view_type_error","isRecordTimes":true,"message":"api_view_type_error","statusCode":200,"apiTypes":"fusion_api"},"api_view_filter_conditions_empty_error":{"code":400,"id":"api_view_filter_conditions_empty_error","isRecordTimes":true,"message":"api_view_filter_conditions_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_view_filter_operator_value_error":{"code":400,"id":"api_view_filter_operator_value_error","isRecordTimes":true,"message":"api_view_filter_operator_value_error","statusCode":200,"apiTypes":"fusion_api"},"api_view_filter_operator_not_support":{"code":400,"id":"api_view_filter_operator_not_support","isRecordTimes":true,"message":"api_view_filter_operator_not_support","statusCode":200,"apiTypes":"fusion_api"},"api_view_fieldid_not_exist":{"code":400,"id":"api_view_fieldid_not_exist","isRecordTimes":true,"message":"api_view_fieldid_not_exist","statusCode":200,"apiTypes":"fusion_api"},"api_param_viewids_empty_error":{"code":400,"id":"api_param_viewids_empty_error","isRecordTimes":true,"message":"api_param_viewids_empty_error","statusCode":200,"apiTypes":"fusion_api"},"api_param_node_info_bar_type_error":{"code":400,"id":"api_param_node_info_bar_type_error","isRecordTimes":true,"message":"api_param_node_info_bar_type_error","statusCode":200},"api_param_collaborator_status_bar_type_error":{"code":400,"id":"api_param_collaborator_status_bar_type_error","isRecordTimes":true,"message":"api_param_collaborator_status_bar_type_error","statusCode":200},"api_param_add_widget_btn_type_error":{"code":400,"id":"api_param_add_widget_btn_type_error","isRecordTimes":true,"message":"api_param_add_widget_btn_type_error","statusCode":200},"api_param_full_screen_btn_type_error":{"code":400,"id":"api_param_full_screen_btn_type_error","isRecordTimes":true,"message":"api_param_full_screen_btn_type_error","statusCode":200}}}}');

/***/ }),

/***/ 79799:
/***/ ((module) => {

module.exports = JSON.parse('{"emojis":{"100":{"native":"💯","name":"Hundred Points Symbol","url":"https://s1.vika.cn/space/2021/05/29/a1cda7f419364993930a8381b37e2684","token":"space/2021/05/29/a1cda7f419364993930a8381b37e2684","category_id":"people"},"1234":{"native":"🔢","name":"Input Symbol for Numbers","url":"https://s1.vika.cn/space/2021/05/29/2e12b71fab8240f48ae1d82662a757ac","token":"space/2021/05/29/2e12b71fab8240f48ae1d82662a757ac","category_id":"symbols"},"-1":{"native":"👎","name":"Thumbs Down Sign","url":"https://s1.vika.cn/space/2021/05/29/6cc7a35033bd470a9364a9ab7d8665a7","token":"space/2021/05/29/6cc7a35033bd470a9364a9ab7d8665a7","category_id":"people"},"+1":{"native":"👍","name":"Thumbs Up Sign","url":"https://s1.vika.cn/space/2021/05/29/226b5ee3405f4df7b2525e3a267b70da","token":"space/2021/05/29/226b5ee3405f4df7b2525e3a267b70da","category_id":"people"},"8ball":{"native":"🎱","name":"Billiards","url":"https://s1.vika.cn/space/2021/05/29/db8b523436264a9e87c27494b6a3acda","token":"space/2021/05/29/db8b523436264a9e87c27494b6a3acda","category_id":"activity"},"a":{"native":"🅰️","name":"Negative Squared Latin Capital Letter a","url":"https://s1.vika.cn/space/2021/05/29/21eb2dc32f08435e99f4d654e70f3009","token":"space/2021/05/29/21eb2dc32f08435e99f4d654e70f3009","category_id":"symbols"},"ab":{"native":"🆎","name":"Negative Squared Ab","url":"https://s1.vika.cn/space/2021/05/29/6536068b754540c9a95b107faed799bd","token":"space/2021/05/29/6536068b754540c9a95b107faed799bd","category_id":"symbols"},"abacus":{"native":"🧮","name":"Abacus","url":"https://s1.vika.cn/space/2021/05/29/86006286dac34d1cb3b9a28d433c3b67","token":"space/2021/05/29/86006286dac34d1cb3b9a28d433c3b67","category_id":"objects"},"abc":{"native":"🔤","name":"Input Symbol for Latin Letters","url":"https://s1.vika.cn/space/2021/05/29/6b485815f585454c841c5b3666bc3742","token":"space/2021/05/29/6b485815f585454c841c5b3666bc3742","category_id":"symbols"},"abcd":{"native":"🔡","name":"Input Symbol for Latin Small Letters","url":"https://s1.vika.cn/space/2021/05/29/b3ea61376077446bb12ecc5ec994910a","token":"space/2021/05/29/b3ea61376077446bb12ecc5ec994910a","category_id":"symbols"},"accept":{"native":"🉑","name":"Circled Ideograph Accept","url":"https://s1.vika.cn/space/2021/05/29/4a3ef2c71a044e3a88eb6f52c857081b","token":"space/2021/05/29/4a3ef2c71a044e3a88eb6f52c857081b","category_id":"symbols"},"adhesive_bandage":{"native":"🩹","name":"Adhesive Bandage","url":"https://s1.vika.cn/space/2021/05/29/b5405c5f781e451eaa82ec6021314f59","token":"space/2021/05/29/b5405c5f781e451eaa82ec6021314f59","category_id":"objects"},"admission_tickets":{"native":"🎟️","name":"Admission Tickets","url":"https://s1.vika.cn/space/2021/05/29/4ba88e71d82941acad336d0783a5e08b","token":"space/2021/05/29/4ba88e71d82941acad336d0783a5e08b","category_id":"activity"},"adult":{"native":"🧑","name":"Adult","url":"https://s1.vika.cn/space/2021/05/29/72909053f8014cdb822f346b93461335","token":"space/2021/05/29/72909053f8014cdb822f346b93461335","category_id":"people"},"aerial_tramway":{"native":"🚡","name":"Aerial Tramway","url":"https://s1.vika.cn/space/2021/05/29/46f279390f4d4081999524ee3d498581","token":"space/2021/05/29/46f279390f4d4081999524ee3d498581","category_id":"places"},"airplane":{"native":"✈️","name":"Airplane","url":"https://s1.vika.cn/space/2021/05/29/052d9fa97dd14acdb18e45667ccf733e","token":"space/2021/05/29/052d9fa97dd14acdb18e45667ccf733e","category_id":"places"},"airplane_arriving":{"native":"🛬","name":"Airplane Arriving","url":"https://s1.vika.cn/space/2021/05/29/284b096b3d664259b8837039b1fbe782","token":"space/2021/05/29/284b096b3d664259b8837039b1fbe782","category_id":"places"},"airplane_departure":{"native":"🛫","name":"Airplane Departure","url":"https://s1.vika.cn/space/2021/05/29/562c0a1cc4f34852b0ae46180a9b2a26","token":"space/2021/05/29/562c0a1cc4f34852b0ae46180a9b2a26","category_id":"places"},"alarm_clock":{"native":"⏰","name":"Alarm Clock","url":"https://s1.vika.cn/space/2021/05/29/b75ddf8a4ff2439a910a09ec55bc0131","token":"space/2021/05/29/b75ddf8a4ff2439a910a09ec55bc0131","category_id":"places"},"alembic":{"native":"⚗️","name":"Alembic","url":"https://s1.vika.cn/space/2021/05/29/26c8d519ea97458393c82a0912a9a22f","token":"space/2021/05/29/26c8d519ea97458393c82a0912a9a22f","category_id":"objects"},"alien":{"native":"👽","name":"Extraterrestrial Alien","url":"https://s1.vika.cn/space/2021/05/29/e546997fdce74b35a71911068010a586","token":"space/2021/05/29/e546997fdce74b35a71911068010a586","category_id":"people"},"ambulance":{"native":"🚑","name":"Ambulance","url":"https://s1.vika.cn/space/2021/05/29/7ce81177b6f34223b3f064d9dae70bb2","token":"space/2021/05/29/7ce81177b6f34223b3f064d9dae70bb2","category_id":"places"},"amphora":{"native":"🏺","name":"Amphora","url":"https://s1.vika.cn/space/2021/05/29/8ac4658a6eed492e9ab4d235f9df4016","token":"space/2021/05/29/8ac4658a6eed492e9ab4d235f9df4016","category_id":"foods"},"anchor":{"native":"⚓","name":"Anchor","url":"https://s1.vika.cn/space/2021/05/29/bd2dbc1a821c4cf295c25d47e9ea0a37","token":"space/2021/05/29/bd2dbc1a821c4cf295c25d47e9ea0a37","category_id":"places"},"angel":{"native":"👼","name":"Baby Angel","url":"https://s1.vika.cn/space/2021/05/29/51e13ecd09a8413d8ce294cf8ea9ed7a","token":"space/2021/05/29/51e13ecd09a8413d8ce294cf8ea9ed7a","category_id":"people"},"anger":{"native":"💢","name":"Anger Symbol","url":"https://s1.vika.cn/space/2021/05/29/185ef579d8b14e6d80589be0a372628b","token":"space/2021/05/29/185ef579d8b14e6d80589be0a372628b","category_id":"people"},"angry":{"native":"😠","name":"Angry Face","url":"https://s1.vika.cn/space/2021/05/29/0dccbd537082492aa1528e5c13cfcf2a","token":"space/2021/05/29/0dccbd537082492aa1528e5c13cfcf2a","category_id":"people"},"anguished":{"native":"😧","name":"Anguished Face","url":"https://s1.vika.cn/space/2021/05/29/d0e4206e1fb1467098f91b5c323861d3","token":"space/2021/05/29/d0e4206e1fb1467098f91b5c323861d3","category_id":"people"},"ant":{"native":"🐜","name":"Ant","url":"https://s1.vika.cn/space/2021/05/29/4c9f535c7cda4bbeab78e1648604e419","token":"space/2021/05/29/4c9f535c7cda4bbeab78e1648604e419","category_id":"nature"},"apple":{"native":"🍎","name":"Red Apple","url":"https://s1.vika.cn/space/2021/05/29/4bfb15863b3a44319725d8fc82a4ee5c","token":"space/2021/05/29/4bfb15863b3a44319725d8fc82a4ee5c","category_id":"foods"},"aquarius":{"native":"♒","name":"Aquarius","url":"https://s1.vika.cn/space/2021/05/29/75012dff2b8242b2b98b381ccf833b80","token":"space/2021/05/29/75012dff2b8242b2b98b381ccf833b80","category_id":"symbols"},"aries":{"native":"♈","name":"Aries","url":"https://s1.vika.cn/space/2021/05/29/c4c8e9516cd646d8a73d804a70610774","token":"space/2021/05/29/c4c8e9516cd646d8a73d804a70610774","category_id":"symbols"},"arrow_backward":{"native":"◀️","name":"Black Left-Pointing Triangle","url":"https://s1.vika.cn/space/2021/05/29/e187401c2fd94b2980261e2e36cfec28","token":"space/2021/05/29/e187401c2fd94b2980261e2e36cfec28","category_id":"symbols"},"arrow_double_down":{"native":"⏬","name":"Black Down-Pointing Double Triangle","url":"https://s1.vika.cn/space/2021/05/29/44d01b352fd04f9f92026f2ccec0352e","token":"space/2021/05/29/44d01b352fd04f9f92026f2ccec0352e","category_id":"symbols"},"arrow_double_up":{"native":"⏫","name":"Black Up-Pointing Double Triangle","url":"https://s1.vika.cn/space/2021/05/29/6964c2e4a1f64a499cd56f36ae6f5732","token":"space/2021/05/29/6964c2e4a1f64a499cd56f36ae6f5732","category_id":"symbols"},"arrow_down":{"native":"⬇️","name":"Downwards Black Arrow","url":"https://s1.vika.cn/space/2021/05/29/a75ffa67440047e9ba15bdb4b3e14741","token":"space/2021/05/29/a75ffa67440047e9ba15bdb4b3e14741","category_id":"symbols"},"arrow_down_small":{"native":"🔽","name":"Down-Pointing Small Red Triangle","url":"https://s1.vika.cn/space/2021/05/29/1f5399257a164e5a8823596ade19f2cd","token":"space/2021/05/29/1f5399257a164e5a8823596ade19f2cd","category_id":"symbols"},"arrow_forward":{"native":"▶️","name":"Black Right-Pointing Triangle","url":"https://s1.vika.cn/space/2021/05/29/a71e715b49ee4707b93cf7948907cd9e","token":"space/2021/05/29/a71e715b49ee4707b93cf7948907cd9e","category_id":"symbols"},"arrow_heading_down":{"native":"⤵️","name":"Arrow Pointing Rightwards Then Curving Downwards","url":"https://s1.vika.cn/space/2021/05/29/ea434de7f6284242bb64d49591d7bfad","token":"space/2021/05/29/ea434de7f6284242bb64d49591d7bfad","category_id":"symbols"},"arrow_heading_up":{"native":"⤴️","name":"Arrow Pointing Rightwards Then Curving Upwards","url":"https://s1.vika.cn/space/2021/05/29/655a09ccd2e44bec90812505ce06da20","token":"space/2021/05/29/655a09ccd2e44bec90812505ce06da20","category_id":"symbols"},"arrow_left":{"native":"⬅️","name":"Leftwards Black Arrow","url":"https://s1.vika.cn/space/2021/05/29/886f44c63b7d4327827a37c16cc3d525","token":"space/2021/05/29/886f44c63b7d4327827a37c16cc3d525","category_id":"symbols"},"arrow_lower_left":{"native":"↙️","name":"South West Arrow","url":"https://s1.vika.cn/space/2021/05/29/b305f3f36cca4c04b7ddb3ef187d8eb1","token":"space/2021/05/29/b305f3f36cca4c04b7ddb3ef187d8eb1","category_id":"symbols"},"arrow_lower_right":{"native":"↘️","name":"South East Arrow","url":"https://s1.vika.cn/space/2021/05/29/e8095ccac9eb4bd1994b8e6e48747545","token":"space/2021/05/29/e8095ccac9eb4bd1994b8e6e48747545","category_id":"symbols"},"arrow_right":{"native":"➡️","name":"Black Rightwards Arrow","url":"https://s1.vika.cn/space/2021/05/29/9a43649c173b47359e66a642cc484805","token":"space/2021/05/29/9a43649c173b47359e66a642cc484805","category_id":"symbols"},"arrow_right_hook":{"native":"↪️","name":"Rightwards Arrow with Hook","url":"https://s1.vika.cn/space/2021/05/29/ee2cfd3b137d4ee49c47f9a0a6b7f1b9","token":"space/2021/05/29/ee2cfd3b137d4ee49c47f9a0a6b7f1b9","category_id":"symbols"},"arrow_up":{"native":"⬆️","name":"Upwards Black Arrow","url":"https://s1.vika.cn/space/2021/05/29/d30fc506f1544efea74ffbd4b36f856b","token":"space/2021/05/29/d30fc506f1544efea74ffbd4b36f856b","category_id":"symbols"},"arrow_up_down":{"native":"↕️","name":"Up Down Arrow","url":"https://s1.vika.cn/space/2021/05/29/a8c2306e019a4ff396f4b9e9c42a425b","token":"space/2021/05/29/a8c2306e019a4ff396f4b9e9c42a425b","category_id":"symbols"},"arrow_up_small":{"native":"🔼","name":"Up-Pointing Small Red Triangle","url":"https://s1.vika.cn/space/2021/05/29/94c244b00a11468db483e88b4c40a9ff","token":"space/2021/05/29/94c244b00a11468db483e88b4c40a9ff","category_id":"symbols"},"arrow_upper_left":{"native":"↖️","name":"North West Arrow","url":"https://s1.vika.cn/space/2021/05/29/5db6f97313d944d4afd63b6b1a58d7b4","token":"space/2021/05/29/5db6f97313d944d4afd63b6b1a58d7b4","category_id":"symbols"},"arrow_upper_right":{"native":"↗️","name":"North East Arrow","url":"https://s1.vika.cn/space/2021/05/29/b8c03b7517934d8f88c79ad38597478d","token":"space/2021/05/29/b8c03b7517934d8f88c79ad38597478d","category_id":"symbols"},"arrows_clockwise":{"native":"🔃","name":"Clockwise Downwards and Upwards Open Circle Arrows","url":"https://s1.vika.cn/space/2021/05/29/0d8fe06c2e5f4cdcb0e14ca4def8fb2e","token":"space/2021/05/29/0d8fe06c2e5f4cdcb0e14ca4def8fb2e","category_id":"symbols"},"arrows_counterclockwise":{"native":"🔄","name":"Anticlockwise Downwards and Upwards Open Circle Arrows","url":"https://s1.vika.cn/space/2021/05/29/d573bc4f5a7f435798c07ad3fbc68459","token":"space/2021/05/29/d573bc4f5a7f435798c07ad3fbc68459","category_id":"symbols"},"art":{"native":"🎨","name":"Artist Palette","url":"https://s1.vika.cn/space/2021/05/29/22d7564d0df44c5d9ea0d08c750503bd","token":"space/2021/05/29/22d7564d0df44c5d9ea0d08c750503bd","category_id":"activity"},"articulated_lorry":{"native":"🚛","name":"Articulated Lorry","url":"https://s1.vika.cn/space/2021/05/29/b4e2bb32435b4990a9703780230ca69d","token":"space/2021/05/29/b4e2bb32435b4990a9703780230ca69d","category_id":"places"},"artist":{"native":"🧑‍🎨","name":"Artist","url":"https://s1.vika.cn/space/2021/05/29/36ce4da8b31347b88b72f159d694c3ff","token":"space/2021/05/29/36ce4da8b31347b88b72f159d694c3ff","category_id":"people"},"astonished":{"native":"😲","name":"Astonished Face","url":"https://s1.vika.cn/space/2021/05/29/840618066cf6482783f84bac5cc31d9f","token":"space/2021/05/29/840618066cf6482783f84bac5cc31d9f","category_id":"people"},"astronaut":{"native":"🧑‍🚀","name":"Astronaut","url":"https://s1.vika.cn/space/2021/05/29/015e42f6717b4d1a84deba6ea029bfbe","token":"space/2021/05/29/015e42f6717b4d1a84deba6ea029bfbe","category_id":"people"},"athletic_shoe":{"native":"👟","name":"Athletic Shoe","url":"https://s1.vika.cn/space/2021/05/29/3404b0003fa848bfa1b03e23919bc8f1","token":"space/2021/05/29/3404b0003fa848bfa1b03e23919bc8f1","category_id":"objects"},"atm":{"native":"🏧","name":"Automated Teller Machine","url":"https://s1.vika.cn/space/2021/05/29/9de75941001d495fa6c7bfc05725e371","token":"space/2021/05/29/9de75941001d495fa6c7bfc05725e371","category_id":"symbols"},"atom_symbol":{"native":"⚛️","name":"Atom Symbol","url":"https://s1.vika.cn/space/2021/05/29/bf95cb5b68624141be124f85df3e3155","token":"space/2021/05/29/bf95cb5b68624141be124f85df3e3155","category_id":"symbols"},"auto_rickshaw":{"native":"🛺","name":"Auto Rickshaw","url":"https://s1.vika.cn/space/2021/05/29/e5091f3658424f3cafe26962ebdab6f7","token":"space/2021/05/29/e5091f3658424f3cafe26962ebdab6f7","category_id":"places"},"avocado":{"native":"🥑","name":"Avocado","url":"https://s1.vika.cn/space/2021/05/29/0ba53540952b4279a52e2f53338e33fd","token":"space/2021/05/29/0ba53540952b4279a52e2f53338e33fd","category_id":"foods"},"axe":{"native":"🪓","name":"Axe","url":"https://s1.vika.cn/space/2021/05/29/47d962a57e7d41b0a6a8439dc54b3db7","token":"space/2021/05/29/47d962a57e7d41b0a6a8439dc54b3db7","category_id":"objects"},"b":{"native":"🅱️","name":"Negative Squared Latin Capital Letter B","url":"https://s1.vika.cn/space/2021/05/29/c07238ed51474edab979862aacf96d14","token":"space/2021/05/29/c07238ed51474edab979862aacf96d14","category_id":"symbols"},"baby":{"native":"👶","name":"Baby","url":"https://s1.vika.cn/space/2021/05/29/4d62eccf64924156aaa45b2eed85af4d","token":"space/2021/05/29/4d62eccf64924156aaa45b2eed85af4d","category_id":"people"},"baby_bottle":{"native":"🍼","name":"Baby Bottle","url":"https://s1.vika.cn/space/2021/05/29/1dc625879f5f4ca8989aac730e11ed95","token":"space/2021/05/29/1dc625879f5f4ca8989aac730e11ed95","category_id":"foods"},"baby_chick":{"native":"🐤","name":"Baby Chick","url":"https://s1.vika.cn/space/2021/05/29/a065e61854e04757a3ecf894cd9c80be","token":"space/2021/05/29/a065e61854e04757a3ecf894cd9c80be","category_id":"nature"},"baby_symbol":{"native":"🚼","name":"Baby Symbol","url":"https://s1.vika.cn/space/2021/05/29/cdb274b04bf345b9b54437667b28d8e7","token":"space/2021/05/29/cdb274b04bf345b9b54437667b28d8e7","category_id":"symbols"},"back":{"native":"🔙","name":"Back with Leftwards Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/b703eb214d3e45c9aac1e1ba3350a11e","token":"space/2021/05/29/b703eb214d3e45c9aac1e1ba3350a11e","category_id":"symbols"},"bacon":{"native":"🥓","name":"Bacon","url":"https://s1.vika.cn/space/2021/05/29/3bc6430426a248508069c75c0c0dafd1","token":"space/2021/05/29/3bc6430426a248508069c75c0c0dafd1","category_id":"foods"},"badger":{"native":"🦡","name":"Badger","url":"https://s1.vika.cn/space/2021/05/29/e2ed6ae5200846a795758d888e948ff4","token":"space/2021/05/29/e2ed6ae5200846a795758d888e948ff4","category_id":"nature"},"badminton_racquet_and_shuttlecock":{"native":"🏸","name":"Badminton Racquet and Shuttlecock","url":"https://s1.vika.cn/space/2021/05/29/36669d240c8e49e39072f977eb8b81eb","token":"space/2021/05/29/36669d240c8e49e39072f977eb8b81eb","category_id":"activity"},"bagel":{"native":"🥯","name":"Bagel","url":"https://s1.vika.cn/space/2021/05/29/eb35e75b931e40fcbcbe1735ba6a38ce","token":"space/2021/05/29/eb35e75b931e40fcbcbe1735ba6a38ce","category_id":"foods"},"baggage_claim":{"native":"🛄","name":"Baggage Claim","url":"https://s1.vika.cn/space/2021/05/29/113109784a634cd2a3c42c18d4a6a667","token":"space/2021/05/29/113109784a634cd2a3c42c18d4a6a667","category_id":"symbols"},"baguette_bread":{"native":"🥖","name":"Baguette Bread","url":"https://s1.vika.cn/space/2021/05/29/26fce08fcdfa469bbc76c6fdf69d61fc","token":"space/2021/05/29/26fce08fcdfa469bbc76c6fdf69d61fc","category_id":"foods"},"bald_man":{"native":"👨‍🦲","name":"Bald Man","url":"https://s1.vika.cn/space/2021/05/29/735fa41f54334dc899dd2749bf810393","token":"space/2021/05/29/735fa41f54334dc899dd2749bf810393","category_id":"people"},"bald_person":{"native":"🧑‍🦲","name":"Bald Person","url":"https://s1.vika.cn/space/2021/05/29/624479eee5114b8ebfa751f26271370b","token":"space/2021/05/29/624479eee5114b8ebfa751f26271370b","category_id":"people"},"bald_woman":{"native":"👩‍🦲","name":"Bald Woman","url":"https://s1.vika.cn/space/2021/05/29/7b26329ba68b4bfe93d9ab633d27e06a","token":"space/2021/05/29/7b26329ba68b4bfe93d9ab633d27e06a","category_id":"people"},"ballet_shoes":{"native":"🩰","name":"Ballet Shoes","url":"https://s1.vika.cn/space/2021/05/29/1839c126e284416a98da4e43aed79987","token":"space/2021/05/29/1839c126e284416a98da4e43aed79987","category_id":"objects"},"balloon":{"native":"🎈","name":"Balloon","url":"https://s1.vika.cn/space/2021/05/29/5eac04d7d1c746dba72f7c9c31a21ebe","token":"space/2021/05/29/5eac04d7d1c746dba72f7c9c31a21ebe","category_id":"activity"},"ballot_box_with_ballot":{"native":"🗳️","name":"Ballot Box with Ballot","url":"https://s1.vika.cn/space/2021/05/29/e1738fe905e54ec68d0cb6cd333a1c7c","token":"space/2021/05/29/e1738fe905e54ec68d0cb6cd333a1c7c","category_id":"objects"},"ballot_box_with_check":{"native":"☑️","name":"Ballot Box with Check","url":"https://s1.vika.cn/space/2021/05/29/110f0964f7664b15af396801cbeb767d","token":"space/2021/05/29/110f0964f7664b15af396801cbeb767d","category_id":"symbols"},"bamboo":{"native":"🎍","name":"Pine Decoration","url":"https://s1.vika.cn/space/2021/05/29/2fb5ade0fbae4ebdade9d34a12048bde","token":"space/2021/05/29/2fb5ade0fbae4ebdade9d34a12048bde","category_id":"activity"},"banana":{"native":"🍌","name":"Banana","url":"https://s1.vika.cn/space/2021/05/29/293d31fa2d684e4d879f5756dc08ee83","token":"space/2021/05/29/293d31fa2d684e4d879f5756dc08ee83","category_id":"foods"},"bangbang":{"native":"‼️","name":"Double Exclamation Mark","url":"https://s1.vika.cn/space/2021/05/29/2f65025205de4eb2a62b560824d8774a","token":"space/2021/05/29/2f65025205de4eb2a62b560824d8774a","category_id":"symbols"},"banjo":{"native":"🪕","name":"Banjo","url":"https://s1.vika.cn/space/2021/05/29/99185897de224b1da7e5c2d2289e0e7c","token":"space/2021/05/29/99185897de224b1da7e5c2d2289e0e7c","category_id":"objects"},"bank":{"native":"🏦","name":"Bank","url":"https://s1.vika.cn/space/2021/05/29/98aa1a44e68d4b3b9933a7a42282c9b8","token":"space/2021/05/29/98aa1a44e68d4b3b9933a7a42282c9b8","category_id":"places"},"bar_chart":{"native":"📊","name":"Bar Chart","url":"https://s1.vika.cn/space/2021/05/29/e089658678ed4522805b9bf7d1f4d652","token":"space/2021/05/29/e089658678ed4522805b9bf7d1f4d652","category_id":"objects"},"barber":{"native":"💈","name":"Barber Pole","url":"https://s1.vika.cn/space/2021/05/29/a347c8c9c5634a38b1690c5a5e5d2bad","token":"space/2021/05/29/a347c8c9c5634a38b1690c5a5e5d2bad","category_id":"places"},"barely_sunny":{"native":"🌥️","name":"Barely Sunny","url":"https://s1.vika.cn/space/2021/05/29/57d98aed98664211ab6befab6137a55b","token":"space/2021/05/29/57d98aed98664211ab6befab6137a55b","category_id":"places"},"baseball":{"native":"⚾","name":"Baseball","url":"https://s1.vika.cn/space/2021/05/29/223f3f86ccba407c8e2f10662ff10776","token":"space/2021/05/29/223f3f86ccba407c8e2f10662ff10776","category_id":"activity"},"basket":{"native":"🧺","name":"Basket","url":"https://s1.vika.cn/space/2021/05/29/1e9b826072414daeb3a81e1f6f1966b2","token":"space/2021/05/29/1e9b826072414daeb3a81e1f6f1966b2","category_id":"objects"},"basketball":{"native":"🏀","name":"Basketball and Hoop","url":"https://s1.vika.cn/space/2021/05/29/4392d8d54f3945408ff67829275651be","token":"space/2021/05/29/4392d8d54f3945408ff67829275651be","category_id":"activity"},"bat":{"native":"🦇","name":"Bat","url":"https://s1.vika.cn/space/2021/05/29/7a7f982a5ee244bcb78311c86a8b6c81","token":"space/2021/05/29/7a7f982a5ee244bcb78311c86a8b6c81","category_id":"nature"},"bath":{"native":"🛀","name":"Bath","url":"https://s1.vika.cn/space/2021/05/29/ec25556a3cc94bdfb0d59d8041c278f8","token":"space/2021/05/29/ec25556a3cc94bdfb0d59d8041c278f8","category_id":"people"},"bathtub":{"native":"🛁","name":"Bathtub","url":"https://s1.vika.cn/space/2021/05/29/cca22409b70b4a33a16c2992f5545b11","token":"space/2021/05/29/cca22409b70b4a33a16c2992f5545b11","category_id":"objects"},"battery":{"native":"🔋","name":"Battery","url":"https://s1.vika.cn/space/2021/05/29/f75a036ac00849098bf1fd5200f2db0e","token":"space/2021/05/29/f75a036ac00849098bf1fd5200f2db0e","category_id":"objects"},"beach_with_umbrella":{"native":"🏖️","name":"Beach with Umbrella","url":"https://s1.vika.cn/space/2021/05/29/2fb4107058664747b9ad2c879d8b1ed0","token":"space/2021/05/29/2fb4107058664747b9ad2c879d8b1ed0","category_id":"places"},"bear":{"native":"🐻","name":"Bear Face","url":"https://s1.vika.cn/space/2021/05/29/25dfe38237cd4d0592b7268a4f2fa7bb","token":"space/2021/05/29/25dfe38237cd4d0592b7268a4f2fa7bb","category_id":"nature"},"bearded_person":{"native":"🧔","name":"Bearded Person","url":"https://s1.vika.cn/space/2021/05/29/827d45dfd3bd41419674bebc986352b2","token":"space/2021/05/29/827d45dfd3bd41419674bebc986352b2","category_id":"people"},"bed":{"native":"🛏️","name":"Bed","url":"https://s1.vika.cn/space/2021/05/29/e5199a4f124a493bac876ffa68a4b558","token":"space/2021/05/29/e5199a4f124a493bac876ffa68a4b558","category_id":"objects"},"bee":{"native":"🐝","name":"Honeybee","url":"https://s1.vika.cn/space/2021/05/29/1cbfb7a269964b65b0d219dd2eced452","token":"space/2021/05/29/1cbfb7a269964b65b0d219dd2eced452","category_id":"nature"},"beer":{"native":"🍺","name":"Beer Mug","url":"https://s1.vika.cn/space/2021/05/29/632e345f54ae42abb4a1797dd4c7c787","token":"space/2021/05/29/632e345f54ae42abb4a1797dd4c7c787","category_id":"foods"},"beers":{"native":"🍻","name":"Clinking Beer Mugs","url":"https://s1.vika.cn/space/2021/05/29/97a8e01a6c8d46aa948ddd085783a7d7","token":"space/2021/05/29/97a8e01a6c8d46aa948ddd085783a7d7","category_id":"foods"},"beetle":{"native":"🐞","name":"Lady Beetle","url":"https://s1.vika.cn/space/2021/05/29/134fe448529d45c4b5ebcb1e94f6dacc","token":"space/2021/05/29/134fe448529d45c4b5ebcb1e94f6dacc","category_id":"nature"},"beginner":{"native":"🔰","name":"Japanese Symbol for Beginner","url":"https://s1.vika.cn/space/2021/05/29/a95581deb5bc484b842d13358b33b7c1","token":"space/2021/05/29/a95581deb5bc484b842d13358b33b7c1","category_id":"symbols"},"bell":{"native":"🔔","name":"Bell","url":"https://s1.vika.cn/space/2021/05/29/e5056b27ea584800af8ee55e1fe1c13d","token":"space/2021/05/29/e5056b27ea584800af8ee55e1fe1c13d","category_id":"objects"},"bellhop_bell":{"native":"🛎️","name":"Bellhop Bell","url":"https://s1.vika.cn/space/2021/05/29/ecbbecee2ad146128899e1ea6265470d","token":"space/2021/05/29/ecbbecee2ad146128899e1ea6265470d","category_id":"places"},"bento":{"native":"🍱","name":"Bento Box","url":"https://s1.vika.cn/space/2021/05/29/9c020eb41331423080c1ab8686063163","token":"space/2021/05/29/9c020eb41331423080c1ab8686063163","category_id":"foods"},"beverage_box":{"native":"🧃","name":"Beverage Box","url":"https://s1.vika.cn/space/2021/05/29/16c0247a7f4543699f83b11796ae4812","token":"space/2021/05/29/16c0247a7f4543699f83b11796ae4812","category_id":"foods"},"bicyclist":{"native":"🚴","name":"Bicyclist","url":"https://s1.vika.cn/space/2021/05/29/4a14dbaafa9a45b681380af3fc565a26","token":"space/2021/05/29/4a14dbaafa9a45b681380af3fc565a26","category_id":"people"},"bike":{"native":"🚲","name":"Bicycle","url":"https://s1.vika.cn/space/2021/05/29/e4887d62045b4dd8be715a2a895163b0","token":"space/2021/05/29/e4887d62045b4dd8be715a2a895163b0","category_id":"places"},"bikini":{"native":"👙","name":"Bikini","url":"https://s1.vika.cn/space/2021/05/29/02f4167d9a2449f8944097f57cde64e3","token":"space/2021/05/29/02f4167d9a2449f8944097f57cde64e3","category_id":"objects"},"billed_cap":{"native":"🧢","name":"Billed Cap","url":"https://s1.vika.cn/space/2021/05/29/b60661e02ba14f4998c28d848cf6f166","token":"space/2021/05/29/b60661e02ba14f4998c28d848cf6f166","category_id":"objects"},"biohazard_sign":{"native":"☣️","name":"Biohazard Sign","url":"https://s1.vika.cn/space/2021/05/29/80328d1147be4da080e4aa9d38c96bda","token":"space/2021/05/29/80328d1147be4da080e4aa9d38c96bda","category_id":"symbols"},"bird":{"native":"🐦","name":"Bird","url":"https://s1.vika.cn/space/2021/05/29/33eb3657ebb645ad8062285fdad4b67c","token":"space/2021/05/29/33eb3657ebb645ad8062285fdad4b67c","category_id":"nature"},"birthday":{"native":"🎂","name":"Birthday Cake","url":"https://s1.vika.cn/space/2021/05/29/024f76fa9eca49fa9612fdfa94a83b2f","token":"space/2021/05/29/024f76fa9eca49fa9612fdfa94a83b2f","category_id":"foods"},"black_circle":{"native":"⚫","name":"Medium Black Circle","url":"https://s1.vika.cn/space/2021/05/29/d1dcbf8876104b05852e0118d5a46799","token":"space/2021/05/29/d1dcbf8876104b05852e0118d5a46799","category_id":"symbols"},"black_circle_for_record":{"native":"⏺️","name":"Black Circle for Record","url":"https://s1.vika.cn/space/2021/05/29/4df57cca5cbd45f9b642a61d0e6a5b17","token":"space/2021/05/29/4df57cca5cbd45f9b642a61d0e6a5b17","category_id":"symbols"},"black_heart":{"native":"🖤","name":"Black Heart","url":"https://s1.vika.cn/space/2021/05/29/b539f8e7513043c1aed7441819dc9723","token":"space/2021/05/29/b539f8e7513043c1aed7441819dc9723","category_id":"people"},"black_joker":{"native":"🃏","name":"Playing Card Black Joker","url":"https://s1.vika.cn/space/2021/05/29/8c82248cb1cf4ce585d2983d99b43c85","token":"space/2021/05/29/8c82248cb1cf4ce585d2983d99b43c85","category_id":"activity"},"black_large_square":{"native":"⬛","name":"Black Large Square","url":"https://s1.vika.cn/space/2021/05/29/36ee497305cb47c88533029f6b528e05","token":"space/2021/05/29/36ee497305cb47c88533029f6b528e05","category_id":"symbols"},"black_left_pointing_double_triangle_with_vertical_bar":{"native":"⏮️","name":"Black Left Pointing Double Triangle with Vertical Bar","url":"https://s1.vika.cn/space/2021/05/29/2d2ec39f5b3144c7aaf951f204b20971","token":"space/2021/05/29/2d2ec39f5b3144c7aaf951f204b20971","category_id":"symbols"},"black_medium_small_square":{"native":"◾","name":"Black Medium Small Square","url":"https://s1.vika.cn/space/2021/05/29/9df3fd1eed0a41b091879ff65f39fd8a","token":"space/2021/05/29/9df3fd1eed0a41b091879ff65f39fd8a","category_id":"symbols"},"black_medium_square":{"native":"◼️","name":"Black Medium Square","url":"https://s1.vika.cn/space/2021/05/29/9081d6cd172e49138ec5b4db8600d810","token":"space/2021/05/29/9081d6cd172e49138ec5b4db8600d810","category_id":"symbols"},"black_nib":{"native":"✒️","name":"Black Nib","url":"https://s1.vika.cn/space/2021/05/29/bff455b47e8046f18c324927a659f5a0","token":"space/2021/05/29/bff455b47e8046f18c324927a659f5a0","category_id":"objects"},"black_right_pointing_double_triangle_with_vertical_bar":{"native":"⏭️","name":"Black Right Pointing Double Triangle with Vertical Bar","url":"https://s1.vika.cn/space/2021/05/29/cf573af97ca54348867ac062cc72c77e","token":"space/2021/05/29/cf573af97ca54348867ac062cc72c77e","category_id":"symbols"},"black_right_pointing_triangle_with_double_vertical_bar":{"native":"⏯️","name":"Black Right Pointing Triangle with Double Vertical Bar","url":"https://s1.vika.cn/space/2021/05/29/dd339815ebe547e3805015508c1dd68f","token":"space/2021/05/29/dd339815ebe547e3805015508c1dd68f","category_id":"symbols"},"black_small_square":{"native":"▪️","name":"Black Small Square","url":"https://s1.vika.cn/space/2021/05/29/95372fe296824ac6bbb4356bae080e2e","token":"space/2021/05/29/95372fe296824ac6bbb4356bae080e2e","category_id":"symbols"},"black_square_button":{"native":"🔲","name":"Black Square Button","url":"https://s1.vika.cn/space/2021/05/29/a40f3f195df54ddab3931e6bea4d6d7c","token":"space/2021/05/29/a40f3f195df54ddab3931e6bea4d6d7c","category_id":"symbols"},"black_square_for_stop":{"native":"⏹️","name":"Black Square for Stop","url":"https://s1.vika.cn/space/2021/05/29/1b4398c25fab4fc79aadae87ccdb2f66","token":"space/2021/05/29/1b4398c25fab4fc79aadae87ccdb2f66","category_id":"symbols"},"blond-haired-man":{"native":"👱‍♂️","name":"Blond Haired Man","url":"https://s1.vika.cn/space/2021/05/29/91d8dc43acd9429fa0fa81cb3a5f5690","token":"space/2021/05/29/91d8dc43acd9429fa0fa81cb3a5f5690","category_id":"people"},"blond-haired-woman":{"native":"👱‍♀️","name":"Blond Haired Woman","url":"https://s1.vika.cn/space/2021/05/29/4213f35f0881482d9dcbe2eadd8c26ed","token":"space/2021/05/29/4213f35f0881482d9dcbe2eadd8c26ed","category_id":"people"},"blossom":{"native":"🌼","name":"Blossom","url":"https://s1.vika.cn/space/2021/05/29/b280cc36e4e147aba32f10f4ca9800cf","token":"space/2021/05/29/b280cc36e4e147aba32f10f4ca9800cf","category_id":"nature"},"blowfish":{"native":"🐡","name":"Blowfish","url":"https://s1.vika.cn/space/2021/05/29/a85fbe926f2b44f5937352b676dc00b4","token":"space/2021/05/29/a85fbe926f2b44f5937352b676dc00b4","category_id":"nature"},"blue_book":{"native":"📘","name":"Blue Book","url":"https://s1.vika.cn/space/2021/05/29/60502266c7da465a9de1fd96b43f42c3","token":"space/2021/05/29/60502266c7da465a9de1fd96b43f42c3","category_id":"objects"},"blue_car":{"native":"🚙","name":"Recreational Vehicle","url":"https://s1.vika.cn/space/2021/05/29/9efea471f4d84ee89e56a39738e8413e","token":"space/2021/05/29/9efea471f4d84ee89e56a39738e8413e","category_id":"places"},"blue_heart":{"native":"💙","name":"Blue Heart","url":"https://s1.vika.cn/space/2021/05/29/4c28d67ef2d94beaaf379237d78e80ee","token":"space/2021/05/29/4c28d67ef2d94beaaf379237d78e80ee","category_id":"people"},"blush":{"native":"😊","name":"Smiling Face with Smiling Eyes","url":"https://s1.vika.cn/space/2021/05/29/04bed842b1fd416d8e3a755393866d8c","token":"space/2021/05/29/04bed842b1fd416d8e3a755393866d8c","category_id":"people"},"boar":{"native":"🐗","name":"Boar","url":"https://s1.vika.cn/space/2021/05/29/fa41fdfd17fe4fb1bfb64e65413694c5","token":"space/2021/05/29/fa41fdfd17fe4fb1bfb64e65413694c5","category_id":"nature"},"boat":{"native":"⛵","name":"Sailboat","url":"https://s1.vika.cn/space/2021/05/29/a304c026242a47e6aa120d01ef032bf6","token":"space/2021/05/29/a304c026242a47e6aa120d01ef032bf6","category_id":"places"},"bomb":{"native":"💣","name":"Bomb","url":"https://s1.vika.cn/space/2021/05/29/c52f37123eb34ae484629eff75731a5c","token":"space/2021/05/29/c52f37123eb34ae484629eff75731a5c","category_id":"people"},"bone":{"native":"🦴","name":"Bone","url":"https://s1.vika.cn/space/2021/05/29/d33afc570f9d445a82db99b97bd2bbe4","token":"space/2021/05/29/d33afc570f9d445a82db99b97bd2bbe4","category_id":"people"},"book":{"native":"📖","name":"Open Book","url":"https://s1.vika.cn/space/2021/05/29/5c588367b6a8477bbc1e37de58cafed5","token":"space/2021/05/29/5c588367b6a8477bbc1e37de58cafed5","category_id":"objects"},"bookmark":{"native":"🔖","name":"Bookmark","url":"https://s1.vika.cn/space/2021/05/29/0adac11dfb4249f8b7fe370ac44b8efb","token":"space/2021/05/29/0adac11dfb4249f8b7fe370ac44b8efb","category_id":"objects"},"bookmark_tabs":{"native":"📑","name":"Bookmark Tabs","url":"https://s1.vika.cn/space/2021/05/29/0de4c7e17fa14b119563620be9d9f1d8","token":"space/2021/05/29/0de4c7e17fa14b119563620be9d9f1d8","category_id":"objects"},"books":{"native":"📚","name":"Books","url":"https://s1.vika.cn/space/2021/05/29/89f6587ff38947a5851e56b16f1874bb","token":"space/2021/05/29/89f6587ff38947a5851e56b16f1874bb","category_id":"objects"},"boom":{"native":"💥","name":"Collision Symbol","url":"https://s1.vika.cn/space/2021/05/29/e01e427928aa424bb47da6dd004ecdaa","token":"space/2021/05/29/e01e427928aa424bb47da6dd004ecdaa","category_id":"people"},"boot":{"native":"👢","name":"Womans Boots","url":"https://s1.vika.cn/space/2021/05/29/ed516d8b1dce49df8cbd18ecc26fcb4a","token":"space/2021/05/29/ed516d8b1dce49df8cbd18ecc26fcb4a","category_id":"objects"},"bouquet":{"native":"💐","name":"Bouquet","url":"https://s1.vika.cn/space/2021/05/29/f7e7f0d6b3fc472e9a8b18d5c706b46e","token":"space/2021/05/29/f7e7f0d6b3fc472e9a8b18d5c706b46e","category_id":"nature"},"bow":{"native":"🙇","name":"Person Bowing Deeply","url":"https://s1.vika.cn/space/2021/05/29/bd26389ef4684c15b1dec157c578cf3c","token":"space/2021/05/29/bd26389ef4684c15b1dec157c578cf3c","category_id":"people"},"bow_and_arrow":{"native":"🏹","name":"Bow and Arrow","url":"https://s1.vika.cn/space/2021/05/29/f4bec1e95dae40eaa54a8841e9311ff8","token":"space/2021/05/29/f4bec1e95dae40eaa54a8841e9311ff8","category_id":"objects"},"bowl_with_spoon":{"native":"🥣","name":"Bowl with Spoon","url":"https://s1.vika.cn/space/2021/05/29/9aa770a10c99488d98122066e4dd05b4","token":"space/2021/05/29/9aa770a10c99488d98122066e4dd05b4","category_id":"foods"},"bowling":{"native":"🎳","name":"Bowling","url":"https://s1.vika.cn/space/2021/05/29/c0e280d4d3bc46d49ee1ae6b21210908","token":"space/2021/05/29/c0e280d4d3bc46d49ee1ae6b21210908","category_id":"activity"},"boxing_glove":{"native":"🥊","name":"Boxing Glove","url":"https://s1.vika.cn/space/2021/05/29/fe986acce8324dbaa6a6c0c0e7140065","token":"space/2021/05/29/fe986acce8324dbaa6a6c0c0e7140065","category_id":"activity"},"boy":{"native":"👦","name":"Boy","url":"https://s1.vika.cn/space/2021/05/29/5d2f46ebc791418ea41d89efb5d70357","token":"space/2021/05/29/5d2f46ebc791418ea41d89efb5d70357","category_id":"people"},"brain":{"native":"🧠","name":"Brain","url":"https://s1.vika.cn/space/2021/05/29/605062e7ea134dd181287ff33b49eb0d","token":"space/2021/05/29/605062e7ea134dd181287ff33b49eb0d","category_id":"people"},"bread":{"native":"🍞","name":"Bread","url":"https://s1.vika.cn/space/2021/05/29/17b6fe1bd2584806864a26a57f3fd601","token":"space/2021/05/29/17b6fe1bd2584806864a26a57f3fd601","category_id":"foods"},"breast-feeding":{"native":"🤱","name":"Breast-Feeding","url":"https://s1.vika.cn/space/2021/05/29/a201811e8c4c437b8ea9888e50187fdc","token":"space/2021/05/29/a201811e8c4c437b8ea9888e50187fdc","category_id":"people"},"bricks":{"native":"🧱","name":"Brick","url":"https://s1.vika.cn/space/2021/05/29/8c19785b3e8a40deb1088928408d2ea2","token":"space/2021/05/29/8c19785b3e8a40deb1088928408d2ea2","category_id":"places"},"bride_with_veil":{"native":"👰","name":"Bride with Veil","url":"https://s1.vika.cn/space/2021/05/29/2a734a31336d41b085e5c57cdd6b275b","token":"space/2021/05/29/2a734a31336d41b085e5c57cdd6b275b","category_id":"people"},"bridge_at_night":{"native":"🌉","name":"Bridge at Night","url":"https://s1.vika.cn/space/2021/05/29/666cb116713b4013a3704dad60c4097a","token":"space/2021/05/29/666cb116713b4013a3704dad60c4097a","category_id":"places"},"briefcase":{"native":"💼","name":"Briefcase","url":"https://s1.vika.cn/space/2021/05/29/755dc457b7824bfa902f88e4cb9c34ec","token":"space/2021/05/29/755dc457b7824bfa902f88e4cb9c34ec","category_id":"objects"},"briefs":{"native":"🩲","name":"Briefs","url":"https://s1.vika.cn/space/2021/05/29/d1822bf6b83c410b8e0a56392d2014a3","token":"space/2021/05/29/d1822bf6b83c410b8e0a56392d2014a3","category_id":"objects"},"broccoli":{"native":"🥦","name":"Broccoli","url":"https://s1.vika.cn/space/2021/05/29/abbc0d90b2014a15969cddf88514f3a9","token":"space/2021/05/29/abbc0d90b2014a15969cddf88514f3a9","category_id":"foods"},"broken_heart":{"native":"💔","name":"Broken Heart","url":"https://s1.vika.cn/space/2021/05/29/6cdeaca317f44f778e810135e0223dea","token":"space/2021/05/29/6cdeaca317f44f778e810135e0223dea","category_id":"people"},"broom":{"native":"🧹","name":"Broom","url":"https://s1.vika.cn/space/2021/05/29/5a64d3be2eeb475ab9827ebff30ead3b","token":"space/2021/05/29/5a64d3be2eeb475ab9827ebff30ead3b","category_id":"objects"},"brown_heart":{"native":"🤎","name":"Brown Heart","url":"https://s1.vika.cn/space/2021/05/29/49694947e0ed4e7b92889a43de66b2e0","token":"space/2021/05/29/49694947e0ed4e7b92889a43de66b2e0","category_id":"people"},"bug":{"native":"🐛","name":"Bug","url":"https://s1.vika.cn/space/2021/05/29/0898df19060f4ee68f37e9b3d1f1d1d3","token":"space/2021/05/29/0898df19060f4ee68f37e9b3d1f1d1d3","category_id":"nature"},"building_construction":{"native":"🏗️","name":"Building Construction","url":"https://s1.vika.cn/space/2021/05/29/29ea137fd7104dfcb1742f96ae30fa16","token":"space/2021/05/29/29ea137fd7104dfcb1742f96ae30fa16","category_id":"places"},"bulb":{"native":"💡","name":"Electric Light Bulb","url":"https://s1.vika.cn/space/2021/05/29/f99fb872f5d74f22b6441dd92b660cac","token":"space/2021/05/29/f99fb872f5d74f22b6441dd92b660cac","category_id":"objects"},"bullettrain_front":{"native":"🚅","name":"High-Speed Train with Bullet Nose","url":"https://s1.vika.cn/space/2021/05/29/928a19906adf42b5bbe2f34c870fc471","token":"space/2021/05/29/928a19906adf42b5bbe2f34c870fc471","category_id":"places"},"bullettrain_side":{"native":"🚄","name":"High-Speed Train","url":"https://s1.vika.cn/space/2021/05/29/b42a280fd73a47319bae716859f96b71","token":"space/2021/05/29/b42a280fd73a47319bae716859f96b71","category_id":"places"},"burrito":{"native":"🌯","name":"Burrito","url":"https://s1.vika.cn/space/2021/05/29/14a8373421454f5a8a1990e0f1462956","token":"space/2021/05/29/14a8373421454f5a8a1990e0f1462956","category_id":"foods"},"bus":{"native":"🚌","name":"Bus","url":"https://s1.vika.cn/space/2021/05/29/1f177021b55347a191374c359b5b8839","token":"space/2021/05/29/1f177021b55347a191374c359b5b8839","category_id":"places"},"busstop":{"native":"🚏","name":"Bus Stop","url":"https://s1.vika.cn/space/2021/05/29/8f256c44a541485699f3389417b0e28f","token":"space/2021/05/29/8f256c44a541485699f3389417b0e28f","category_id":"places"},"bust_in_silhouette":{"native":"👤","name":"Bust in Silhouette","url":"https://s1.vika.cn/space/2021/05/29/3cf2e2d78cc8476aaefd2d43f86bd13b","token":"space/2021/05/29/3cf2e2d78cc8476aaefd2d43f86bd13b","category_id":"people"},"busts_in_silhouette":{"native":"👥","name":"Busts in Silhouette","url":"https://s1.vika.cn/space/2021/05/29/7c8328d28dbf405c8ccc335ec2651740","token":"space/2021/05/29/7c8328d28dbf405c8ccc335ec2651740","category_id":"people"},"butter":{"native":"🧈","name":"Butter","url":"https://s1.vika.cn/space/2021/05/29/ca9b082b1d5e49e9ba2fcc81f6457c9f","token":"space/2021/05/29/ca9b082b1d5e49e9ba2fcc81f6457c9f","category_id":"foods"},"butterfly":{"native":"🦋","name":"Butterfly","url":"https://s1.vika.cn/space/2021/05/29/ec4a61a20219410a888fab068ff324b6","token":"space/2021/05/29/ec4a61a20219410a888fab068ff324b6","category_id":"nature"},"cactus":{"native":"🌵","name":"Cactus","url":"https://s1.vika.cn/space/2021/05/29/518da48b540643f2b9fd7725f1bb583f","token":"space/2021/05/29/518da48b540643f2b9fd7725f1bb583f","category_id":"nature"},"cake":{"native":"🍰","name":"Shortcake","url":"https://s1.vika.cn/space/2021/05/29/70151cf55e41445cb7a149612a7222e2","token":"space/2021/05/29/70151cf55e41445cb7a149612a7222e2","category_id":"foods"},"calendar":{"native":"📆","name":"Tear-off Calendar","url":"https://s1.vika.cn/space/2021/05/29/bdaa9b28c62c45319b367aa19000b773","token":"space/2021/05/29/bdaa9b28c62c45319b367aa19000b773","category_id":"objects"},"call_me_hand":{"native":"🤙","name":"Call Me Hand","url":"https://s1.vika.cn/space/2021/05/29/b7b5d036f11b473296ef2d93018b7999","token":"space/2021/05/29/b7b5d036f11b473296ef2d93018b7999","category_id":"people"},"calling":{"native":"📲","name":"Mobile Phone with Rightwards Arrow at Left","url":"https://s1.vika.cn/space/2021/05/29/787b105316dc4269816ac2aff36a1884","token":"space/2021/05/29/787b105316dc4269816ac2aff36a1884","category_id":"objects"},"camel":{"native":"🐫","name":"Bactrian Camel","url":"https://s1.vika.cn/space/2021/05/29/e2a775fadeb243a4b5e19c804218a156","token":"space/2021/05/29/e2a775fadeb243a4b5e19c804218a156","category_id":"nature"},"camera":{"native":"📷","name":"Camera","url":"https://s1.vika.cn/space/2021/05/29/e67a6dad2e2443d4b34f6db5a17d1435","token":"space/2021/05/29/e67a6dad2e2443d4b34f6db5a17d1435","category_id":"objects"},"camera_with_flash":{"native":"📸","name":"Camera with Flash","url":"https://s1.vika.cn/space/2021/05/29/9f9d728bbcac4f5a9745c26925a816f7","token":"space/2021/05/29/9f9d728bbcac4f5a9745c26925a816f7","category_id":"objects"},"camping":{"native":"🏕️","name":"Camping","url":"https://s1.vika.cn/space/2021/05/29/fd675d115fcd4c2e810d4408913fdd8d","token":"space/2021/05/29/fd675d115fcd4c2e810d4408913fdd8d","category_id":"places"},"cancer":{"native":"♋","name":"Cancer","url":"https://s1.vika.cn/space/2021/05/29/34a1ef9bca0d4b48afbf7169f4480ac7","token":"space/2021/05/29/34a1ef9bca0d4b48afbf7169f4480ac7","category_id":"symbols"},"candle":{"native":"🕯️","name":"Candle","url":"https://s1.vika.cn/space/2021/05/29/abc0dd22072941e188b41de791454f4f","token":"space/2021/05/29/abc0dd22072941e188b41de791454f4f","category_id":"objects"},"candy":{"native":"🍬","name":"Candy","url":"https://s1.vika.cn/space/2021/05/29/60fb057554ba4e5faf8ebaea4d37d224","token":"space/2021/05/29/60fb057554ba4e5faf8ebaea4d37d224","category_id":"foods"},"canned_food":{"native":"🥫","name":"Canned Food","url":"https://s1.vika.cn/space/2021/05/29/84960810da26473eaf019259d97a0008","token":"space/2021/05/29/84960810da26473eaf019259d97a0008","category_id":"foods"},"canoe":{"native":"🛶","name":"Canoe","url":"https://s1.vika.cn/space/2021/05/29/a9932c4ac7944f5294b0b2043c78200d","token":"space/2021/05/29/a9932c4ac7944f5294b0b2043c78200d","category_id":"places"},"capital_abcd":{"native":"🔠","name":"Input Symbol for Latin Capital Letters","url":"https://s1.vika.cn/space/2021/05/29/7eaaf2664efe4440b97b8f30eb434dc8","token":"space/2021/05/29/7eaaf2664efe4440b97b8f30eb434dc8","category_id":"symbols"},"capricorn":{"native":"♑","name":"Capricorn","url":"https://s1.vika.cn/space/2021/05/29/4bc3e38e549b421e81d81f7e6c0479a2","token":"space/2021/05/29/4bc3e38e549b421e81d81f7e6c0479a2","category_id":"symbols"},"car":{"native":"🚗","name":"Automobile","url":"https://s1.vika.cn/space/2021/05/29/11165061a0f64c0c8da8221414ac14fd","token":"space/2021/05/29/11165061a0f64c0c8da8221414ac14fd","category_id":"places"},"card_file_box":{"native":"🗃️","name":"Card File Box","url":"https://s1.vika.cn/space/2021/05/29/2d7bfe026107459dbb8c11f83c2b3f6f","token":"space/2021/05/29/2d7bfe026107459dbb8c11f83c2b3f6f","category_id":"objects"},"card_index":{"native":"📇","name":"Card Index","url":"https://s1.vika.cn/space/2021/05/29/48a38b5bc0164cceb54ae6c9bcb6a6a6","token":"space/2021/05/29/48a38b5bc0164cceb54ae6c9bcb6a6a6","category_id":"objects"},"card_index_dividers":{"native":"🗂️","name":"Card Index Dividers","url":"https://s1.vika.cn/space/2021/05/29/c6358e66c0e5429d8bb94c6d54a06c57","token":"space/2021/05/29/c6358e66c0e5429d8bb94c6d54a06c57","category_id":"objects"},"carousel_horse":{"native":"🎠","name":"Carousel Horse","url":"https://s1.vika.cn/space/2021/05/29/4c95c34dd25c40918befc55ea2c661ac","token":"space/2021/05/29/4c95c34dd25c40918befc55ea2c661ac","category_id":"places"},"carrot":{"native":"🥕","name":"Carrot","url":"https://s1.vika.cn/space/2021/05/29/d8b5bc9f70eb4c23b22cebd617ebdc15","token":"space/2021/05/29/d8b5bc9f70eb4c23b22cebd617ebdc15","category_id":"foods"},"cat":{"native":"🐱","name":"Cat Face","url":"https://s1.vika.cn/space/2021/05/29/ec237357363f48278e9e7f157c4313aa","token":"space/2021/05/29/ec237357363f48278e9e7f157c4313aa","category_id":"nature"},"cat2":{"native":"🐈","name":"Cat","url":"https://s1.vika.cn/space/2021/05/29/53380a831ff64541ad5b048d4bda7061","token":"space/2021/05/29/53380a831ff64541ad5b048d4bda7061","category_id":"nature"},"cd":{"native":"💿","name":"Optical Disc","url":"https://s1.vika.cn/space/2021/05/29/010a80603c444895b9792bce77f2c467","token":"space/2021/05/29/010a80603c444895b9792bce77f2c467","category_id":"objects"},"chains":{"native":"⛓️","name":"Chains","url":"https://s1.vika.cn/space/2021/05/29/39923a030d324c51ab53b98a38e5662e","token":"space/2021/05/29/39923a030d324c51ab53b98a38e5662e","category_id":"objects"},"chair":{"native":"🪑","name":"Chair","url":"https://s1.vika.cn/space/2021/05/29/d2345957ba1d4700ae7fe646465ed730","token":"space/2021/05/29/d2345957ba1d4700ae7fe646465ed730","category_id":"objects"},"champagne":{"native":"🍾","name":"Bottle with Popping Cork","url":"https://s1.vika.cn/space/2021/05/29/69acdd26be9f4255ba72e4f3b9466bb4","token":"space/2021/05/29/69acdd26be9f4255ba72e4f3b9466bb4","category_id":"foods"},"chart":{"native":"💹","name":"Chart with Upwards Trend and Yen Sign","url":"https://s1.vika.cn/space/2021/05/29/99c4686e6354415d93db172e9d5cb853","token":"space/2021/05/29/99c4686e6354415d93db172e9d5cb853","category_id":"objects"},"chart_with_downwards_trend":{"native":"📉","name":"Chart with Downwards Trend","url":"https://s1.vika.cn/space/2021/05/29/1c79e7631d344ed59d3a27227f23ba53","token":"space/2021/05/29/1c79e7631d344ed59d3a27227f23ba53","category_id":"objects"},"chart_with_upwards_trend":{"native":"📈","name":"Chart with Upwards Trend","url":"https://s1.vika.cn/space/2021/05/29/1c1b1626f4da447fa0a2719e66a23115","token":"space/2021/05/29/1c1b1626f4da447fa0a2719e66a23115","category_id":"objects"},"checkered_flag":{"native":"🏁","name":"Chequered Flag","url":"https://s1.vika.cn/space/2021/05/29/2663105e5088495abbd12e9ec79c8162","token":"space/2021/05/29/2663105e5088495abbd12e9ec79c8162","category_id":"flags"},"cheese_wedge":{"native":"🧀","name":"Cheese Wedge","url":"https://s1.vika.cn/space/2021/05/29/43714efda2e24ab688f248e4daff6fdb","token":"space/2021/05/29/43714efda2e24ab688f248e4daff6fdb","category_id":"foods"},"cherries":{"native":"🍒","name":"Cherries","url":"https://s1.vika.cn/space/2021/05/29/72f4bdbe927c4173be51b189f9fc7a5e","token":"space/2021/05/29/72f4bdbe927c4173be51b189f9fc7a5e","category_id":"foods"},"cherry_blossom":{"native":"🌸","name":"Cherry Blossom","url":"https://s1.vika.cn/space/2021/05/29/33989d71ce4544ec826b41dc2e0b63ea","token":"space/2021/05/29/33989d71ce4544ec826b41dc2e0b63ea","category_id":"nature"},"chess_pawn":{"native":"♟️","name":"Chess Pawn","url":"https://s1.vika.cn/space/2021/05/29/0dda6002fddb4a0f9fc7895d6229625a","token":"space/2021/05/29/0dda6002fddb4a0f9fc7895d6229625a","category_id":"activity"},"chestnut":{"native":"🌰","name":"Chestnut","url":"https://s1.vika.cn/space/2021/05/29/2ba844e2beec41149e23b7d6f3b8df1a","token":"space/2021/05/29/2ba844e2beec41149e23b7d6f3b8df1a","category_id":"foods"},"chicken":{"native":"🐔","name":"Chicken","url":"https://s1.vika.cn/space/2021/05/29/aae7193158684dda88b6cabc7013ea5b","token":"space/2021/05/29/aae7193158684dda88b6cabc7013ea5b","category_id":"nature"},"child":{"native":"🧒","name":"Child","url":"https://s1.vika.cn/space/2021/05/29/87082b43b6eb41f9b3a2bafcbd76f839","token":"space/2021/05/29/87082b43b6eb41f9b3a2bafcbd76f839","category_id":"people"},"children_crossing":{"native":"🚸","name":"Children Crossing","url":"https://s1.vika.cn/space/2021/05/29/53827d381185416a8cd7784d22f8ab6c","token":"space/2021/05/29/53827d381185416a8cd7784d22f8ab6c","category_id":"symbols"},"chipmunk":{"native":"🐿️","name":"Chipmunk","url":"https://s1.vika.cn/space/2021/05/29/91485487d5584bb2a0ad721aa4edfe9c","token":"space/2021/05/29/91485487d5584bb2a0ad721aa4edfe9c","category_id":"nature"},"chocolate_bar":{"native":"🍫","name":"Chocolate Bar","url":"https://s1.vika.cn/space/2021/05/29/c77b56608a3148bea2d75f24d9605083","token":"space/2021/05/29/c77b56608a3148bea2d75f24d9605083","category_id":"foods"},"chopsticks":{"native":"🥢","name":"Chopsticks","url":"https://s1.vika.cn/space/2021/05/29/b8603dc460e5427bb06b974f0eba9214","token":"space/2021/05/29/b8603dc460e5427bb06b974f0eba9214","category_id":"foods"},"christmas_tree":{"native":"🎄","name":"Christmas Tree","url":"https://s1.vika.cn/space/2021/05/29/a9fd86a00f6a4b9f8f4d00d99cdbc5e1","token":"space/2021/05/29/a9fd86a00f6a4b9f8f4d00d99cdbc5e1","category_id":"activity"},"church":{"native":"⛪","name":"Church","url":"https://s1.vika.cn/space/2021/05/29/0e872e89696a4d42abde6bcdda0033ac","token":"space/2021/05/29/0e872e89696a4d42abde6bcdda0033ac","category_id":"places"},"cinema":{"native":"🎦","name":"Cinema","url":"https://s1.vika.cn/space/2021/05/29/20a03887a57544d9a0a8f313f4790337","token":"space/2021/05/29/20a03887a57544d9a0a8f313f4790337","category_id":"symbols"},"circus_tent":{"native":"🎪","name":"Circus Tent","url":"https://s1.vika.cn/space/2021/05/29/7970f16326e946a784ce25e43f9225b1","token":"space/2021/05/29/7970f16326e946a784ce25e43f9225b1","category_id":"places"},"city_sunrise":{"native":"🌇","name":"Sunset over Buildings","url":"https://s1.vika.cn/space/2021/05/29/f83c9bfacf1c46f8bb5b8c29ff2f2e01","token":"space/2021/05/29/f83c9bfacf1c46f8bb5b8c29ff2f2e01","category_id":"places"},"city_sunset":{"native":"🌆","name":"Cityscape at Dusk","url":"https://s1.vika.cn/space/2021/05/29/1735a89014044757bcaf8849373c119e","token":"space/2021/05/29/1735a89014044757bcaf8849373c119e","category_id":"places"},"cityscape":{"native":"🏙️","name":"Cityscape","url":"https://s1.vika.cn/space/2021/05/29/2cbf7ea01e3049c1a137e17264571311","token":"space/2021/05/29/2cbf7ea01e3049c1a137e17264571311","category_id":"places"},"cl":{"native":"🆑","name":"Squared Cl","url":"https://s1.vika.cn/space/2021/05/29/54c2a6b5516f4b8caf9dc6591af33a4f","token":"space/2021/05/29/54c2a6b5516f4b8caf9dc6591af33a4f","category_id":"symbols"},"clap":{"native":"👏","name":"Clapping Hands Sign","url":"https://s1.vika.cn/space/2021/05/29/3e88d1b43eb84ed1b1db833cbaf862ce","token":"space/2021/05/29/3e88d1b43eb84ed1b1db833cbaf862ce","category_id":"people"},"clapper":{"native":"🎬","name":"Clapper Board","url":"https://s1.vika.cn/space/2021/05/29/527fcc02e13443488685b29b811f929a","token":"space/2021/05/29/527fcc02e13443488685b29b811f929a","category_id":"objects"},"classical_building":{"native":"🏛️","name":"Classical Building","url":"https://s1.vika.cn/space/2021/05/29/5c42327988f4491ab98b5d683fd84f2d","token":"space/2021/05/29/5c42327988f4491ab98b5d683fd84f2d","category_id":"places"},"clinking_glasses":{"native":"🥂","name":"Clinking Glasses","url":"https://s1.vika.cn/space/2021/05/29/d33d8961502c49d58480eaba24ad0ebd","token":"space/2021/05/29/d33d8961502c49d58480eaba24ad0ebd","category_id":"foods"},"clipboard":{"native":"📋","name":"Clipboard","url":"https://s1.vika.cn/space/2021/05/29/32eed19ebfe34987af9a6e58ed4097d5","token":"space/2021/05/29/32eed19ebfe34987af9a6e58ed4097d5","category_id":"objects"},"clock1":{"native":"🕐","name":"Clock Face One Oclock","url":"https://s1.vika.cn/space/2021/05/29/37a40e81a1f542b6ab526e24075c188a","token":"space/2021/05/29/37a40e81a1f542b6ab526e24075c188a","category_id":"places"},"clock10":{"native":"🕙","name":"Clock Face Ten Oclock","url":"https://s1.vika.cn/space/2021/05/29/75aa506590e445bfafa5ab6672cd6c2a","token":"space/2021/05/29/75aa506590e445bfafa5ab6672cd6c2a","category_id":"places"},"clock1030":{"native":"🕥","name":"Clock Face Ten-Thirty","url":"https://s1.vika.cn/space/2021/05/29/ca59c4a567014143a1bfe2748ba00d82","token":"space/2021/05/29/ca59c4a567014143a1bfe2748ba00d82","category_id":"places"},"clock11":{"native":"🕚","name":"Clock Face Eleven Oclock","url":"https://s1.vika.cn/space/2021/05/29/b45c7562420f4508ad6fac7580bdc202","token":"space/2021/05/29/b45c7562420f4508ad6fac7580bdc202","category_id":"places"},"clock1130":{"native":"🕦","name":"Clock Face Eleven-Thirty","url":"https://s1.vika.cn/space/2021/05/29/7065f334d54548e5a064ea622274fd5c","token":"space/2021/05/29/7065f334d54548e5a064ea622274fd5c","category_id":"places"},"clock12":{"native":"🕛","name":"Clock Face Twelve Oclock","url":"https://s1.vika.cn/space/2021/05/29/1ac3386acd7b499fb99b148ea1810fa8","token":"space/2021/05/29/1ac3386acd7b499fb99b148ea1810fa8","category_id":"places"},"clock1230":{"native":"🕧","name":"Clock Face Twelve-Thirty","url":"https://s1.vika.cn/space/2021/05/29/9ecbeaa733a14c9ba9f740dfd53a13c2","token":"space/2021/05/29/9ecbeaa733a14c9ba9f740dfd53a13c2","category_id":"places"},"clock130":{"native":"🕜","name":"Clock Face One-Thirty","url":"https://s1.vika.cn/space/2021/05/29/7adf42a72a0b41f48aad0fdb16d8a890","token":"space/2021/05/29/7adf42a72a0b41f48aad0fdb16d8a890","category_id":"places"},"clock2":{"native":"🕑","name":"Clock Face Two Oclock","url":"https://s1.vika.cn/space/2021/05/29/d819c2d046e7424cbc87cdd1ccc5a7a0","token":"space/2021/05/29/d819c2d046e7424cbc87cdd1ccc5a7a0","category_id":"places"},"clock230":{"native":"🕝","name":"Clock Face Two-Thirty","url":"https://s1.vika.cn/space/2021/05/29/263d570695fc4c59883cae6da862eabe","token":"space/2021/05/29/263d570695fc4c59883cae6da862eabe","category_id":"places"},"clock3":{"native":"🕒","name":"Clock Face Three Oclock","url":"https://s1.vika.cn/space/2021/05/29/20ad34facf8c4b048d5c8879313e57c7","token":"space/2021/05/29/20ad34facf8c4b048d5c8879313e57c7","category_id":"places"},"clock330":{"native":"🕞","name":"Clock Face Three-Thirty","url":"https://s1.vika.cn/space/2021/05/29/271acc28809845929402764efb16e4b5","token":"space/2021/05/29/271acc28809845929402764efb16e4b5","category_id":"places"},"clock4":{"native":"🕓","name":"Clock Face Four Oclock","url":"https://s1.vika.cn/space/2021/05/29/75ab6bf4a1674437ab825761e277476a","token":"space/2021/05/29/75ab6bf4a1674437ab825761e277476a","category_id":"places"},"clock430":{"native":"🕟","name":"Clock Face Four-Thirty","url":"https://s1.vika.cn/space/2021/05/29/b0ec340519bc4faeadb5438b1f41040e","token":"space/2021/05/29/b0ec340519bc4faeadb5438b1f41040e","category_id":"places"},"clock5":{"native":"🕔","name":"Clock Face Five Oclock","url":"https://s1.vika.cn/space/2021/05/29/bce711fb297e4274a2c963a31eef2a98","token":"space/2021/05/29/bce711fb297e4274a2c963a31eef2a98","category_id":"places"},"clock530":{"native":"🕠","name":"Clock Face Five-Thirty","url":"https://s1.vika.cn/space/2021/05/29/629945927a0946c48cfe60f94ee56250","token":"space/2021/05/29/629945927a0946c48cfe60f94ee56250","category_id":"places"},"clock6":{"native":"🕕","name":"Clock Face Six Oclock","url":"https://s1.vika.cn/space/2021/05/29/f0cd0321ffe3453d887ed6b1c82279ad","token":"space/2021/05/29/f0cd0321ffe3453d887ed6b1c82279ad","category_id":"places"},"clock630":{"native":"🕡","name":"Clock Face Six-Thirty","url":"https://s1.vika.cn/space/2021/05/29/d3edb15580d84e5797aacf52aa9a8aaa","token":"space/2021/05/29/d3edb15580d84e5797aacf52aa9a8aaa","category_id":"places"},"clock7":{"native":"🕖","name":"Clock Face Seven Oclock","url":"https://s1.vika.cn/space/2021/05/29/edf6c795af2b4efab59f3beda7affeec","token":"space/2021/05/29/edf6c795af2b4efab59f3beda7affeec","category_id":"places"},"clock730":{"native":"🕢","name":"Clock Face Seven-Thirty","url":"https://s1.vika.cn/space/2021/05/29/8615b0d73588415c885c628ddfa2d854","token":"space/2021/05/29/8615b0d73588415c885c628ddfa2d854","category_id":"places"},"clock8":{"native":"🕗","name":"Clock Face Eight Oclock","url":"https://s1.vika.cn/space/2021/05/29/5b9baf7297cc498f9830c7f684f37572","token":"space/2021/05/29/5b9baf7297cc498f9830c7f684f37572","category_id":"places"},"clock830":{"native":"🕣","name":"Clock Face Eight-Thirty","url":"https://s1.vika.cn/space/2021/05/29/14a27134a074474aa5db262950c79739","token":"space/2021/05/29/14a27134a074474aa5db262950c79739","category_id":"places"},"clock9":{"native":"🕘","name":"Clock Face Nine Oclock","url":"https://s1.vika.cn/space/2021/05/29/31fe982babd645c7a27d4277f535f6fc","token":"space/2021/05/29/31fe982babd645c7a27d4277f535f6fc","category_id":"places"},"clock930":{"native":"🕤","name":"Clock Face Nine-Thirty","url":"https://s1.vika.cn/space/2021/05/29/1212fe48f311442aa259cf827af0dfa4","token":"space/2021/05/29/1212fe48f311442aa259cf827af0dfa4","category_id":"places"},"closed_book":{"native":"📕","name":"Closed Book","url":"https://s1.vika.cn/space/2021/05/29/b0c778a6b7254da6a1630fc140760f33","token":"space/2021/05/29/b0c778a6b7254da6a1630fc140760f33","category_id":"objects"},"closed_lock_with_key":{"native":"🔐","name":"Closed Lock with Key","url":"https://s1.vika.cn/space/2021/05/29/e058271a2054499db4ab8afac80e4f87","token":"space/2021/05/29/e058271a2054499db4ab8afac80e4f87","category_id":"objects"},"closed_umbrella":{"native":"🌂","name":"Closed Umbrella","url":"https://s1.vika.cn/space/2021/05/29/944dbd276ef5425082995d4dcd245661","token":"space/2021/05/29/944dbd276ef5425082995d4dcd245661","category_id":"places"},"cloud":{"native":"☁️","name":"Cloud","url":"https://s1.vika.cn/space/2021/05/29/f46f2f1549994bd3983db18bd2fae0e3","token":"space/2021/05/29/f46f2f1549994bd3983db18bd2fae0e3","category_id":"places"},"clown_face":{"native":"🤡","name":"Clown Face","url":"https://s1.vika.cn/space/2021/05/29/006c177f4f104b19aad53791a043bee5","token":"space/2021/05/29/006c177f4f104b19aad53791a043bee5","category_id":"people"},"clubs":{"native":"♣️","name":"Black Club Suit","url":"https://s1.vika.cn/space/2021/05/29/1072e374448349769b5a8e883209639a","token":"space/2021/05/29/1072e374448349769b5a8e883209639a","category_id":"activity"},"cn":{"native":"🇨🇳","name":"China Flag","url":"https://s1.vika.cn/space/2021/05/29/0ceef631fd90496a94c185b5e723e615","token":"space/2021/05/29/0ceef631fd90496a94c185b5e723e615","category_id":"flags"},"coat":{"native":"🧥","name":"Coat","url":"https://s1.vika.cn/space/2021/05/29/b5503cfdb6da44989c9c910b522ddb18","token":"space/2021/05/29/b5503cfdb6da44989c9c910b522ddb18","category_id":"objects"},"cocktail":{"native":"🍸","name":"Cocktail Glass","url":"https://s1.vika.cn/space/2021/05/29/b1a7ffa3edb34093b0a6a6fc6535978b","token":"space/2021/05/29/b1a7ffa3edb34093b0a6a6fc6535978b","category_id":"foods"},"coconut":{"native":"🥥","name":"Coconut","url":"https://s1.vika.cn/space/2021/05/29/dfb209d366544e77bc2b84c8b3f5c19a","token":"space/2021/05/29/dfb209d366544e77bc2b84c8b3f5c19a","category_id":"foods"},"coffee":{"native":"☕","name":"Hot Beverage","url":"https://s1.vika.cn/space/2021/05/29/2e85a86f7ec74ef0bcfbaa25e5b07279","token":"space/2021/05/29/2e85a86f7ec74ef0bcfbaa25e5b07279","category_id":"foods"},"coffin":{"native":"⚰️","name":"Coffin","url":"https://s1.vika.cn/space/2021/05/29/01fd250a369b4c6da148c03c8af100ee","token":"space/2021/05/29/01fd250a369b4c6da148c03c8af100ee","category_id":"objects"},"cold_face":{"native":"🥶","name":"Freezing Face","url":"https://s1.vika.cn/space/2021/05/29/d3c3ad4b97394288b556660174e8469a","token":"space/2021/05/29/d3c3ad4b97394288b556660174e8469a","category_id":"people"},"cold_sweat":{"native":"😰","name":"Face with Open Mouth and Cold Sweat","url":"https://s1.vika.cn/space/2021/05/29/f77ee6968a4c41ecb9cdf074125a4eed","token":"space/2021/05/29/f77ee6968a4c41ecb9cdf074125a4eed","category_id":"people"},"comet":{"native":"☄️","name":"Comet","url":"https://s1.vika.cn/space/2021/05/29/917125d31e514a86a8ce8bce17020625","token":"space/2021/05/29/917125d31e514a86a8ce8bce17020625","category_id":"places"},"compass":{"native":"🧭","name":"Compass","url":"https://s1.vika.cn/space/2021/05/29/1dbafb69ce094876887850b69f31c4f5","token":"space/2021/05/29/1dbafb69ce094876887850b69f31c4f5","category_id":"places"},"compression":{"native":"🗜️","name":"Compression","url":"https://s1.vika.cn/space/2021/05/29/79ac2e80b85f4662949a116dc45125e0","token":"space/2021/05/29/79ac2e80b85f4662949a116dc45125e0","category_id":"objects"},"computer":{"native":"💻","name":"Personal Computer","url":"https://s1.vika.cn/space/2021/05/29/43b2fccf779d40a6b4d6950c8c10b6fc","token":"space/2021/05/29/43b2fccf779d40a6b4d6950c8c10b6fc","category_id":"objects"},"confetti_ball":{"native":"🎊","name":"Confetti Ball","url":"https://s1.vika.cn/space/2021/05/29/87c1e232337e4abcbc42f8125a5a3905","token":"space/2021/05/29/87c1e232337e4abcbc42f8125a5a3905","category_id":"activity"},"confounded":{"native":"😖","name":"Confounded Face","url":"https://s1.vika.cn/space/2021/05/29/816dfd7ecbdd453a8cb978f8d7754977","token":"space/2021/05/29/816dfd7ecbdd453a8cb978f8d7754977","category_id":"people"},"confused":{"native":"😕","name":"Confused Face","url":"https://s1.vika.cn/space/2021/05/29/c80f904c3bdf406ba823dd5252f82bbf","token":"space/2021/05/29/c80f904c3bdf406ba823dd5252f82bbf","category_id":"people"},"congratulations":{"native":"㊗️","name":"Circled Ideograph Congratulation","url":"https://s1.vika.cn/space/2021/05/29/ef3c6badb39447e180b8cc940a1e3ce7","token":"space/2021/05/29/ef3c6badb39447e180b8cc940a1e3ce7","category_id":"symbols"},"construction":{"native":"🚧","name":"Construction Sign","url":"https://s1.vika.cn/space/2021/05/29/ec5be71cdd2b4a498ccabf451e7a1550","token":"space/2021/05/29/ec5be71cdd2b4a498ccabf451e7a1550","category_id":"places"},"construction_worker":{"native":"👷","name":"Construction Worker","url":"https://s1.vika.cn/space/2021/05/29/a7473750301c4833aaaf891369ce7f3b","token":"space/2021/05/29/a7473750301c4833aaaf891369ce7f3b","category_id":"people"},"control_knobs":{"native":"🎛️","name":"Control Knobs","url":"https://s1.vika.cn/space/2021/05/29/3c50c03a3bb54a7f95bccfc9f5d8ecdd","token":"space/2021/05/29/3c50c03a3bb54a7f95bccfc9f5d8ecdd","category_id":"objects"},"convenience_store":{"native":"🏪","name":"Convenience Store","url":"https://s1.vika.cn/space/2021/05/29/9560a339505d4b95a6725c261feb2f77","token":"space/2021/05/29/9560a339505d4b95a6725c261feb2f77","category_id":"places"},"cook":{"native":"🧑‍🍳","name":"Cook","url":"https://s1.vika.cn/space/2021/05/29/cbb4a4ef803c485db2c2d34ab2308659","token":"space/2021/05/29/cbb4a4ef803c485db2c2d34ab2308659","category_id":"people"},"cookie":{"native":"🍪","name":"Cookie","url":"https://s1.vika.cn/space/2021/05/29/9e2990c14cd44bcf992785997064d0a2","token":"space/2021/05/29/9e2990c14cd44bcf992785997064d0a2","category_id":"foods"},"cool":{"native":"🆒","name":"Squared Cool","url":"https://s1.vika.cn/space/2021/05/29/2a3fe8ff94fe44c28b0fd6db6d1c7149","token":"space/2021/05/29/2a3fe8ff94fe44c28b0fd6db6d1c7149","category_id":"symbols"},"cop":{"native":"👮","name":"Police Officer","url":"https://s1.vika.cn/space/2021/05/29/20656204fa0a439388488dd33bae32dc","token":"space/2021/05/29/20656204fa0a439388488dd33bae32dc","category_id":"people"},"copyright":{"native":"©️","name":"Copyright Sign","url":"https://s1.vika.cn/space/2021/05/29/8a73897c26e944909192f8cad6d12242","token":"space/2021/05/29/8a73897c26e944909192f8cad6d12242","category_id":"symbols"},"corn":{"native":"🌽","name":"Ear of Maize","url":"https://s1.vika.cn/space/2021/05/29/ada42c27c7cb41edbbec10713293a76b","token":"space/2021/05/29/ada42c27c7cb41edbbec10713293a76b","category_id":"foods"},"couch_and_lamp":{"native":"🛋️","name":"Couch and Lamp","url":"https://s1.vika.cn/space/2021/05/29/59655cbb0eb0461881b47cabbdcba6ba","token":"space/2021/05/29/59655cbb0eb0461881b47cabbdcba6ba","category_id":"objects"},"couple":{"native":"👫","name":"Man and Woman Holding Hands","url":"https://s1.vika.cn/space/2021/05/29/e3a66bbea0a94f0aa239f93ccb18290b","token":"space/2021/05/29/e3a66bbea0a94f0aa239f93ccb18290b","category_id":"people"},"couple_with_heart":{"native":"💑","name":"Couple with Heart","url":"https://s1.vika.cn/space/2021/05/29/a72d70c614ac44699312aae83bd29926","token":"space/2021/05/29/a72d70c614ac44699312aae83bd29926","category_id":"people"},"couplekiss":{"native":"💏","name":"Kiss","url":"https://s1.vika.cn/space/2021/05/29/a5dc244caabd4d36a9d45a968bc4ad30","token":"space/2021/05/29/a5dc244caabd4d36a9d45a968bc4ad30","category_id":"people"},"cow":{"native":"🐮","name":"Cow Face","url":"https://s1.vika.cn/space/2021/05/29/0633a3e481004825be873812b191aeb0","token":"space/2021/05/29/0633a3e481004825be873812b191aeb0","category_id":"nature"},"cow2":{"native":"🐄","name":"Cow","url":"https://s1.vika.cn/space/2021/05/29/4e2f5ee8b7a643a484412657433a810a","token":"space/2021/05/29/4e2f5ee8b7a643a484412657433a810a","category_id":"nature"},"crab":{"native":"🦀","name":"Crab","url":"https://s1.vika.cn/space/2021/05/29/d16228b4e4ec4c51a20d50fe73d21087","token":"space/2021/05/29/d16228b4e4ec4c51a20d50fe73d21087","category_id":"foods"},"credit_card":{"native":"💳","name":"Credit Card","url":"https://s1.vika.cn/space/2021/05/29/c605cb1eeb114159b4f38a8fb5b5db43","token":"space/2021/05/29/c605cb1eeb114159b4f38a8fb5b5db43","category_id":"objects"},"crescent_moon":{"native":"🌙","name":"Crescent Moon","url":"https://s1.vika.cn/space/2021/05/29/da2f80da897f4b2e99a7770b25164d07","token":"space/2021/05/29/da2f80da897f4b2e99a7770b25164d07","category_id":"places"},"cricket":{"native":"🦗","name":"Cricket","url":"https://s1.vika.cn/space/2021/05/29/e5e7f16e0fc640cab320278468e4020f","token":"space/2021/05/29/e5e7f16e0fc640cab320278468e4020f","category_id":"nature"},"cricket_bat_and_ball":{"native":"🏏","name":"Cricket Bat and Ball","url":"https://s1.vika.cn/space/2021/05/29/c85fe89fe24c4fffa59b40549ea696e7","token":"space/2021/05/29/c85fe89fe24c4fffa59b40549ea696e7","category_id":"activity"},"crocodile":{"native":"🐊","name":"Crocodile","url":"https://s1.vika.cn/space/2021/05/29/3f6ca7d417ad454ca9a54226b437a8fc","token":"space/2021/05/29/3f6ca7d417ad454ca9a54226b437a8fc","category_id":"nature"},"croissant":{"native":"🥐","name":"Croissant","url":"https://s1.vika.cn/space/2021/05/29/422c31dc54d449eaa34dbda4e6fcf065","token":"space/2021/05/29/422c31dc54d449eaa34dbda4e6fcf065","category_id":"foods"},"crossed_fingers":{"native":"🤞","name":"Hand with Index and Middle Fingers Crossed","url":"https://s1.vika.cn/space/2021/05/29/219fdf8cf82346c3a3746a75ffa121bc","token":"space/2021/05/29/219fdf8cf82346c3a3746a75ffa121bc","category_id":"people"},"crossed_flags":{"native":"🎌","name":"Crossed Flags","url":"https://s1.vika.cn/space/2021/05/29/77da5d32f31c48618023faf9c5866d33","token":"space/2021/05/29/77da5d32f31c48618023faf9c5866d33","category_id":"flags"},"crossed_swords":{"native":"⚔️","name":"Crossed Swords","url":"https://s1.vika.cn/space/2021/05/29/1187550365d94a7186af5504bba048e9","token":"space/2021/05/29/1187550365d94a7186af5504bba048e9","category_id":"objects"},"crown":{"native":"👑","name":"Crown","url":"https://s1.vika.cn/space/2021/05/29/961df5601d4249e7988011deb1c26dcf","token":"space/2021/05/29/961df5601d4249e7988011deb1c26dcf","category_id":"objects"},"cry":{"native":"😢","name":"Crying Face","url":"https://s1.vika.cn/space/2021/05/29/880729de64794805aa2380c67baf2dce","token":"space/2021/05/29/880729de64794805aa2380c67baf2dce","category_id":"people"},"crying_cat_face":{"native":"😿","name":"Crying Cat Face","url":"https://s1.vika.cn/space/2021/05/29/fb72f48f8ba54c5fbfd1a60018d80ff2","token":"space/2021/05/29/fb72f48f8ba54c5fbfd1a60018d80ff2","category_id":"people"},"crystal_ball":{"native":"🔮","name":"Crystal Ball","url":"https://s1.vika.cn/space/2021/05/29/6c451a0791414c26ad5a389bb592802d","token":"space/2021/05/29/6c451a0791414c26ad5a389bb592802d","category_id":"activity"},"cucumber":{"native":"🥒","name":"Cucumber","url":"https://s1.vika.cn/space/2021/05/29/5173e6d8225b4502b565b10dd6d3eacb","token":"space/2021/05/29/5173e6d8225b4502b565b10dd6d3eacb","category_id":"foods"},"cup_with_straw":{"native":"🥤","name":"Cup with Straw","url":"https://s1.vika.cn/space/2021/05/29/1c065b97c7c74c7496a13948237263ad","token":"space/2021/05/29/1c065b97c7c74c7496a13948237263ad","category_id":"foods"},"cupcake":{"native":"🧁","name":"Cupcake","url":"https://s1.vika.cn/space/2021/05/29/67b0e7bb87704b6daedff137164cbd96","token":"space/2021/05/29/67b0e7bb87704b6daedff137164cbd96","category_id":"foods"},"cupid":{"native":"💘","name":"Heart with Arrow","url":"https://s1.vika.cn/space/2021/05/29/01dbb71477954eb087d6202a50b03563","token":"space/2021/05/29/01dbb71477954eb087d6202a50b03563","category_id":"people"},"curling_stone":{"native":"🥌","name":"Curling Stone","url":"https://s1.vika.cn/space/2021/05/29/d1c0402f452a462c95f7e17762898f39","token":"space/2021/05/29/d1c0402f452a462c95f7e17762898f39","category_id":"activity"},"curly_haired_man":{"native":"👨‍🦱","name":"Curly Haired Man","url":"https://s1.vika.cn/space/2021/05/29/c763c5e1d4014760baf902121d1e4854","token":"space/2021/05/29/c763c5e1d4014760baf902121d1e4854","category_id":"people"},"curly_haired_person":{"native":"🧑‍🦱","name":"Curly Haired Person","url":"https://s1.vika.cn/space/2021/05/29/63a351decf2f41a6acfbf8bc8a832e4c","token":"space/2021/05/29/63a351decf2f41a6acfbf8bc8a832e4c","category_id":"people"},"curly_haired_woman":{"native":"👩‍🦱","name":"Curly Haired Woman","url":"https://s1.vika.cn/space/2021/05/29/2806e5f395c64a4aadf0f830b229004b","token":"space/2021/05/29/2806e5f395c64a4aadf0f830b229004b","category_id":"people"},"curly_loop":{"native":"➰","name":"Curly Loop","url":"https://s1.vika.cn/space/2021/05/29/3a4fb5416a5445d987a593203e8ca70a","token":"space/2021/05/29/3a4fb5416a5445d987a593203e8ca70a","category_id":"symbols"},"currency_exchange":{"native":"💱","name":"Currency Exchange","url":"https://s1.vika.cn/space/2021/05/29/faa56c2f67d44418828ea7161083f474","token":"space/2021/05/29/faa56c2f67d44418828ea7161083f474","category_id":"objects"},"curry":{"native":"🍛","name":"Curry and Rice","url":"https://s1.vika.cn/space/2021/05/29/69fb4251bfa4477190edd9f161608e46","token":"space/2021/05/29/69fb4251bfa4477190edd9f161608e46","category_id":"foods"},"custard":{"native":"🍮","name":"Custard","url":"https://s1.vika.cn/space/2021/05/29/dd13583cb47c407a834eb2d60c4df37a","token":"space/2021/05/29/dd13583cb47c407a834eb2d60c4df37a","category_id":"foods"},"customs":{"native":"🛃","name":"Customs","url":"https://s1.vika.cn/space/2021/05/29/0b105fd7133e48d0a72e8f056f4743e4","token":"space/2021/05/29/0b105fd7133e48d0a72e8f056f4743e4","category_id":"symbols"},"cut_of_meat":{"native":"🥩","name":"Cut of Meat","url":"https://s1.vika.cn/space/2021/05/29/d5e7f26ed6d446278b76c56953a4918d","token":"space/2021/05/29/d5e7f26ed6d446278b76c56953a4918d","category_id":"foods"},"cyclone":{"native":"🌀","name":"Cyclone","url":"https://s1.vika.cn/space/2021/05/29/0e304a02aeb8493c9374e49df9fdbdd1","token":"space/2021/05/29/0e304a02aeb8493c9374e49df9fdbdd1","category_id":"places"},"dagger_knife":{"native":"🗡️","name":"Dagger Knife","url":"https://s1.vika.cn/space/2021/05/29/9f2aaffa211e43a4b21fe00ea45da592","token":"space/2021/05/29/9f2aaffa211e43a4b21fe00ea45da592","category_id":"objects"},"dancer":{"native":"💃","name":"Dancer","url":"https://s1.vika.cn/space/2021/05/29/afa8bae8ac934a26a256234a20794c93","token":"space/2021/05/29/afa8bae8ac934a26a256234a20794c93","category_id":"people"},"dancers":{"native":"👯","name":"Woman with Bunny Ears","url":"https://s1.vika.cn/space/2021/05/29/fa438da20a99412eb23f3c469b0bed5b","token":"space/2021/05/29/fa438da20a99412eb23f3c469b0bed5b","category_id":"people"},"dango":{"native":"🍡","name":"Dango","url":"https://s1.vika.cn/space/2021/05/29/52cfcb63b76141c2b7eb24df4b6c2d7e","token":"space/2021/05/29/52cfcb63b76141c2b7eb24df4b6c2d7e","category_id":"foods"},"dark_sunglasses":{"native":"🕶️","name":"Dark Sunglasses","url":"https://s1.vika.cn/space/2021/05/29/da951adc78114cf5b9244ecd34df1e7d","token":"space/2021/05/29/da951adc78114cf5b9244ecd34df1e7d","category_id":"objects"},"dart":{"native":"🎯","name":"Direct Hit","url":"https://s1.vika.cn/space/2021/05/29/788ac4f1efae4ea59e1bf8c9f20bc0e4","token":"space/2021/05/29/788ac4f1efae4ea59e1bf8c9f20bc0e4","category_id":"activity"},"dash":{"native":"💨","name":"Dash Symbol","url":"https://s1.vika.cn/space/2021/05/29/543f6ce1ab2b405492766ddd17c0466d","token":"space/2021/05/29/543f6ce1ab2b405492766ddd17c0466d","category_id":"people"},"date":{"native":"📅","name":"Calendar","url":"https://s1.vika.cn/space/2021/05/29/923a9dfdd7e04bb883ffe08070c5705f","token":"space/2021/05/29/923a9dfdd7e04bb883ffe08070c5705f","category_id":"objects"},"de":{"native":"🇩🇪","name":"Germany Flag","url":"https://s1.vika.cn/space/2021/05/29/174f9d1684ca445fa91319514fa40333","token":"space/2021/05/29/174f9d1684ca445fa91319514fa40333","category_id":"flags"},"deaf_man":{"native":"🧏‍♂️","name":"Deaf Man","url":"https://s1.vika.cn/space/2021/05/29/ac34d0b77e604e358b8c82ccac5d0401","token":"space/2021/05/29/ac34d0b77e604e358b8c82ccac5d0401","category_id":"people"},"deaf_person":{"native":"🧏","name":"Deaf Person","url":"https://s1.vika.cn/space/2021/05/29/42e99fb5a454442ab1f4ffe2955ee689","token":"space/2021/05/29/42e99fb5a454442ab1f4ffe2955ee689","category_id":"people"},"deaf_woman":{"native":"🧏‍♀️","name":"Deaf Woman","url":"https://s1.vika.cn/space/2021/05/29/7c419f59429546279d5856e50c0a968f","token":"space/2021/05/29/7c419f59429546279d5856e50c0a968f","category_id":"people"},"deciduous_tree":{"native":"🌳","name":"Deciduous Tree","url":"https://s1.vika.cn/space/2021/05/29/450e0fc47d0b4880bdb9bcde7c482085","token":"space/2021/05/29/450e0fc47d0b4880bdb9bcde7c482085","category_id":"nature"},"deer":{"native":"🦌","name":"Deer","url":"https://s1.vika.cn/space/2021/05/29/178d1a313c4442db8354f9bcfdab6bfe","token":"space/2021/05/29/178d1a313c4442db8354f9bcfdab6bfe","category_id":"nature"},"department_store":{"native":"🏬","name":"Department Store","url":"https://s1.vika.cn/space/2021/05/29/8061ae83fbef48dd81a76a40834e819b","token":"space/2021/05/29/8061ae83fbef48dd81a76a40834e819b","category_id":"places"},"derelict_house_building":{"native":"🏚️","name":"Derelict House Building","url":"https://s1.vika.cn/space/2021/05/29/a82c846f03384dd69449b276a57d2b50","token":"space/2021/05/29/a82c846f03384dd69449b276a57d2b50","category_id":"places"},"desert":{"native":"🏜️","name":"Desert","url":"https://s1.vika.cn/space/2021/05/29/a87f8f0820744ecca2a0d9a3a0a85cd2","token":"space/2021/05/29/a87f8f0820744ecca2a0d9a3a0a85cd2","category_id":"places"},"desert_island":{"native":"🏝️","name":"Desert Island","url":"https://s1.vika.cn/space/2021/05/29/f48330f912f9466a9be3f687b6ad6203","token":"space/2021/05/29/f48330f912f9466a9be3f687b6ad6203","category_id":"places"},"desktop_computer":{"native":"🖥️","name":"Desktop Computer","url":"https://s1.vika.cn/space/2021/05/29/0b1f74ffa28c495cb608eebf4afce0f2","token":"space/2021/05/29/0b1f74ffa28c495cb608eebf4afce0f2","category_id":"objects"},"diamond_shape_with_a_dot_inside":{"native":"💠","name":"Diamond Shape with a Dot Inside","url":"https://s1.vika.cn/space/2021/05/29/de46e7f7b44a40e3b0e79e910cde7c0c","token":"space/2021/05/29/de46e7f7b44a40e3b0e79e910cde7c0c","category_id":"symbols"},"diamonds":{"native":"♦️","name":"Black Diamond Suit","url":"https://s1.vika.cn/space/2021/05/29/2fb8a6817efd41d4bf91e79bc45e2027","token":"space/2021/05/29/2fb8a6817efd41d4bf91e79bc45e2027","category_id":"activity"},"disappointed":{"native":"😞","name":"Disappointed Face","url":"https://s1.vika.cn/space/2021/05/29/1ef903a9f07342c59b3150791390a434","token":"space/2021/05/29/1ef903a9f07342c59b3150791390a434","category_id":"people"},"disappointed_relieved":{"native":"😥","name":"Disappointed but Relieved Face","url":"https://s1.vika.cn/space/2021/05/29/18b80053e48e4c4795c733de6f837cfb","token":"space/2021/05/29/18b80053e48e4c4795c733de6f837cfb","category_id":"people"},"diving_mask":{"native":"🤿","name":"Diving Mask","url":"https://s1.vika.cn/space/2021/05/29/8f657e18746f4db499da9fb35f621d06","token":"space/2021/05/29/8f657e18746f4db499da9fb35f621d06","category_id":"activity"},"diya_lamp":{"native":"🪔","name":"Diya Lamp","url":"https://s1.vika.cn/space/2021/05/29/acfe1a4b1f664d1dbd817a480ba198db","token":"space/2021/05/29/acfe1a4b1f664d1dbd817a480ba198db","category_id":"objects"},"dizzy":{"native":"💫","name":"Dizzy Symbol","url":"https://s1.vika.cn/space/2021/05/29/571ede61930c43069b7bdd3c01dd6d43","token":"space/2021/05/29/571ede61930c43069b7bdd3c01dd6d43","category_id":"people"},"dizzy_face":{"native":"😵","name":"Dizzy Face","url":"https://s1.vika.cn/space/2021/05/29/3d963415fb3e4894aea15b0cb8c62260","token":"space/2021/05/29/3d963415fb3e4894aea15b0cb8c62260","category_id":"people"},"dna":{"native":"🧬","name":"Dna Double Helix","url":"https://s1.vika.cn/space/2021/05/29/f95cbddda4e84827856f17c0c3d5242c","token":"space/2021/05/29/f95cbddda4e84827856f17c0c3d5242c","category_id":"objects"},"do_not_litter":{"native":"🚯","name":"Do Not Litter Symbol","url":"https://s1.vika.cn/space/2021/05/29/6466fe44f05c4e998fa54fdcd17c4234","token":"space/2021/05/29/6466fe44f05c4e998fa54fdcd17c4234","category_id":"symbols"},"dog":{"native":"🐶","name":"Dog Face","url":"https://s1.vika.cn/space/2021/05/29/62a7f01884ae465aa068566619e6f169","token":"space/2021/05/29/62a7f01884ae465aa068566619e6f169","category_id":"nature"},"dog2":{"native":"🐕","name":"Dog","url":"https://s1.vika.cn/space/2021/05/29/21fc7eb2151d4dfc93c9362a91c148b2","token":"space/2021/05/29/21fc7eb2151d4dfc93c9362a91c148b2","category_id":"nature"},"dollar":{"native":"💵","name":"Banknote with Dollar Sign","url":"https://s1.vika.cn/space/2021/05/29/874c3b75e04048b7b157029c4db508ce","token":"space/2021/05/29/874c3b75e04048b7b157029c4db508ce","category_id":"objects"},"dolls":{"native":"🎎","name":"Japanese Dolls","url":"https://s1.vika.cn/space/2021/05/29/1f77005d257c4223aecc69856092e1d4","token":"space/2021/05/29/1f77005d257c4223aecc69856092e1d4","category_id":"activity"},"dolphin":{"native":"🐬","name":"Dolphin","url":"https://s1.vika.cn/space/2021/05/29/1c25f2fef2714f53b56ed9ca27885d99","token":"space/2021/05/29/1c25f2fef2714f53b56ed9ca27885d99","category_id":"nature"},"door":{"native":"🚪","name":"Door","url":"https://s1.vika.cn/space/2021/05/29/bd0f79ad23d34d579da8c46181861ad4","token":"space/2021/05/29/bd0f79ad23d34d579da8c46181861ad4","category_id":"objects"},"double_vertical_bar":{"native":"⏸️","name":"Double Vertical Bar","url":"https://s1.vika.cn/space/2021/05/29/bf3ddbe506fb4860ad43a689a86a5965","token":"space/2021/05/29/bf3ddbe506fb4860ad43a689a86a5965","category_id":"symbols"},"doughnut":{"native":"🍩","name":"Doughnut","url":"https://s1.vika.cn/space/2021/05/29/426fdcd8c17640d29acbae3d835ddf8a","token":"space/2021/05/29/426fdcd8c17640d29acbae3d835ddf8a","category_id":"foods"},"dove_of_peace":{"native":"🕊️","name":"Dove of Peace","url":"https://s1.vika.cn/space/2021/05/29/4af29cd825dd4372850d4b4964407158","token":"space/2021/05/29/4af29cd825dd4372850d4b4964407158","category_id":"nature"},"dragon":{"native":"🐉","name":"Dragon","url":"https://s1.vika.cn/space/2021/05/29/c11fb47981e34308882f2ea82036ebba","token":"space/2021/05/29/c11fb47981e34308882f2ea82036ebba","category_id":"nature"},"dragon_face":{"native":"🐲","name":"Dragon Face","url":"https://s1.vika.cn/space/2021/05/29/50c3eb531fd6438a9dfed933baf66335","token":"space/2021/05/29/50c3eb531fd6438a9dfed933baf66335","category_id":"nature"},"dress":{"native":"👗","name":"Dress","url":"https://s1.vika.cn/space/2021/05/29/24d46c3ab59649699e07e2113490ce25","token":"space/2021/05/29/24d46c3ab59649699e07e2113490ce25","category_id":"objects"},"dromedary_camel":{"native":"🐪","name":"Dromedary Camel","url":"https://s1.vika.cn/space/2021/05/29/fae658b938374335b6471d75c183721c","token":"space/2021/05/29/fae658b938374335b6471d75c183721c","category_id":"nature"},"drooling_face":{"native":"🤤","name":"Drooling Face","url":"https://s1.vika.cn/space/2021/05/29/1f37e483d5084a22a7aae6c07edfd4bb","token":"space/2021/05/29/1f37e483d5084a22a7aae6c07edfd4bb","category_id":"people"},"drop_of_blood":{"native":"🩸","name":"Drop of Blood","url":"https://s1.vika.cn/space/2021/05/29/b6f45e30c8854b719fa921c468de4cdd","token":"space/2021/05/29/b6f45e30c8854b719fa921c468de4cdd","category_id":"objects"},"droplet":{"native":"💧","name":"Droplet","url":"https://s1.vika.cn/space/2021/05/29/481519a32dff412fa4f89359678e2b5f","token":"space/2021/05/29/481519a32dff412fa4f89359678e2b5f","category_id":"places"},"drum_with_drumsticks":{"native":"🥁","name":"Drum with Drumsticks","url":"https://s1.vika.cn/space/2021/05/29/4e22832c6709434882be697b96ff9c48","token":"space/2021/05/29/4e22832c6709434882be697b96ff9c48","category_id":"objects"},"duck":{"native":"🦆","name":"Duck","url":"https://s1.vika.cn/space/2021/05/29/200a8c25ca3147d9abda262897d3d73c","token":"space/2021/05/29/200a8c25ca3147d9abda262897d3d73c","category_id":"nature"},"dumpling":{"native":"🥟","name":"Dumpling","url":"https://s1.vika.cn/space/2021/05/29/4547cdcff8f4407192d251bad1c26480","token":"space/2021/05/29/4547cdcff8f4407192d251bad1c26480","category_id":"foods"},"dvd":{"native":"📀","name":"Dvd","url":"https://s1.vika.cn/space/2021/05/29/315208b9b5964251bd5d2f2fffd82b85","token":"space/2021/05/29/315208b9b5964251bd5d2f2fffd82b85","category_id":"objects"},"e-mail":{"native":"📧","name":"E-Mail Symbol","url":"https://s1.vika.cn/space/2021/05/29/2aa0fc3b35bb4d4f86225989aa4a78d2","token":"space/2021/05/29/2aa0fc3b35bb4d4f86225989aa4a78d2","category_id":"objects"},"eagle":{"native":"🦅","name":"Eagle","url":"https://s1.vika.cn/space/2021/05/29/e94326a3041c4b5eaaafd133e4a06eb6","token":"space/2021/05/29/e94326a3041c4b5eaaafd133e4a06eb6","category_id":"nature"},"ear":{"native":"👂","name":"Ear","url":"https://s1.vika.cn/space/2021/05/29/dd2375455eb944adb8b317cddbaa8354","token":"space/2021/05/29/dd2375455eb944adb8b317cddbaa8354","category_id":"people"},"ear_of_rice":{"native":"🌾","name":"Ear of Rice","url":"https://s1.vika.cn/space/2021/05/29/d34b32e3509a42cd8fdb218745bf48ca","token":"space/2021/05/29/d34b32e3509a42cd8fdb218745bf48ca","category_id":"nature"},"ear_with_hearing_aid":{"native":"🦻","name":"Ear with Hearing Aid","url":"https://s1.vika.cn/space/2021/05/29/bec68b2816194c63ae5bc478cbf3e7b1","token":"space/2021/05/29/bec68b2816194c63ae5bc478cbf3e7b1","category_id":"people"},"earth_africa":{"native":"🌍","name":"Earth Globe Europe-Africa","url":"https://s1.vika.cn/space/2021/05/29/7b78bbfc2d964c4ba7f890535c16c039","token":"space/2021/05/29/7b78bbfc2d964c4ba7f890535c16c039","category_id":"places"},"earth_americas":{"native":"🌎","name":"Earth Globe Americas","url":"https://s1.vika.cn/space/2021/05/29/face45c56afc442c901bb94ce158cecc","token":"space/2021/05/29/face45c56afc442c901bb94ce158cecc","category_id":"places"},"earth_asia":{"native":"🌏","name":"Earth Globe Asia-Australia","url":"https://s1.vika.cn/space/2021/05/29/0e29687bdde7468fb74e3a13dcb51b01","token":"space/2021/05/29/0e29687bdde7468fb74e3a13dcb51b01","category_id":"places"},"egg":{"native":"🥚","name":"Egg","url":"https://s1.vika.cn/space/2021/05/29/b9e4f72a955c43a3a9c59cb2095e7897","token":"space/2021/05/29/b9e4f72a955c43a3a9c59cb2095e7897","category_id":"foods"},"eggplant":{"native":"🍆","name":"Aubergine","url":"https://s1.vika.cn/space/2021/05/29/618c2b7bcd644488a39b10bc724c6ce3","token":"space/2021/05/29/618c2b7bcd644488a39b10bc724c6ce3","category_id":"foods"},"eight":{"native":"8️⃣","name":"Keycap 8","url":"https://s1.vika.cn/space/2021/05/29/653b3e001047446fa3974322ce132ed3","token":"space/2021/05/29/653b3e001047446fa3974322ce132ed3","category_id":"symbols"},"eight_pointed_black_star":{"native":"✴️","name":"Eight Pointed Black Star","url":"https://s1.vika.cn/space/2021/05/29/63c1b9528c924672b0532f7d59db8dbc","token":"space/2021/05/29/63c1b9528c924672b0532f7d59db8dbc","category_id":"symbols"},"eight_spoked_asterisk":{"native":"✳️","name":"Eight Spoked Asterisk","url":"https://s1.vika.cn/space/2021/05/29/26cbab64a5964101a717e36a767e8dd9","token":"space/2021/05/29/26cbab64a5964101a717e36a767e8dd9","category_id":"symbols"},"eject":{"native":"⏏️","name":"Eject","url":"https://s1.vika.cn/space/2021/05/29/f979a1bec146408a94f035947c5ca142","token":"space/2021/05/29/f979a1bec146408a94f035947c5ca142","category_id":"symbols"},"electric_plug":{"native":"🔌","name":"Electric Plug","url":"https://s1.vika.cn/space/2021/05/29/79429b7961174011935249bb3bd62585","token":"space/2021/05/29/79429b7961174011935249bb3bd62585","category_id":"objects"},"elephant":{"native":"🐘","name":"Elephant","url":"https://s1.vika.cn/space/2021/05/29/5717975f9ea34126b5aeb4ec1faf110b","token":"space/2021/05/29/5717975f9ea34126b5aeb4ec1faf110b","category_id":"nature"},"elf":{"native":"🧝","name":"Elf","url":"https://s1.vika.cn/space/2021/05/29/78d47bbb9b3c47fba6e921a8ee08b49c","token":"space/2021/05/29/78d47bbb9b3c47fba6e921a8ee08b49c","category_id":"people"},"email":{"native":"✉️","name":"Envelope","url":"https://s1.vika.cn/space/2021/05/29/07425900d7704e808f738993237e3be2","token":"space/2021/05/29/07425900d7704e808f738993237e3be2","category_id":"objects"},"end":{"native":"🔚","name":"End with Leftwards Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/e9a8546cdde0491096478726b7fa067d","token":"space/2021/05/29/e9a8546cdde0491096478726b7fa067d","category_id":"symbols"},"envelope_with_arrow":{"native":"📩","name":"Envelope with Downwards Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/77cce9c7795e4ecbaa9a76806e1fa6ba","token":"space/2021/05/29/77cce9c7795e4ecbaa9a76806e1fa6ba","category_id":"objects"},"es":{"native":"🇪🇸","name":"Spain Flag","url":"https://s1.vika.cn/space/2021/05/29/eb279322b18b438f956ae98350819b9e","token":"space/2021/05/29/eb279322b18b438f956ae98350819b9e","category_id":"flags"},"euro":{"native":"💶","name":"Banknote with Euro Sign","url":"https://s1.vika.cn/space/2021/05/29/83f91947492e4c37ae28c5f18daa4ebd","token":"space/2021/05/29/83f91947492e4c37ae28c5f18daa4ebd","category_id":"objects"},"european_castle":{"native":"🏰","name":"European Castle","url":"https://s1.vika.cn/space/2021/05/29/a98f3909b1f34aacab6fb5e1455af194","token":"space/2021/05/29/a98f3909b1f34aacab6fb5e1455af194","category_id":"places"},"european_post_office":{"native":"🏤","name":"European Post Office","url":"https://s1.vika.cn/space/2021/05/29/cfe04c0750e647d6a99ec12b846c93ac","token":"space/2021/05/29/cfe04c0750e647d6a99ec12b846c93ac","category_id":"places"},"evergreen_tree":{"native":"🌲","name":"Evergreen Tree","url":"https://s1.vika.cn/space/2021/05/29/1f0413139c4b49e4a8e43ee439b711fc","token":"space/2021/05/29/1f0413139c4b49e4a8e43ee439b711fc","category_id":"nature"},"exclamation":{"native":"❗","name":"Heavy Exclamation Mark Symbol","url":"https://s1.vika.cn/space/2021/05/29/04dfd828a474476fa436317eada8ab5d","token":"space/2021/05/29/04dfd828a474476fa436317eada8ab5d","category_id":"symbols"},"exploding_head":{"native":"🤯","name":"Shocked Face with Exploding Head","url":"https://s1.vika.cn/space/2021/05/29/23b9a31fa37d433e8da7a31513490edd","token":"space/2021/05/29/23b9a31fa37d433e8da7a31513490edd","category_id":"people"},"expressionless":{"native":"😑","name":"Expressionless Face","url":"https://s1.vika.cn/space/2021/05/29/1d219d27881e499aa0f71c43ae77ed1f","token":"space/2021/05/29/1d219d27881e499aa0f71c43ae77ed1f","category_id":"people"},"eye":{"native":"👁️","name":"Eye","url":"https://s1.vika.cn/space/2021/05/29/4ef9e09b7d464efe8d209976e67cc9fc","token":"space/2021/05/29/4ef9e09b7d464efe8d209976e67cc9fc","category_id":"people"},"eye-in-speech-bubble":{"native":"👁️‍🗨️","name":"Eye in Speech Bubble","url":"https://s1.vika.cn/space/2021/05/29/76ae8cd4ac4c4c8cae897c320cdfbcd5","token":"space/2021/05/29/76ae8cd4ac4c4c8cae897c320cdfbcd5","category_id":"people"},"eyeglasses":{"native":"👓","name":"Eyeglasses","url":"https://s1.vika.cn/space/2021/05/29/601526d7d4534f8f980520355e2a5a4e","token":"space/2021/05/29/601526d7d4534f8f980520355e2a5a4e","category_id":"objects"},"eyes":{"native":"👀","name":"Eyes","url":"https://s1.vika.cn/space/2021/05/29/e26dc5bdc1814db8ad23d7f1878252f6","token":"space/2021/05/29/e26dc5bdc1814db8ad23d7f1878252f6","category_id":"people"},"face_palm":{"native":"🤦","name":"Face Palm","url":"https://s1.vika.cn/space/2021/05/29/b8560ccfdbe7472a98155edd1aebfa0a","token":"space/2021/05/29/b8560ccfdbe7472a98155edd1aebfa0a","category_id":"people"},"face_vomiting":{"native":"🤮","name":"Face with Open Mouth Vomiting","url":"https://s1.vika.cn/space/2021/05/29/e9f0028d325a490194fcb5776bf580fc","token":"space/2021/05/29/e9f0028d325a490194fcb5776bf580fc","category_id":"people"},"face_with_cowboy_hat":{"native":"🤠","name":"Face with Cowboy Hat","url":"https://s1.vika.cn/space/2021/05/29/864d736732bf4a13a75fd9cbe2d21154","token":"space/2021/05/29/864d736732bf4a13a75fd9cbe2d21154","category_id":"people"},"face_with_hand_over_mouth":{"native":"🤭","name":"Smiling Face with Smiling Eyes and Hand Covering Mouth","url":"https://s1.vika.cn/space/2021/05/29/52dec8665e4b48ca99462609fd97fd49","token":"space/2021/05/29/52dec8665e4b48ca99462609fd97fd49","category_id":"people"},"face_with_head_bandage":{"native":"🤕","name":"Face with Head-Bandage","url":"https://s1.vika.cn/space/2021/05/29/39f823bb427d4a2993f9ce0733f69a8b","token":"space/2021/05/29/39f823bb427d4a2993f9ce0733f69a8b","category_id":"people"},"face_with_monocle":{"native":"🧐","name":"Face with Monocle","url":"https://s1.vika.cn/space/2021/05/29/31eea563f99548de835622a6e49eff57","token":"space/2021/05/29/31eea563f99548de835622a6e49eff57","category_id":"people"},"face_with_raised_eyebrow":{"native":"🤨","name":"Face with One Eyebrow Raised","url":"https://s1.vika.cn/space/2021/05/29/1cb660467fe2480faf2fcba8c8da1c4b","token":"space/2021/05/29/1cb660467fe2480faf2fcba8c8da1c4b","category_id":"people"},"face_with_rolling_eyes":{"native":"🙄","name":"Face with Rolling Eyes","url":"https://s1.vika.cn/space/2021/05/29/88f91bf94a4f4ebcaf3ecd1f479ff66c","token":"space/2021/05/29/88f91bf94a4f4ebcaf3ecd1f479ff66c","category_id":"people"},"face_with_symbols_on_mouth":{"native":"🤬","name":"Serious Face with Symbols Covering Mouth","url":"https://s1.vika.cn/space/2021/05/29/0bb7ff67ef5b457fbfbdf4ddfe557e95","token":"space/2021/05/29/0bb7ff67ef5b457fbfbdf4ddfe557e95","category_id":"people"},"face_with_thermometer":{"native":"🤒","name":"Face with Thermometer","url":"https://s1.vika.cn/space/2021/05/29/06c208dff7f443f2b1b183aeecd15261","token":"space/2021/05/29/06c208dff7f443f2b1b183aeecd15261","category_id":"people"},"facepunch":{"native":"👊","name":"Fisted Hand Sign","url":"https://s1.vika.cn/space/2021/05/29/9d37c9dd1b7448eab8689378e629f591","token":"space/2021/05/29/9d37c9dd1b7448eab8689378e629f591","category_id":"people"},"factory":{"native":"🏭","name":"Factory","url":"https://s1.vika.cn/space/2021/05/29/0b96b52db53a4ddb82938bd7a6484ba9","token":"space/2021/05/29/0b96b52db53a4ddb82938bd7a6484ba9","category_id":"places"},"factory_worker":{"native":"🧑‍🏭","name":"Factory Worker","url":"https://s1.vika.cn/space/2021/05/29/5174c7d5dcba43e6b34c18e83b7f68ae","token":"space/2021/05/29/5174c7d5dcba43e6b34c18e83b7f68ae","category_id":"people"},"fairy":{"native":"🧚","name":"Fairy","url":"https://s1.vika.cn/space/2021/05/29/80066e720970460c8f16d1d2e79fdaf2","token":"space/2021/05/29/80066e720970460c8f16d1d2e79fdaf2","category_id":"people"},"falafel":{"native":"🧆","name":"Falafel","url":"https://s1.vika.cn/space/2021/05/29/8e7ff5a5ded5496da3c2b866db7fd85f","token":"space/2021/05/29/8e7ff5a5ded5496da3c2b866db7fd85f","category_id":"foods"},"fallen_leaf":{"native":"🍂","name":"Fallen Leaf","url":"https://s1.vika.cn/space/2021/05/29/3cbf6e953881411ea4e1396ee19698dd","token":"space/2021/05/29/3cbf6e953881411ea4e1396ee19698dd","category_id":"nature"},"family":{"native":"👪","name":"Family","url":"https://s1.vika.cn/space/2021/05/29/e879d08778844f3290e39b73db53570b","token":"space/2021/05/29/e879d08778844f3290e39b73db53570b","category_id":"people"},"farmer":{"native":"🧑‍🌾","name":"Farmer","url":"https://s1.vika.cn/space/2021/05/29/d1fb5160d9394dc6b6928ce5c1e832d2","token":"space/2021/05/29/d1fb5160d9394dc6b6928ce5c1e832d2","category_id":"people"},"fast_forward":{"native":"⏩","name":"Black Right-Pointing Double Triangle","url":"https://s1.vika.cn/space/2021/05/29/cb1e7adb97b7480c90894fa1755c4ab8","token":"space/2021/05/29/cb1e7adb97b7480c90894fa1755c4ab8","category_id":"symbols"},"fax":{"native":"📠","name":"Fax Machine","url":"https://s1.vika.cn/space/2021/05/29/288afd3bdb984ab4b81d57c2df461548","token":"space/2021/05/29/288afd3bdb984ab4b81d57c2df461548","category_id":"objects"},"fearful":{"native":"😨","name":"Fearful Face","url":"https://s1.vika.cn/space/2021/05/29/cf86c4b1bb434ba3b2e4e82a024a4214","token":"space/2021/05/29/cf86c4b1bb434ba3b2e4e82a024a4214","category_id":"people"},"feet":{"native":"🐾","name":"Paw Prints","url":"https://s1.vika.cn/space/2021/05/29/daa2afacbdeb4f2d99fb82059d0fd1c5","token":"space/2021/05/29/daa2afacbdeb4f2d99fb82059d0fd1c5","category_id":"nature"},"female_elf":{"native":"🧝‍♀️","name":"Female Elf","url":"https://s1.vika.cn/space/2021/05/29/f3657f8b2f5b49b2935876536d544693","token":"space/2021/05/29/f3657f8b2f5b49b2935876536d544693","category_id":"people"},"female_fairy":{"native":"🧚‍♀️","name":"Female Fairy","url":"https://s1.vika.cn/space/2021/05/29/485f2d33fdf0465ba73088203cec464c","token":"space/2021/05/29/485f2d33fdf0465ba73088203cec464c","category_id":"people"},"female_genie":{"native":"🧞‍♀️","name":"Female Genie","url":"https://s1.vika.cn/space/2021/05/29/4d97496351754899ab1fcc3fb1b2b08d","token":"space/2021/05/29/4d97496351754899ab1fcc3fb1b2b08d","category_id":"people"},"female_mage":{"native":"🧙‍♀️","name":"Female Mage","url":"https://s1.vika.cn/space/2021/05/29/439132b09d064118b9f1450e22397367","token":"space/2021/05/29/439132b09d064118b9f1450e22397367","category_id":"people"},"female_superhero":{"native":"🦸‍♀️","name":"Female Superhero","url":"https://s1.vika.cn/space/2021/05/29/dc96194b3b83490abfb54b4c481f1cf7","token":"space/2021/05/29/dc96194b3b83490abfb54b4c481f1cf7","category_id":"people"},"female_supervillain":{"native":"🦹‍♀️","name":"Female Supervillain","url":"https://s1.vika.cn/space/2021/05/29/ec3c1f1072374bb1b043510507f2eaf9","token":"space/2021/05/29/ec3c1f1072374bb1b043510507f2eaf9","category_id":"people"},"female_vampire":{"native":"🧛‍♀️","name":"Female Vampire","url":"https://s1.vika.cn/space/2021/05/29/23a83f74cd054afd82efd1f60adf26ba","token":"space/2021/05/29/23a83f74cd054afd82efd1f60adf26ba","category_id":"people"},"female_zombie":{"native":"🧟‍♀️","name":"Female Zombie","url":"https://s1.vika.cn/space/2021/05/29/2cc0756136e448e2a088ae1dca5b2dca","token":"space/2021/05/29/2cc0756136e448e2a088ae1dca5b2dca","category_id":"people"},"female-artist":{"native":"👩‍🎨","name":"Female Artist","url":"https://s1.vika.cn/space/2021/05/29/c03cfdc9fbbe446fbf034284e8c5b650","token":"space/2021/05/29/c03cfdc9fbbe446fbf034284e8c5b650","category_id":"people"},"female-astronaut":{"native":"👩‍🚀","name":"Female Astronaut","url":"https://s1.vika.cn/space/2021/05/29/798618eaf9af4cb097aa7bb23cc32c54","token":"space/2021/05/29/798618eaf9af4cb097aa7bb23cc32c54","category_id":"people"},"female-construction-worker":{"native":"👷‍♀️","name":"Female Construction Worker","url":"https://s1.vika.cn/space/2021/05/29/e79262b0ff474775ab8d02f7e1a96549","token":"space/2021/05/29/e79262b0ff474775ab8d02f7e1a96549","category_id":"people"},"female-cook":{"native":"👩‍🍳","name":"Female Cook","url":"https://s1.vika.cn/space/2021/05/29/d79a4231f8804821b197206716abd094","token":"space/2021/05/29/d79a4231f8804821b197206716abd094","category_id":"people"},"female-detective":{"native":"🕵️‍♀️","name":"Female Detective","url":"https://s1.vika.cn/space/2021/05/29/97e12db387d34cd3b97e16210b721a86","token":"space/2021/05/29/97e12db387d34cd3b97e16210b721a86","category_id":"people"},"female-doctor":{"native":"👩‍⚕️","name":"Female Doctor","url":"https://s1.vika.cn/space/2021/05/29/4c0918910144480a8aa0e2b926a81f2a","token":"space/2021/05/29/4c0918910144480a8aa0e2b926a81f2a","category_id":"people"},"female-factory-worker":{"native":"👩‍🏭","name":"Female Factory Worker","url":"https://s1.vika.cn/space/2021/05/29/d3283aca629c44f8bac3f99afa1c64ea","token":"space/2021/05/29/d3283aca629c44f8bac3f99afa1c64ea","category_id":"people"},"female-farmer":{"native":"👩‍🌾","name":"Female Farmer","url":"https://s1.vika.cn/space/2021/05/29/dbc0d05e61f540239b0d5f366accb945","token":"space/2021/05/29/dbc0d05e61f540239b0d5f366accb945","category_id":"people"},"female-firefighter":{"native":"👩‍🚒","name":"Female Firefighter","url":"https://s1.vika.cn/space/2021/05/29/13ad2e9e25a34643ad4acccf8b243b68","token":"space/2021/05/29/13ad2e9e25a34643ad4acccf8b243b68","category_id":"people"},"female-guard":{"native":"💂‍♀️","name":"Female Guard","url":"https://s1.vika.cn/space/2021/05/29/622a8217e6fe44cf952ef4302a118621","token":"space/2021/05/29/622a8217e6fe44cf952ef4302a118621","category_id":"people"},"female-judge":{"native":"👩‍⚖️","name":"Female Judge","url":"https://s1.vika.cn/space/2021/05/29/4d60174c761c4903b309700ab3b11a60","token":"space/2021/05/29/4d60174c761c4903b309700ab3b11a60","category_id":"people"},"female-mechanic":{"native":"👩‍🔧","name":"Female Mechanic","url":"https://s1.vika.cn/space/2021/05/29/9b6bb26708bf4ca0868b8b4604ba372c","token":"space/2021/05/29/9b6bb26708bf4ca0868b8b4604ba372c","category_id":"people"},"female-office-worker":{"native":"👩‍💼","name":"Female Office Worker","url":"https://s1.vika.cn/space/2021/05/29/176532a6811544bc932492136dcfcd5d","token":"space/2021/05/29/176532a6811544bc932492136dcfcd5d","category_id":"people"},"female-pilot":{"native":"👩‍✈️","name":"Female Pilot","url":"https://s1.vika.cn/space/2021/05/29/398c712e91074f99bff1d0fc38d33e63","token":"space/2021/05/29/398c712e91074f99bff1d0fc38d33e63","category_id":"people"},"female-police-officer":{"native":"👮‍♀️","name":"Female Police Officer","url":"https://s1.vika.cn/space/2021/05/29/2e05b56e40634291bc6d2c4e22ade8eb","token":"space/2021/05/29/2e05b56e40634291bc6d2c4e22ade8eb","category_id":"people"},"female-scientist":{"native":"👩‍🔬","name":"Female Scientist","url":"https://s1.vika.cn/space/2021/05/29/599904677e634b6ba1c6665865287314","token":"space/2021/05/29/599904677e634b6ba1c6665865287314","category_id":"people"},"female-singer":{"native":"👩‍🎤","name":"Female Singer","url":"https://s1.vika.cn/space/2021/05/29/2c7373ae1eed4d84a777016320a3fdc4","token":"space/2021/05/29/2c7373ae1eed4d84a777016320a3fdc4","category_id":"people"},"female-student":{"native":"👩‍🎓","name":"Female Student","url":"https://s1.vika.cn/space/2021/05/29/86931631c9b24ef49dc96128d34d0704","token":"space/2021/05/29/86931631c9b24ef49dc96128d34d0704","category_id":"people"},"female-teacher":{"native":"👩‍🏫","name":"Female Teacher","url":"https://s1.vika.cn/space/2021/05/29/aac0d84c70cf432da67aff42a85cf9f6","token":"space/2021/05/29/aac0d84c70cf432da67aff42a85cf9f6","category_id":"people"},"female-technologist":{"native":"👩‍💻","name":"Female Technologist","url":"https://s1.vika.cn/space/2021/05/29/479fdefb2a2243f49550ea0eceab09c2","token":"space/2021/05/29/479fdefb2a2243f49550ea0eceab09c2","category_id":"people"},"fencer":{"native":"🤺","name":"Fencer","url":"https://s1.vika.cn/space/2021/05/29/a095b59924c641d5984fe4ecefc081b4","token":"space/2021/05/29/a095b59924c641d5984fe4ecefc081b4","category_id":"people"},"ferris_wheel":{"native":"🎡","name":"Ferris Wheel","url":"https://s1.vika.cn/space/2021/05/29/0d2a5c99409049329f9c3eb502204177","token":"space/2021/05/29/0d2a5c99409049329f9c3eb502204177","category_id":"places"},"ferry":{"native":"⛴️","name":"Ferry","url":"https://s1.vika.cn/space/2021/05/29/db97a98f5d12491cadcc8255c2898a07","token":"space/2021/05/29/db97a98f5d12491cadcc8255c2898a07","category_id":"places"},"field_hockey_stick_and_ball":{"native":"🏑","name":"Field Hockey Stick and Ball","url":"https://s1.vika.cn/space/2021/05/29/1978aaba462a4f93ae9e9f30277fc8aa","token":"space/2021/05/29/1978aaba462a4f93ae9e9f30277fc8aa","category_id":"activity"},"file_cabinet":{"native":"🗄️","name":"File Cabinet","url":"https://s1.vika.cn/space/2021/05/29/7abd3245dc38439ab0064518bf4b49f7","token":"space/2021/05/29/7abd3245dc38439ab0064518bf4b49f7","category_id":"objects"},"file_folder":{"native":"📁","name":"File Folder","url":"https://s1.vika.cn/space/2021/05/29/e12e417120d64d16961573637789c3d1","token":"space/2021/05/29/e12e417120d64d16961573637789c3d1","category_id":"objects"},"film_frames":{"native":"🎞️","name":"Film Frames","url":"https://s1.vika.cn/space/2021/05/29/a9b481fbd24d4ed98c9ec57c2848694f","token":"space/2021/05/29/a9b481fbd24d4ed98c9ec57c2848694f","category_id":"objects"},"film_projector":{"native":"📽️","name":"Film Projector","url":"https://s1.vika.cn/space/2021/05/29/9aede7a7a6ca43628ab08b2631539784","token":"space/2021/05/29/9aede7a7a6ca43628ab08b2631539784","category_id":"objects"},"fire":{"native":"🔥","name":"Fire","url":"https://s1.vika.cn/space/2021/05/29/79c8a2b3555e4ef68aff7fe9c2d88854","token":"space/2021/05/29/79c8a2b3555e4ef68aff7fe9c2d88854","category_id":"places"},"fire_engine":{"native":"🚒","name":"Fire Engine","url":"https://s1.vika.cn/space/2021/05/29/e5daa812d80c49f6917f7bb90eb55399","token":"space/2021/05/29/e5daa812d80c49f6917f7bb90eb55399","category_id":"places"},"fire_extinguisher":{"native":"🧯","name":"Fire Extinguisher","url":"https://s1.vika.cn/space/2021/05/29/7f376736691741f29c731bb945b15754","token":"space/2021/05/29/7f376736691741f29c731bb945b15754","category_id":"objects"},"firecracker":{"native":"🧨","name":"Firecracker","url":"https://s1.vika.cn/space/2021/05/29/2bc58873a44444a1830523b646a9b8e8","token":"space/2021/05/29/2bc58873a44444a1830523b646a9b8e8","category_id":"activity"},"firefighter":{"native":"🧑‍🚒","name":"Firefighter","url":"https://s1.vika.cn/space/2021/05/29/d49c70a76c50491dba23ee775f849de9","token":"space/2021/05/29/d49c70a76c50491dba23ee775f849de9","category_id":"people"},"fireworks":{"native":"🎆","name":"Fireworks","url":"https://s1.vika.cn/space/2021/05/29/9898425e5a6642b0bfeb7a04855a1147","token":"space/2021/05/29/9898425e5a6642b0bfeb7a04855a1147","category_id":"activity"},"first_place_medal":{"native":"🥇","name":"First Place Medal","url":"https://s1.vika.cn/space/2021/05/29/1330e1b9c40a4b04a7e0d8c16f93c82b","token":"space/2021/05/29/1330e1b9c40a4b04a7e0d8c16f93c82b","category_id":"activity"},"first_quarter_moon":{"native":"🌓","name":"First Quarter Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/c17510d580aa447882d8bf6b97fed7e2","token":"space/2021/05/29/c17510d580aa447882d8bf6b97fed7e2","category_id":"places"},"first_quarter_moon_with_face":{"native":"🌛","name":"First Quarter Moon with Face","url":"https://s1.vika.cn/space/2021/05/29/a63a0d1bc8354202b85e931074dee193","token":"space/2021/05/29/a63a0d1bc8354202b85e931074dee193","category_id":"places"},"fish":{"native":"🐟","name":"Fish","url":"https://s1.vika.cn/space/2021/05/29/e28a63096c7444dfb6c925ff4359a05a","token":"space/2021/05/29/e28a63096c7444dfb6c925ff4359a05a","category_id":"nature"},"fish_cake":{"native":"🍥","name":"Fish Cake with Swirl Design","url":"https://s1.vika.cn/space/2021/05/29/ff7a45b1508a468ca86e45abb83f7c29","token":"space/2021/05/29/ff7a45b1508a468ca86e45abb83f7c29","category_id":"foods"},"fishing_pole_and_fish":{"native":"🎣","name":"Fishing Pole and Fish","url":"https://s1.vika.cn/space/2021/05/29/b56ff90c8cb941f18981e5e7370c8828","token":"space/2021/05/29/b56ff90c8cb941f18981e5e7370c8828","category_id":"activity"},"fist":{"native":"✊","name":"Raised Fist","url":"https://s1.vika.cn/space/2021/05/29/977a34e0feff401a844567f81e52a79b","token":"space/2021/05/29/977a34e0feff401a844567f81e52a79b","category_id":"people"},"five":{"native":"5️⃣","name":"Keycap 5","url":"https://s1.vika.cn/space/2021/05/29/e16d8218f4e343c5a6c459fea260bf95","token":"space/2021/05/29/e16d8218f4e343c5a6c459fea260bf95","category_id":"symbols"},"flag-ac":{"native":"🇦🇨","name":"Ascension Island Flag","url":"https://s1.vika.cn/space/2021/05/29/8c85a461b88a46bba13b5e17afbe0ecf","token":"space/2021/05/29/8c85a461b88a46bba13b5e17afbe0ecf","category_id":"flags"},"flag-ad":{"native":"🇦🇩","name":"Andorra Flag","url":"https://s1.vika.cn/space/2021/05/29/693b44041fc8414eaa9c949108dc7592","token":"space/2021/05/29/693b44041fc8414eaa9c949108dc7592","category_id":"flags"},"flag-ae":{"native":"🇦🇪","name":"United Arab Emirates Flag","url":"https://s1.vika.cn/space/2021/05/29/fb728a7792b546c3ab496972a358cd3d","token":"space/2021/05/29/fb728a7792b546c3ab496972a358cd3d","category_id":"flags"},"flag-af":{"native":"🇦🇫","name":"Afghanistan Flag","url":"https://s1.vika.cn/space/2021/05/29/2b3b8b4e91434644bf456ca72cf5a2db","token":"space/2021/05/29/2b3b8b4e91434644bf456ca72cf5a2db","category_id":"flags"},"flag-ag":{"native":"🇦🇬","name":"Antigua & Barbuda Flag","url":"https://s1.vika.cn/space/2021/05/29/7ec09d8a31754d1386301331ccf981fd","token":"space/2021/05/29/7ec09d8a31754d1386301331ccf981fd","category_id":"flags"},"flag-ai":{"native":"🇦🇮","name":"Anguilla Flag","url":"https://s1.vika.cn/space/2021/05/29/f941cfb9f11e4f17a1ac3129363ad32b","token":"space/2021/05/29/f941cfb9f11e4f17a1ac3129363ad32b","category_id":"flags"},"flag-al":{"native":"🇦🇱","name":"Albania Flag","url":"https://s1.vika.cn/space/2021/05/29/bc281f190f674a0cb06f199e747029b3","token":"space/2021/05/29/bc281f190f674a0cb06f199e747029b3","category_id":"flags"},"flag-am":{"native":"🇦🇲","name":"Armenia Flag","url":"https://s1.vika.cn/space/2021/05/29/695e5cf9e9e74e3fb7cd8c2b51c2a92d","token":"space/2021/05/29/695e5cf9e9e74e3fb7cd8c2b51c2a92d","category_id":"flags"},"flag-ao":{"native":"🇦🇴","name":"Angola Flag","url":"https://s1.vika.cn/space/2021/05/29/96bb7ab447534a3c85c8b4920a1aae87","token":"space/2021/05/29/96bb7ab447534a3c85c8b4920a1aae87","category_id":"flags"},"flag-aq":{"native":"🇦🇶","name":"Antarctica Flag","url":"https://s1.vika.cn/space/2021/05/29/4c0b3d903a5c4997b82a23db0c0d7319","token":"space/2021/05/29/4c0b3d903a5c4997b82a23db0c0d7319","category_id":"flags"},"flag-ar":{"native":"🇦🇷","name":"Argentina Flag","url":"https://s1.vika.cn/space/2021/05/29/0538d0a4275c4a36bd9bd0e92e0359b4","token":"space/2021/05/29/0538d0a4275c4a36bd9bd0e92e0359b4","category_id":"flags"},"flag-as":{"native":"🇦🇸","name":"American Samoa Flag","url":"https://s1.vika.cn/space/2021/05/29/a57d78baa07a46b6a760cc3d9d9dcb50","token":"space/2021/05/29/a57d78baa07a46b6a760cc3d9d9dcb50","category_id":"flags"},"flag-at":{"native":"🇦🇹","name":"Austria Flag","url":"https://s1.vika.cn/space/2021/05/29/3432e306929d45658f18391d2fa8f5fd","token":"space/2021/05/29/3432e306929d45658f18391d2fa8f5fd","category_id":"flags"},"flag-au":{"native":"🇦🇺","name":"Australia Flag","url":"https://s1.vika.cn/space/2021/05/29/4fa57516a4fc4bfdb6aa23d6ef53e9fc","token":"space/2021/05/29/4fa57516a4fc4bfdb6aa23d6ef53e9fc","category_id":"flags"},"flag-aw":{"native":"🇦🇼","name":"Aruba Flag","url":"https://s1.vika.cn/space/2021/05/29/da72301380c946d68d09320869059bc5","token":"space/2021/05/29/da72301380c946d68d09320869059bc5","category_id":"flags"},"flag-ax":{"native":"🇦🇽","name":"Åland Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/bc7bb3a6099d4abd8353eb0accc3ae06","token":"space/2021/05/29/bc7bb3a6099d4abd8353eb0accc3ae06","category_id":"flags"},"flag-az":{"native":"🇦🇿","name":"Azerbaijan Flag","url":"https://s1.vika.cn/space/2021/05/29/6b27860ac8d743859b3d788c32f5c576","token":"space/2021/05/29/6b27860ac8d743859b3d788c32f5c576","category_id":"flags"},"flag-ba":{"native":"🇧🇦","name":"Bosnia & Herzegovina Flag","url":"https://s1.vika.cn/space/2021/05/29/4cd4e2778de9413eabd401e465b321ad","token":"space/2021/05/29/4cd4e2778de9413eabd401e465b321ad","category_id":"flags"},"flag-bb":{"native":"🇧🇧","name":"Barbados Flag","url":"https://s1.vika.cn/space/2021/05/29/21c56fc7fb8246aa9f15443e1313d4f5","token":"space/2021/05/29/21c56fc7fb8246aa9f15443e1313d4f5","category_id":"flags"},"flag-bd":{"native":"🇧🇩","name":"Bangladesh Flag","url":"https://s1.vika.cn/space/2021/05/29/eaac79190ffc475db2f557e09cdad71d","token":"space/2021/05/29/eaac79190ffc475db2f557e09cdad71d","category_id":"flags"},"flag-be":{"native":"🇧🇪","name":"Belgium Flag","url":"https://s1.vika.cn/space/2021/05/29/1ee44020b02648c292a635c7c317d567","token":"space/2021/05/29/1ee44020b02648c292a635c7c317d567","category_id":"flags"},"flag-bf":{"native":"🇧🇫","name":"Burkina Faso Flag","url":"https://s1.vika.cn/space/2021/05/29/afc84e421df349b98e7c45c3cca0fd94","token":"space/2021/05/29/afc84e421df349b98e7c45c3cca0fd94","category_id":"flags"},"flag-bg":{"native":"🇧🇬","name":"Bulgaria Flag","url":"https://s1.vika.cn/space/2021/05/29/cd8a94a47b654125b59025728bd4e494","token":"space/2021/05/29/cd8a94a47b654125b59025728bd4e494","category_id":"flags"},"flag-bh":{"native":"🇧🇭","name":"Bahrain Flag","url":"https://s1.vika.cn/space/2021/05/29/fc4067c44710426dac6bf06aa3da38d0","token":"space/2021/05/29/fc4067c44710426dac6bf06aa3da38d0","category_id":"flags"},"flag-bi":{"native":"🇧🇮","name":"Burundi Flag","url":"https://s1.vika.cn/space/2021/05/29/6cd1fe5f4516432f838b2933624ebfe4","token":"space/2021/05/29/6cd1fe5f4516432f838b2933624ebfe4","category_id":"flags"},"flag-bj":{"native":"🇧🇯","name":"Benin Flag","url":"https://s1.vika.cn/space/2021/05/29/4249e8fe5f1b43029a9d53525b5de4fe","token":"space/2021/05/29/4249e8fe5f1b43029a9d53525b5de4fe","category_id":"flags"},"flag-bl":{"native":"🇧🇱","name":"St. Barthélemy Flag","url":"https://s1.vika.cn/space/2021/05/29/90e4448ebb04437c824d276a08e3c19c","token":"space/2021/05/29/90e4448ebb04437c824d276a08e3c19c","category_id":"flags"},"flag-bm":{"native":"🇧🇲","name":"Bermuda Flag","url":"https://s1.vika.cn/space/2021/05/29/a9f7bcc0f92f4f8d8282a19334312789","token":"space/2021/05/29/a9f7bcc0f92f4f8d8282a19334312789","category_id":"flags"},"flag-bn":{"native":"🇧🇳","name":"Brunei Flag","url":"https://s1.vika.cn/space/2021/05/29/707c078c1b804b4096a994859830d032","token":"space/2021/05/29/707c078c1b804b4096a994859830d032","category_id":"flags"},"flag-bo":{"native":"🇧🇴","name":"Bolivia Flag","url":"https://s1.vika.cn/space/2021/05/29/155a9925b712464d9fa5630bd94ea30f","token":"space/2021/05/29/155a9925b712464d9fa5630bd94ea30f","category_id":"flags"},"flag-bq":{"native":"🇧🇶","name":"Caribbean Netherlands Flag","url":"https://s1.vika.cn/space/2021/05/29/0c0e1dcacce9426293f1842283e6ea4c","token":"space/2021/05/29/0c0e1dcacce9426293f1842283e6ea4c","category_id":"flags"},"flag-br":{"native":"🇧🇷","name":"Brazil Flag","url":"https://s1.vika.cn/space/2021/05/29/3f4a4b14e92d4fedb173bca9f4c75524","token":"space/2021/05/29/3f4a4b14e92d4fedb173bca9f4c75524","category_id":"flags"},"flag-bs":{"native":"🇧🇸","name":"Bahamas Flag","url":"https://s1.vika.cn/space/2021/05/29/8c2d0a3bc76a4016b2d3759f24784717","token":"space/2021/05/29/8c2d0a3bc76a4016b2d3759f24784717","category_id":"flags"},"flag-bt":{"native":"🇧🇹","name":"Bhutan Flag","url":"https://s1.vika.cn/space/2021/05/29/b5ff1f1c26384982a97a65440dc46f86","token":"space/2021/05/29/b5ff1f1c26384982a97a65440dc46f86","category_id":"flags"},"flag-bv":{"native":"🇧🇻","name":"Bouvet Island Flag","url":"https://s1.vika.cn/space/2021/05/29/8250bd6e94dc47d48fa17ee700dd6a02","token":"space/2021/05/29/8250bd6e94dc47d48fa17ee700dd6a02","category_id":"flags"},"flag-bw":{"native":"🇧🇼","name":"Botswana Flag","url":"https://s1.vika.cn/space/2021/05/29/d3cacaa212e14fcb8bd5c9aec7f1991c","token":"space/2021/05/29/d3cacaa212e14fcb8bd5c9aec7f1991c","category_id":"flags"},"flag-by":{"native":"🇧🇾","name":"Belarus Flag","url":"https://s1.vika.cn/space/2021/05/29/ffe65046878343b6a91b419053069d9c","token":"space/2021/05/29/ffe65046878343b6a91b419053069d9c","category_id":"flags"},"flag-bz":{"native":"🇧🇿","name":"Belize Flag","url":"https://s1.vika.cn/space/2021/05/29/87a4bd11d71f48189efd049244e78e02","token":"space/2021/05/29/87a4bd11d71f48189efd049244e78e02","category_id":"flags"},"flag-ca":{"native":"🇨🇦","name":"Canada Flag","url":"https://s1.vika.cn/space/2021/05/29/52e0ad71e8b448da93694d2634a678dd","token":"space/2021/05/29/52e0ad71e8b448da93694d2634a678dd","category_id":"flags"},"flag-cc":{"native":"🇨🇨","name":"Cocos (keeling) Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/21f0e226eb934761ae1062c2af49a351","token":"space/2021/05/29/21f0e226eb934761ae1062c2af49a351","category_id":"flags"},"flag-cd":{"native":"🇨🇩","name":"Congo - Kinshasa Flag","url":"https://s1.vika.cn/space/2021/05/29/c9f08eb1625c4ab39c5cdfaa447ebb06","token":"space/2021/05/29/c9f08eb1625c4ab39c5cdfaa447ebb06","category_id":"flags"},"flag-cf":{"native":"🇨🇫","name":"Central African Republic Flag","url":"https://s1.vika.cn/space/2021/05/29/f049246d71c54d32bdfb13c164f5f3a4","token":"space/2021/05/29/f049246d71c54d32bdfb13c164f5f3a4","category_id":"flags"},"flag-cg":{"native":"🇨🇬","name":"Congo - Brazzaville Flag","url":"https://s1.vika.cn/space/2021/05/29/7e63f1d26516413d95d75621daf5f89f","token":"space/2021/05/29/7e63f1d26516413d95d75621daf5f89f","category_id":"flags"},"flag-ch":{"native":"🇨🇭","name":"Switzerland Flag","url":"https://s1.vika.cn/space/2021/05/29/7cf5074a8b14402a96f35d2bede7d403","token":"space/2021/05/29/7cf5074a8b14402a96f35d2bede7d403","category_id":"flags"},"flag-ci":{"native":"🇨🇮","name":"Côte D’ivoire Flag","url":"https://s1.vika.cn/space/2021/05/29/ffc00c7a4c2344a0b396f7a57fd541e6","token":"space/2021/05/29/ffc00c7a4c2344a0b396f7a57fd541e6","category_id":"flags"},"flag-ck":{"native":"🇨🇰","name":"Cook Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/d11c6e3cc5784e01a47159c7f1d67e92","token":"space/2021/05/29/d11c6e3cc5784e01a47159c7f1d67e92","category_id":"flags"},"flag-cl":{"native":"🇨🇱","name":"Chile Flag","url":"https://s1.vika.cn/space/2021/05/29/1db94b4ab3f74d8984344273145ea926","token":"space/2021/05/29/1db94b4ab3f74d8984344273145ea926","category_id":"flags"},"flag-cm":{"native":"🇨🇲","name":"Cameroon Flag","url":"https://s1.vika.cn/space/2021/05/29/691ad185a2804a6bb079380c04bff3cb","token":"space/2021/05/29/691ad185a2804a6bb079380c04bff3cb","category_id":"flags"},"flag-co":{"native":"🇨🇴","name":"Colombia Flag","url":"https://s1.vika.cn/space/2021/05/29/9150400690a74f678b664615e6cdb001","token":"space/2021/05/29/9150400690a74f678b664615e6cdb001","category_id":"flags"},"flag-cp":{"native":"🇨🇵","name":"Clipperton Island Flag","url":"https://s1.vika.cn/space/2021/05/29/1d5e45d76ffa4bcf8385d62bd27473f1","token":"space/2021/05/29/1d5e45d76ffa4bcf8385d62bd27473f1","category_id":"flags"},"flag-cr":{"native":"🇨🇷","name":"Costa Rica Flag","url":"https://s1.vika.cn/space/2021/05/29/fd37043c328f445896b9f3636a74b9ed","token":"space/2021/05/29/fd37043c328f445896b9f3636a74b9ed","category_id":"flags"},"flag-cu":{"native":"🇨🇺","name":"Cuba Flag","url":"https://s1.vika.cn/space/2021/05/29/0a850be4756744af9555020f8932aaf6","token":"space/2021/05/29/0a850be4756744af9555020f8932aaf6","category_id":"flags"},"flag-cv":{"native":"🇨🇻","name":"Cape Verde Flag","url":"https://s1.vika.cn/space/2021/05/29/03ba0f923e0648b1940cedbc13b92760","token":"space/2021/05/29/03ba0f923e0648b1940cedbc13b92760","category_id":"flags"},"flag-cw":{"native":"🇨🇼","name":"Curaçao Flag","url":"https://s1.vika.cn/space/2021/05/29/91eac04d7e56492b8d1f721548a958e9","token":"space/2021/05/29/91eac04d7e56492b8d1f721548a958e9","category_id":"flags"},"flag-cx":{"native":"🇨🇽","name":"Christmas Island Flag","url":"https://s1.vika.cn/space/2021/05/29/7d351f4b819e4072a0826c1cb8a2ca2d","token":"space/2021/05/29/7d351f4b819e4072a0826c1cb8a2ca2d","category_id":"flags"},"flag-cy":{"native":"🇨🇾","name":"Cyprus Flag","url":"https://s1.vika.cn/space/2021/05/29/cbaf5ef3da7a48a494eec859504f8870","token":"space/2021/05/29/cbaf5ef3da7a48a494eec859504f8870","category_id":"flags"},"flag-cz":{"native":"🇨🇿","name":"Czechia Flag","url":"https://s1.vika.cn/space/2021/05/29/975ba96a268e421c80cc3ecef6cda766","token":"space/2021/05/29/975ba96a268e421c80cc3ecef6cda766","category_id":"flags"},"flag-dg":{"native":"🇩🇬","name":"Diego Garcia Flag","url":"https://s1.vika.cn/space/2021/05/29/52369db7f65a42609fb5fe9a962b5c63","token":"space/2021/05/29/52369db7f65a42609fb5fe9a962b5c63","category_id":"flags"},"flag-dj":{"native":"🇩🇯","name":"Djibouti Flag","url":"https://s1.vika.cn/space/2021/05/29/205da71039554c4e8760ded173d06c19","token":"space/2021/05/29/205da71039554c4e8760ded173d06c19","category_id":"flags"},"flag-dk":{"native":"🇩🇰","name":"Denmark Flag","url":"https://s1.vika.cn/space/2021/05/29/139d23d260d949ff9b641d70246dd90e","token":"space/2021/05/29/139d23d260d949ff9b641d70246dd90e","category_id":"flags"},"flag-dm":{"native":"🇩🇲","name":"Dominica Flag","url":"https://s1.vika.cn/space/2021/05/29/9989bbfefd9248fda605c19363320b97","token":"space/2021/05/29/9989bbfefd9248fda605c19363320b97","category_id":"flags"},"flag-do":{"native":"🇩🇴","name":"Dominican Republic Flag","url":"https://s1.vika.cn/space/2021/05/29/c7552cfa294448ec9cb24652b0ed31b7","token":"space/2021/05/29/c7552cfa294448ec9cb24652b0ed31b7","category_id":"flags"},"flag-dz":{"native":"🇩🇿","name":"Algeria Flag","url":"https://s1.vika.cn/space/2021/05/29/9877fea572fc4accb2c52718acded192","token":"space/2021/05/29/9877fea572fc4accb2c52718acded192","category_id":"flags"},"flag-ea":{"native":"🇪🇦","name":"Ceuta & Melilla Flag","url":"https://s1.vika.cn/space/2021/05/29/1c02ab6d112543b293368eb67109efea","token":"space/2021/05/29/1c02ab6d112543b293368eb67109efea","category_id":"flags"},"flag-ec":{"native":"🇪🇨","name":"Ecuador Flag","url":"https://s1.vika.cn/space/2021/05/29/530548ba6a4649c2801089f3c6fd2735","token":"space/2021/05/29/530548ba6a4649c2801089f3c6fd2735","category_id":"flags"},"flag-ee":{"native":"🇪🇪","name":"Estonia Flag","url":"https://s1.vika.cn/space/2021/05/29/b4a0afbdc1a1441b945e0da2689f4512","token":"space/2021/05/29/b4a0afbdc1a1441b945e0da2689f4512","category_id":"flags"},"flag-eg":{"native":"🇪🇬","name":"Egypt Flag","url":"https://s1.vika.cn/space/2021/05/29/d34bb0eb31a54d069fda92f0f670f090","token":"space/2021/05/29/d34bb0eb31a54d069fda92f0f670f090","category_id":"flags"},"flag-eh":{"native":"🇪🇭","name":"Western Sahara Flag","url":"https://s1.vika.cn/space/2021/05/29/8d58de4fcfea4b738f2531b6c7ef18d8","token":"space/2021/05/29/8d58de4fcfea4b738f2531b6c7ef18d8","category_id":"flags"},"flag-england":{"native":"🏴󠁧󠁢󠁥󠁮󠁧󠁿","name":"England Flag","url":"https://s1.vika.cn/space/2021/05/29/6d61dde2b70447dd83dc7ae10bc3bd60","token":"space/2021/05/29/6d61dde2b70447dd83dc7ae10bc3bd60","category_id":"flags"},"flag-er":{"native":"🇪🇷","name":"Eritrea Flag","url":"https://s1.vika.cn/space/2021/05/29/99b0d0b177924035a58c56f5346015ce","token":"space/2021/05/29/99b0d0b177924035a58c56f5346015ce","category_id":"flags"},"flag-et":{"native":"🇪🇹","name":"Ethiopia Flag","url":"https://s1.vika.cn/space/2021/05/29/af07dde1df7448d8be6ac24ed5ad7ded","token":"space/2021/05/29/af07dde1df7448d8be6ac24ed5ad7ded","category_id":"flags"},"flag-eu":{"native":"🇪🇺","name":"European Union Flag","url":"https://s1.vika.cn/space/2021/05/29/8a957091392041dbb555dcb24ff695b8","token":"space/2021/05/29/8a957091392041dbb555dcb24ff695b8","category_id":"flags"},"flag-fi":{"native":"🇫🇮","name":"Finland Flag","url":"https://s1.vika.cn/space/2021/05/29/cf0173892efc44f798a5835b5fbdee27","token":"space/2021/05/29/cf0173892efc44f798a5835b5fbdee27","category_id":"flags"},"flag-fj":{"native":"🇫🇯","name":"Fiji Flag","url":"https://s1.vika.cn/space/2021/05/29/836617caf9074694a7a45f1442b443fb","token":"space/2021/05/29/836617caf9074694a7a45f1442b443fb","category_id":"flags"},"flag-fk":{"native":"🇫🇰","name":"Falkland Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/b6ca2a5a11bf427cb46e894d8db58b9f","token":"space/2021/05/29/b6ca2a5a11bf427cb46e894d8db58b9f","category_id":"flags"},"flag-fm":{"native":"🇫🇲","name":"Micronesia Flag","url":"https://s1.vika.cn/space/2021/05/29/538c710045104c05bb04f6ee7e188793","token":"space/2021/05/29/538c710045104c05bb04f6ee7e188793","category_id":"flags"},"flag-fo":{"native":"🇫🇴","name":"Faroe Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/3f79ab2a706843eb87863d6832085893","token":"space/2021/05/29/3f79ab2a706843eb87863d6832085893","category_id":"flags"},"flag-ga":{"native":"🇬🇦","name":"Gabon Flag","url":"https://s1.vika.cn/space/2021/05/29/a15f0918be7746009c6868139cb72a5e","token":"space/2021/05/29/a15f0918be7746009c6868139cb72a5e","category_id":"flags"},"flag-gd":{"native":"🇬🇩","name":"Grenada Flag","url":"https://s1.vika.cn/space/2021/05/29/8d80bdc0e4594c6da65eb1a778c6b589","token":"space/2021/05/29/8d80bdc0e4594c6da65eb1a778c6b589","category_id":"flags"},"flag-ge":{"native":"🇬🇪","name":"Georgia Flag","url":"https://s1.vika.cn/space/2021/05/29/ca1a4518c84a4a69aa783d72026e9556","token":"space/2021/05/29/ca1a4518c84a4a69aa783d72026e9556","category_id":"flags"},"flag-gf":{"native":"🇬🇫","name":"French Guiana Flag","url":"https://s1.vika.cn/space/2021/05/29/d3940e990bb3414aa5cd094dca0f4435","token":"space/2021/05/29/d3940e990bb3414aa5cd094dca0f4435","category_id":"flags"},"flag-gg":{"native":"🇬🇬","name":"Guernsey Flag","url":"https://s1.vika.cn/space/2021/05/29/3a61e343bb644e649643ad58885aa7dd","token":"space/2021/05/29/3a61e343bb644e649643ad58885aa7dd","category_id":"flags"},"flag-gh":{"native":"🇬🇭","name":"Ghana Flag","url":"https://s1.vika.cn/space/2021/05/29/177877084e374367a2b132d329aa6dd9","token":"space/2021/05/29/177877084e374367a2b132d329aa6dd9","category_id":"flags"},"flag-gi":{"native":"🇬🇮","name":"Gibraltar Flag","url":"https://s1.vika.cn/space/2021/05/29/ca870c15a91d4e398f4b06324f0d23f3","token":"space/2021/05/29/ca870c15a91d4e398f4b06324f0d23f3","category_id":"flags"},"flag-gl":{"native":"🇬🇱","name":"Greenland Flag","url":"https://s1.vika.cn/space/2021/05/29/f630fc601b08483ab3908da2e4329f3f","token":"space/2021/05/29/f630fc601b08483ab3908da2e4329f3f","category_id":"flags"},"flag-gm":{"native":"🇬🇲","name":"Gambia Flag","url":"https://s1.vika.cn/space/2021/05/29/522680fc31a64490bd21be9ae9e81239","token":"space/2021/05/29/522680fc31a64490bd21be9ae9e81239","category_id":"flags"},"flag-gn":{"native":"🇬🇳","name":"Guinea Flag","url":"https://s1.vika.cn/space/2021/05/29/b17dbb1139044cc29f8486e35b5bd75b","token":"space/2021/05/29/b17dbb1139044cc29f8486e35b5bd75b","category_id":"flags"},"flag-gp":{"native":"🇬🇵","name":"Guadeloupe Flag","url":"https://s1.vika.cn/space/2021/05/29/d7c300d30fd14939b84385dfa38668c6","token":"space/2021/05/29/d7c300d30fd14939b84385dfa38668c6","category_id":"flags"},"flag-gq":{"native":"🇬🇶","name":"Equatorial Guinea Flag","url":"https://s1.vika.cn/space/2021/05/29/8f5e12332a464bc180d80805143ce7ec","token":"space/2021/05/29/8f5e12332a464bc180d80805143ce7ec","category_id":"flags"},"flag-gr":{"native":"🇬🇷","name":"Greece Flag","url":"https://s1.vika.cn/space/2021/05/29/70ede200ca10463d8af247894b0f994e","token":"space/2021/05/29/70ede200ca10463d8af247894b0f994e","category_id":"flags"},"flag-gs":{"native":"🇬🇸","name":"South Georgia & South Sandwich Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/4f9108c8ed0140e4afa478bff0c6de1c","token":"space/2021/05/29/4f9108c8ed0140e4afa478bff0c6de1c","category_id":"flags"},"flag-gt":{"native":"🇬🇹","name":"Guatemala Flag","url":"https://s1.vika.cn/space/2021/05/29/f7ccc6a23ae94e1ca76f28248248c1a9","token":"space/2021/05/29/f7ccc6a23ae94e1ca76f28248248c1a9","category_id":"flags"},"flag-gu":{"native":"🇬🇺","name":"Guam Flag","url":"https://s1.vika.cn/space/2021/05/29/489a3c7613c54236a5975a54a47e6a76","token":"space/2021/05/29/489a3c7613c54236a5975a54a47e6a76","category_id":"flags"},"flag-gw":{"native":"🇬🇼","name":"Guinea-Bissau Flag","url":"https://s1.vika.cn/space/2021/05/29/b3f3cefbd06e435b82406627689a7726","token":"space/2021/05/29/b3f3cefbd06e435b82406627689a7726","category_id":"flags"},"flag-gy":{"native":"🇬🇾","name":"Guyana Flag","url":"https://s1.vika.cn/space/2021/05/29/f0d19c30ac324c79ab4b3e3b9f656625","token":"space/2021/05/29/f0d19c30ac324c79ab4b3e3b9f656625","category_id":"flags"},"flag-hk":{"native":"🇭🇰","name":"Hong Kong Sar China Flag","url":"https://s1.vika.cn/space/2021/05/29/7831b72adc894629a14917fe2f05c78d","token":"space/2021/05/29/7831b72adc894629a14917fe2f05c78d","category_id":"flags"},"flag-hm":{"native":"🇭🇲","name":"Heard & Mcdonald Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/5775ef20ac5e40199c0990f1d48e09b4","token":"space/2021/05/29/5775ef20ac5e40199c0990f1d48e09b4","category_id":"flags"},"flag-hn":{"native":"🇭🇳","name":"Honduras Flag","url":"https://s1.vika.cn/space/2021/05/29/40963a9b1a014c03806579d69799a83a","token":"space/2021/05/29/40963a9b1a014c03806579d69799a83a","category_id":"flags"},"flag-hr":{"native":"🇭🇷","name":"Croatia Flag","url":"https://s1.vika.cn/space/2021/05/29/aeb69df8cf5846f69ba5a5f8b4298971","token":"space/2021/05/29/aeb69df8cf5846f69ba5a5f8b4298971","category_id":"flags"},"flag-ht":{"native":"🇭🇹","name":"Haiti Flag","url":"https://s1.vika.cn/space/2021/05/29/431faaeb22644d7ab383997bede90bf8","token":"space/2021/05/29/431faaeb22644d7ab383997bede90bf8","category_id":"flags"},"flag-hu":{"native":"🇭🇺","name":"Hungary Flag","url":"https://s1.vika.cn/space/2021/05/29/070a6a59add4417ebed33cf37b053e2b","token":"space/2021/05/29/070a6a59add4417ebed33cf37b053e2b","category_id":"flags"},"flag-ic":{"native":"🇮🇨","name":"Canary Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/b7e1975534c943ce8043eb7335c263a3","token":"space/2021/05/29/b7e1975534c943ce8043eb7335c263a3","category_id":"flags"},"flag-id":{"native":"🇮🇩","name":"Indonesia Flag","url":"https://s1.vika.cn/space/2021/05/29/a92fecb349334bc8a325260510a829d7","token":"space/2021/05/29/a92fecb349334bc8a325260510a829d7","category_id":"flags"},"flag-ie":{"native":"🇮🇪","name":"Ireland Flag","url":"https://s1.vika.cn/space/2021/05/29/b915f07baff84030a2b017f2d63ecada","token":"space/2021/05/29/b915f07baff84030a2b017f2d63ecada","category_id":"flags"},"flag-il":{"native":"🇮🇱","name":"Israel Flag","url":"https://s1.vika.cn/space/2021/05/29/df8b9abc35ee4da1acbb90713e7dd575","token":"space/2021/05/29/df8b9abc35ee4da1acbb90713e7dd575","category_id":"flags"},"flag-im":{"native":"🇮🇲","name":"Isle of Man Flag","url":"https://s1.vika.cn/space/2021/05/29/7bd305ded65d47779b84b21b6b0f17e4","token":"space/2021/05/29/7bd305ded65d47779b84b21b6b0f17e4","category_id":"flags"},"flag-in":{"native":"🇮🇳","name":"India Flag","url":"https://s1.vika.cn/space/2021/05/29/77f99ef3639b4b4d8eaa8f4c1dbf8ae5","token":"space/2021/05/29/77f99ef3639b4b4d8eaa8f4c1dbf8ae5","category_id":"flags"},"flag-io":{"native":"🇮🇴","name":"British Indian Ocean Territory Flag","url":"https://s1.vika.cn/space/2021/05/29/40dc7db74226494ca7752eeff1b2a9e5","token":"space/2021/05/29/40dc7db74226494ca7752eeff1b2a9e5","category_id":"flags"},"flag-iq":{"native":"🇮🇶","name":"Iraq Flag","url":"https://s1.vika.cn/space/2021/05/29/053c25e42d564b72a11f5d4093efb3e4","token":"space/2021/05/29/053c25e42d564b72a11f5d4093efb3e4","category_id":"flags"},"flag-ir":{"native":"🇮🇷","name":"Iran Flag","url":"https://s1.vika.cn/space/2021/05/29/2b5d2b18e621431280dada3379689a1a","token":"space/2021/05/29/2b5d2b18e621431280dada3379689a1a","category_id":"flags"},"flag-is":{"native":"🇮🇸","name":"Iceland Flag","url":"https://s1.vika.cn/space/2021/05/29/50dd9de30cc4480f880931c76e60939c","token":"space/2021/05/29/50dd9de30cc4480f880931c76e60939c","category_id":"flags"},"flag-je":{"native":"🇯🇪","name":"Jersey Flag","url":"https://s1.vika.cn/space/2021/05/29/83d478113cb9429ba7d5997939f622fa","token":"space/2021/05/29/83d478113cb9429ba7d5997939f622fa","category_id":"flags"},"flag-jm":{"native":"🇯🇲","name":"Jamaica Flag","url":"https://s1.vika.cn/space/2021/05/29/8fe2129635eb4b4b9589d4ceca9a06c5","token":"space/2021/05/29/8fe2129635eb4b4b9589d4ceca9a06c5","category_id":"flags"},"flag-jo":{"native":"🇯🇴","name":"Jordan Flag","url":"https://s1.vika.cn/space/2021/05/29/fbc4d1904a0240729eba5a6223ce4ccd","token":"space/2021/05/29/fbc4d1904a0240729eba5a6223ce4ccd","category_id":"flags"},"flag-ke":{"native":"🇰🇪","name":"Kenya Flag","url":"https://s1.vika.cn/space/2021/05/29/f7ae48029ec84fcf99ebf07f71a42945","token":"space/2021/05/29/f7ae48029ec84fcf99ebf07f71a42945","category_id":"flags"},"flag-kg":{"native":"🇰🇬","name":"Kyrgyzstan Flag","url":"https://s1.vika.cn/space/2021/05/29/29e40af3693f43a2b58889a804a6969d","token":"space/2021/05/29/29e40af3693f43a2b58889a804a6969d","category_id":"flags"},"flag-kh":{"native":"🇰🇭","name":"Cambodia Flag","url":"https://s1.vika.cn/space/2021/05/29/5d4208b5d86f4ef0bfcb825c7cca4a88","token":"space/2021/05/29/5d4208b5d86f4ef0bfcb825c7cca4a88","category_id":"flags"},"flag-ki":{"native":"🇰🇮","name":"Kiribati Flag","url":"https://s1.vika.cn/space/2021/05/29/11b3e025dbad4efda1539c4653480368","token":"space/2021/05/29/11b3e025dbad4efda1539c4653480368","category_id":"flags"},"flag-km":{"native":"🇰🇲","name":"Comoros Flag","url":"https://s1.vika.cn/space/2021/05/29/d3633cd6d37f4ec6a3839755a9f21ab5","token":"space/2021/05/29/d3633cd6d37f4ec6a3839755a9f21ab5","category_id":"flags"},"flag-kn":{"native":"🇰🇳","name":"St. Kitts & Nevis Flag","url":"https://s1.vika.cn/space/2021/05/29/6027ca19805f44da8fdf2afd52235e08","token":"space/2021/05/29/6027ca19805f44da8fdf2afd52235e08","category_id":"flags"},"flag-kp":{"native":"🇰🇵","name":"North Korea Flag","url":"https://s1.vika.cn/space/2021/05/29/c663882838a64e2a9ee882e886d29e62","token":"space/2021/05/29/c663882838a64e2a9ee882e886d29e62","category_id":"flags"},"flag-kw":{"native":"🇰🇼","name":"Kuwait Flag","url":"https://s1.vika.cn/space/2021/05/29/d69f3c6b16ff4c649471b2fae3daa221","token":"space/2021/05/29/d69f3c6b16ff4c649471b2fae3daa221","category_id":"flags"},"flag-ky":{"native":"🇰🇾","name":"Cayman Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/7926b8a6aaa24f0f88b8012d880fd541","token":"space/2021/05/29/7926b8a6aaa24f0f88b8012d880fd541","category_id":"flags"},"flag-kz":{"native":"🇰🇿","name":"Kazakhstan Flag","url":"https://s1.vika.cn/space/2021/05/29/41661f55bbbb4a6aa5f240b899e3ff20","token":"space/2021/05/29/41661f55bbbb4a6aa5f240b899e3ff20","category_id":"flags"},"flag-lb":{"native":"🇱🇧","name":"Lebanon Flag","url":"https://s1.vika.cn/space/2021/05/29/df3e0062dcd94abeab9db11e7e118448","token":"space/2021/05/29/df3e0062dcd94abeab9db11e7e118448","category_id":"flags"},"flag-lc":{"native":"🇱🇨","name":"St. Lucia Flag","url":"https://s1.vika.cn/space/2021/05/29/07fbd3cc70b14ffa8262401371b63e14","token":"space/2021/05/29/07fbd3cc70b14ffa8262401371b63e14","category_id":"flags"},"flag-li":{"native":"🇱🇮","name":"Liechtenstein Flag","url":"https://s1.vika.cn/space/2021/05/29/57538d33657349e589400be1b6b84cb7","token":"space/2021/05/29/57538d33657349e589400be1b6b84cb7","category_id":"flags"},"flag-lk":{"native":"🇱🇰","name":"Sri Lanka Flag","url":"https://s1.vika.cn/space/2021/05/29/2059d1f2fdbf4c10b25f2d345bdfea98","token":"space/2021/05/29/2059d1f2fdbf4c10b25f2d345bdfea98","category_id":"flags"},"flag-lr":{"native":"🇱🇷","name":"Liberia Flag","url":"https://s1.vika.cn/space/2021/05/29/6498897a1ee04db0a20ef8cc70e2296c","token":"space/2021/05/29/6498897a1ee04db0a20ef8cc70e2296c","category_id":"flags"},"flag-ls":{"native":"🇱🇸","name":"Lesotho Flag","url":"https://s1.vika.cn/space/2021/05/29/0237632478ee4993a6b12900bbaf5733","token":"space/2021/05/29/0237632478ee4993a6b12900bbaf5733","category_id":"flags"},"flag-lt":{"native":"🇱🇹","name":"Lithuania Flag","url":"https://s1.vika.cn/space/2021/05/29/b33cdab954d64cbcb96030e25049246b","token":"space/2021/05/29/b33cdab954d64cbcb96030e25049246b","category_id":"flags"},"flag-lu":{"native":"🇱🇺","name":"Luxembourg Flag","url":"https://s1.vika.cn/space/2021/05/29/329c3782d383428b9e8d1257e2f92ce8","token":"space/2021/05/29/329c3782d383428b9e8d1257e2f92ce8","category_id":"flags"},"flag-lv":{"native":"🇱🇻","name":"Latvia Flag","url":"https://s1.vika.cn/space/2021/05/29/a1b1416dfead4edbb988cfc665a12d76","token":"space/2021/05/29/a1b1416dfead4edbb988cfc665a12d76","category_id":"flags"},"flag-ly":{"native":"🇱🇾","name":"Libya Flag","url":"https://s1.vika.cn/space/2021/05/29/35628b7160694476a31558a2b4ee4ec7","token":"space/2021/05/29/35628b7160694476a31558a2b4ee4ec7","category_id":"flags"},"flag-ma":{"native":"🇲🇦","name":"Morocco Flag","url":"https://s1.vika.cn/space/2021/05/29/3c2ba0ee880748dfa993ad09566156ab","token":"space/2021/05/29/3c2ba0ee880748dfa993ad09566156ab","category_id":"flags"},"flag-mc":{"native":"🇲🇨","name":"Monaco Flag","url":"https://s1.vika.cn/space/2021/05/29/05bb1b996a684fa69e922cc42ba9b67f","token":"space/2021/05/29/05bb1b996a684fa69e922cc42ba9b67f","category_id":"flags"},"flag-md":{"native":"🇲🇩","name":"Moldova Flag","url":"https://s1.vika.cn/space/2021/05/29/ef970847a3d14b3fbc22f7be36945557","token":"space/2021/05/29/ef970847a3d14b3fbc22f7be36945557","category_id":"flags"},"flag-me":{"native":"🇲🇪","name":"Montenegro Flag","url":"https://s1.vika.cn/space/2021/05/29/82c546aee1b04ad5b2da9bbaa5d57d42","token":"space/2021/05/29/82c546aee1b04ad5b2da9bbaa5d57d42","category_id":"flags"},"flag-mf":{"native":"🇲🇫","name":"St. Martin Flag","url":"https://s1.vika.cn/space/2021/05/29/3df4a7f7de9445678df57f0dc0daf80a","token":"space/2021/05/29/3df4a7f7de9445678df57f0dc0daf80a","category_id":"flags"},"flag-mg":{"native":"🇲🇬","name":"Madagascar Flag","url":"https://s1.vika.cn/space/2021/05/29/d554826f3caf45d1a8a465f0aea8d8c8","token":"space/2021/05/29/d554826f3caf45d1a8a465f0aea8d8c8","category_id":"flags"},"flag-mh":{"native":"🇲🇭","name":"Marshall Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/d11cf89d5d42499bb8fa69ff38ada86d","token":"space/2021/05/29/d11cf89d5d42499bb8fa69ff38ada86d","category_id":"flags"},"flag-mk":{"native":"🇲🇰","name":"North Macedonia Flag","url":"https://s1.vika.cn/space/2021/05/29/ceae3c72c7cc40fe97d16dcab0747c60","token":"space/2021/05/29/ceae3c72c7cc40fe97d16dcab0747c60","category_id":"flags"},"flag-ml":{"native":"🇲🇱","name":"Mali Flag","url":"https://s1.vika.cn/space/2021/05/29/494b617382fb472f862bcb36b91aac19","token":"space/2021/05/29/494b617382fb472f862bcb36b91aac19","category_id":"flags"},"flag-mm":{"native":"🇲🇲","name":"Myanmar (burma) Flag","url":"https://s1.vika.cn/space/2021/05/29/93c69258c3f6411eaa26e71528e00e8c","token":"space/2021/05/29/93c69258c3f6411eaa26e71528e00e8c","category_id":"flags"},"flag-mn":{"native":"🇲🇳","name":"Mongolia Flag","url":"https://s1.vika.cn/space/2021/05/29/346a89fb74684aaabbd545f3c24362c8","token":"space/2021/05/29/346a89fb74684aaabbd545f3c24362c8","category_id":"flags"},"flag-mo":{"native":"🇲🇴","name":"Macao Sar China Flag","url":"https://s1.vika.cn/space/2021/05/29/7a8c944e80bf4e4f9694e5742d5aa3ee","token":"space/2021/05/29/7a8c944e80bf4e4f9694e5742d5aa3ee","category_id":"flags"},"flag-mp":{"native":"🇲🇵","name":"Northern Mariana Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/a2f266f42e404e9db550e033884f0c55","token":"space/2021/05/29/a2f266f42e404e9db550e033884f0c55","category_id":"flags"},"flag-mq":{"native":"🇲🇶","name":"Martinique Flag","url":"https://s1.vika.cn/space/2021/05/29/2d01d905b5d0407dbaba01adf0667369","token":"space/2021/05/29/2d01d905b5d0407dbaba01adf0667369","category_id":"flags"},"flag-mr":{"native":"🇲🇷","name":"Mauritania Flag","url":"https://s1.vika.cn/space/2021/05/29/fa8889808f924a2e9624990a4f09581d","token":"space/2021/05/29/fa8889808f924a2e9624990a4f09581d","category_id":"flags"},"flag-ms":{"native":"🇲🇸","name":"Montserrat Flag","url":"https://s1.vika.cn/space/2021/05/29/b9799363065d49fb9121bca7c049e855","token":"space/2021/05/29/b9799363065d49fb9121bca7c049e855","category_id":"flags"},"flag-mt":{"native":"🇲🇹","name":"Malta Flag","url":"https://s1.vika.cn/space/2021/05/29/42aea9a5f6344f41af54af53d1e904e8","token":"space/2021/05/29/42aea9a5f6344f41af54af53d1e904e8","category_id":"flags"},"flag-mu":{"native":"🇲🇺","name":"Mauritius Flag","url":"https://s1.vika.cn/space/2021/05/29/31e03e6758b944eab7889548e48d3b87","token":"space/2021/05/29/31e03e6758b944eab7889548e48d3b87","category_id":"flags"},"flag-mv":{"native":"🇲🇻","name":"Maldives Flag","url":"https://s1.vika.cn/space/2021/05/29/b31d98c1ced749df98564f8528fc0c51","token":"space/2021/05/29/b31d98c1ced749df98564f8528fc0c51","category_id":"flags"},"flag-mw":{"native":"🇲🇼","name":"Malawi Flag","url":"https://s1.vika.cn/space/2021/05/29/002a3a1dfff84d0fa4d1d27da54258a5","token":"space/2021/05/29/002a3a1dfff84d0fa4d1d27da54258a5","category_id":"flags"},"flag-mx":{"native":"🇲🇽","name":"Mexico Flag","url":"https://s1.vika.cn/space/2021/05/29/f921555b218342638b5ad92b145e1926","token":"space/2021/05/29/f921555b218342638b5ad92b145e1926","category_id":"flags"},"flag-my":{"native":"🇲🇾","name":"Malaysia Flag","url":"https://s1.vika.cn/space/2021/05/29/f9b5c1c1c024438c83d9f21e830f3cef","token":"space/2021/05/29/f9b5c1c1c024438c83d9f21e830f3cef","category_id":"flags"},"flag-mz":{"native":"🇲🇿","name":"Mozambique Flag","url":"https://s1.vika.cn/space/2021/05/29/8bc37077b7ba4960be3d9be82d573fab","token":"space/2021/05/29/8bc37077b7ba4960be3d9be82d573fab","category_id":"flags"},"flag-na":{"native":"🇳🇦","name":"Namibia Flag","url":"https://s1.vika.cn/space/2021/05/29/7a235c0c788546bb8bb5b19afbc61205","token":"space/2021/05/29/7a235c0c788546bb8bb5b19afbc61205","category_id":"flags"},"flag-nc":{"native":"🇳🇨","name":"New Caledonia Flag","url":"https://s1.vika.cn/space/2021/05/29/1bcfd366e9664e76b28f698292c1c1b4","token":"space/2021/05/29/1bcfd366e9664e76b28f698292c1c1b4","category_id":"flags"},"flag-ne":{"native":"🇳🇪","name":"Niger Flag","url":"https://s1.vika.cn/space/2021/05/29/b7c3ef79e10a4885a6ee782d33033295","token":"space/2021/05/29/b7c3ef79e10a4885a6ee782d33033295","category_id":"flags"},"flag-nf":{"native":"🇳🇫","name":"Norfolk Island Flag","url":"https://s1.vika.cn/space/2021/05/29/7e0d3c23b6624b8299bbd501fa024f5f","token":"space/2021/05/29/7e0d3c23b6624b8299bbd501fa024f5f","category_id":"flags"},"flag-ng":{"native":"🇳🇬","name":"Nigeria Flag","url":"https://s1.vika.cn/space/2021/05/29/05dc515bca2b41308d9bc1cc955a5cfd","token":"space/2021/05/29/05dc515bca2b41308d9bc1cc955a5cfd","category_id":"flags"},"flag-ni":{"native":"🇳🇮","name":"Nicaragua Flag","url":"https://s1.vika.cn/space/2021/05/29/ed429715c38c40809835a9777f46fe24","token":"space/2021/05/29/ed429715c38c40809835a9777f46fe24","category_id":"flags"},"flag-nl":{"native":"🇳🇱","name":"Netherlands Flag","url":"https://s1.vika.cn/space/2021/05/29/44f550265cef40c895b0ce211f6f5bae","token":"space/2021/05/29/44f550265cef40c895b0ce211f6f5bae","category_id":"flags"},"flag-no":{"native":"🇳🇴","name":"Norway Flag","url":"https://s1.vika.cn/space/2021/05/29/ff2e1b2743714cf1aa5392857303c9b3","token":"space/2021/05/29/ff2e1b2743714cf1aa5392857303c9b3","category_id":"flags"},"flag-np":{"native":"🇳🇵","name":"Nepal Flag","url":"https://s1.vika.cn/space/2021/05/29/9cf8992302734d009e71986757430668","token":"space/2021/05/29/9cf8992302734d009e71986757430668","category_id":"flags"},"flag-nr":{"native":"🇳🇷","name":"Nauru Flag","url":"https://s1.vika.cn/space/2021/05/29/7a2880a515b045e19998c131af034039","token":"space/2021/05/29/7a2880a515b045e19998c131af034039","category_id":"flags"},"flag-nu":{"native":"🇳🇺","name":"Niue Flag","url":"https://s1.vika.cn/space/2021/05/29/2b8397e49748466dbc28db2794e4c375","token":"space/2021/05/29/2b8397e49748466dbc28db2794e4c375","category_id":"flags"},"flag-nz":{"native":"🇳🇿","name":"New Zealand Flag","url":"https://s1.vika.cn/space/2021/05/29/2d28e15db04a443685bc04e7df9e0335","token":"space/2021/05/29/2d28e15db04a443685bc04e7df9e0335","category_id":"flags"},"flag-om":{"native":"🇴🇲","name":"Oman Flag","url":"https://s1.vika.cn/space/2021/05/29/3ef047ae9b9f4768a2d0e6555f2701d4","token":"space/2021/05/29/3ef047ae9b9f4768a2d0e6555f2701d4","category_id":"flags"},"flag-pa":{"native":"🇵🇦","name":"Panama Flag","url":"https://s1.vika.cn/space/2021/05/29/e905556efbd6494fa6f92cb627715d5e","token":"space/2021/05/29/e905556efbd6494fa6f92cb627715d5e","category_id":"flags"},"flag-pe":{"native":"🇵🇪","name":"Peru Flag","url":"https://s1.vika.cn/space/2021/05/29/f2b059cf1c6448eba9d1845059e270f6","token":"space/2021/05/29/f2b059cf1c6448eba9d1845059e270f6","category_id":"flags"},"flag-pf":{"native":"🇵🇫","name":"French Polynesia Flag","url":"https://s1.vika.cn/space/2021/05/29/747a45af6953475eb1bccc5d5ce6ed60","token":"space/2021/05/29/747a45af6953475eb1bccc5d5ce6ed60","category_id":"flags"},"flag-pg":{"native":"🇵🇬","name":"Papua New Guinea Flag","url":"https://s1.vika.cn/space/2021/05/29/588a5f1d7cb24829a77ba5403e9b8a8e","token":"space/2021/05/29/588a5f1d7cb24829a77ba5403e9b8a8e","category_id":"flags"},"flag-ph":{"native":"🇵🇭","name":"Philippines Flag","url":"https://s1.vika.cn/space/2021/05/29/9d192203afe14e90a54c9dd0bd7c02f0","token":"space/2021/05/29/9d192203afe14e90a54c9dd0bd7c02f0","category_id":"flags"},"flag-pk":{"native":"🇵🇰","name":"Pakistan Flag","url":"https://s1.vika.cn/space/2021/05/29/ed9c23992da647f682300ac514a7b982","token":"space/2021/05/29/ed9c23992da647f682300ac514a7b982","category_id":"flags"},"flag-pl":{"native":"🇵🇱","name":"Poland Flag","url":"https://s1.vika.cn/space/2021/05/29/6f8e47eacbe446f5bc7a4aa9ea2128d6","token":"space/2021/05/29/6f8e47eacbe446f5bc7a4aa9ea2128d6","category_id":"flags"},"flag-pm":{"native":"🇵🇲","name":"St. Pierre & Miquelon Flag","url":"https://s1.vika.cn/space/2021/05/29/b1b27c357c174627b1b7bfa4d0deec35","token":"space/2021/05/29/b1b27c357c174627b1b7bfa4d0deec35","category_id":"flags"},"flag-pn":{"native":"🇵🇳","name":"Pitcairn Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/ea6425e00243407b8134131e10e71146","token":"space/2021/05/29/ea6425e00243407b8134131e10e71146","category_id":"flags"},"flag-pr":{"native":"🇵🇷","name":"Puerto Rico Flag","url":"https://s1.vika.cn/space/2021/05/29/b1092df440b84737b4ff7aee37f24be9","token":"space/2021/05/29/b1092df440b84737b4ff7aee37f24be9","category_id":"flags"},"flag-ps":{"native":"🇵🇸","name":"Palestinian Territories Flag","url":"https://s1.vika.cn/space/2021/05/29/db976f9c5cbf4e218e421b4c189d93f6","token":"space/2021/05/29/db976f9c5cbf4e218e421b4c189d93f6","category_id":"flags"},"flag-pt":{"native":"🇵🇹","name":"Portugal Flag","url":"https://s1.vika.cn/space/2021/05/29/d04be37d5a23489daaca3e92a10b1fbf","token":"space/2021/05/29/d04be37d5a23489daaca3e92a10b1fbf","category_id":"flags"},"flag-pw":{"native":"🇵🇼","name":"Palau Flag","url":"https://s1.vika.cn/space/2021/05/29/b008d4c52f4e467f934ea2ca5f53c343","token":"space/2021/05/29/b008d4c52f4e467f934ea2ca5f53c343","category_id":"flags"},"flag-py":{"native":"🇵🇾","name":"Paraguay Flag","url":"https://s1.vika.cn/space/2021/05/29/5e659b95bb30496ba047b8c5606f0009","token":"space/2021/05/29/5e659b95bb30496ba047b8c5606f0009","category_id":"flags"},"flag-qa":{"native":"🇶🇦","name":"Qatar Flag","url":"https://s1.vika.cn/space/2021/05/29/0b845613b08344959ee57200055b6e20","token":"space/2021/05/29/0b845613b08344959ee57200055b6e20","category_id":"flags"},"flag-re":{"native":"🇷🇪","name":"Réunion Flag","url":"https://s1.vika.cn/space/2021/05/29/1ae98c6685d042feaf6c76299535db26","token":"space/2021/05/29/1ae98c6685d042feaf6c76299535db26","category_id":"flags"},"flag-ro":{"native":"🇷🇴","name":"Romania Flag","url":"https://s1.vika.cn/space/2021/05/29/01ba65f690b4425895da0597b54cacef","token":"space/2021/05/29/01ba65f690b4425895da0597b54cacef","category_id":"flags"},"flag-rs":{"native":"🇷🇸","name":"Serbia Flag","url":"https://s1.vika.cn/space/2021/05/29/5a7b782d21464e93b6e0ffd95a949cb9","token":"space/2021/05/29/5a7b782d21464e93b6e0ffd95a949cb9","category_id":"flags"},"flag-rw":{"native":"🇷🇼","name":"Rwanda Flag","url":"https://s1.vika.cn/space/2021/05/29/00273fbd5ba0487ebc87589920d259e4","token":"space/2021/05/29/00273fbd5ba0487ebc87589920d259e4","category_id":"flags"},"flag-sa":{"native":"🇸🇦","name":"Saudi Arabia Flag","url":"https://s1.vika.cn/space/2021/05/29/6ed8913d67be4f05941742fa41581646","token":"space/2021/05/29/6ed8913d67be4f05941742fa41581646","category_id":"flags"},"flag-sb":{"native":"🇸🇧","name":"Solomon Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/310df0ea43bb4f53864624f4be4b83a1","token":"space/2021/05/29/310df0ea43bb4f53864624f4be4b83a1","category_id":"flags"},"flag-sc":{"native":"🇸🇨","name":"Seychelles Flag","url":"https://s1.vika.cn/space/2021/05/29/a51ef82907be4aada8fb9e943d991dc9","token":"space/2021/05/29/a51ef82907be4aada8fb9e943d991dc9","category_id":"flags"},"flag-scotland":{"native":"🏴󠁧󠁢󠁳󠁣󠁴󠁿","name":"Scotland Flag","url":"https://s1.vika.cn/space/2021/05/29/9755537853b44c24b16b7bb06b5ac47f","token":"space/2021/05/29/9755537853b44c24b16b7bb06b5ac47f","category_id":"flags"},"flag-sd":{"native":"🇸🇩","name":"Sudan Flag","url":"https://s1.vika.cn/space/2021/05/29/a34cd029fbe44a7cb9aec6ccba0bf284","token":"space/2021/05/29/a34cd029fbe44a7cb9aec6ccba0bf284","category_id":"flags"},"flag-se":{"native":"🇸🇪","name":"Sweden Flag","url":"https://s1.vika.cn/space/2021/05/29/52f3048f22124fb19d39bcb75c1b9e67","token":"space/2021/05/29/52f3048f22124fb19d39bcb75c1b9e67","category_id":"flags"},"flag-sg":{"native":"🇸🇬","name":"Singapore Flag","url":"https://s1.vika.cn/space/2021/05/29/9e3435570c6e435abeea344e40c44f96","token":"space/2021/05/29/9e3435570c6e435abeea344e40c44f96","category_id":"flags"},"flag-sh":{"native":"🇸🇭","name":"St. Helena Flag","url":"https://s1.vika.cn/space/2021/05/29/019dc65b722c49d49c500ae13c86b889","token":"space/2021/05/29/019dc65b722c49d49c500ae13c86b889","category_id":"flags"},"flag-si":{"native":"🇸🇮","name":"Slovenia Flag","url":"https://s1.vika.cn/space/2021/05/29/983994731a32441480fb1548fd859832","token":"space/2021/05/29/983994731a32441480fb1548fd859832","category_id":"flags"},"flag-sj":{"native":"🇸🇯","name":"Svalbard & Jan Mayen Flag","url":"https://s1.vika.cn/space/2021/05/29/79f643f267fe4ed3ac328a0246d1e11b","token":"space/2021/05/29/79f643f267fe4ed3ac328a0246d1e11b","category_id":"flags"},"flag-sk":{"native":"🇸🇰","name":"Slovakia Flag","url":"https://s1.vika.cn/space/2021/05/29/e1fcd9df220647dfb8a3d5386912bda3","token":"space/2021/05/29/e1fcd9df220647dfb8a3d5386912bda3","category_id":"flags"},"flag-sl":{"native":"🇸🇱","name":"Sierra Leone Flag","url":"https://s1.vika.cn/space/2021/05/29/67b4ba25f16f45a69e0e6c60fd7ae2bd","token":"space/2021/05/29/67b4ba25f16f45a69e0e6c60fd7ae2bd","category_id":"flags"},"flag-sm":{"native":"🇸🇲","name":"San Marino Flag","url":"https://s1.vika.cn/space/2021/05/29/6879b761cc8742cdb4796af5a77cf9af","token":"space/2021/05/29/6879b761cc8742cdb4796af5a77cf9af","category_id":"flags"},"flag-sn":{"native":"🇸🇳","name":"Senegal Flag","url":"https://s1.vika.cn/space/2021/05/29/b278c13731bd47adb472395408dda9e1","token":"space/2021/05/29/b278c13731bd47adb472395408dda9e1","category_id":"flags"},"flag-so":{"native":"🇸🇴","name":"Somalia Flag","url":"https://s1.vika.cn/space/2021/05/29/d265e5bb2ccd4996829125938a754568","token":"space/2021/05/29/d265e5bb2ccd4996829125938a754568","category_id":"flags"},"flag-sr":{"native":"🇸🇷","name":"Suriname Flag","url":"https://s1.vika.cn/space/2021/05/29/744103d5f296451ca55f9641002f27ad","token":"space/2021/05/29/744103d5f296451ca55f9641002f27ad","category_id":"flags"},"flag-ss":{"native":"🇸🇸","name":"South Sudan Flag","url":"https://s1.vika.cn/space/2021/05/29/f1385a18872944079f47620eeaf82ff0","token":"space/2021/05/29/f1385a18872944079f47620eeaf82ff0","category_id":"flags"},"flag-st":{"native":"🇸🇹","name":"São Tomé & Príncipe Flag","url":"https://s1.vika.cn/space/2021/05/29/4581a6b808a44db68b0de5225d0ae505","token":"space/2021/05/29/4581a6b808a44db68b0de5225d0ae505","category_id":"flags"},"flag-sv":{"native":"🇸🇻","name":"El Salvador Flag","url":"https://s1.vika.cn/space/2021/05/29/6523f67ab359469486baaf7f6bdaf16b","token":"space/2021/05/29/6523f67ab359469486baaf7f6bdaf16b","category_id":"flags"},"flag-sx":{"native":"🇸🇽","name":"Sint Maarten Flag","url":"https://s1.vika.cn/space/2021/05/29/505c29e5354e41f7836bec32dd29b7da","token":"space/2021/05/29/505c29e5354e41f7836bec32dd29b7da","category_id":"flags"},"flag-sy":{"native":"🇸🇾","name":"Syria Flag","url":"https://s1.vika.cn/space/2021/05/29/6576fceebd084117a38c320959fe08b9","token":"space/2021/05/29/6576fceebd084117a38c320959fe08b9","category_id":"flags"},"flag-sz":{"native":"🇸🇿","name":"Eswatini Flag","url":"https://s1.vika.cn/space/2021/05/29/1c06783dab39425f9b82f301dd6edab9","token":"space/2021/05/29/1c06783dab39425f9b82f301dd6edab9","category_id":"flags"},"flag-ta":{"native":"🇹🇦","name":"Tristan Da Cunha Flag","url":"https://s1.vika.cn/space/2021/05/29/250974f6fe824da3bdb7f4c683b67dfd","token":"space/2021/05/29/250974f6fe824da3bdb7f4c683b67dfd","category_id":"flags"},"flag-tc":{"native":"🇹🇨","name":"Turks & Caicos Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/32c381cc80cc49ca8a10c83348f1c867","token":"space/2021/05/29/32c381cc80cc49ca8a10c83348f1c867","category_id":"flags"},"flag-td":{"native":"🇹🇩","name":"Chad Flag","url":"https://s1.vika.cn/space/2021/05/29/f5ad980caeae490cafbff911a5061300","token":"space/2021/05/29/f5ad980caeae490cafbff911a5061300","category_id":"flags"},"flag-tf":{"native":"🇹🇫","name":"French Southern Territories Flag","url":"https://s1.vika.cn/space/2021/05/29/258ecbddf02d446281f46b5af0be0c58","token":"space/2021/05/29/258ecbddf02d446281f46b5af0be0c58","category_id":"flags"},"flag-tg":{"native":"🇹🇬","name":"Togo Flag","url":"https://s1.vika.cn/space/2021/05/29/4b6ad8aad7a346bc995bcedcced18261","token":"space/2021/05/29/4b6ad8aad7a346bc995bcedcced18261","category_id":"flags"},"flag-th":{"native":"🇹🇭","name":"Thailand Flag","url":"https://s1.vika.cn/space/2021/05/29/cbdc252af25347d48e147ceb4a215cc6","token":"space/2021/05/29/cbdc252af25347d48e147ceb4a215cc6","category_id":"flags"},"flag-tj":{"native":"🇹🇯","name":"Tajikistan Flag","url":"https://s1.vika.cn/space/2021/05/29/c137a9a7197f4c67a7f0ad113fe75f61","token":"space/2021/05/29/c137a9a7197f4c67a7f0ad113fe75f61","category_id":"flags"},"flag-tk":{"native":"🇹🇰","name":"Tokelau Flag","url":"https://s1.vika.cn/space/2021/05/29/25036f8824f64966aac88dc6ab3b7cfd","token":"space/2021/05/29/25036f8824f64966aac88dc6ab3b7cfd","category_id":"flags"},"flag-tl":{"native":"🇹🇱","name":"Timor-Leste Flag","url":"https://s1.vika.cn/space/2021/05/29/b5f6890cdb0f441684424e31e06ba081","token":"space/2021/05/29/b5f6890cdb0f441684424e31e06ba081","category_id":"flags"},"flag-tm":{"native":"🇹🇲","name":"Turkmenistan Flag","url":"https://s1.vika.cn/space/2021/05/29/01a49c9253e7445e9f05293612bff373","token":"space/2021/05/29/01a49c9253e7445e9f05293612bff373","category_id":"flags"},"flag-tn":{"native":"🇹🇳","name":"Tunisia Flag","url":"https://s1.vika.cn/space/2021/05/29/34838c9ad50744d7acf54287e1e8d352","token":"space/2021/05/29/34838c9ad50744d7acf54287e1e8d352","category_id":"flags"},"flag-to":{"native":"🇹🇴","name":"Tonga Flag","url":"https://s1.vika.cn/space/2021/05/29/1e647f0fa53047b0804aeecda52989ef","token":"space/2021/05/29/1e647f0fa53047b0804aeecda52989ef","category_id":"flags"},"flag-tr":{"native":"🇹🇷","name":"Turkey Flag","url":"https://s1.vika.cn/space/2021/05/29/16c1f7d5d4ba4d7799d8d782fa5942b3","token":"space/2021/05/29/16c1f7d5d4ba4d7799d8d782fa5942b3","category_id":"flags"},"flag-tt":{"native":"🇹🇹","name":"Trinidad & Tobago Flag","url":"https://s1.vika.cn/space/2021/05/29/1a6d1be7fbfd46abb09c8771c10f5b4a","token":"space/2021/05/29/1a6d1be7fbfd46abb09c8771c10f5b4a","category_id":"flags"},"flag-tv":{"native":"🇹🇻","name":"Tuvalu Flag","url":"https://s1.vika.cn/space/2021/05/29/dfa2893285004c9d9b76607d562b856b","token":"space/2021/05/29/dfa2893285004c9d9b76607d562b856b","category_id":"flags"},"flag-tw":{"native":"🇹🇼","name":"Taiwan Flag","url":"https://s1.vika.cn/space/2021/05/29/63cf42e6b2554a5b8fd7c653c04c8578","token":"space/2021/05/29/63cf42e6b2554a5b8fd7c653c04c8578","category_id":"flags"},"flag-tz":{"native":"🇹🇿","name":"Tanzania Flag","url":"https://s1.vika.cn/space/2021/05/29/a50964fc67d041e0afb4c6c003b615c2","token":"space/2021/05/29/a50964fc67d041e0afb4c6c003b615c2","category_id":"flags"},"flag-ua":{"native":"🇺🇦","name":"Ukraine Flag","url":"https://s1.vika.cn/space/2021/05/29/d31a90f087c7484187d3e864c8c125d5","token":"space/2021/05/29/d31a90f087c7484187d3e864c8c125d5","category_id":"flags"},"flag-ug":{"native":"🇺🇬","name":"Uganda Flag","url":"https://s1.vika.cn/space/2021/05/29/072d7ef1887a49f99cece8c6e998af62","token":"space/2021/05/29/072d7ef1887a49f99cece8c6e998af62","category_id":"flags"},"flag-um":{"native":"🇺🇲","name":"U.s. Outlying Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/c62eb191d07945878f6180bdf72e2b10","token":"space/2021/05/29/c62eb191d07945878f6180bdf72e2b10","category_id":"flags"},"flag-uy":{"native":"🇺🇾","name":"Uruguay Flag","url":"https://s1.vika.cn/space/2021/05/29/9f9eef5a92ed4c5cb208cbb9ef6bb18e","token":"space/2021/05/29/9f9eef5a92ed4c5cb208cbb9ef6bb18e","category_id":"flags"},"flag-uz":{"native":"🇺🇿","name":"Uzbekistan Flag","url":"https://s1.vika.cn/space/2021/05/29/26f2f144cfc244d48d893afbf1aec466","token":"space/2021/05/29/26f2f144cfc244d48d893afbf1aec466","category_id":"flags"},"flag-va":{"native":"🇻🇦","name":"Vatican City Flag","url":"https://s1.vika.cn/space/2021/05/29/d889ed24dd4040d28fcbd74fee24dd5a","token":"space/2021/05/29/d889ed24dd4040d28fcbd74fee24dd5a","category_id":"flags"},"flag-vc":{"native":"🇻🇨","name":"St. Vincent & Grenadines Flag","url":"https://s1.vika.cn/space/2021/05/29/50d58202d2aa461aa634a101ab6cae05","token":"space/2021/05/29/50d58202d2aa461aa634a101ab6cae05","category_id":"flags"},"flag-ve":{"native":"🇻🇪","name":"Venezuela Flag","url":"https://s1.vika.cn/space/2021/05/29/83ef4e7df0fc4e2892ce86aaf7ef33cf","token":"space/2021/05/29/83ef4e7df0fc4e2892ce86aaf7ef33cf","category_id":"flags"},"flag-vg":{"native":"🇻🇬","name":"British Virgin Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/771e7d4aba774655aea4a0fd74dfacb6","token":"space/2021/05/29/771e7d4aba774655aea4a0fd74dfacb6","category_id":"flags"},"flag-vi":{"native":"🇻🇮","name":"U.s. Virgin Islands Flag","url":"https://s1.vika.cn/space/2021/05/29/d2e1d025cb344da985130bb3be7f9d72","token":"space/2021/05/29/d2e1d025cb344da985130bb3be7f9d72","category_id":"flags"},"flag-vn":{"native":"🇻🇳","name":"Vietnam Flag","url":"https://s1.vika.cn/space/2021/05/29/15d1fe0b969d41d4a2de1d8bd154dc2b","token":"space/2021/05/29/15d1fe0b969d41d4a2de1d8bd154dc2b","category_id":"flags"},"flag-vu":{"native":"🇻🇺","name":"Vanuatu Flag","url":"https://s1.vika.cn/space/2021/05/29/aee99d989a5f46babb746825576d4fe3","token":"space/2021/05/29/aee99d989a5f46babb746825576d4fe3","category_id":"flags"},"flag-wales":{"native":"🏴󠁧󠁢󠁷󠁬󠁳󠁿","name":"Wales Flag","url":"https://s1.vika.cn/space/2021/05/29/f6d0deae7aad4401971c64ac495f043d","token":"space/2021/05/29/f6d0deae7aad4401971c64ac495f043d","category_id":"flags"},"flag-wf":{"native":"🇼🇫","name":"Wallis & Futuna Flag","url":"https://s1.vika.cn/space/2021/05/29/acf377453d4749d4914bf34fd00553f5","token":"space/2021/05/29/acf377453d4749d4914bf34fd00553f5","category_id":"flags"},"flag-ws":{"native":"🇼🇸","name":"Samoa Flag","url":"https://s1.vika.cn/space/2021/05/29/ceef8972093e4ee9806175693fff0738","token":"space/2021/05/29/ceef8972093e4ee9806175693fff0738","category_id":"flags"},"flag-xk":{"native":"🇽🇰","name":"Kosovo Flag","url":"https://s1.vika.cn/space/2021/05/29/dcef3de9f9bf43ad9b25d0be4b866dfc","token":"space/2021/05/29/dcef3de9f9bf43ad9b25d0be4b866dfc","category_id":"flags"},"flag-ye":{"native":"🇾🇪","name":"Yemen Flag","url":"https://s1.vika.cn/space/2021/05/29/254b68f03622436ba71bbf0acf7d9331","token":"space/2021/05/29/254b68f03622436ba71bbf0acf7d9331","category_id":"flags"},"flag-yt":{"native":"🇾🇹","name":"Mayotte Flag","url":"https://s1.vika.cn/space/2021/05/29/1cd2a0d6a0d54511bb80cff3f71dd839","token":"space/2021/05/29/1cd2a0d6a0d54511bb80cff3f71dd839","category_id":"flags"},"flag-za":{"native":"🇿🇦","name":"South Africa Flag","url":"https://s1.vika.cn/space/2021/05/29/b3ff12cddc6f41d591629b270e85b243","token":"space/2021/05/29/b3ff12cddc6f41d591629b270e85b243","category_id":"flags"},"flag-zm":{"native":"🇿🇲","name":"Zambia Flag","url":"https://s1.vika.cn/space/2021/05/29/e4379ecb4fdd4c9ab4bdae4ef5341218","token":"space/2021/05/29/e4379ecb4fdd4c9ab4bdae4ef5341218","category_id":"flags"},"flag-zw":{"native":"🇿🇼","name":"Zimbabwe Flag","url":"https://s1.vika.cn/space/2021/05/29/30566e4676eb445e9712ccc548bc4490","token":"space/2021/05/29/30566e4676eb445e9712ccc548bc4490","category_id":"flags"},"flags":{"native":"🎏","name":"Carp Streamer","url":"https://s1.vika.cn/space/2021/05/29/52d34e8b63f24132950616c1c19de5fc","token":"space/2021/05/29/52d34e8b63f24132950616c1c19de5fc","category_id":"activity"},"flamingo":{"native":"🦩","name":"Flamingo","url":"https://s1.vika.cn/space/2021/05/29/8065ef1e584d4159a0877f7f4842c4d7","token":"space/2021/05/29/8065ef1e584d4159a0877f7f4842c4d7","category_id":"nature"},"flashlight":{"native":"🔦","name":"Electric Torch","url":"https://s1.vika.cn/space/2021/05/29/c9829da09cd848a09fbff55744afb191","token":"space/2021/05/29/c9829da09cd848a09fbff55744afb191","category_id":"objects"},"fleur_de_lis":{"native":"⚜️","name":"Fleur De Lis","url":"https://s1.vika.cn/space/2021/05/29/146d611579304779b691117dfdbb62d3","token":"space/2021/05/29/146d611579304779b691117dfdbb62d3","category_id":"symbols"},"floppy_disk":{"native":"💾","name":"Floppy Disk","url":"https://s1.vika.cn/space/2021/05/29/abb4ad87ccf144de875d749b55d87f2e","token":"space/2021/05/29/abb4ad87ccf144de875d749b55d87f2e","category_id":"objects"},"flower_playing_cards":{"native":"🎴","name":"Flower Playing Cards","url":"https://s1.vika.cn/space/2021/05/29/6638f473177a488696ea90cf00309cd1","token":"space/2021/05/29/6638f473177a488696ea90cf00309cd1","category_id":"activity"},"flushed":{"native":"😳","name":"Flushed Face","url":"https://s1.vika.cn/space/2021/05/29/642581a39e88414094bc197d3e644928","token":"space/2021/05/29/642581a39e88414094bc197d3e644928","category_id":"people"},"flying_disc":{"native":"🥏","name":"Flying Disc","url":"https://s1.vika.cn/space/2021/05/29/774407953957414393edc4d2e14a315c","token":"space/2021/05/29/774407953957414393edc4d2e14a315c","category_id":"activity"},"flying_saucer":{"native":"🛸","name":"Flying Saucer","url":"https://s1.vika.cn/space/2021/05/29/9bd95b3518e3481cadbdbb02170bf177","token":"space/2021/05/29/9bd95b3518e3481cadbdbb02170bf177","category_id":"places"},"fog":{"native":"🌫️","name":"Fog","url":"https://s1.vika.cn/space/2021/05/29/4430468ddbdc4b768353d624bcb48f74","token":"space/2021/05/29/4430468ddbdc4b768353d624bcb48f74","category_id":"places"},"foggy":{"native":"🌁","name":"Foggy","url":"https://s1.vika.cn/space/2021/05/29/001352cff3c84b26ba9e48434ae748a4","token":"space/2021/05/29/001352cff3c84b26ba9e48434ae748a4","category_id":"places"},"foot":{"native":"🦶","name":"Foot","url":"https://s1.vika.cn/space/2021/05/29/029ba67d6671421fbe3cf956dcbf1c96","token":"space/2021/05/29/029ba67d6671421fbe3cf956dcbf1c96","category_id":"people"},"football":{"native":"🏈","name":"American Football","url":"https://s1.vika.cn/space/2021/05/29/c61a90c9f09547c28b3c6c86f68decbf","token":"space/2021/05/29/c61a90c9f09547c28b3c6c86f68decbf","category_id":"activity"},"footprints":{"native":"👣","name":"Footprints","url":"https://s1.vika.cn/space/2021/05/29/1793c999887547b7a46905713ce5d164","token":"space/2021/05/29/1793c999887547b7a46905713ce5d164","category_id":"people"},"fork_and_knife":{"native":"🍴","name":"Fork and Knife","url":"https://s1.vika.cn/space/2021/05/29/5002c56e2c6243769c441661aa42a79e","token":"space/2021/05/29/5002c56e2c6243769c441661aa42a79e","category_id":"foods"},"fortune_cookie":{"native":"🥠","name":"Fortune Cookie","url":"https://s1.vika.cn/space/2021/05/29/05ad88111f7f42a4a9302bf3b415a0fc","token":"space/2021/05/29/05ad88111f7f42a4a9302bf3b415a0fc","category_id":"foods"},"fountain":{"native":"⛲","name":"Fountain","url":"https://s1.vika.cn/space/2021/05/29/1332be1115b44f17aa9b216bd724948f","token":"space/2021/05/29/1332be1115b44f17aa9b216bd724948f","category_id":"places"},"four":{"native":"4️⃣","name":"Keycap 4","url":"https://s1.vika.cn/space/2021/05/29/e4d9c1f1fb444316ad72d085d5087770","token":"space/2021/05/29/e4d9c1f1fb444316ad72d085d5087770","category_id":"symbols"},"four_leaf_clover":{"native":"🍀","name":"Four Leaf Clover","url":"https://s1.vika.cn/space/2021/05/29/a05954f5146c427c83d457ff020b1ec3","token":"space/2021/05/29/a05954f5146c427c83d457ff020b1ec3","category_id":"nature"},"fox_face":{"native":"🦊","name":"Fox Face","url":"https://s1.vika.cn/space/2021/05/29/beafa8ef0b734bd8b3d4b7803a683e8f","token":"space/2021/05/29/beafa8ef0b734bd8b3d4b7803a683e8f","category_id":"nature"},"fr":{"native":"🇫🇷","name":"France Flag","url":"https://s1.vika.cn/space/2021/05/29/f58cd8fe4a8f4c47ba15998f702f22e9","token":"space/2021/05/29/f58cd8fe4a8f4c47ba15998f702f22e9","category_id":"flags"},"frame_with_picture":{"native":"🖼️","name":"Frame with Picture","url":"https://s1.vika.cn/space/2021/05/29/679a0ff264a84a69a2231ad6c7596efc","token":"space/2021/05/29/679a0ff264a84a69a2231ad6c7596efc","category_id":"activity"},"free":{"native":"🆓","name":"Squared Free","url":"https://s1.vika.cn/space/2021/05/29/a64eca5ed9db4f39b1f9a849999c1f6e","token":"space/2021/05/29/a64eca5ed9db4f39b1f9a849999c1f6e","category_id":"symbols"},"fried_egg":{"native":"🍳","name":"Cooking","url":"https://s1.vika.cn/space/2021/05/29/1937ea08be89409cabed20040d327f0d","token":"space/2021/05/29/1937ea08be89409cabed20040d327f0d","category_id":"foods"},"fried_shrimp":{"native":"🍤","name":"Fried Shrimp","url":"https://s1.vika.cn/space/2021/05/29/e3ca6eee58734c7e9c6e1630bcfe8b83","token":"space/2021/05/29/e3ca6eee58734c7e9c6e1630bcfe8b83","category_id":"foods"},"fries":{"native":"🍟","name":"French Fries","url":"https://s1.vika.cn/space/2021/05/29/79ea15a4c4444ee5bf3061048a4e5d6e","token":"space/2021/05/29/79ea15a4c4444ee5bf3061048a4e5d6e","category_id":"foods"},"frog":{"native":"🐸","name":"Frog Face","url":"https://s1.vika.cn/space/2021/05/29/b7c1239c400042048a9d6624967ed468","token":"space/2021/05/29/b7c1239c400042048a9d6624967ed468","category_id":"nature"},"frowning":{"native":"😦","name":"Frowning Face with Open Mouth","url":"https://s1.vika.cn/space/2021/05/29/f3fc8ee9e53a4fc19f18ed5c271e301c","token":"space/2021/05/29/f3fc8ee9e53a4fc19f18ed5c271e301c","category_id":"people"},"fuelpump":{"native":"⛽","name":"Fuel Pump","url":"https://s1.vika.cn/space/2021/05/29/bc57f5f024194e0fba3c19d186397927","token":"space/2021/05/29/bc57f5f024194e0fba3c19d186397927","category_id":"places"},"full_moon":{"native":"🌕","name":"Full Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/02675abeece342a4bd2ef0cf775e8250","token":"space/2021/05/29/02675abeece342a4bd2ef0cf775e8250","category_id":"places"},"full_moon_with_face":{"native":"🌝","name":"Full Moon with Face","url":"https://s1.vika.cn/space/2021/05/29/82cdda7d46364b94b82a8c69dbec3374","token":"space/2021/05/29/82cdda7d46364b94b82a8c69dbec3374","category_id":"places"},"funeral_urn":{"native":"⚱️","name":"Funeral Urn","url":"https://s1.vika.cn/space/2021/05/29/2451310efc7148809134328438792da8","token":"space/2021/05/29/2451310efc7148809134328438792da8","category_id":"objects"},"game_die":{"native":"🎲","name":"Game Die","url":"https://s1.vika.cn/space/2021/05/29/fc7631a85f2f481989d12af40bfb5632","token":"space/2021/05/29/fc7631a85f2f481989d12af40bfb5632","category_id":"activity"},"garlic":{"native":"🧄","name":"Garlic","url":"https://s1.vika.cn/space/2021/05/29/6fc3e7e112744bc9afabd2d71ba712c7","token":"space/2021/05/29/6fc3e7e112744bc9afabd2d71ba712c7","category_id":"foods"},"gb":{"native":"🇬🇧","name":"United Kingdom Flag","url":"https://s1.vika.cn/space/2021/05/29/19754ccc93bd4127ba92570b2f24a812","token":"space/2021/05/29/19754ccc93bd4127ba92570b2f24a812","category_id":"flags"},"gear":{"native":"⚙️","name":"Gear","url":"https://s1.vika.cn/space/2021/05/29/0be572ea0a9c4e4ebc148813a05d08ec","token":"space/2021/05/29/0be572ea0a9c4e4ebc148813a05d08ec","category_id":"objects"},"gem":{"native":"💎","name":"Gem Stone","url":"https://s1.vika.cn/space/2021/05/29/d80334668ad6432d8fa14ec00b8b0db9","token":"space/2021/05/29/d80334668ad6432d8fa14ec00b8b0db9","category_id":"objects"},"gemini":{"native":"♊","name":"Gemini","url":"https://s1.vika.cn/space/2021/05/29/d0123c1994164acd830a6066df37a65e","token":"space/2021/05/29/d0123c1994164acd830a6066df37a65e","category_id":"symbols"},"genie":{"native":"🧞","name":"Genie","url":"https://s1.vika.cn/space/2021/05/29/e5e7b9848b6f4a05b891dea10a632140","token":"space/2021/05/29/e5e7b9848b6f4a05b891dea10a632140","category_id":"people"},"ghost":{"native":"👻","name":"Ghost","url":"https://s1.vika.cn/space/2021/05/29/2d8f2b060a2247299b759e492e0d80f7","token":"space/2021/05/29/2d8f2b060a2247299b759e492e0d80f7","category_id":"people"},"gift":{"native":"🎁","name":"Wrapped Present","url":"https://s1.vika.cn/space/2021/05/29/61e36f55f9004b2b998366f02c39eb39","token":"space/2021/05/29/61e36f55f9004b2b998366f02c39eb39","category_id":"activity"},"gift_heart":{"native":"💝","name":"Heart with Ribbon","url":"https://s1.vika.cn/space/2021/05/29/01edf885151147408775dcf3913e2453","token":"space/2021/05/29/01edf885151147408775dcf3913e2453","category_id":"people"},"giraffe_face":{"native":"🦒","name":"Giraffe Face","url":"https://s1.vika.cn/space/2021/05/29/17e152ce95fb473fa0ecbdb6374e6f4d","token":"space/2021/05/29/17e152ce95fb473fa0ecbdb6374e6f4d","category_id":"nature"},"girl":{"native":"👧","name":"Girl","url":"https://s1.vika.cn/space/2021/05/29/6b8cc186fc72472e9681360f50784700","token":"space/2021/05/29/6b8cc186fc72472e9681360f50784700","category_id":"people"},"glass_of_milk":{"native":"🥛","name":"Glass of Milk","url":"https://s1.vika.cn/space/2021/05/29/2390d9cead6740a392d4603f67c5926d","token":"space/2021/05/29/2390d9cead6740a392d4603f67c5926d","category_id":"foods"},"globe_with_meridians":{"native":"🌐","name":"Globe with Meridians","url":"https://s1.vika.cn/space/2021/05/29/26f7fa9635644d22a993d2859145341b","token":"space/2021/05/29/26f7fa9635644d22a993d2859145341b","category_id":"places"},"gloves":{"native":"🧤","name":"Gloves","url":"https://s1.vika.cn/space/2021/05/29/55e448111d8d4866a77c59822d85df04","token":"space/2021/05/29/55e448111d8d4866a77c59822d85df04","category_id":"objects"},"goal_net":{"native":"🥅","name":"Goal Net","url":"https://s1.vika.cn/space/2021/05/29/93c9f9433ed944c3a693d848a896070e","token":"space/2021/05/29/93c9f9433ed944c3a693d848a896070e","category_id":"activity"},"goat":{"native":"🐐","name":"Goat","url":"https://s1.vika.cn/space/2021/05/29/7dba755bfae14360b5ff8456f034c8b8","token":"space/2021/05/29/7dba755bfae14360b5ff8456f034c8b8","category_id":"nature"},"goggles":{"native":"🥽","name":"Goggles","url":"https://s1.vika.cn/space/2021/05/29/77e1c5d0f780498789b499b8ee64b7d3","token":"space/2021/05/29/77e1c5d0f780498789b499b8ee64b7d3","category_id":"objects"},"golf":{"native":"⛳","name":"Flag in Hole","url":"https://s1.vika.cn/space/2021/05/29/59f04444aad348389fb3f30d8d35b924","token":"space/2021/05/29/59f04444aad348389fb3f30d8d35b924","category_id":"activity"},"golfer":{"native":"🏌️","name":"Golfer","url":"https://s1.vika.cn/space/2021/05/29/37fb4d6a04c74fcdb3716ac37d9fee81","token":"space/2021/05/29/37fb4d6a04c74fcdb3716ac37d9fee81","category_id":"people"},"gorilla":{"native":"🦍","name":"Gorilla","url":"https://s1.vika.cn/space/2021/05/29/21c8948a3fc240048010663a466e4f28","token":"space/2021/05/29/21c8948a3fc240048010663a466e4f28","category_id":"nature"},"grapes":{"native":"🍇","name":"Grapes","url":"https://s1.vika.cn/space/2021/05/29/d4fb7e0ec37747e586ed3fde161c20eb","token":"space/2021/05/29/d4fb7e0ec37747e586ed3fde161c20eb","category_id":"foods"},"green_apple":{"native":"🍏","name":"Green Apple","url":"https://s1.vika.cn/space/2021/05/29/898488d751db4dffabbac3650952c436","token":"space/2021/05/29/898488d751db4dffabbac3650952c436","category_id":"foods"},"green_book":{"native":"📗","name":"Green Book","url":"https://s1.vika.cn/space/2021/05/29/66fcaaccc5d346c88f460acb4c0833ec","token":"space/2021/05/29/66fcaaccc5d346c88f460acb4c0833ec","category_id":"objects"},"green_heart":{"native":"💚","name":"Green Heart","url":"https://s1.vika.cn/space/2021/05/29/2629099626f04b9eb9c2dec6cf19826d","token":"space/2021/05/29/2629099626f04b9eb9c2dec6cf19826d","category_id":"people"},"green_salad":{"native":"🥗","name":"Green Salad","url":"https://s1.vika.cn/space/2021/05/29/9186698c0456487cbadc63a3698d67da","token":"space/2021/05/29/9186698c0456487cbadc63a3698d67da","category_id":"foods"},"grey_exclamation":{"native":"❕","name":"White Exclamation Mark Ornament","url":"https://s1.vika.cn/space/2021/05/29/8c43c04f87a64796a621aa593e52cab6","token":"space/2021/05/29/8c43c04f87a64796a621aa593e52cab6","category_id":"symbols"},"grey_question":{"native":"❔","name":"White Question Mark Ornament","url":"https://s1.vika.cn/space/2021/05/29/2364dc4ab913486b968d717f7bda9f85","token":"space/2021/05/29/2364dc4ab913486b968d717f7bda9f85","category_id":"symbols"},"grimacing":{"native":"😬","name":"Grimacing Face","url":"https://s1.vika.cn/space/2021/05/29/934bfc18ddd3479dbab79e4b0931017d","token":"space/2021/05/29/934bfc18ddd3479dbab79e4b0931017d","category_id":"people"},"grin":{"native":"😁","name":"Grinning Face with Smiling Eyes","url":"https://s1.vika.cn/space/2021/05/29/d5f4e3bbbc2947a1ad4e5c8e9ea3ea82","token":"space/2021/05/29/d5f4e3bbbc2947a1ad4e5c8e9ea3ea82","category_id":"people"},"grinning":{"native":"😀","name":"Grinning Face","url":"https://s1.vika.cn/space/2021/05/29/ca1438d5adfd4419803672e228c8b257","token":"space/2021/05/29/ca1438d5adfd4419803672e228c8b257","category_id":"people"},"guardsman":{"native":"💂","name":"Guardsman","url":"https://s1.vika.cn/space/2021/05/29/7621d5874c824e358ffbebe78348099f","token":"space/2021/05/29/7621d5874c824e358ffbebe78348099f","category_id":"people"},"guide_dog":{"native":"🦮","name":"Guide Dog","url":"https://s1.vika.cn/space/2021/05/29/ad152f302abe46baa3baaf74038710e3","token":"space/2021/05/29/ad152f302abe46baa3baaf74038710e3","category_id":"nature"},"guitar":{"native":"🎸","name":"Guitar","url":"https://s1.vika.cn/space/2021/05/29/42bb77fc7cdb43e8b2b40e07e0e879fe","token":"space/2021/05/29/42bb77fc7cdb43e8b2b40e07e0e879fe","category_id":"objects"},"gun":{"native":"🔫","name":"Pistol","url":"https://s1.vika.cn/space/2021/05/29/41b6d672bd7f4c19910b784ffd358bff","token":"space/2021/05/29/41b6d672bd7f4c19910b784ffd358bff","category_id":"objects"},"haircut":{"native":"💇","name":"Haircut","url":"https://s1.vika.cn/space/2021/05/29/c0830ec8f36d4db1b6b95482d3e7053b","token":"space/2021/05/29/c0830ec8f36d4db1b6b95482d3e7053b","category_id":"people"},"hamburger":{"native":"🍔","name":"Hamburger","url":"https://s1.vika.cn/space/2021/05/29/4a57ec06d37141aa8e4a51fb1586ece8","token":"space/2021/05/29/4a57ec06d37141aa8e4a51fb1586ece8","category_id":"foods"},"hammer":{"native":"🔨","name":"Hammer","url":"https://s1.vika.cn/space/2021/05/29/0cb0b34d64a94fe1991d68b8edb8604a","token":"space/2021/05/29/0cb0b34d64a94fe1991d68b8edb8604a","category_id":"objects"},"hammer_and_pick":{"native":"⚒️","name":"Hammer and Pick","url":"https://s1.vika.cn/space/2021/05/29/15f33196c72943e6b14db6a2d82d924a","token":"space/2021/05/29/15f33196c72943e6b14db6a2d82d924a","category_id":"objects"},"hammer_and_wrench":{"native":"🛠️","name":"Hammer and Wrench","url":"https://s1.vika.cn/space/2021/05/29/07a2d28cfb8c40f4893810d43e2ff971","token":"space/2021/05/29/07a2d28cfb8c40f4893810d43e2ff971","category_id":"objects"},"hamster":{"native":"🐹","name":"Hamster Face","url":"https://s1.vika.cn/space/2021/05/29/4ca51b5650cd44cd91fe3d8c39e116ce","token":"space/2021/05/29/4ca51b5650cd44cd91fe3d8c39e116ce","category_id":"nature"},"hand":{"native":"✋","name":"Raised Hand","url":"https://s1.vika.cn/space/2021/05/29/2c0b630c60124c4b9cc7db0fd05fbaad","token":"space/2021/05/29/2c0b630c60124c4b9cc7db0fd05fbaad","category_id":"people"},"handbag":{"native":"👜","name":"Handbag","url":"https://s1.vika.cn/space/2021/05/29/4d6215c4640b4b6fa6019c6c2019b2f7","token":"space/2021/05/29/4d6215c4640b4b6fa6019c6c2019b2f7","category_id":"objects"},"handball":{"native":"🤾","name":"Handball","url":"https://s1.vika.cn/space/2021/05/29/b6ffe3cea8684936b6352f9a263648e3","token":"space/2021/05/29/b6ffe3cea8684936b6352f9a263648e3","category_id":"people"},"handshake":{"native":"🤝","name":"Handshake","url":"https://s1.vika.cn/space/2021/05/29/208b261c7f85439a8e52d9a6b92c78b1","token":"space/2021/05/29/208b261c7f85439a8e52d9a6b92c78b1","category_id":"people"},"hankey":{"native":"💩","name":"Pile of Poo","url":"https://s1.vika.cn/space/2021/05/29/fcd2c2834a50488aabe7f28b6a9dffcf","token":"space/2021/05/29/fcd2c2834a50488aabe7f28b6a9dffcf","category_id":"people"},"hash":{"native":"#️⃣","name":"Hash Key","url":"https://s1.vika.cn/space/2021/05/29/265cc37d8de64244a71fa7335c6d1cff","token":"space/2021/05/29/265cc37d8de64244a71fa7335c6d1cff","category_id":"symbols"},"hatched_chick":{"native":"🐥","name":"Front-Facing Baby Chick","url":"https://s1.vika.cn/space/2021/05/29/61ef6845a9e94aa8aea3383af4ad44f3","token":"space/2021/05/29/61ef6845a9e94aa8aea3383af4ad44f3","category_id":"nature"},"hatching_chick":{"native":"🐣","name":"Hatching Chick","url":"https://s1.vika.cn/space/2021/05/29/1530ff8a31584ed18ecc90e1df6fc7e3","token":"space/2021/05/29/1530ff8a31584ed18ecc90e1df6fc7e3","category_id":"nature"},"headphones":{"native":"🎧","name":"Headphone","url":"https://s1.vika.cn/space/2021/05/29/1a2c06663155439492c7fcfc32b733a8","token":"space/2021/05/29/1a2c06663155439492c7fcfc32b733a8","category_id":"objects"},"health_worker":{"native":"🧑‍⚕️","name":"Health Worker","url":"https://s1.vika.cn/space/2020/04/19/1251738678275870721","token":"space/2020/04/19/1251738678275870721","category_id":"people"},"hear_no_evil":{"native":"🙉","name":"Hear-No-Evil Monkey","url":"https://s1.vika.cn/space/2021/05/29/6a3d2e75b7a44aec8de193e7a715faf3","token":"space/2021/05/29/6a3d2e75b7a44aec8de193e7a715faf3","category_id":"people"},"heart":{"native":"❤️","name":"Heavy Black Heart","url":"https://s1.vika.cn/space/2021/05/29/7c6fc4490635464c9089c296cda663d8","token":"space/2021/05/29/7c6fc4490635464c9089c296cda663d8","category_id":"people"},"heart_decoration":{"native":"💟","name":"Heart Decoration","url":"https://s1.vika.cn/space/2021/05/29/7decaf3388af4aaca031f94be544d8ca","token":"space/2021/05/29/7decaf3388af4aaca031f94be544d8ca","category_id":"people"},"heart_eyes":{"native":"😍","name":"Smiling Face with Heart-Shaped Eyes","url":"https://s1.vika.cn/space/2021/05/29/dd228ad62a324269aa9d7da71fdedd6e","token":"space/2021/05/29/dd228ad62a324269aa9d7da71fdedd6e","category_id":"people"},"heart_eyes_cat":{"native":"😻","name":"Smiling Cat Face with Heart-Shaped Eyes","url":"https://s1.vika.cn/space/2021/05/29/f643094ef5df4f968008218d75f49c32","token":"space/2021/05/29/f643094ef5df4f968008218d75f49c32","category_id":"people"},"heartbeat":{"native":"💓","name":"Beating Heart","url":"https://s1.vika.cn/space/2021/05/29/b98e2bbda988447f9a5e3fb831d9a2bd","token":"space/2021/05/29/b98e2bbda988447f9a5e3fb831d9a2bd","category_id":"people"},"heartpulse":{"native":"💗","name":"Growing Heart","url":"https://s1.vika.cn/space/2021/05/29/2af840da8f384828869aea3e61c2d832","token":"space/2021/05/29/2af840da8f384828869aea3e61c2d832","category_id":"people"},"hearts":{"native":"♥️","name":"Black Heart Suit","url":"https://s1.vika.cn/space/2021/05/29/cb07960bea9f49c697d6bc738c88bb38","token":"space/2021/05/29/cb07960bea9f49c697d6bc738c88bb38","category_id":"activity"},"heavy_check_mark":{"native":"✔️","name":"Heavy Check Mark","url":"https://s1.vika.cn/space/2021/05/29/fd02a086f902466ba4c7cfeb71e7824b","token":"space/2021/05/29/fd02a086f902466ba4c7cfeb71e7824b","category_id":"symbols"},"heavy_division_sign":{"native":"➗","name":"Heavy Division Sign","url":"https://s1.vika.cn/space/2021/05/29/9bc6a42753e246b79cb6a039a5aa36ac","token":"space/2021/05/29/9bc6a42753e246b79cb6a039a5aa36ac","category_id":"symbols"},"heavy_dollar_sign":{"native":"💲","name":"Heavy Dollar Sign","url":"https://s1.vika.cn/space/2021/05/29/eff5761e3e434583959d4e4a7931b81d","token":"space/2021/05/29/eff5761e3e434583959d4e4a7931b81d","category_id":"objects"},"heavy_heart_exclamation_mark_ornament":{"native":"❣️","name":"Heavy Heart Exclamation Mark Ornament","url":"https://s1.vika.cn/space/2021/05/29/0bd22c65ff49416ca8955e274a347218","token":"space/2021/05/29/0bd22c65ff49416ca8955e274a347218","category_id":"people"},"heavy_minus_sign":{"native":"➖","name":"Heavy Minus Sign","url":"https://s1.vika.cn/space/2021/05/29/71c4bb41aec4481ca48817bc8a3ca9b2","token":"space/2021/05/29/71c4bb41aec4481ca48817bc8a3ca9b2","category_id":"symbols"},"heavy_multiplication_x":{"native":"✖️","name":"Heavy Multiplication X","url":"https://s1.vika.cn/space/2021/05/29/07bf990b8cb94cf0af99c2cf295238f0","token":"space/2021/05/29/07bf990b8cb94cf0af99c2cf295238f0","category_id":"symbols"},"heavy_plus_sign":{"native":"➕","name":"Heavy Plus Sign","url":"https://s1.vika.cn/space/2021/05/29/a0aefd2b868c489db7bd91a9b819e10b","token":"space/2021/05/29/a0aefd2b868c489db7bd91a9b819e10b","category_id":"symbols"},"hedgehog":{"native":"🦔","name":"Hedgehog","url":"https://s1.vika.cn/space/2021/05/29/ded243aee11c4502b112b7b844a68c1b","token":"space/2021/05/29/ded243aee11c4502b112b7b844a68c1b","category_id":"nature"},"helicopter":{"native":"🚁","name":"Helicopter","url":"https://s1.vika.cn/space/2021/05/29/6572830fdb5d4300b237c14057eefc45","token":"space/2021/05/29/6572830fdb5d4300b237c14057eefc45","category_id":"places"},"helmet_with_white_cross":{"native":"⛑️","name":"Helmet with White Cross","url":"https://s1.vika.cn/space/2021/05/29/e010bea2cf7546e2a8900d778fd87c53","token":"space/2021/05/29/e010bea2cf7546e2a8900d778fd87c53","category_id":"objects"},"herb":{"native":"🌿","name":"Herb","url":"https://s1.vika.cn/space/2021/05/29/2ea5e015bf6a45aa8bc8fd18bf680b0e","token":"space/2021/05/29/2ea5e015bf6a45aa8bc8fd18bf680b0e","category_id":"nature"},"hibiscus":{"native":"🌺","name":"Hibiscus","url":"https://s1.vika.cn/space/2021/05/29/56aed46dfb4f4f7b9a0f16d5c75414fa","token":"space/2021/05/29/56aed46dfb4f4f7b9a0f16d5c75414fa","category_id":"nature"},"high_brightness":{"native":"🔆","name":"High Brightness Symbol","url":"https://s1.vika.cn/space/2021/05/29/ba64684e76d2463cb2c07785e5130194","token":"space/2021/05/29/ba64684e76d2463cb2c07785e5130194","category_id":"symbols"},"high_heel":{"native":"👠","name":"High-Heeled Shoe","url":"https://s1.vika.cn/space/2021/05/29/d794335fde7b4c4b910d1ee50e191ab6","token":"space/2021/05/29/d794335fde7b4c4b910d1ee50e191ab6","category_id":"objects"},"hiking_boot":{"native":"🥾","name":"Hiking Boot","url":"https://s1.vika.cn/space/2021/05/29/d389fe2d45e947b8af35bb3119743900","token":"space/2021/05/29/d389fe2d45e947b8af35bb3119743900","category_id":"objects"},"hindu_temple":{"native":"🛕","name":"Hindu Temple","url":"https://s1.vika.cn/space/2021/05/29/0296c7658d4d4200bd19f2c4c0e47d59","token":"space/2021/05/29/0296c7658d4d4200bd19f2c4c0e47d59","category_id":"places"},"hippopotamus":{"native":"🦛","name":"Hippopotamus","url":"https://s1.vika.cn/space/2021/05/29/10f6704416e64c4baf78f6af777a1e26","token":"space/2021/05/29/10f6704416e64c4baf78f6af777a1e26","category_id":"nature"},"hocho":{"native":"🔪","name":"Hocho","url":"https://s1.vika.cn/space/2021/05/29/4849fa2a5f6440eb836c6b4d054865a4","token":"space/2021/05/29/4849fa2a5f6440eb836c6b4d054865a4","category_id":"foods"},"hole":{"native":"🕳️","name":"Hole","url":"https://s1.vika.cn/space/2021/05/29/bb6f8154d8914a6aa234dcd46f01d55e","token":"space/2021/05/29/bb6f8154d8914a6aa234dcd46f01d55e","category_id":"people"},"honey_pot":{"native":"🍯","name":"Honey Pot","url":"https://s1.vika.cn/space/2021/05/29/820f035eb1234a8497f9bdd964c17898","token":"space/2021/05/29/820f035eb1234a8497f9bdd964c17898","category_id":"foods"},"horse":{"native":"🐴","name":"Horse Face","url":"https://s1.vika.cn/space/2021/05/29/5bc18d829f9347c5964366ed41746701","token":"space/2021/05/29/5bc18d829f9347c5964366ed41746701","category_id":"nature"},"horse_racing":{"native":"🏇","name":"Horse Racing","url":"https://s1.vika.cn/space/2021/05/29/7c72793d397b43a38e9fcc87115dfd64","token":"space/2021/05/29/7c72793d397b43a38e9fcc87115dfd64","category_id":"people"},"hospital":{"native":"🏥","name":"Hospital","url":"https://s1.vika.cn/space/2021/05/29/1571a6c9a09b417a8fd6a3673ef7b88c","token":"space/2021/05/29/1571a6c9a09b417a8fd6a3673ef7b88c","category_id":"places"},"hot_face":{"native":"🥵","name":"Overheated Face","url":"https://s1.vika.cn/space/2021/05/29/8e22b5c4af6a4484a1da6c54fff6a15a","token":"space/2021/05/29/8e22b5c4af6a4484a1da6c54fff6a15a","category_id":"people"},"hot_pepper":{"native":"🌶️","name":"Hot Pepper","url":"https://s1.vika.cn/space/2021/05/29/a57142268f1b4748b15cb14343327b81","token":"space/2021/05/29/a57142268f1b4748b15cb14343327b81","category_id":"foods"},"hotdog":{"native":"🌭","name":"Hot Dog","url":"https://s1.vika.cn/space/2021/05/29/f9d82761201641329363b862b11e7f14","token":"space/2021/05/29/f9d82761201641329363b862b11e7f14","category_id":"foods"},"hotel":{"native":"🏨","name":"Hotel","url":"https://s1.vika.cn/space/2021/05/29/9212da74ae3c4400a93c39c1fb94db67","token":"space/2021/05/29/9212da74ae3c4400a93c39c1fb94db67","category_id":"places"},"hotsprings":{"native":"♨️","name":"Hot Springs","url":"https://s1.vika.cn/space/2021/05/29/f77e51ab01454629b56c2bf328c0e73b","token":"space/2021/05/29/f77e51ab01454629b56c2bf328c0e73b","category_id":"places"},"hourglass":{"native":"⌛","name":"Hourglass","url":"https://s1.vika.cn/space/2021/05/29/fa2e4229baa94440a9317c3e20dd2c11","token":"space/2021/05/29/fa2e4229baa94440a9317c3e20dd2c11","category_id":"places"},"hourglass_flowing_sand":{"native":"⏳","name":"Hourglass with Flowing Sand","url":"https://s1.vika.cn/space/2021/05/29/1f9881f1ceb343929cb637e74b85c873","token":"space/2021/05/29/1f9881f1ceb343929cb637e74b85c873","category_id":"places"},"house":{"native":"🏠","name":"House Building","url":"https://s1.vika.cn/space/2021/05/29/d3654a1e99a0433ca043ed5e19942651","token":"space/2021/05/29/d3654a1e99a0433ca043ed5e19942651","category_id":"places"},"house_buildings":{"native":"🏘️","name":"House Buildings","url":"https://s1.vika.cn/space/2021/05/29/1a5adcf5ab9e4794af2f852dd4bb7df5","token":"space/2021/05/29/1a5adcf5ab9e4794af2f852dd4bb7df5","category_id":"places"},"house_with_garden":{"native":"🏡","name":"House with Garden","url":"https://s1.vika.cn/space/2021/05/29/c9175495374344799a79417a6c48de6f","token":"space/2021/05/29/c9175495374344799a79417a6c48de6f","category_id":"places"},"hugging_face":{"native":"🤗","name":"Hugging Face","url":"https://s1.vika.cn/space/2021/05/29/6fccb877a72e431398975726114d9e9e","token":"space/2021/05/29/6fccb877a72e431398975726114d9e9e","category_id":"people"},"hushed":{"native":"😯","name":"Hushed Face","url":"https://s1.vika.cn/space/2021/05/29/21df79f2e0264b37b7e76bad93ad3de7","token":"space/2021/05/29/21df79f2e0264b37b7e76bad93ad3de7","category_id":"people"},"i_love_you_hand_sign":{"native":"🤟","name":"I Love You Hand Sign","url":"https://s1.vika.cn/space/2021/05/29/52653fb6d0d643dd968932c9d749b6c0","token":"space/2021/05/29/52653fb6d0d643dd968932c9d749b6c0","category_id":"people"},"ice_cream":{"native":"🍨","name":"Ice Cream","url":"https://s1.vika.cn/space/2021/05/29/d351a4cce55a437291efe485e25476c2","token":"space/2021/05/29/d351a4cce55a437291efe485e25476c2","category_id":"foods"},"ice_cube":{"native":"🧊","name":"Ice Cube","url":"https://s1.vika.cn/space/2021/05/29/8ccdcebadc784f3f9d258294990df702","token":"space/2021/05/29/8ccdcebadc784f3f9d258294990df702","category_id":"foods"},"ice_hockey_stick_and_puck":{"native":"🏒","name":"Ice Hockey Stick and Puck","url":"https://s1.vika.cn/space/2021/05/29/2ef7d0b57d304a4783b29c816a86c72b","token":"space/2021/05/29/2ef7d0b57d304a4783b29c816a86c72b","category_id":"activity"},"ice_skate":{"native":"⛸️","name":"Ice Skate","url":"https://s1.vika.cn/space/2021/05/29/8f7e18f3241b4050aabfc0978c600a3e","token":"space/2021/05/29/8f7e18f3241b4050aabfc0978c600a3e","category_id":"activity"},"icecream":{"native":"🍦","name":"Soft Ice Cream","url":"https://s1.vika.cn/space/2021/05/29/b9f18f2003a04a209a89b2d35298e9fd","token":"space/2021/05/29/b9f18f2003a04a209a89b2d35298e9fd","category_id":"foods"},"id":{"native":"🆔","name":"Squared Id","url":"https://s1.vika.cn/space/2021/05/29/4d73e264f4354470b0820e05d845f27a","token":"space/2021/05/29/4d73e264f4354470b0820e05d845f27a","category_id":"symbols"},"ideograph_advantage":{"native":"🉐","name":"Circled Ideograph Advantage","url":"https://s1.vika.cn/space/2021/05/29/3c836530811740eda4ecea823ad77ab9","token":"space/2021/05/29/3c836530811740eda4ecea823ad77ab9","category_id":"symbols"},"imp":{"native":"👿","name":"Imp","url":"https://s1.vika.cn/space/2021/05/29/f1c2aebcb1a548968044a941140013dd","token":"space/2021/05/29/f1c2aebcb1a548968044a941140013dd","category_id":"people"},"inbox_tray":{"native":"📥","name":"Inbox Tray","url":"https://s1.vika.cn/space/2021/05/29/19db61df68514c459c101447db872c8e","token":"space/2021/05/29/19db61df68514c459c101447db872c8e","category_id":"objects"},"incoming_envelope":{"native":"📨","name":"Incoming Envelope","url":"https://s1.vika.cn/space/2021/05/29/71bdb40fa2834678836b4bb545fbbef5","token":"space/2021/05/29/71bdb40fa2834678836b4bb545fbbef5","category_id":"objects"},"infinity":{"native":"♾️","name":"Infinity","url":"https://s1.vika.cn/space/2021/05/29/8d72332d33974efe9186c9de020b8d5e","token":"space/2021/05/29/8d72332d33974efe9186c9de020b8d5e","category_id":"symbols"},"information_desk_person":{"native":"💁","name":"Information Desk Person","url":"https://s1.vika.cn/space/2021/05/29/dbc07a1365f146b3b0902066d53836ba","token":"space/2021/05/29/dbc07a1365f146b3b0902066d53836ba","category_id":"people"},"information_source":{"native":"ℹ️","name":"Information Source","url":"https://s1.vika.cn/space/2021/05/29/dead7f8db07a49159f6c0821e21933d8","token":"space/2021/05/29/dead7f8db07a49159f6c0821e21933d8","category_id":"symbols"},"innocent":{"native":"😇","name":"Smiling Face with Halo","url":"https://s1.vika.cn/space/2021/05/29/b4803c2d01a54ad1bb365547cb673627","token":"space/2021/05/29/b4803c2d01a54ad1bb365547cb673627","category_id":"people"},"interrobang":{"native":"⁉️","name":"Exclamation Question Mark","url":"https://s1.vika.cn/space/2021/05/29/f6fa4e9177c24dbdbbb8c7e64215bb6b","token":"space/2021/05/29/f6fa4e9177c24dbdbbb8c7e64215bb6b","category_id":"symbols"},"iphone":{"native":"📱","name":"Mobile Phone","url":"https://s1.vika.cn/space/2021/05/29/c7a2189b0c0a4cf2b79a9e7fd602e2ce","token":"space/2021/05/29/c7a2189b0c0a4cf2b79a9e7fd602e2ce","category_id":"objects"},"it":{"native":"🇮🇹","name":"Italy Flag","url":"https://s1.vika.cn/space/2021/05/29/8e9f264faff2465b8db823d01ac20574","token":"space/2021/05/29/8e9f264faff2465b8db823d01ac20574","category_id":"flags"},"izakaya_lantern":{"native":"🏮","name":"Izakaya Lantern","url":"https://s1.vika.cn/space/2021/05/29/06b3bf3edfae450fa744394bc857f5f4","token":"space/2021/05/29/06b3bf3edfae450fa744394bc857f5f4","category_id":"objects"},"jack_o_lantern":{"native":"🎃","name":"Jack-O-Lantern","url":"https://s1.vika.cn/space/2021/05/29/19fcf98d125845f99a820be568266894","token":"space/2021/05/29/19fcf98d125845f99a820be568266894","category_id":"activity"},"japan":{"native":"🗾","name":"Silhouette of Japan","url":"https://s1.vika.cn/space/2021/05/29/5be78b999c0d467a8ac43a456ff499cd","token":"space/2021/05/29/5be78b999c0d467a8ac43a456ff499cd","category_id":"places"},"japanese_castle":{"native":"🏯","name":"Japanese Castle","url":"https://s1.vika.cn/space/2021/05/29/1440215fca9d4e0887e1009f26018f68","token":"space/2021/05/29/1440215fca9d4e0887e1009f26018f68","category_id":"places"},"japanese_goblin":{"native":"👺","name":"Japanese Goblin","url":"https://s1.vika.cn/space/2021/05/29/b3f7bd21121e4b6294c610a911326547","token":"space/2021/05/29/b3f7bd21121e4b6294c610a911326547","category_id":"people"},"japanese_ogre":{"native":"👹","name":"Japanese Ogre","url":"https://s1.vika.cn/space/2021/05/29/ee65a0eba34442c79a299fd79e7e7dc4","token":"space/2021/05/29/ee65a0eba34442c79a299fd79e7e7dc4","category_id":"people"},"jeans":{"native":"👖","name":"Jeans","url":"https://s1.vika.cn/space/2021/05/29/0a9552dce41b42cb9349db2297a10f91","token":"space/2021/05/29/0a9552dce41b42cb9349db2297a10f91","category_id":"objects"},"jigsaw":{"native":"🧩","name":"Jigsaw Puzzle Piece","url":"https://s1.vika.cn/space/2021/05/29/8ca7deac534448bdb6bc0efd6e4834e8","token":"space/2021/05/29/8ca7deac534448bdb6bc0efd6e4834e8","category_id":"activity"},"joy":{"native":"😂","name":"Face with Tears of Joy","url":"https://s1.vika.cn/space/2021/05/29/2cef1207defb4571882aa1000d1b6241","token":"space/2021/05/29/2cef1207defb4571882aa1000d1b6241","category_id":"people"},"joy_cat":{"native":"😹","name":"Cat Face with Tears of Joy","url":"https://s1.vika.cn/space/2021/05/29/64ec358103384a1594b3b1ae7ae8ca98","token":"space/2021/05/29/64ec358103384a1594b3b1ae7ae8ca98","category_id":"people"},"joystick":{"native":"🕹️","name":"Joystick","url":"https://s1.vika.cn/space/2021/05/29/927be5b383f94de29ed0c52c2cd720d7","token":"space/2021/05/29/927be5b383f94de29ed0c52c2cd720d7","category_id":"activity"},"jp":{"native":"🇯🇵","name":"Japan Flag","url":"https://s1.vika.cn/space/2021/05/29/75126ca2c76143aca6238d3b6a09f9bb","token":"space/2021/05/29/75126ca2c76143aca6238d3b6a09f9bb","category_id":"flags"},"judge":{"native":"🧑‍⚖️","name":"Judge","url":"https://s1.vika.cn/space/2021/05/29/7e80c6c4c5f54e4db0e60640d5c3b299","token":"space/2021/05/29/7e80c6c4c5f54e4db0e60640d5c3b299","category_id":"people"},"juggling":{"native":"🤹","name":"Juggling","url":"https://s1.vika.cn/space/2021/05/29/aa7ad5efb2a64ff69d862df0499fcd55","token":"space/2021/05/29/aa7ad5efb2a64ff69d862df0499fcd55","category_id":"people"},"kaaba":{"native":"🕋","name":"Kaaba","url":"https://s1.vika.cn/space/2021/05/29/a56f550ffbf74be88c221ef3afeb5c6a","token":"space/2021/05/29/a56f550ffbf74be88c221ef3afeb5c6a","category_id":"places"},"kangaroo":{"native":"🦘","name":"Kangaroo","url":"https://s1.vika.cn/space/2021/05/29/3fdb0ab6cdb6497e94b8b06fca5c0608","token":"space/2021/05/29/3fdb0ab6cdb6497e94b8b06fca5c0608","category_id":"nature"},"key":{"native":"🔑","name":"Key","url":"https://s1.vika.cn/space/2021/05/29/876b5e38191e4a3191b9c346541c8cd9","token":"space/2021/05/29/876b5e38191e4a3191b9c346541c8cd9","category_id":"objects"},"keyboard":{"native":"⌨️","name":"Keyboard","url":"https://s1.vika.cn/space/2021/05/29/fd4ed7e34d6e4639a68edb94d411f321","token":"space/2021/05/29/fd4ed7e34d6e4639a68edb94d411f321","category_id":"objects"},"keycap_star":{"native":"*️⃣","name":"Keycap Star","url":"https://s1.vika.cn/space/2021/05/29/445a81020d3946338ca67cb4305bb2b7","token":"space/2021/05/29/445a81020d3946338ca67cb4305bb2b7","category_id":"symbols"},"keycap_ten":{"native":"🔟","name":"Keycap Ten","url":"https://s1.vika.cn/space/2021/05/29/63a33100a94746539a2205ecb705676f","token":"space/2021/05/29/63a33100a94746539a2205ecb705676f","category_id":"symbols"},"kimono":{"native":"👘","name":"Kimono","url":"https://s1.vika.cn/space/2021/05/29/19088642424f440f959e1aefb6b313e7","token":"space/2021/05/29/19088642424f440f959e1aefb6b313e7","category_id":"objects"},"kiss":{"native":"💋","name":"Kiss Mark","url":"https://s1.vika.cn/space/2021/05/29/f2c1196f1a5d45d4b42d7e191a399385","token":"space/2021/05/29/f2c1196f1a5d45d4b42d7e191a399385","category_id":"people"},"kissing":{"native":"😗","name":"Kissing Face","url":"https://s1.vika.cn/space/2021/05/29/79338ac6d8d9412cbf85bc5c0353f9a7","token":"space/2021/05/29/79338ac6d8d9412cbf85bc5c0353f9a7","category_id":"people"},"kissing_cat":{"native":"😽","name":"Kissing Cat Face with Closed Eyes","url":"https://s1.vika.cn/space/2021/05/29/5715d779a24f40f68e2296113c2e7840","token":"space/2021/05/29/5715d779a24f40f68e2296113c2e7840","category_id":"people"},"kissing_closed_eyes":{"native":"😚","name":"Kissing Face with Closed Eyes","url":"https://s1.vika.cn/space/2021/05/29/486e638f622e474598109eafcd63546c","token":"space/2021/05/29/486e638f622e474598109eafcd63546c","category_id":"people"},"kissing_heart":{"native":"😘","name":"Face Throwing a Kiss","url":"https://s1.vika.cn/space/2021/05/29/1cb758c09734464f876851fa992efbd6","token":"space/2021/05/29/1cb758c09734464f876851fa992efbd6","category_id":"people"},"kissing_smiling_eyes":{"native":"😙","name":"Kissing Face with Smiling Eyes","url":"https://s1.vika.cn/space/2021/05/29/06c2e53273184210bf977eb2eba77941","token":"space/2021/05/29/06c2e53273184210bf977eb2eba77941","category_id":"people"},"kite":{"native":"🪁","name":"Kite","url":"https://s1.vika.cn/space/2021/05/29/6b942d97958e49918e2f8560262aaf0a","token":"space/2021/05/29/6b942d97958e49918e2f8560262aaf0a","category_id":"activity"},"kiwifruit":{"native":"🥝","name":"Kiwifruit","url":"https://s1.vika.cn/space/2021/05/29/5d346d9513524ea79553281a67513ab4","token":"space/2021/05/29/5d346d9513524ea79553281a67513ab4","category_id":"foods"},"kneeling_person":{"native":"🧎","name":"Kneeling Person","url":"https://s1.vika.cn/space/2021/05/29/616f0fec48ba4210b3e6e109c7d69839","token":"space/2021/05/29/616f0fec48ba4210b3e6e109c7d69839","category_id":"people"},"knife_fork_plate":{"native":"🍽️","name":"Knife Fork Plate","url":"https://s1.vika.cn/space/2021/05/29/eaf5909db79d4698a490910a83619e10","token":"space/2021/05/29/eaf5909db79d4698a490910a83619e10","category_id":"foods"},"koala":{"native":"🐨","name":"Koala","url":"https://s1.vika.cn/space/2021/05/29/30b3540e831348f6adb633033621b762","token":"space/2021/05/29/30b3540e831348f6adb633033621b762","category_id":"nature"},"koko":{"native":"🈁","name":"Squared Katakana Koko","url":"https://s1.vika.cn/space/2021/05/29/d363a9b3f2b648dc8a97a0a9374b917d","token":"space/2021/05/29/d363a9b3f2b648dc8a97a0a9374b917d","category_id":"symbols"},"kr":{"native":"🇰🇷","name":"South Korea Flag","url":"https://s1.vika.cn/space/2021/05/29/95e893fb1dc6470b8c9738b61e2cbb56","token":"space/2021/05/29/95e893fb1dc6470b8c9738b61e2cbb56","category_id":"flags"},"lab_coat":{"native":"🥼","name":"Lab Coat","url":"https://s1.vika.cn/space/2021/05/29/7f7ce89fa87d455b8b339f99d14bbd3b","token":"space/2021/05/29/7f7ce89fa87d455b8b339f99d14bbd3b","category_id":"objects"},"label":{"native":"🏷️","name":"Label","url":"https://s1.vika.cn/space/2021/05/29/c94b616309c74759848d5ae62bcdb584","token":"space/2021/05/29/c94b616309c74759848d5ae62bcdb584","category_id":"objects"},"lacrosse":{"native":"🥍","name":"Lacrosse Stick and Ball","url":"https://s1.vika.cn/space/2021/05/29/313f5c78d3284f1ab331757b95ca5956","token":"space/2021/05/29/313f5c78d3284f1ab331757b95ca5956","category_id":"activity"},"large_blue_circle":{"native":"🔵","name":"Large Blue Circle","url":"https://s1.vika.cn/space/2021/05/29/9d048da6c33342a7ba50cfff4682bd71","token":"space/2021/05/29/9d048da6c33342a7ba50cfff4682bd71","category_id":"symbols"},"large_blue_diamond":{"native":"🔷","name":"Large Blue Diamond","url":"https://s1.vika.cn/space/2021/05/29/537b9ee7851345aea9959b8225eccc9e","token":"space/2021/05/29/537b9ee7851345aea9959b8225eccc9e","category_id":"symbols"},"large_blue_square":{"native":"🟦","name":"Large Blue Square","url":"https://s1.vika.cn/space/2021/05/29/f0d5395602244cf4b9061131acac0e02","token":"space/2021/05/29/f0d5395602244cf4b9061131acac0e02","category_id":"symbols"},"large_brown_circle":{"native":"🟤","name":"Large Brown Circle","url":"https://s1.vika.cn/space/2021/05/29/159d3f10d7654f41bcaf0d2ea519ca25","token":"space/2021/05/29/159d3f10d7654f41bcaf0d2ea519ca25","category_id":"symbols"},"large_brown_square":{"native":"🟫","name":"Large Brown Square","url":"https://s1.vika.cn/space/2021/05/29/ea242d0cfe2544b8bceb3a0dd4accac0","token":"space/2021/05/29/ea242d0cfe2544b8bceb3a0dd4accac0","category_id":"symbols"},"large_green_circle":{"native":"🟢","name":"Large Green Circle","url":"https://s1.vika.cn/space/2021/05/29/1adc0e384e8d47f28287cf2b486504b9","token":"space/2021/05/29/1adc0e384e8d47f28287cf2b486504b9","category_id":"symbols"},"large_green_square":{"native":"🟩","name":"Large Green Square","url":"https://s1.vika.cn/space/2021/05/29/171c06a7febf4ea99fcfef32910f633d","token":"space/2021/05/29/171c06a7febf4ea99fcfef32910f633d","category_id":"symbols"},"large_orange_circle":{"native":"🟠","name":"Large Orange Circle","url":"https://s1.vika.cn/space/2021/05/29/0f23242303d1445fa91c44fc37f1f9cc","token":"space/2021/05/29/0f23242303d1445fa91c44fc37f1f9cc","category_id":"symbols"},"large_orange_diamond":{"native":"🔶","name":"Large Orange Diamond","url":"https://s1.vika.cn/space/2021/05/29/c2b439c33d5d4af0bd3d5f5a901ea34e","token":"space/2021/05/29/c2b439c33d5d4af0bd3d5f5a901ea34e","category_id":"symbols"},"large_orange_square":{"native":"🟧","name":"Large Orange Square","url":"https://s1.vika.cn/space/2021/05/29/09fa362e35fc44eab464769ad3459887","token":"space/2021/05/29/09fa362e35fc44eab464769ad3459887","category_id":"symbols"},"large_purple_circle":{"native":"🟣","name":"Large Purple Circle","url":"https://s1.vika.cn/space/2021/05/29/9997536d40784e519a9ca2538fe9310c","token":"space/2021/05/29/9997536d40784e519a9ca2538fe9310c","category_id":"symbols"},"large_purple_square":{"native":"🟪","name":"Large Purple Square","url":"https://s1.vika.cn/space/2021/05/29/963e49937403470297fa3ea459ecc61c","token":"space/2021/05/29/963e49937403470297fa3ea459ecc61c","category_id":"symbols"},"large_red_square":{"native":"🟥","name":"Large Red Square","url":"https://s1.vika.cn/space/2021/05/29/1152768200ce4ed792a18d8de227446b","token":"space/2021/05/29/1152768200ce4ed792a18d8de227446b","category_id":"symbols"},"large_yellow_circle":{"native":"🟡","name":"Large Yellow Circle","url":"https://s1.vika.cn/space/2021/05/29/18f561df61b446be980f2e526fe15259","token":"space/2021/05/29/18f561df61b446be980f2e526fe15259","category_id":"symbols"},"large_yellow_square":{"native":"🟨","name":"Large Yellow Square","url":"https://s1.vika.cn/space/2021/05/29/0fc6ceca9e904ac5b49c2a09545ed532","token":"space/2021/05/29/0fc6ceca9e904ac5b49c2a09545ed532","category_id":"symbols"},"last_quarter_moon":{"native":"🌗","name":"Last Quarter Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/05754d99a7d64cf3a15e67f93043eb9b","token":"space/2021/05/29/05754d99a7d64cf3a15e67f93043eb9b","category_id":"places"},"last_quarter_moon_with_face":{"native":"🌜","name":"Last Quarter Moon with Face","url":"https://s1.vika.cn/space/2021/05/29/105aa94fc2544487a65d06c56dec89ec","token":"space/2021/05/29/105aa94fc2544487a65d06c56dec89ec","category_id":"places"},"latin_cross":{"native":"✝️","name":"Latin Cross","url":"https://s1.vika.cn/space/2021/05/29/54a5623f11434322b5d5f25267096548","token":"space/2021/05/29/54a5623f11434322b5d5f25267096548","category_id":"symbols"},"laughing":{"native":"😆","name":"Smiling Face with Open Mouth and Tightly-Closed Eyes","url":"https://s1.vika.cn/space/2021/05/29/36c73da4d9b84850bae58e8941279b27","token":"space/2021/05/29/36c73da4d9b84850bae58e8941279b27","category_id":"people"},"leafy_green":{"native":"🥬","name":"Leafy Green","url":"https://s1.vika.cn/space/2021/05/29/4a1c6f5b6ed74f40ac362de496b3debc","token":"space/2021/05/29/4a1c6f5b6ed74f40ac362de496b3debc","category_id":"foods"},"leaves":{"native":"🍃","name":"Leaf Fluttering in Wind","url":"https://s1.vika.cn/space/2021/05/29/2096a02d872f435ab658bb6ec1953d04","token":"space/2021/05/29/2096a02d872f435ab658bb6ec1953d04","category_id":"nature"},"ledger":{"native":"📒","name":"Ledger","url":"https://s1.vika.cn/space/2021/05/29/f8ccf63ac5304f57a1219c5528ca7da4","token":"space/2021/05/29/f8ccf63ac5304f57a1219c5528ca7da4","category_id":"objects"},"left_luggage":{"native":"🛅","name":"Left Luggage","url":"https://s1.vika.cn/space/2021/05/29/90c344eb0fc34f17a007731b6d96469e","token":"space/2021/05/29/90c344eb0fc34f17a007731b6d96469e","category_id":"symbols"},"left_right_arrow":{"native":"↔️","name":"Left Right Arrow","url":"https://s1.vika.cn/space/2021/05/29/ed55fc7590ec4f95a24424e92487f0fe","token":"space/2021/05/29/ed55fc7590ec4f95a24424e92487f0fe","category_id":"symbols"},"left_speech_bubble":{"native":"🗨️","name":"Left Speech Bubble","url":"https://s1.vika.cn/space/2021/05/29/c5bc13ad85b84bc2860b66a2fd98969f","token":"space/2021/05/29/c5bc13ad85b84bc2860b66a2fd98969f","category_id":"people"},"left-facing_fist":{"native":"🤛","name":"Left-Facing Fist","url":"https://s1.vika.cn/space/2021/05/29/bd2144b678194533b0bc669e58e35837","token":"space/2021/05/29/bd2144b678194533b0bc669e58e35837","category_id":"people"},"leftwards_arrow_with_hook":{"native":"↩️","name":"Leftwards Arrow with Hook","url":"https://s1.vika.cn/space/2021/05/29/4755d0063d1848e88173cfc889aa0cdb","token":"space/2021/05/29/4755d0063d1848e88173cfc889aa0cdb","category_id":"symbols"},"leg":{"native":"🦵","name":"Leg","url":"https://s1.vika.cn/space/2021/05/29/0534428d63c3428a97a6d3f0730263e3","token":"space/2021/05/29/0534428d63c3428a97a6d3f0730263e3","category_id":"people"},"lemon":{"native":"🍋","name":"Lemon","url":"https://s1.vika.cn/space/2021/05/29/c53c582181fb4ea08f4aee72bab16f7d","token":"space/2021/05/29/c53c582181fb4ea08f4aee72bab16f7d","category_id":"foods"},"leo":{"native":"♌","name":"Leo","url":"https://s1.vika.cn/space/2021/05/29/20b185eae93e4c89b2674a1a38d02838","token":"space/2021/05/29/20b185eae93e4c89b2674a1a38d02838","category_id":"symbols"},"leopard":{"native":"🐆","name":"Leopard","url":"https://s1.vika.cn/space/2021/05/29/c18b7546f43044218f648aa935e5ecbc","token":"space/2021/05/29/c18b7546f43044218f648aa935e5ecbc","category_id":"nature"},"level_slider":{"native":"🎚️","name":"Level Slider","url":"https://s1.vika.cn/space/2021/05/29/e12d3c4560b1411e8d3cbd7385a681ee","token":"space/2021/05/29/e12d3c4560b1411e8d3cbd7385a681ee","category_id":"objects"},"libra":{"native":"♎","name":"Libra","url":"https://s1.vika.cn/space/2021/05/29/23be65debc0341e1a1593e6c0225ef2b","token":"space/2021/05/29/23be65debc0341e1a1593e6c0225ef2b","category_id":"symbols"},"light_rail":{"native":"🚈","name":"Light Rail","url":"https://s1.vika.cn/space/2021/05/29/bbf500b1828542f7844a60dea68ff626","token":"space/2021/05/29/bbf500b1828542f7844a60dea68ff626","category_id":"places"},"lightning":{"native":"🌩️","name":"Lightning","url":"https://s1.vika.cn/space/2021/05/29/2cef47b1157a4c54b26ddfeb351e8417","token":"space/2021/05/29/2cef47b1157a4c54b26ddfeb351e8417","category_id":"places"},"link":{"native":"🔗","name":"Link Symbol","url":"https://s1.vika.cn/space/2021/05/29/6e204b4a3f5b4008bc6a94d403ac4c63","token":"space/2021/05/29/6e204b4a3f5b4008bc6a94d403ac4c63","category_id":"objects"},"linked_paperclips":{"native":"🖇️","name":"Linked Paperclips","url":"https://s1.vika.cn/space/2021/05/29/e857cc1d293e4cf1b3ab8b0df47df28b","token":"space/2021/05/29/e857cc1d293e4cf1b3ab8b0df47df28b","category_id":"objects"},"lion_face":{"native":"🦁","name":"Lion Face","url":"https://s1.vika.cn/space/2021/05/29/b07e564659f14d2cb5b85ae9b3968d60","token":"space/2021/05/29/b07e564659f14d2cb5b85ae9b3968d60","category_id":"nature"},"lips":{"native":"👄","name":"Mouth","url":"https://s1.vika.cn/space/2021/05/29/6a345351a5e447eba595f6123690fe55","token":"space/2021/05/29/6a345351a5e447eba595f6123690fe55","category_id":"people"},"lipstick":{"native":"💄","name":"Lipstick","url":"https://s1.vika.cn/space/2021/05/29/cdc6c6402ec642cfb3063ae3de5ec45c","token":"space/2021/05/29/cdc6c6402ec642cfb3063ae3de5ec45c","category_id":"objects"},"lizard":{"native":"🦎","name":"Lizard","url":"https://s1.vika.cn/space/2021/05/29/9056f6e22d1e430da6aada55c0ac48ea","token":"space/2021/05/29/9056f6e22d1e430da6aada55c0ac48ea","category_id":"nature"},"llama":{"native":"🦙","name":"Llama","url":"https://s1.vika.cn/space/2021/05/29/f94bec85d7ef41d6847fe19c939500d2","token":"space/2021/05/29/f94bec85d7ef41d6847fe19c939500d2","category_id":"nature"},"lobster":{"native":"🦞","name":"Lobster","url":"https://s1.vika.cn/space/2021/05/29/8d1de6ceb2d84693936c0f1fec7c5a86","token":"space/2021/05/29/8d1de6ceb2d84693936c0f1fec7c5a86","category_id":"foods"},"lock":{"native":"🔒","name":"Lock","url":"https://s1.vika.cn/space/2021/05/29/a74ca258c6be434cbcd8be3ecac92ab5","token":"space/2021/05/29/a74ca258c6be434cbcd8be3ecac92ab5","category_id":"objects"},"lock_with_ink_pen":{"native":"🔏","name":"Lock with Ink Pen","url":"https://s1.vika.cn/space/2021/05/29/159ae017266f47699dddfe5ff6282b45","token":"space/2021/05/29/159ae017266f47699dddfe5ff6282b45","category_id":"objects"},"lollipop":{"native":"🍭","name":"Lollipop","url":"https://s1.vika.cn/space/2021/05/29/57b6012fe7dc4f1889d92e8807d15e81","token":"space/2021/05/29/57b6012fe7dc4f1889d92e8807d15e81","category_id":"foods"},"loop":{"native":"➿","name":"Double Curly Loop","url":"https://s1.vika.cn/space/2021/05/29/7fb5ceaee5da498ca8444cc9b3ae8bbc","token":"space/2021/05/29/7fb5ceaee5da498ca8444cc9b3ae8bbc","category_id":"symbols"},"lotion_bottle":{"native":"🧴","name":"Lotion Bottle","url":"https://s1.vika.cn/space/2021/05/29/09d01ee3405548459b9c43e684d0a672","token":"space/2021/05/29/09d01ee3405548459b9c43e684d0a672","category_id":"objects"},"loud_sound":{"native":"🔊","name":"Speaker with Three Sound Waves","url":"https://s1.vika.cn/space/2021/05/29/5364a435ac064a56a59951972da0bb8b","token":"space/2021/05/29/5364a435ac064a56a59951972da0bb8b","category_id":"objects"},"loudspeaker":{"native":"📢","name":"Public Address Loudspeaker","url":"https://s1.vika.cn/space/2021/05/29/d78d62a9081d47c4b90afaa16a8450f6","token":"space/2021/05/29/d78d62a9081d47c4b90afaa16a8450f6","category_id":"objects"},"love_hotel":{"native":"🏩","name":"Love Hotel","url":"https://s1.vika.cn/space/2021/05/29/94aedcccec2b406781de2b3a8e6e44e1","token":"space/2021/05/29/94aedcccec2b406781de2b3a8e6e44e1","category_id":"places"},"love_letter":{"native":"💌","name":"Love Letter","url":"https://s1.vika.cn/space/2021/05/29/b13c6c994c5e4a5a892e8547a42094a8","token":"space/2021/05/29/b13c6c994c5e4a5a892e8547a42094a8","category_id":"people"},"low_brightness":{"native":"🔅","name":"Low Brightness Symbol","url":"https://s1.vika.cn/space/2021/05/29/733f369e23ef450fad44b70bc16f911f","token":"space/2021/05/29/733f369e23ef450fad44b70bc16f911f","category_id":"symbols"},"lower_left_ballpoint_pen":{"native":"🖊️","name":"Lower Left Ballpoint Pen","url":"https://s1.vika.cn/space/2021/05/29/40d1b4affbf14c4b8f8ea5a35b463cac","token":"space/2021/05/29/40d1b4affbf14c4b8f8ea5a35b463cac","category_id":"objects"},"lower_left_crayon":{"native":"🖍️","name":"Lower Left Crayon","url":"https://s1.vika.cn/space/2021/05/29/08f07719cf7b47209ec3b444d238cd7d","token":"space/2021/05/29/08f07719cf7b47209ec3b444d238cd7d","category_id":"objects"},"lower_left_fountain_pen":{"native":"🖋️","name":"Lower Left Fountain Pen","url":"https://s1.vika.cn/space/2021/05/29/cc5f242a0f274d5693f70d5383a06463","token":"space/2021/05/29/cc5f242a0f274d5693f70d5383a06463","category_id":"objects"},"lower_left_paintbrush":{"native":"🖌️","name":"Lower Left Paintbrush","url":"https://s1.vika.cn/space/2021/05/29/184cce8b9a8d4163b36cf5ddcdaf3ce6","token":"space/2021/05/29/184cce8b9a8d4163b36cf5ddcdaf3ce6","category_id":"objects"},"luggage":{"native":"🧳","name":"Luggage","url":"https://s1.vika.cn/space/2021/05/29/87bc8b41be864c2bbb29d43cd0662553","token":"space/2021/05/29/87bc8b41be864c2bbb29d43cd0662553","category_id":"places"},"lying_face":{"native":"🤥","name":"Lying Face","url":"https://s1.vika.cn/space/2021/05/29/8b4503c7aaf1440b9601de0660079899","token":"space/2021/05/29/8b4503c7aaf1440b9601de0660079899","category_id":"people"},"m":{"native":"Ⓜ️","name":"Circled Latin Capital Letter M","url":"https://s1.vika.cn/space/2021/05/29/17b9045ac4c14c9db17669d674d31229","token":"space/2021/05/29/17b9045ac4c14c9db17669d674d31229","category_id":"symbols"},"mag":{"native":"🔍","name":"Left-Pointing Magnifying Glass","url":"https://s1.vika.cn/space/2021/05/29/cb83d70f910949bfab7a420b5731569a","token":"space/2021/05/29/cb83d70f910949bfab7a420b5731569a","category_id":"objects"},"mag_right":{"native":"🔎","name":"Right-Pointing Magnifying Glass","url":"https://s1.vika.cn/space/2021/05/29/beec8bcc185c484585e10473491a915e","token":"space/2021/05/29/beec8bcc185c484585e10473491a915e","category_id":"objects"},"mage":{"native":"🧙","name":"Mage","url":"https://s1.vika.cn/space/2021/05/29/ccb4be529c5b4c94912bc82c464fb9f3","token":"space/2021/05/29/ccb4be529c5b4c94912bc82c464fb9f3","category_id":"people"},"magnet":{"native":"🧲","name":"Magnet","url":"https://s1.vika.cn/space/2021/05/29/d1a1a5e232044102a36d0ecf008bd07e","token":"space/2021/05/29/d1a1a5e232044102a36d0ecf008bd07e","category_id":"objects"},"mahjong":{"native":"🀄","name":"Mahjong Tile Red Dragon","url":"https://s1.vika.cn/space/2021/05/29/34f492ccd5544dd3b82e10d38a06fb7e","token":"space/2021/05/29/34f492ccd5544dd3b82e10d38a06fb7e","category_id":"activity"},"mailbox":{"native":"📫","name":"Closed Mailbox with Raised Flag","url":"https://s1.vika.cn/space/2021/05/29/bf882f77030a42eeb25ee8667b99b1ec","token":"space/2021/05/29/bf882f77030a42eeb25ee8667b99b1ec","category_id":"objects"},"mailbox_closed":{"native":"📪","name":"Closed Mailbox with Lowered Flag","url":"https://s1.vika.cn/space/2021/05/29/7663d6de2cef4459bb7eda944ed6d56b","token":"space/2021/05/29/7663d6de2cef4459bb7eda944ed6d56b","category_id":"objects"},"mailbox_with_mail":{"native":"📬","name":"Open Mailbox with Raised Flag","url":"https://s1.vika.cn/space/2021/05/29/508e808294c4497caf2e817889f06cb6","token":"space/2021/05/29/508e808294c4497caf2e817889f06cb6","category_id":"objects"},"mailbox_with_no_mail":{"native":"📭","name":"Open Mailbox with Lowered Flag","url":"https://s1.vika.cn/space/2021/05/29/cdc94d62a7644d2884d4e974dee09b3c","token":"space/2021/05/29/cdc94d62a7644d2884d4e974dee09b3c","category_id":"objects"},"male_elf":{"native":"🧝‍♂️","name":"Male Elf","url":"https://s1.vika.cn/space/2021/05/29/e08a05a8b1a347ff8b66a7e40a5c18fd","token":"space/2021/05/29/e08a05a8b1a347ff8b66a7e40a5c18fd","category_id":"people"},"male_fairy":{"native":"🧚‍♂️","name":"Male Fairy","url":"https://s1.vika.cn/space/2021/05/29/2dc436c9e8c04e9cb5ff304b3dc91351","token":"space/2021/05/29/2dc436c9e8c04e9cb5ff304b3dc91351","category_id":"people"},"male_genie":{"native":"🧞‍♂️","name":"Male Genie","url":"https://s1.vika.cn/space/2021/05/29/7fdc41f809f748ac94e76e31c60b2090","token":"space/2021/05/29/7fdc41f809f748ac94e76e31c60b2090","category_id":"people"},"male_mage":{"native":"🧙‍♂️","name":"Male Mage","url":"https://s1.vika.cn/space/2021/05/29/38623441fc4344e8ad828a3adaa10e66","token":"space/2021/05/29/38623441fc4344e8ad828a3adaa10e66","category_id":"people"},"male_superhero":{"native":"🦸‍♂️","name":"Male Superhero","url":"https://s1.vika.cn/space/2021/05/29/e71476203503475c960b9d68bc81ef84","token":"space/2021/05/29/e71476203503475c960b9d68bc81ef84","category_id":"people"},"male_supervillain":{"native":"🦹‍♂️","name":"Male Supervillain","url":"https://s1.vika.cn/space/2021/05/29/35f5143f4142400a83ce4edfdc1d1f55","token":"space/2021/05/29/35f5143f4142400a83ce4edfdc1d1f55","category_id":"people"},"male_vampire":{"native":"🧛‍♂️","name":"Male Vampire","url":"https://s1.vika.cn/space/2021/05/29/480eb11ed725462697c93908678d82a8","token":"space/2021/05/29/480eb11ed725462697c93908678d82a8","category_id":"people"},"male_zombie":{"native":"🧟‍♂️","name":"Male Zombie","url":"https://s1.vika.cn/space/2021/05/29/96293069217347b589cff3f757449d02","token":"space/2021/05/29/96293069217347b589cff3f757449d02","category_id":"people"},"male-artist":{"native":"👨‍🎨","name":"Male Artist","url":"https://s1.vika.cn/space/2021/05/29/6cef92554af148009971589321283cf6","token":"space/2021/05/29/6cef92554af148009971589321283cf6","category_id":"people"},"male-astronaut":{"native":"👨‍🚀","name":"Male Astronaut","url":"https://s1.vika.cn/space/2021/05/29/f3fbbcdd85cf4ddc9c17335a588e5ea4","token":"space/2021/05/29/f3fbbcdd85cf4ddc9c17335a588e5ea4","category_id":"people"},"male-construction-worker":{"native":"👷‍♂️","name":"Male Construction Worker","url":"https://s1.vika.cn/space/2021/05/29/420695183ac94dc1aab7068ebd9a1af2","token":"space/2021/05/29/420695183ac94dc1aab7068ebd9a1af2","category_id":"people"},"male-cook":{"native":"👨‍🍳","name":"Male Cook","url":"https://s1.vika.cn/space/2021/05/29/3fda97065b29470ca24ea85e88475f32","token":"space/2021/05/29/3fda97065b29470ca24ea85e88475f32","category_id":"people"},"male-detective":{"native":"🕵️‍♂️","name":"Male Detective","url":"https://s1.vika.cn/space/2021/05/29/df414cef7e464bce8112b704b5497fdb","token":"space/2021/05/29/df414cef7e464bce8112b704b5497fdb","category_id":"people"},"male-doctor":{"native":"👨‍⚕️","name":"Male Doctor","url":"https://s1.vika.cn/space/2021/05/29/572ab1bcc964401a80ff3f7aa22b7ec9","token":"space/2021/05/29/572ab1bcc964401a80ff3f7aa22b7ec9","category_id":"people"},"male-factory-worker":{"native":"👨‍🏭","name":"Male Factory Worker","url":"https://s1.vika.cn/space/2021/05/29/4b0d5afb6bc6437e8335de59d2c1aa9d","token":"space/2021/05/29/4b0d5afb6bc6437e8335de59d2c1aa9d","category_id":"people"},"male-farmer":{"native":"👨‍🌾","name":"Male Farmer","url":"https://s1.vika.cn/space/2021/05/29/cdfec8293e614687be5ff84eacbfd275","token":"space/2021/05/29/cdfec8293e614687be5ff84eacbfd275","category_id":"people"},"male-firefighter":{"native":"👨‍🚒","name":"Male Firefighter","url":"https://s1.vika.cn/space/2021/05/29/36485f7f92de4499ac8dcd59f59c3a3a","token":"space/2021/05/29/36485f7f92de4499ac8dcd59f59c3a3a","category_id":"people"},"male-guard":{"native":"💂‍♂️","name":"Male Guard","url":"https://s1.vika.cn/space/2021/05/29/4dff2156704845b1900edb8afb70ec39","token":"space/2021/05/29/4dff2156704845b1900edb8afb70ec39","category_id":"people"},"male-judge":{"native":"👨‍⚖️","name":"Male Judge","url":"https://s1.vika.cn/space/2021/05/29/0a937e4824264b329d2af55c718d2196","token":"space/2021/05/29/0a937e4824264b329d2af55c718d2196","category_id":"people"},"male-mechanic":{"native":"👨‍🔧","name":"Male Mechanic","url":"https://s1.vika.cn/space/2021/05/29/19514059c80b4216a1c533ba0b53081a","token":"space/2021/05/29/19514059c80b4216a1c533ba0b53081a","category_id":"people"},"male-office-worker":{"native":"👨‍💼","name":"Male Office Worker","url":"https://s1.vika.cn/space/2021/05/29/272cfb38944a496baee87a3865d1ddb4","token":"space/2021/05/29/272cfb38944a496baee87a3865d1ddb4","category_id":"people"},"male-pilot":{"native":"👨‍✈️","name":"Male Pilot","url":"https://s1.vika.cn/space/2021/05/29/2ac2dcb6b06e4fe0817c3f23e98e00e6","token":"space/2021/05/29/2ac2dcb6b06e4fe0817c3f23e98e00e6","category_id":"people"},"male-police-officer":{"native":"👮‍♂️","name":"Male Police Officer","url":"https://s1.vika.cn/space/2021/05/29/2f19635aaa294298a580264d303a4b42","token":"space/2021/05/29/2f19635aaa294298a580264d303a4b42","category_id":"people"},"male-scientist":{"native":"👨‍🔬","name":"Male Scientist","url":"https://s1.vika.cn/space/2021/05/29/e802ca42daa345099bd18041569dbf1e","token":"space/2021/05/29/e802ca42daa345099bd18041569dbf1e","category_id":"people"},"male-singer":{"native":"👨‍🎤","name":"Male Singer","url":"https://s1.vika.cn/space/2021/05/29/4719f2aa1a284878bf14dfdfd91c4e83","token":"space/2021/05/29/4719f2aa1a284878bf14dfdfd91c4e83","category_id":"people"},"male-student":{"native":"👨‍🎓","name":"Male Student","url":"https://s1.vika.cn/space/2021/05/29/e7dfa11ca3434c88919c9ac96b3b9b12","token":"space/2021/05/29/e7dfa11ca3434c88919c9ac96b3b9b12","category_id":"people"},"male-teacher":{"native":"👨‍🏫","name":"Male Teacher","url":"https://s1.vika.cn/space/2021/05/29/47c84eaf767648beaedbbd35b525c283","token":"space/2021/05/29/47c84eaf767648beaedbbd35b525c283","category_id":"people"},"male-technologist":{"native":"👨‍💻","name":"Male Technologist","url":"https://s1.vika.cn/space/2021/05/29/549634b40aec4e85b3b7f7820625128a","token":"space/2021/05/29/549634b40aec4e85b3b7f7820625128a","category_id":"people"},"man":{"native":"👨","name":"Man","url":"https://s1.vika.cn/space/2021/05/29/5503fa590b4846749433138a08c5d2ca","token":"space/2021/05/29/5503fa590b4846749433138a08c5d2ca","category_id":"people"},"man_climbing":{"native":"🧗‍♂️","name":"Man Climbing","url":"https://s1.vika.cn/space/2021/05/29/635cc3c475ed424fa4e0e355ba441d2b","token":"space/2021/05/29/635cc3c475ed424fa4e0e355ba441d2b","category_id":"people"},"man_dancing":{"native":"🕺","name":"Man Dancing","url":"https://s1.vika.cn/space/2021/05/29/88da7e18523248d5b01f8f452682e2eb","token":"space/2021/05/29/88da7e18523248d5b01f8f452682e2eb","category_id":"people"},"man_in_business_suit_levitating":{"native":"🕴️","name":"Man in Business Suit Levitating","url":"https://s1.vika.cn/space/2021/05/29/66bc8382f1514f66b9f42946b6e0b4ce","token":"space/2021/05/29/66bc8382f1514f66b9f42946b6e0b4ce","category_id":"people"},"man_in_lotus_position":{"native":"🧘‍♂️","name":"Man in Lotus Position","url":"https://s1.vika.cn/space/2021/05/29/06ea4aab1a4444e9accc1c7232a6b4cb","token":"space/2021/05/29/06ea4aab1a4444e9accc1c7232a6b4cb","category_id":"people"},"man_in_manual_wheelchair":{"native":"👨‍🦽","name":"Man in Manual Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/9b040b3589114965add9295ec177506e","token":"space/2021/05/29/9b040b3589114965add9295ec177506e","category_id":"people"},"man_in_motorized_wheelchair":{"native":"👨‍🦼","name":"Man in Motorized Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/a0cd5546a8124622be730ab729992206","token":"space/2021/05/29/a0cd5546a8124622be730ab729992206","category_id":"people"},"man_in_steamy_room":{"native":"🧖‍♂️","name":"Man in Steamy Room","url":"https://s1.vika.cn/space/2021/05/29/0df2f6d0227b404cafbc7866d302dd02","token":"space/2021/05/29/0df2f6d0227b404cafbc7866d302dd02","category_id":"people"},"man_in_tuxedo":{"native":"🤵","name":"Man in Tuxedo","url":"https://s1.vika.cn/space/2021/05/29/b7aa71330e554c1fa021307229d0ff72","token":"space/2021/05/29/b7aa71330e554c1fa021307229d0ff72","category_id":"people"},"man_kneeling":{"native":"🧎‍♂️","name":"Man Kneeling","url":"https://s1.vika.cn/space/2021/05/29/5b59183cac164ee1a6ca36686c47b8ef","token":"space/2021/05/29/5b59183cac164ee1a6ca36686c47b8ef","category_id":"people"},"man_standing":{"native":"🧍‍♂️","name":"Man Standing","url":"https://s1.vika.cn/space/2021/05/29/c13a783859ed4c558ffd6a1d4727cf0b","token":"space/2021/05/29/c13a783859ed4c558ffd6a1d4727cf0b","category_id":"people"},"man_with_gua_pi_mao":{"native":"👲","name":"Man with Gua Pi Mao","url":"https://s1.vika.cn/space/2021/05/29/af2505bb857b4ec2bbda39bd6227410b","token":"space/2021/05/29/af2505bb857b4ec2bbda39bd6227410b","category_id":"people"},"man_with_probing_cane":{"native":"👨‍🦯","name":"Man with Probing Cane","url":"https://s1.vika.cn/space/2021/05/29/301a31e33f3744c1ba005d49adcd104b","token":"space/2021/05/29/301a31e33f3744c1ba005d49adcd104b","category_id":"people"},"man_with_turban":{"native":"👳","name":"Man with Turban","url":"https://s1.vika.cn/space/2021/05/29/d1b9fc105e984c27a05f3b2485ad24a6","token":"space/2021/05/29/d1b9fc105e984c27a05f3b2485ad24a6","category_id":"people"},"man-biking":{"native":"🚴‍♂️","name":"Man Biking","url":"https://s1.vika.cn/space/2021/05/29/4114921dd47f435490094cdfef152688","token":"space/2021/05/29/4114921dd47f435490094cdfef152688","category_id":"people"},"man-bouncing-ball":{"native":"⛹️‍♂️","name":"Man Bouncing Ball","url":"https://s1.vika.cn/space/2021/05/29/cc3dac45bfd84392abed5dc2b71d4d6e","token":"space/2021/05/29/cc3dac45bfd84392abed5dc2b71d4d6e","category_id":"people"},"man-bowing":{"native":"🙇‍♂️","name":"Man Bowing","url":"https://s1.vika.cn/space/2021/05/29/f8a7c657609742afbca790a1caaa1c80","token":"space/2021/05/29/f8a7c657609742afbca790a1caaa1c80","category_id":"people"},"man-boy":{"native":"👨‍👦","name":"Man Boy","url":"https://s1.vika.cn/space/2021/05/29/43f402833c2e43ed912e2f433a11d5d3","token":"space/2021/05/29/43f402833c2e43ed912e2f433a11d5d3","category_id":"people"},"man-boy-boy":{"native":"👨‍👦‍👦","name":"Man Boy Boy","url":"https://s1.vika.cn/space/2021/05/29/b7e5133e55894670a6eff7e5b51a7499","token":"space/2021/05/29/b7e5133e55894670a6eff7e5b51a7499","category_id":"people"},"man-cartwheeling":{"native":"🤸‍♂️","name":"Man Cartwheeling","url":"https://s1.vika.cn/space/2021/05/29/05b424551b694cfbbaef5281c7a9b629","token":"space/2021/05/29/05b424551b694cfbbaef5281c7a9b629","category_id":"people"},"man-facepalming":{"native":"🤦‍♂️","name":"Man Facepalming","url":"https://s1.vika.cn/space/2021/05/29/d4f35769aa0c48a4bd3a740f827e6c58","token":"space/2021/05/29/d4f35769aa0c48a4bd3a740f827e6c58","category_id":"people"},"man-frowning":{"native":"🙍‍♂️","name":"Man Frowning","url":"https://s1.vika.cn/space/2021/05/29/fa1eaf9aaeb448e99c7def1c6dfc3750","token":"space/2021/05/29/fa1eaf9aaeb448e99c7def1c6dfc3750","category_id":"people"},"man-gesturing-no":{"native":"🙅‍♂️","name":"Man Gesturing No","url":"https://s1.vika.cn/space/2021/05/29/f194ca14b6044363bee7e77a1bc693a7","token":"space/2021/05/29/f194ca14b6044363bee7e77a1bc693a7","category_id":"people"},"man-gesturing-ok":{"native":"🙆‍♂️","name":"Man Gesturing Ok","url":"https://s1.vika.cn/space/2021/05/29/d3e0da2024ec4940847b286cc73a31d1","token":"space/2021/05/29/d3e0da2024ec4940847b286cc73a31d1","category_id":"people"},"man-getting-haircut":{"native":"💇‍♂️","name":"Man Getting Haircut","url":"https://s1.vika.cn/space/2021/05/29/42aa52a3f8a849dc9d2ac3b31d1e60dc","token":"space/2021/05/29/42aa52a3f8a849dc9d2ac3b31d1e60dc","category_id":"people"},"man-getting-massage":{"native":"💆‍♂️","name":"Man Getting Massage","url":"https://s1.vika.cn/space/2021/05/29/208a492f8dbb4d46a7b566b8764ebf2f","token":"space/2021/05/29/208a492f8dbb4d46a7b566b8764ebf2f","category_id":"people"},"man-girl":{"native":"👨‍👧","name":"Man Girl","url":"https://s1.vika.cn/space/2021/05/29/419fc27789a047b7872650a12663c49d","token":"space/2021/05/29/419fc27789a047b7872650a12663c49d","category_id":"people"},"man-girl-boy":{"native":"👨‍👧‍👦","name":"Man Girl Boy","url":"https://s1.vika.cn/space/2021/05/29/409bc7abc0ce4109ad7f6e222ac7813f","token":"space/2021/05/29/409bc7abc0ce4109ad7f6e222ac7813f","category_id":"people"},"man-girl-girl":{"native":"👨‍👧‍👧","name":"Man Girl Girl","url":"https://s1.vika.cn/space/2021/05/29/b26c8ae47d074424b6eabb04743d637f","token":"space/2021/05/29/b26c8ae47d074424b6eabb04743d637f","category_id":"people"},"man-golfing":{"native":"🏌️‍♂️","name":"Man Golfing","url":"https://s1.vika.cn/space/2021/05/29/cb1adb9f40df49c7b20ccc611c0d143f","token":"space/2021/05/29/cb1adb9f40df49c7b20ccc611c0d143f","category_id":"people"},"man-heart-man":{"native":"👨‍❤️‍👨","name":"Man Heart Man","url":"https://s1.vika.cn/space/2021/05/29/2410c940078b4035ac70a0d1f796c02e","token":"space/2021/05/29/2410c940078b4035ac70a0d1f796c02e","category_id":"people"},"man-juggling":{"native":"🤹‍♂️","name":"Man Juggling","url":"https://s1.vika.cn/space/2021/05/29/af1076be3dfb49c18423c4d672422964","token":"space/2021/05/29/af1076be3dfb49c18423c4d672422964","category_id":"people"},"man-kiss-man":{"native":"👨‍❤️‍💋‍👨","name":"Man Kiss Man","url":"https://s1.vika.cn/space/2021/05/29/d25cd67a9ab7475fb425c01d51aed69f","token":"space/2021/05/29/d25cd67a9ab7475fb425c01d51aed69f","category_id":"people"},"man-lifting-weights":{"native":"🏋️‍♂️","name":"Man Lifting Weights","url":"https://s1.vika.cn/space/2021/05/29/03e78ddd9846482f9fc56cda7ed58ab7","token":"space/2021/05/29/03e78ddd9846482f9fc56cda7ed58ab7","category_id":"people"},"man-man-boy":{"native":"👨‍👨‍👦","name":"Man Man Boy","url":"https://s1.vika.cn/space/2021/05/29/5989419dc9b14fe4b805d5070729d901","token":"space/2021/05/29/5989419dc9b14fe4b805d5070729d901","category_id":"people"},"man-man-boy-boy":{"native":"👨‍👨‍👦‍👦","name":"Man Man Boy Boy","url":"https://s1.vika.cn/space/2021/05/29/855724c684a44358be5eca3e1460a7c4","token":"space/2021/05/29/855724c684a44358be5eca3e1460a7c4","category_id":"people"},"man-man-girl":{"native":"👨‍👨‍👧","name":"Man Man Girl","url":"https://s1.vika.cn/space/2021/05/29/fbaa0c3494b94eb29afefefe528a6137","token":"space/2021/05/29/fbaa0c3494b94eb29afefefe528a6137","category_id":"people"},"man-man-girl-boy":{"native":"👨‍👨‍👧‍👦","name":"Man Man Girl Boy","url":"https://s1.vika.cn/space/2021/05/29/806ce7f4d1e34b1a988d8a7d9fe2a448","token":"space/2021/05/29/806ce7f4d1e34b1a988d8a7d9fe2a448","category_id":"people"},"man-man-girl-girl":{"native":"👨‍👨‍👧‍👧","name":"Man Man Girl Girl","url":"https://s1.vika.cn/space/2021/05/29/3f3731d48d6842bca4820a529d889c2a","token":"space/2021/05/29/3f3731d48d6842bca4820a529d889c2a","category_id":"people"},"man-mountain-biking":{"native":"🚵‍♂️","name":"Man Mountain Biking","url":"https://s1.vika.cn/space/2021/05/29/98a7d6886e454fb782512fae8dd1da0e","token":"space/2021/05/29/98a7d6886e454fb782512fae8dd1da0e","category_id":"people"},"man-playing-handball":{"native":"🤾‍♂️","name":"Man Playing Handball","url":"https://s1.vika.cn/space/2021/05/29/2dbac5b40435455e8238ec713e366ca3","token":"space/2021/05/29/2dbac5b40435455e8238ec713e366ca3","category_id":"people"},"man-playing-water-polo":{"native":"🤽‍♂️","name":"Man Playing Water Polo","url":"https://s1.vika.cn/space/2021/05/29/86dd28e54840437e80c61658e75b7f5a","token":"space/2021/05/29/86dd28e54840437e80c61658e75b7f5a","category_id":"people"},"man-pouting":{"native":"🙎‍♂️","name":"Man Pouting","url":"https://s1.vika.cn/space/2021/05/29/94df84ae4a844a5cb0301588e2066349","token":"space/2021/05/29/94df84ae4a844a5cb0301588e2066349","category_id":"people"},"man-raising-hand":{"native":"🙋‍♂️","name":"Man Raising Hand","url":"https://s1.vika.cn/space/2021/05/29/55ccee09576d4ec9a4f34f035b74b63c","token":"space/2021/05/29/55ccee09576d4ec9a4f34f035b74b63c","category_id":"people"},"man-rowing-boat":{"native":"🚣‍♂️","name":"Man Rowing Boat","url":"https://s1.vika.cn/space/2021/05/29/dc116195371743a2bcc0728189ad41df","token":"space/2021/05/29/dc116195371743a2bcc0728189ad41df","category_id":"people"},"man-running":{"native":"🏃‍♂️","name":"Man Running","url":"https://s1.vika.cn/space/2021/05/29/b16eae230b9745fb84b974de78289d04","token":"space/2021/05/29/b16eae230b9745fb84b974de78289d04","category_id":"people"},"man-shrugging":{"native":"🤷‍♂️","name":"Man Shrugging","url":"https://s1.vika.cn/space/2021/05/29/182396ddddf64a20a2ee2f86c25cabcf","token":"space/2021/05/29/182396ddddf64a20a2ee2f86c25cabcf","category_id":"people"},"man-surfing":{"native":"🏄‍♂️","name":"Man Surfing","url":"https://s1.vika.cn/space/2021/05/29/e75982f7159d42b79a75ccf16c95f4ee","token":"space/2021/05/29/e75982f7159d42b79a75ccf16c95f4ee","category_id":"people"},"man-swimming":{"native":"🏊‍♂️","name":"Man Swimming","url":"https://s1.vika.cn/space/2021/05/29/db36be1fb2fd4af1af74cd315e9e035a","token":"space/2021/05/29/db36be1fb2fd4af1af74cd315e9e035a","category_id":"people"},"man-tipping-hand":{"native":"💁‍♂️","name":"Man Tipping Hand","url":"https://s1.vika.cn/space/2021/05/29/d45fa3d0c8de44a18e611468eb10afc1","token":"space/2021/05/29/d45fa3d0c8de44a18e611468eb10afc1","category_id":"people"},"man-walking":{"native":"🚶‍♂️","name":"Man Walking","url":"https://s1.vika.cn/space/2021/05/29/e74b06c4d24a4931b849d974663ba046","token":"space/2021/05/29/e74b06c4d24a4931b849d974663ba046","category_id":"people"},"man-wearing-turban":{"native":"👳‍♂️","name":"Man Wearing Turban","url":"https://s1.vika.cn/space/2021/05/29/c45cb4ba1f4c472f9c9809bfa0bb2bef","token":"space/2021/05/29/c45cb4ba1f4c472f9c9809bfa0bb2bef","category_id":"people"},"man-with-bunny-ears-partying":{"native":"👯‍♂️","name":"Man with Bunny Ears Partying","url":"https://s1.vika.cn/space/2021/05/29/5a6cc8dd05bc47e0b6e5948df61d684c","token":"space/2021/05/29/5a6cc8dd05bc47e0b6e5948df61d684c","category_id":"people"},"man-woman-boy":{"native":"👨‍👩‍👦","name":"Man Woman Boy","url":"https://s1.vika.cn/space/2021/05/29/a135a67891344215a32bcb188e6fbe18","token":"space/2021/05/29/a135a67891344215a32bcb188e6fbe18","category_id":"people"},"man-woman-boy-boy":{"native":"👨‍👩‍👦‍👦","name":"Man Woman Boy Boy","url":"https://s1.vika.cn/space/2021/05/29/c068091d3f7e4f39a3987a0b9f271849","token":"space/2021/05/29/c068091d3f7e4f39a3987a0b9f271849","category_id":"people"},"man-woman-girl":{"native":"👨‍👩‍👧","name":"Man Woman Girl","url":"https://s1.vika.cn/space/2021/05/29/c422f0f599a84337bee6eb2e5c02d061","token":"space/2021/05/29/c422f0f599a84337bee6eb2e5c02d061","category_id":"people"},"man-woman-girl-boy":{"native":"👨‍👩‍👧‍👦","name":"Man Woman Girl Boy","url":"https://s1.vika.cn/space/2021/05/29/f95d73cc5b9749b0a28ad0535cabc4ea","token":"space/2021/05/29/f95d73cc5b9749b0a28ad0535cabc4ea","category_id":"people"},"man-woman-girl-girl":{"native":"👨‍👩‍👧‍👧","name":"Man Woman Girl Girl","url":"https://s1.vika.cn/space/2021/05/29/94a6ce56c5ac4f4cbeeeac0bf9a1d360","token":"space/2021/05/29/94a6ce56c5ac4f4cbeeeac0bf9a1d360","category_id":"people"},"man-wrestling":{"native":"🤼‍♂️","name":"Man Wrestling","url":"https://s1.vika.cn/space/2021/05/29/3426987843004c0a8b6efd0a744ba89a","token":"space/2021/05/29/3426987843004c0a8b6efd0a744ba89a","category_id":"people"},"mango":{"native":"🥭","name":"Mango","url":"https://s1.vika.cn/space/2021/05/29/b1496518fa4d4af698e2fd22d76c3a29","token":"space/2021/05/29/b1496518fa4d4af698e2fd22d76c3a29","category_id":"foods"},"mans_shoe":{"native":"👞","name":"Mans Shoe","url":"https://s1.vika.cn/space/2021/05/29/69e9bcaecdeb40ebbcc554fec7e8545e","token":"space/2021/05/29/69e9bcaecdeb40ebbcc554fec7e8545e","category_id":"objects"},"mantelpiece_clock":{"native":"🕰️","name":"Mantelpiece Clock","url":"https://s1.vika.cn/space/2021/05/29/bd4069f52fed44b59920bc2123a31348","token":"space/2021/05/29/bd4069f52fed44b59920bc2123a31348","category_id":"places"},"manual_wheelchair":{"native":"🦽","name":"Manual Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/75d99d9ae1c54a518ae15545c924609e","token":"space/2021/05/29/75d99d9ae1c54a518ae15545c924609e","category_id":"places"},"maple_leaf":{"native":"🍁","name":"Maple Leaf","url":"https://s1.vika.cn/space/2021/05/29/0aea27c8e227448c84562a9a73af9e97","token":"space/2021/05/29/0aea27c8e227448c84562a9a73af9e97","category_id":"nature"},"martial_arts_uniform":{"native":"🥋","name":"Martial Arts Uniform","url":"https://s1.vika.cn/space/2021/05/29/ec76090804d34d0c96fda21e15d07f7d","token":"space/2021/05/29/ec76090804d34d0c96fda21e15d07f7d","category_id":"activity"},"mask":{"native":"😷","name":"Face with Medical Mask","url":"https://s1.vika.cn/space/2021/05/29/3973d180763e45f49bb31d63b181004b","token":"space/2021/05/29/3973d180763e45f49bb31d63b181004b","category_id":"people"},"massage":{"native":"💆","name":"Face Massage","url":"https://s1.vika.cn/space/2021/05/29/b69b99aa745549b5a1d0a5919a466f5e","token":"space/2021/05/29/b69b99aa745549b5a1d0a5919a466f5e","category_id":"people"},"mate_drink":{"native":"🧉","name":"Mate Drink","url":"https://s1.vika.cn/space/2021/05/29/73319538347c4f63ad33f9aaf91bf21d","token":"space/2021/05/29/73319538347c4f63ad33f9aaf91bf21d","category_id":"foods"},"meat_on_bone":{"native":"🍖","name":"Meat on Bone","url":"https://s1.vika.cn/space/2021/05/29/c31a081d30d74fe0a642a4a53dfb462c","token":"space/2021/05/29/c31a081d30d74fe0a642a4a53dfb462c","category_id":"foods"},"mechanic":{"native":"🧑‍🔧","name":"Mechanic","url":"https://s1.vika.cn/space/2021/05/29/ce13552995c749348dbe0acefed00586","token":"space/2021/05/29/ce13552995c749348dbe0acefed00586","category_id":"people"},"mechanical_arm":{"native":"🦾","name":"Mechanical Arm","url":"https://s1.vika.cn/space/2021/05/29/6c4a24ace6284522907c9ac22dec71bc","token":"space/2021/05/29/6c4a24ace6284522907c9ac22dec71bc","category_id":"people"},"mechanical_leg":{"native":"🦿","name":"Mechanical Leg","url":"https://s1.vika.cn/space/2021/05/29/6819684e3b484cada54bb790a3764b5f","token":"space/2021/05/29/6819684e3b484cada54bb790a3764b5f","category_id":"people"},"medal":{"native":"🎖️","name":"Medal","url":"https://s1.vika.cn/space/2021/05/29/a8415f3974b54dbebd977091732de0d6","token":"space/2021/05/29/a8415f3974b54dbebd977091732de0d6","category_id":"activity"},"mega":{"native":"📣","name":"Cheering Megaphone","url":"https://s1.vika.cn/space/2021/05/29/05b40731d548437a83ee65919b39d8b5","token":"space/2021/05/29/05b40731d548437a83ee65919b39d8b5","category_id":"objects"},"melon":{"native":"🍈","name":"Melon","url":"https://s1.vika.cn/space/2021/05/29/f3c2f5f9001b4b8894e33c07d65ca321","token":"space/2021/05/29/f3c2f5f9001b4b8894e33c07d65ca321","category_id":"foods"},"memo":{"native":"📝","name":"Memo","url":"https://s1.vika.cn/space/2021/05/29/7fb8bed090864003aae57d4ca5138f99","token":"space/2021/05/29/7fb8bed090864003aae57d4ca5138f99","category_id":"objects"},"menorah_with_nine_branches":{"native":"🕎","name":"Menorah with Nine Branches","url":"https://s1.vika.cn/space/2021/05/29/0c4883138fbc47cc8c69fdc70b595ef7","token":"space/2021/05/29/0c4883138fbc47cc8c69fdc70b595ef7","category_id":"symbols"},"mens":{"native":"🚹","name":"Mens Symbol","url":"https://s1.vika.cn/space/2021/05/29/ec08feaf6db04636a2891f7a7eac56b1","token":"space/2021/05/29/ec08feaf6db04636a2891f7a7eac56b1","category_id":"symbols"},"mermaid":{"native":"🧜‍♀️","name":"Mermaid","url":"https://s1.vika.cn/space/2021/05/29/b114f0b535b64df9bbea24a750c6dca3","token":"space/2021/05/29/b114f0b535b64df9bbea24a750c6dca3","category_id":"people"},"merman":{"native":"🧜‍♂️","name":"Merman","url":"https://s1.vika.cn/space/2021/05/29/fa13c8a66641417ea10c9a078f1f8d49","token":"space/2021/05/29/fa13c8a66641417ea10c9a078f1f8d49","category_id":"people"},"merperson":{"native":"🧜","name":"Merperson","url":"https://s1.vika.cn/space/2021/05/29/d8e49766ad1f44c0aba3773f454b50f2","token":"space/2021/05/29/d8e49766ad1f44c0aba3773f454b50f2","category_id":"people"},"metro":{"native":"🚇","name":"Metro","url":"https://s1.vika.cn/space/2021/05/29/e8523149ba494646a8be70217f8ef381","token":"space/2021/05/29/e8523149ba494646a8be70217f8ef381","category_id":"places"},"microbe":{"native":"🦠","name":"Microbe","url":"https://s1.vika.cn/space/2021/05/29/af4a9bf0233f41c88512792d2e5a9651","token":"space/2021/05/29/af4a9bf0233f41c88512792d2e5a9651","category_id":"nature"},"microphone":{"native":"🎤","name":"Microphone","url":"https://s1.vika.cn/space/2021/05/29/b2e335dec8da47f6b7354a0e64c9ff44","token":"space/2021/05/29/b2e335dec8da47f6b7354a0e64c9ff44","category_id":"objects"},"microscope":{"native":"🔬","name":"Microscope","url":"https://s1.vika.cn/space/2021/05/29/77c17e35eaa34db682a3cb21e6179abd","token":"space/2021/05/29/77c17e35eaa34db682a3cb21e6179abd","category_id":"objects"},"middle_finger":{"native":"🖕","name":"Reversed Hand with Middle Finger Extended","url":"https://s1.vika.cn/space/2021/05/29/69da7c81a13a4ba8a0f94035a4217815","token":"space/2021/05/29/69da7c81a13a4ba8a0f94035a4217815","category_id":"people"},"milky_way":{"native":"🌌","name":"Milky Way","url":"https://s1.vika.cn/space/2021/05/29/3bee280d25ae49f19b7d16155cd2e7aa","token":"space/2021/05/29/3bee280d25ae49f19b7d16155cd2e7aa","category_id":"places"},"minibus":{"native":"🚐","name":"Minibus","url":"https://s1.vika.cn/space/2021/05/29/780c23bd96784b7daf6e13f47720430d","token":"space/2021/05/29/780c23bd96784b7daf6e13f47720430d","category_id":"places"},"minidisc":{"native":"💽","name":"Minidisc","url":"https://s1.vika.cn/space/2021/05/29/dd8e8372efe44447b20beb016925c124","token":"space/2021/05/29/dd8e8372efe44447b20beb016925c124","category_id":"objects"},"mobile_phone_off":{"native":"📴","name":"Mobile Phone off","url":"https://s1.vika.cn/space/2021/05/29/98d7d4824e3d481a83b12fc14b68e39c","token":"space/2021/05/29/98d7d4824e3d481a83b12fc14b68e39c","category_id":"symbols"},"money_mouth_face":{"native":"🤑","name":"Money-Mouth Face","url":"https://s1.vika.cn/space/2021/05/29/dd305499b87e4993af61a799f0d02b96","token":"space/2021/05/29/dd305499b87e4993af61a799f0d02b96","category_id":"people"},"money_with_wings":{"native":"💸","name":"Money with Wings","url":"https://s1.vika.cn/space/2021/05/29/d085e7e2e73849e29bde6a4c415bce2b","token":"space/2021/05/29/d085e7e2e73849e29bde6a4c415bce2b","category_id":"objects"},"moneybag":{"native":"💰","name":"Money Bag","url":"https://s1.vika.cn/space/2021/05/29/e1ffa3d308bb4c8b9f6f0c890cca27bc","token":"space/2021/05/29/e1ffa3d308bb4c8b9f6f0c890cca27bc","category_id":"objects"},"monkey":{"native":"🐒","name":"Monkey","url":"https://s1.vika.cn/space/2021/05/29/08456f6373214e9f9087d9d6117aced4","token":"space/2021/05/29/08456f6373214e9f9087d9d6117aced4","category_id":"nature"},"monkey_face":{"native":"🐵","name":"Monkey Face","url":"https://s1.vika.cn/space/2021/05/29/a10f0cbaad9e473d80efd38bb43b0805","token":"space/2021/05/29/a10f0cbaad9e473d80efd38bb43b0805","category_id":"nature"},"monorail":{"native":"🚝","name":"Monorail","url":"https://s1.vika.cn/space/2021/05/29/016f36f59bd64491b76370fe33577ee2","token":"space/2021/05/29/016f36f59bd64491b76370fe33577ee2","category_id":"places"},"moon":{"native":"🌔","name":"Waxing Gibbous Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/84729ac566b0448ebc3e9c9950506145","token":"space/2021/05/29/84729ac566b0448ebc3e9c9950506145","category_id":"places"},"moon_cake":{"native":"🥮","name":"Moon Cake","url":"https://s1.vika.cn/space/2021/05/29/255fd7477e86485ebe9bfc696faf9a92","token":"space/2021/05/29/255fd7477e86485ebe9bfc696faf9a92","category_id":"foods"},"mortar_board":{"native":"🎓","name":"Graduation Cap","url":"https://s1.vika.cn/space/2021/05/29/f8e077dfcdfa4f448222c54e26d44609","token":"space/2021/05/29/f8e077dfcdfa4f448222c54e26d44609","category_id":"objects"},"mosque":{"native":"🕌","name":"Mosque","url":"https://s1.vika.cn/space/2021/05/29/92f13cf492314887a38921dfc59347df","token":"space/2021/05/29/92f13cf492314887a38921dfc59347df","category_id":"places"},"mosquito":{"native":"🦟","name":"Mosquito","url":"https://s1.vika.cn/space/2021/05/29/825cf7115ce1429bb488deb8289fbc43","token":"space/2021/05/29/825cf7115ce1429bb488deb8289fbc43","category_id":"nature"},"mostly_sunny":{"native":"🌤️","name":"Mostly Sunny","url":"https://s1.vika.cn/space/2021/05/29/46da8e7fe0b54712b91b66d639d57bfe","token":"space/2021/05/29/46da8e7fe0b54712b91b66d639d57bfe","category_id":"places"},"motor_boat":{"native":"🛥️","name":"Motor Boat","url":"https://s1.vika.cn/space/2021/05/29/6a48305948f544489de72fe916cdeb1e","token":"space/2021/05/29/6a48305948f544489de72fe916cdeb1e","category_id":"places"},"motor_scooter":{"native":"🛵","name":"Motor Scooter","url":"https://s1.vika.cn/space/2021/05/29/3d29bff61a914647b749a9149a193f91","token":"space/2021/05/29/3d29bff61a914647b749a9149a193f91","category_id":"places"},"motorized_wheelchair":{"native":"🦼","name":"Motorized Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/941846ead2f040f5a110920c3a533998","token":"space/2021/05/29/941846ead2f040f5a110920c3a533998","category_id":"places"},"motorway":{"native":"🛣️","name":"Motorway","url":"https://s1.vika.cn/space/2021/05/29/9fd55b1088bd406b81cff7aaed206d5c","token":"space/2021/05/29/9fd55b1088bd406b81cff7aaed206d5c","category_id":"places"},"mount_fuji":{"native":"🗻","name":"Mount Fuji","url":"https://s1.vika.cn/space/2021/05/29/47c725ac3a88417891e117b07b72ffd7","token":"space/2021/05/29/47c725ac3a88417891e117b07b72ffd7","category_id":"places"},"mountain":{"native":"⛰️","name":"Mountain","url":"https://s1.vika.cn/space/2021/05/29/4cea3c45c241427db2d2276639b88a00","token":"space/2021/05/29/4cea3c45c241427db2d2276639b88a00","category_id":"places"},"mountain_bicyclist":{"native":"🚵","name":"Mountain Bicyclist","url":"https://s1.vika.cn/space/2021/05/29/99568b4bb6304d1a97c2859a57dbec61","token":"space/2021/05/29/99568b4bb6304d1a97c2859a57dbec61","category_id":"people"},"mountain_cableway":{"native":"🚠","name":"Mountain Cableway","url":"https://s1.vika.cn/space/2021/05/29/3588b85c8a3e4d16969816031305c9ca","token":"space/2021/05/29/3588b85c8a3e4d16969816031305c9ca","category_id":"places"},"mountain_railway":{"native":"🚞","name":"Mountain Railway","url":"https://s1.vika.cn/space/2021/05/29/0c6b7d26a38e4f44b49e001738fe557a","token":"space/2021/05/29/0c6b7d26a38e4f44b49e001738fe557a","category_id":"places"},"mouse":{"native":"🐭","name":"Mouse Face","url":"https://s1.vika.cn/space/2021/05/29/3efaebf2d81d43af933e9fc5a1fe0994","token":"space/2021/05/29/3efaebf2d81d43af933e9fc5a1fe0994","category_id":"nature"},"mouse2":{"native":"🐁","name":"Mouse","url":"https://s1.vika.cn/space/2021/05/29/bdb072f7ebfa4e1f8b01cf87fab49306","token":"space/2021/05/29/bdb072f7ebfa4e1f8b01cf87fab49306","category_id":"nature"},"movie_camera":{"native":"🎥","name":"Movie Camera","url":"https://s1.vika.cn/space/2021/05/29/73ba671339494b6a8b2348fa8934a7fa","token":"space/2021/05/29/73ba671339494b6a8b2348fa8934a7fa","category_id":"objects"},"moyai":{"native":"🗿","name":"Moyai","url":"https://s1.vika.cn/space/2021/05/29/6c7ddbff2094485e8455eeba49d57156","token":"space/2021/05/29/6c7ddbff2094485e8455eeba49d57156","category_id":"objects"},"mrs_claus":{"native":"🤶","name":"Mother Christmas","url":"https://s1.vika.cn/space/2021/05/29/f4bef368cc3d47a1b0018ab32c4ed2b7","token":"space/2021/05/29/f4bef368cc3d47a1b0018ab32c4ed2b7","category_id":"people"},"muscle":{"native":"💪","name":"Flexed Biceps","url":"https://s1.vika.cn/space/2021/05/29/04acfd620ccb4f87ab8b268753c99b21","token":"space/2021/05/29/04acfd620ccb4f87ab8b268753c99b21","category_id":"people"},"mushroom":{"native":"🍄","name":"Mushroom","url":"https://s1.vika.cn/space/2021/05/29/f3886844d7b44cc7aaf4297873fa9854","token":"space/2021/05/29/f3886844d7b44cc7aaf4297873fa9854","category_id":"foods"},"musical_keyboard":{"native":"🎹","name":"Musical Keyboard","url":"https://s1.vika.cn/space/2021/05/29/d246d269cc3246b18b0617a058134a3a","token":"space/2021/05/29/d246d269cc3246b18b0617a058134a3a","category_id":"objects"},"musical_note":{"native":"🎵","name":"Musical Note","url":"https://s1.vika.cn/space/2021/05/29/42a7cae2355749abac72040452636b06","token":"space/2021/05/29/42a7cae2355749abac72040452636b06","category_id":"objects"},"musical_score":{"native":"🎼","name":"Musical Score","url":"https://s1.vika.cn/space/2021/05/29/7d0aa6ab2ade463988e44f710bbfd4e2","token":"space/2021/05/29/7d0aa6ab2ade463988e44f710bbfd4e2","category_id":"objects"},"mute":{"native":"🔇","name":"Speaker with Cancellation Stroke","url":"https://s1.vika.cn/space/2021/05/29/ddd2c73a8d0647cc972ee3bcab324f47","token":"space/2021/05/29/ddd2c73a8d0647cc972ee3bcab324f47","category_id":"objects"},"nail_care":{"native":"💅","name":"Nail Polish","url":"https://s1.vika.cn/space/2021/05/29/0d989bb12af04d4fa83b498fe5aa1d59","token":"space/2021/05/29/0d989bb12af04d4fa83b498fe5aa1d59","category_id":"people"},"name_badge":{"native":"📛","name":"Name Badge","url":"https://s1.vika.cn/space/2021/05/29/251e2fdaba39441ca1b1d032f5a27261","token":"space/2021/05/29/251e2fdaba39441ca1b1d032f5a27261","category_id":"symbols"},"national_park":{"native":"🏞️","name":"National Park","url":"https://s1.vika.cn/space/2021/05/29/1764c8d7dc0144da8141f4633430a8d3","token":"space/2021/05/29/1764c8d7dc0144da8141f4633430a8d3","category_id":"places"},"nauseated_face":{"native":"🤢","name":"Nauseated Face","url":"https://s1.vika.cn/space/2021/05/29/12215d19c4d04451a933ae0ff7cf1fc2","token":"space/2021/05/29/12215d19c4d04451a933ae0ff7cf1fc2","category_id":"people"},"nazar_amulet":{"native":"🧿","name":"Nazar Amulet","url":"https://s1.vika.cn/space/2021/05/29/e1d3973e6308432899136bda0d88058d","token":"space/2021/05/29/e1d3973e6308432899136bda0d88058d","category_id":"activity"},"necktie":{"native":"👔","name":"Necktie","url":"https://s1.vika.cn/space/2021/05/29/304252d2522a43e490c7bdfb8238fd3a","token":"space/2021/05/29/304252d2522a43e490c7bdfb8238fd3a","category_id":"objects"},"negative_squared_cross_mark":{"native":"❎","name":"Negative Squared Cross Mark","url":"https://s1.vika.cn/space/2021/05/29/ba96f1c31f584dbda69fbd9e761300bf","token":"space/2021/05/29/ba96f1c31f584dbda69fbd9e761300bf","category_id":"symbols"},"nerd_face":{"native":"🤓","name":"Nerd Face","url":"https://s1.vika.cn/space/2021/05/29/e3c0511d990841f5b9371ef4dad57909","token":"space/2021/05/29/e3c0511d990841f5b9371ef4dad57909","category_id":"people"},"neutral_face":{"native":"😐","name":"Neutral Face","url":"https://s1.vika.cn/space/2021/05/29/854b7c7ce137424498c5cca994c4fd2d","token":"space/2021/05/29/854b7c7ce137424498c5cca994c4fd2d","category_id":"people"},"new":{"native":"🆕","name":"Squared New","url":"https://s1.vika.cn/space/2021/05/29/05cf203867c54a01a51a0cc3627ba8fc","token":"space/2021/05/29/05cf203867c54a01a51a0cc3627ba8fc","category_id":"symbols"},"new_moon":{"native":"🌑","name":"New Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/6effa3796c994b20a379843638bc7f4b","token":"space/2021/05/29/6effa3796c994b20a379843638bc7f4b","category_id":"places"},"new_moon_with_face":{"native":"🌚","name":"New Moon with Face","url":"https://s1.vika.cn/space/2021/05/29/b01483e3f505473fb0b7e3a5e41bb352","token":"space/2021/05/29/b01483e3f505473fb0b7e3a5e41bb352","category_id":"places"},"newspaper":{"native":"📰","name":"Newspaper","url":"https://s1.vika.cn/space/2021/05/29/eeb390de6cd3453986bd4a257fc24961","token":"space/2021/05/29/eeb390de6cd3453986bd4a257fc24961","category_id":"objects"},"ng":{"native":"🆖","name":"Squared Ng","url":"https://s1.vika.cn/space/2021/05/29/55f17d498348420698f2908431ccbeff","token":"space/2021/05/29/55f17d498348420698f2908431ccbeff","category_id":"symbols"},"night_with_stars":{"native":"🌃","name":"Night with Stars","url":"https://s1.vika.cn/space/2021/05/29/4c85b7f7cb8a4092971e2d5570fcf3fd","token":"space/2021/05/29/4c85b7f7cb8a4092971e2d5570fcf3fd","category_id":"places"},"nine":{"native":"9️⃣","name":"Keycap 9","url":"https://s1.vika.cn/space/2021/05/29/b75a01f6a1034ac1b092de702302b0f8","token":"space/2021/05/29/b75a01f6a1034ac1b092de702302b0f8","category_id":"symbols"},"no_bell":{"native":"🔕","name":"Bell with Cancellation Stroke","url":"https://s1.vika.cn/space/2021/05/29/6d6f5a4f1d0c430e9877aa4bae6b4ebd","token":"space/2021/05/29/6d6f5a4f1d0c430e9877aa4bae6b4ebd","category_id":"objects"},"no_bicycles":{"native":"🚳","name":"No Bicycles","url":"https://s1.vika.cn/space/2021/05/29/1e845fe0b7664bcaa5c5b8c9924f7142","token":"space/2021/05/29/1e845fe0b7664bcaa5c5b8c9924f7142","category_id":"symbols"},"no_entry":{"native":"⛔","name":"No Entry","url":"https://s1.vika.cn/space/2021/05/29/17d0ff3221a4489b942b9e8ab935722a","token":"space/2021/05/29/17d0ff3221a4489b942b9e8ab935722a","category_id":"symbols"},"no_entry_sign":{"native":"🚫","name":"No Entry Sign","url":"https://s1.vika.cn/space/2021/05/29/3fde9baca6f64e1785051337499c2630","token":"space/2021/05/29/3fde9baca6f64e1785051337499c2630","category_id":"symbols"},"no_good":{"native":"🙅","name":"Face with No Good Gesture","url":"https://s1.vika.cn/space/2021/05/29/2a1e0c0df4904fbba5b2fa0ae172660f","token":"space/2021/05/29/2a1e0c0df4904fbba5b2fa0ae172660f","category_id":"people"},"no_mobile_phones":{"native":"📵","name":"No Mobile Phones","url":"https://s1.vika.cn/space/2021/05/29/e53cd118fe7d476b9aaf0b993795a2e9","token":"space/2021/05/29/e53cd118fe7d476b9aaf0b993795a2e9","category_id":"symbols"},"no_mouth":{"native":"😶","name":"Face Without Mouth","url":"https://s1.vika.cn/space/2021/05/29/3966cf424e804a93849b4a35c0b00b4c","token":"space/2021/05/29/3966cf424e804a93849b4a35c0b00b4c","category_id":"people"},"no_pedestrians":{"native":"🚷","name":"No Pedestrians","url":"https://s1.vika.cn/space/2021/05/29/bffc181f11ca4e7db6822eebebbaab80","token":"space/2021/05/29/bffc181f11ca4e7db6822eebebbaab80","category_id":"symbols"},"no_smoking":{"native":"🚭","name":"No Smoking Symbol","url":"https://s1.vika.cn/space/2021/05/29/5c04cb28373d497ab17cfd2f22b6354a","token":"space/2021/05/29/5c04cb28373d497ab17cfd2f22b6354a","category_id":"symbols"},"non-potable_water":{"native":"🚱","name":"Non-Potable Water Symbol","url":"https://s1.vika.cn/space/2021/05/29/2a9a8b3088d84b00b5d56f2299916561","token":"space/2021/05/29/2a9a8b3088d84b00b5d56f2299916561","category_id":"symbols"},"nose":{"native":"👃","name":"Nose","url":"https://s1.vika.cn/space/2021/05/29/633342102481440d8fb081c2d0dd4c54","token":"space/2021/05/29/633342102481440d8fb081c2d0dd4c54","category_id":"people"},"notebook":{"native":"📓","name":"Notebook","url":"https://s1.vika.cn/space/2021/05/29/06433cb6545140a8a63a100b64a6ffa5","token":"space/2021/05/29/06433cb6545140a8a63a100b64a6ffa5","category_id":"objects"},"notebook_with_decorative_cover":{"native":"📔","name":"Notebook with Decorative Cover","url":"https://s1.vika.cn/space/2021/05/29/697e569ae94049b59de7e482789b4840","token":"space/2021/05/29/697e569ae94049b59de7e482789b4840","category_id":"objects"},"notes":{"native":"🎶","name":"Multiple Musical Notes","url":"https://s1.vika.cn/space/2021/05/29/2dafd4e415af4258b20e68fb09c9bf6c","token":"space/2021/05/29/2dafd4e415af4258b20e68fb09c9bf6c","category_id":"objects"},"nut_and_bolt":{"native":"🔩","name":"Nut and Bolt","url":"https://s1.vika.cn/space/2021/05/29/af0da28c3204402397ffac1bff8c2cf4","token":"space/2021/05/29/af0da28c3204402397ffac1bff8c2cf4","category_id":"objects"},"o":{"native":"⭕","name":"Heavy Large Circle","url":"https://s1.vika.cn/space/2021/05/29/75dc045e347844628323e475ecc6b614","token":"space/2021/05/29/75dc045e347844628323e475ecc6b614","category_id":"symbols"},"o2":{"native":"🅾️","name":"Negative Squared Latin Capital Letter O","url":"https://s1.vika.cn/space/2021/05/29/d97632d860914569a737c57b70ad62fb","token":"space/2021/05/29/d97632d860914569a737c57b70ad62fb","category_id":"symbols"},"ocean":{"native":"🌊","name":"Water Wave","url":"https://s1.vika.cn/space/2021/05/29/767a649d09484695b20f6b165687e073","token":"space/2021/05/29/767a649d09484695b20f6b165687e073","category_id":"places"},"octagonal_sign":{"native":"🛑","name":"Octagonal Sign","url":"https://s1.vika.cn/space/2021/05/29/96651ce4370a4f83a7460e7c49d63707","token":"space/2021/05/29/96651ce4370a4f83a7460e7c49d63707","category_id":"places"},"octopus":{"native":"🐙","name":"Octopus","url":"https://s1.vika.cn/space/2021/05/29/6d4bf27cf6bc4f138800571d01d8a486","token":"space/2021/05/29/6d4bf27cf6bc4f138800571d01d8a486","category_id":"nature"},"oden":{"native":"🍢","name":"Oden","url":"https://s1.vika.cn/space/2021/05/29/d99a726937c044ef97fa59d83c32a093","token":"space/2021/05/29/d99a726937c044ef97fa59d83c32a093","category_id":"foods"},"office":{"native":"🏢","name":"Office Building","url":"https://s1.vika.cn/space/2021/05/29/ca291b9e03b7451f9f67f1f026e9ffb3","token":"space/2021/05/29/ca291b9e03b7451f9f67f1f026e9ffb3","category_id":"places"},"office_worker":{"native":"🧑‍💼","name":"Office Worker","url":"https://s1.vika.cn/space/2021/05/29/22e4807aa0e64eb884b5181f84e9c30b","token":"space/2021/05/29/22e4807aa0e64eb884b5181f84e9c30b","category_id":"people"},"oil_drum":{"native":"🛢️","name":"Oil Drum","url":"https://s1.vika.cn/space/2021/05/29/0b849c166138498391adf36d62580440","token":"space/2021/05/29/0b849c166138498391adf36d62580440","category_id":"places"},"ok":{"native":"🆗","name":"Squared Ok","url":"https://s1.vika.cn/space/2021/05/29/5ebe3ca1f49549cabecd41e9446ee4ff","token":"space/2021/05/29/5ebe3ca1f49549cabecd41e9446ee4ff","category_id":"symbols"},"ok_hand":{"native":"👌","name":"Ok Hand Sign","url":"https://s1.vika.cn/space/2021/05/29/b17b5f5298c8448bb23c7e7436d26755","token":"space/2021/05/29/b17b5f5298c8448bb23c7e7436d26755","category_id":"people"},"ok_woman":{"native":"🙆","name":"Face with Ok Gesture","url":"https://s1.vika.cn/space/2021/05/29/7ee9effcaf1047ddb2e884c893ef52ee","token":"space/2021/05/29/7ee9effcaf1047ddb2e884c893ef52ee","category_id":"people"},"old_key":{"native":"🗝️","name":"Old Key","url":"https://s1.vika.cn/space/2021/05/29/3c4d5a1d1a894cfaae241f09a208b75a","token":"space/2021/05/29/3c4d5a1d1a894cfaae241f09a208b75a","category_id":"objects"},"older_adult":{"native":"🧓","name":"Older Adult","url":"https://s1.vika.cn/space/2021/05/29/2beb54d5fbc3499ea0042283cb9737de","token":"space/2021/05/29/2beb54d5fbc3499ea0042283cb9737de","category_id":"people"},"older_man":{"native":"👴","name":"Older Man","url":"https://s1.vika.cn/space/2021/05/29/22e2a27c986a4762bfe3119424e4300a","token":"space/2021/05/29/22e2a27c986a4762bfe3119424e4300a","category_id":"people"},"older_woman":{"native":"👵","name":"Older Woman","url":"https://s1.vika.cn/space/2021/05/29/b0749d0a75b34b87a5a624c6775ea412","token":"space/2021/05/29/b0749d0a75b34b87a5a624c6775ea412","category_id":"people"},"om_symbol":{"native":"🕉️","name":"Om Symbol","url":"https://s1.vika.cn/space/2021/05/29/43e7eb8cf6e64cb8864598fdbf4ad92b","token":"space/2021/05/29/43e7eb8cf6e64cb8864598fdbf4ad92b","category_id":"symbols"},"on":{"native":"🔛","name":"On with Exclamation Mark with Left Right Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/c59591a0a3f9497da626b3f0e29179dc","token":"space/2021/05/29/c59591a0a3f9497da626b3f0e29179dc","category_id":"symbols"},"oncoming_automobile":{"native":"🚘","name":"Oncoming Automobile","url":"https://s1.vika.cn/space/2021/05/29/4e1d5b8b2f7e40a4b30f9817787049ad","token":"space/2021/05/29/4e1d5b8b2f7e40a4b30f9817787049ad","category_id":"places"},"oncoming_bus":{"native":"🚍","name":"Oncoming Bus","url":"https://s1.vika.cn/space/2021/05/29/bb448a84af1b40249a8b56c9cd085f38","token":"space/2021/05/29/bb448a84af1b40249a8b56c9cd085f38","category_id":"places"},"oncoming_police_car":{"native":"🚔","name":"Oncoming Police Car","url":"https://s1.vika.cn/space/2021/05/29/426225f467734dc79e134986ab9690d2","token":"space/2021/05/29/426225f467734dc79e134986ab9690d2","category_id":"places"},"oncoming_taxi":{"native":"🚖","name":"Oncoming Taxi","url":"https://s1.vika.cn/space/2021/05/29/0b653574713047d4930ea84ce12551e6","token":"space/2021/05/29/0b653574713047d4930ea84ce12551e6","category_id":"places"},"one":{"native":"1️⃣","name":"Keycap 1","url":"https://s1.vika.cn/space/2021/05/29/ce710a2447914284b21636e2db2d0a0b","token":"space/2021/05/29/ce710a2447914284b21636e2db2d0a0b","category_id":"symbols"},"one-piece_swimsuit":{"native":"🩱","name":"One-Piece Swimsuit","url":"https://s1.vika.cn/space/2021/05/29/7267b512e3a54963a370da2046b105ee","token":"space/2021/05/29/7267b512e3a54963a370da2046b105ee","category_id":"objects"},"onion":{"native":"🧅","name":"Onion","url":"https://s1.vika.cn/space/2021/05/29/7af4c785f4f74ee9921e1da0e7839c56","token":"space/2021/05/29/7af4c785f4f74ee9921e1da0e7839c56","category_id":"foods"},"open_file_folder":{"native":"📂","name":"Open File Folder","url":"https://s1.vika.cn/space/2021/05/29/321d994efd464cd28f6bfaab226d3213","token":"space/2021/05/29/321d994efd464cd28f6bfaab226d3213","category_id":"objects"},"open_hands":{"native":"👐","name":"Open Hands Sign","url":"https://s1.vika.cn/space/2021/05/29/0384e62fcc404b7fa0d452bf2b4cb23f","token":"space/2021/05/29/0384e62fcc404b7fa0d452bf2b4cb23f","category_id":"people"},"open_mouth":{"native":"😮","name":"Face with Open Mouth","url":"https://s1.vika.cn/space/2021/05/29/9c28bf312e744b22b4b772dd740fb06b","token":"space/2021/05/29/9c28bf312e744b22b4b772dd740fb06b","category_id":"people"},"ophiuchus":{"native":"⛎","name":"Ophiuchus","url":"https://s1.vika.cn/space/2021/05/29/324af879632d4df18087ba08f9622417","token":"space/2021/05/29/324af879632d4df18087ba08f9622417","category_id":"symbols"},"orange_book":{"native":"📙","name":"Orange Book","url":"https://s1.vika.cn/space/2021/05/29/c15e72ed8d1d472aab19e60159a2f2b2","token":"space/2021/05/29/c15e72ed8d1d472aab19e60159a2f2b2","category_id":"objects"},"orange_heart":{"native":"🧡","name":"Orange Heart","url":"https://s1.vika.cn/space/2021/05/29/694fb91a849044dbb136eeeb975c48ab","token":"space/2021/05/29/694fb91a849044dbb136eeeb975c48ab","category_id":"people"},"orangutan":{"native":"🦧","name":"Orangutan","url":"https://s1.vika.cn/space/2021/05/29/18e5aeee71d244deaefbf086a8493e58","token":"space/2021/05/29/18e5aeee71d244deaefbf086a8493e58","category_id":"nature"},"orthodox_cross":{"native":"☦️","name":"Orthodox Cross","url":"https://s1.vika.cn/space/2021/05/29/5962ed1663c6473e8d92001f8ebe9313","token":"space/2021/05/29/5962ed1663c6473e8d92001f8ebe9313","category_id":"symbols"},"otter":{"native":"🦦","name":"Otter","url":"https://s1.vika.cn/space/2021/05/29/e53f89548bb34649b37094450ef087d0","token":"space/2021/05/29/e53f89548bb34649b37094450ef087d0","category_id":"nature"},"outbox_tray":{"native":"📤","name":"Outbox Tray","url":"https://s1.vika.cn/space/2021/05/29/400107c4541f4e87820ddb964c13f072","token":"space/2021/05/29/400107c4541f4e87820ddb964c13f072","category_id":"objects"},"owl":{"native":"🦉","name":"Owl","url":"https://s1.vika.cn/space/2021/05/29/68ef9f93666540369e4861c47125689e","token":"space/2021/05/29/68ef9f93666540369e4861c47125689e","category_id":"nature"},"ox":{"native":"🐂","name":"Ox","url":"https://s1.vika.cn/space/2021/05/29/f95ed54fd52e45968433a689f71e778e","token":"space/2021/05/29/f95ed54fd52e45968433a689f71e778e","category_id":"nature"},"oyster":{"native":"🦪","name":"Oyster","url":"https://s1.vika.cn/space/2021/05/29/37ff6c20713f421dba23d279952fd1ed","token":"space/2021/05/29/37ff6c20713f421dba23d279952fd1ed","category_id":"foods"},"package":{"native":"📦","name":"Package","url":"https://s1.vika.cn/space/2021/05/29/a6963f5ef7164c83be5a75680b48e542","token":"space/2021/05/29/a6963f5ef7164c83be5a75680b48e542","category_id":"objects"},"page_facing_up":{"native":"📄","name":"Page Facing Up","url":"https://s1.vika.cn/space/2021/05/29/1914081ab9864a0ea4c886649f3314d5","token":"space/2021/05/29/1914081ab9864a0ea4c886649f3314d5","category_id":"objects"},"page_with_curl":{"native":"📃","name":"Page with Curl","url":"https://s1.vika.cn/space/2021/05/29/5a284a25618f43ecbabaf02cd04bf9ff","token":"space/2021/05/29/5a284a25618f43ecbabaf02cd04bf9ff","category_id":"objects"},"pager":{"native":"📟","name":"Pager","url":"https://s1.vika.cn/space/2021/05/29/426cc3a52c304b4885823c009891aa95","token":"space/2021/05/29/426cc3a52c304b4885823c009891aa95","category_id":"objects"},"palm_tree":{"native":"🌴","name":"Palm Tree","url":"https://s1.vika.cn/space/2020/04/19/1251738678275870721","token":"space/2020/04/19/1251738678275870721","category_id":"nature"},"palms_up_together":{"native":"🤲","name":"Palms Up Together","url":"https://s1.vika.cn/space/2021/05/29/801c2cd651174b52b023f06642f666c3","token":"space/2021/05/29/801c2cd651174b52b023f06642f666c3","category_id":"people"},"pancakes":{"native":"🥞","name":"Pancakes","url":"https://s1.vika.cn/space/2021/05/29/3627025eefa24f13b1fce8d5f316b8f6","token":"space/2021/05/29/3627025eefa24f13b1fce8d5f316b8f6","category_id":"foods"},"panda_face":{"native":"🐼","name":"Panda Face","url":"https://s1.vika.cn/space/2021/05/29/86fe8557969e47ac8494010b89bd76a2","token":"space/2021/05/29/86fe8557969e47ac8494010b89bd76a2","category_id":"nature"},"paperclip":{"native":"📎","name":"Paperclip","url":"https://s1.vika.cn/space/2021/05/29/78b711295e894308a6bcc4f6f29c1b66","token":"space/2021/05/29/78b711295e894308a6bcc4f6f29c1b66","category_id":"objects"},"parachute":{"native":"🪂","name":"Parachute","url":"https://s1.vika.cn/space/2021/05/29/f0a9879da8084314be7e730de88a5a91","token":"space/2021/05/29/f0a9879da8084314be7e730de88a5a91","category_id":"places"},"parking":{"native":"🅿️","name":"Negative Squared Latin Capital Letter P","url":"https://s1.vika.cn/space/2021/05/29/008933e5366940afbbba4eae7bfcf998","token":"space/2021/05/29/008933e5366940afbbba4eae7bfcf998","category_id":"symbols"},"parrot":{"native":"🦜","name":"Parrot","url":"https://s1.vika.cn/space/2021/05/29/dc1b7e3e5ea04d17af5a61cd186e1961","token":"space/2021/05/29/dc1b7e3e5ea04d17af5a61cd186e1961","category_id":"nature"},"part_alternation_mark":{"native":"〽️","name":"Part Alternation Mark","url":"https://s1.vika.cn/space/2021/05/29/58618ea37b604c1c921a128e2109376d","token":"space/2021/05/29/58618ea37b604c1c921a128e2109376d","category_id":"symbols"},"partly_sunny":{"native":"⛅","name":"Sun Behind Cloud","url":"https://s1.vika.cn/space/2021/05/29/47b01a195b864ce69764546d5820be01","token":"space/2021/05/29/47b01a195b864ce69764546d5820be01","category_id":"places"},"partly_sunny_rain":{"native":"🌦️","name":"Partly Sunny Rain","url":"https://s1.vika.cn/space/2021/05/29/351c885374904eaf84834994865063b6","token":"space/2021/05/29/351c885374904eaf84834994865063b6","category_id":"places"},"partying_face":{"native":"🥳","name":"Face with Party Horn and Party Hat","url":"https://s1.vika.cn/space/2021/05/29/b938f55226224a1e91b9fa3ef50e921e","token":"space/2021/05/29/b938f55226224a1e91b9fa3ef50e921e","category_id":"people"},"passenger_ship":{"native":"🛳️","name":"Passenger Ship","url":"https://s1.vika.cn/space/2021/05/29/5355f8bcfe504a118fdc8a851bfbc366","token":"space/2021/05/29/5355f8bcfe504a118fdc8a851bfbc366","category_id":"places"},"passport_control":{"native":"🛂","name":"Passport Control","url":"https://s1.vika.cn/space/2021/05/29/7228985c64ac4cd099204051f6b8bb32","token":"space/2021/05/29/7228985c64ac4cd099204051f6b8bb32","category_id":"symbols"},"peace_symbol":{"native":"☮️","name":"Peace Symbol","url":"https://s1.vika.cn/space/2021/05/29/37bd22eaf4e74a73a9a29da48a868591","token":"space/2021/05/29/37bd22eaf4e74a73a9a29da48a868591","category_id":"symbols"},"peach":{"native":"🍑","name":"Peach","url":"https://s1.vika.cn/space/2021/05/29/a87d37a9fecd4b78b252c869b3f2df2e","token":"space/2021/05/29/a87d37a9fecd4b78b252c869b3f2df2e","category_id":"foods"},"peacock":{"native":"🦚","name":"Peacock","url":"https://s1.vika.cn/space/2021/05/29/aca51243c08a49188bac70e9e27a772e","token":"space/2021/05/29/aca51243c08a49188bac70e9e27a772e","category_id":"nature"},"peanuts":{"native":"🥜","name":"Peanuts","url":"https://s1.vika.cn/space/2021/05/29/5cf127340073469eae8d94dc56d83b6d","token":"space/2021/05/29/5cf127340073469eae8d94dc56d83b6d","category_id":"foods"},"pear":{"native":"🍐","name":"Pear","url":"https://s1.vika.cn/space/2021/05/29/8ecc529b7f7a45109121a9b38350997d","token":"space/2021/05/29/8ecc529b7f7a45109121a9b38350997d","category_id":"foods"},"pencil2":{"native":"✏️","name":"Pencil","url":"https://s1.vika.cn/space/2021/05/29/d037e199611349f49f3af5bd8e4a352d","token":"space/2021/05/29/d037e199611349f49f3af5bd8e4a352d","category_id":"objects"},"penguin":{"native":"🐧","name":"Penguin","url":"https://s1.vika.cn/space/2021/05/29/4a1fdaa33b2b44e8b0633b7618dd0eb4","token":"space/2021/05/29/4a1fdaa33b2b44e8b0633b7618dd0eb4","category_id":"nature"},"pensive":{"native":"😔","name":"Pensive Face","url":"https://s1.vika.cn/space/2021/05/29/a5d36a9423f94751baeb55193783d96b","token":"space/2021/05/29/a5d36a9423f94751baeb55193783d96b","category_id":"people"},"people_holding_hands":{"native":"🧑‍🤝‍🧑","name":"People Holding Hands","url":"https://s1.vika.cn/space/2021/05/29/5894979eaa6643acad02477714cdfb74","token":"space/2021/05/29/5894979eaa6643acad02477714cdfb74","category_id":"people"},"performing_arts":{"native":"🎭","name":"Performing Arts","url":"https://s1.vika.cn/space/2021/05/29/5b674427ed054e9b9392899ba13a051e","token":"space/2021/05/29/5b674427ed054e9b9392899ba13a051e","category_id":"activity"},"persevere":{"native":"😣","name":"Persevering Face","url":"https://s1.vika.cn/space/2021/05/29/4e46170c93754dfab8906bd76ded54d8","token":"space/2021/05/29/4e46170c93754dfab8906bd76ded54d8","category_id":"people"},"person_climbing":{"native":"🧗","name":"Person Climbing","url":"https://s1.vika.cn/space/2021/05/29/c1a9a14f385e441f8aefcd5be095d0eb","token":"space/2021/05/29/c1a9a14f385e441f8aefcd5be095d0eb","category_id":"people"},"person_doing_cartwheel":{"native":"🤸","name":"Person Doing Cartwheel","url":"https://s1.vika.cn/space/2021/05/29/39da1f9ad94746aa934978e3709773f5","token":"space/2021/05/29/39da1f9ad94746aa934978e3709773f5","category_id":"people"},"person_frowning":{"native":"🙍","name":"Person Frowning","url":"https://s1.vika.cn/space/2021/05/29/fcb77ff411234d2db35215e9f48272f1","token":"space/2021/05/29/fcb77ff411234d2db35215e9f48272f1","category_id":"people"},"person_in_lotus_position":{"native":"🧘","name":"Person in Lotus Position","url":"https://s1.vika.cn/space/2021/05/29/373ad1e8907d43ff8086c866a3d7d3b7","token":"space/2021/05/29/373ad1e8907d43ff8086c866a3d7d3b7","category_id":"people"},"person_in_manual_wheelchair":{"native":"🧑‍🦽","name":"Person in Manual Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/b98715e6d84d44bbb35f9e00075dd063","token":"space/2021/05/29/b98715e6d84d44bbb35f9e00075dd063","category_id":"people"},"person_in_motorized_wheelchair":{"native":"🧑‍🦼","name":"Person in Motorized Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/76463fd58d224d7f9b19ce64418607b7","token":"space/2021/05/29/76463fd58d224d7f9b19ce64418607b7","category_id":"people"},"person_in_steamy_room":{"native":"🧖","name":"Person in Steamy Room","url":"https://s1.vika.cn/space/2021/05/29/ff59568912944c3dad935816294f70bc","token":"space/2021/05/29/ff59568912944c3dad935816294f70bc","category_id":"people"},"person_with_ball":{"native":"⛹️","name":"Person with Ball","url":"https://s1.vika.cn/space/2021/05/29/e6473fe1191347a694fcf74a6604cfb1","token":"space/2021/05/29/e6473fe1191347a694fcf74a6604cfb1","category_id":"people"},"person_with_blond_hair":{"native":"👱","name":"Person with Blond Hair","url":"https://s1.vika.cn/space/2021/05/29/150b4cad1f1543b3bb63b6d78b70e714","token":"space/2021/05/29/150b4cad1f1543b3bb63b6d78b70e714","category_id":"people"},"person_with_headscarf":{"native":"🧕","name":"Person with Headscarf","url":"https://s1.vika.cn/space/2021/05/29/524b9e05372743c3855d931a0805b2d6","token":"space/2021/05/29/524b9e05372743c3855d931a0805b2d6","category_id":"people"},"person_with_pouting_face":{"native":"🙎","name":"Person with Pouting Face","url":"https://s1.vika.cn/space/2021/05/29/61c817fba5414949bdb7b259cfd117ef","token":"space/2021/05/29/61c817fba5414949bdb7b259cfd117ef","category_id":"people"},"person_with_probing_cane":{"native":"🧑‍🦯","name":"Person with Probing Cane","url":"https://s1.vika.cn/space/2021/05/29/2d75612110e64411884227603a730da3","token":"space/2021/05/29/2d75612110e64411884227603a730da3","category_id":"people"},"petri_dish":{"native":"🧫","name":"Petri Dish","url":"https://s1.vika.cn/space/2021/05/29/095a947dc8f34f5ab19c55b032d5c927","token":"space/2021/05/29/095a947dc8f34f5ab19c55b032d5c927","category_id":"objects"},"phone":{"native":"☎️","name":"Black Telephone","url":"https://s1.vika.cn/space/2021/05/29/893ed21de06945e582a1587fc301b5fc","token":"space/2021/05/29/893ed21de06945e582a1587fc301b5fc","category_id":"objects"},"pick":{"native":"⛏️","name":"Pick","url":"https://s1.vika.cn/space/2021/05/29/8a6c645e1a184ec6a6d4f403bd04a37a","token":"space/2021/05/29/8a6c645e1a184ec6a6d4f403bd04a37a","category_id":"objects"},"pie":{"native":"🥧","name":"Pie","url":"https://s1.vika.cn/space/2021/05/29/72be37ac888f44fea91d6914aed086e8","token":"space/2021/05/29/72be37ac888f44fea91d6914aed086e8","category_id":"foods"},"pig":{"native":"🐷","name":"Pig Face","url":"https://s1.vika.cn/space/2021/05/29/69dc63d388ab4c29bdae2201c82e6d47","token":"space/2021/05/29/69dc63d388ab4c29bdae2201c82e6d47","category_id":"nature"},"pig_nose":{"native":"🐽","name":"Pig Nose","url":"https://s1.vika.cn/space/2021/05/29/d6988cf634994c00a75a69fa71193e75","token":"space/2021/05/29/d6988cf634994c00a75a69fa71193e75","category_id":"nature"},"pig2":{"native":"🐖","name":"Pig","url":"https://s1.vika.cn/space/2021/05/29/4231a31918864c389705f395c08cae8a","token":"space/2021/05/29/4231a31918864c389705f395c08cae8a","category_id":"nature"},"pill":{"native":"💊","name":"Pill","url":"https://s1.vika.cn/space/2021/05/29/c5144e5afb094e24a380a417929930ac","token":"space/2021/05/29/c5144e5afb094e24a380a417929930ac","category_id":"objects"},"pilot":{"native":"🧑‍✈️","name":"Pilot","url":"https://s1.vika.cn/space/2021/05/29/c7d024e8cc464262bd755da660864841","token":"space/2021/05/29/c7d024e8cc464262bd755da660864841","category_id":"people"},"pinching_hand":{"native":"🤏","name":"Pinching Hand","url":"https://s1.vika.cn/space/2021/05/29/264cdff514854225ae21f0f5baa32aa0","token":"space/2021/05/29/264cdff514854225ae21f0f5baa32aa0","category_id":"people"},"pineapple":{"native":"🍍","name":"Pineapple","url":"https://s1.vika.cn/space/2021/05/29/f80c3182b2b64666b6544e1b9ec4906e","token":"space/2021/05/29/f80c3182b2b64666b6544e1b9ec4906e","category_id":"foods"},"pirate_flag":{"native":"🏴‍☠️","name":"Pirate Flag","url":"https://s1.vika.cn/space/2021/05/29/744d9e0a5a2f4158baa26ed6311d5bca","token":"space/2021/05/29/744d9e0a5a2f4158baa26ed6311d5bca","category_id":"flags"},"pisces":{"native":"♓","name":"Pisces","url":"https://s1.vika.cn/space/2021/05/29/60c9dad5c82248ea955ce0897231c8a2","token":"space/2021/05/29/60c9dad5c82248ea955ce0897231c8a2","category_id":"symbols"},"pizza":{"native":"🍕","name":"Slice of Pizza","url":"https://s1.vika.cn/space/2021/05/29/6c3273da8ba1460ea47ccd4555da79b1","token":"space/2021/05/29/6c3273da8ba1460ea47ccd4555da79b1","category_id":"foods"},"place_of_worship":{"native":"🛐","name":"Place of Worship","url":"https://s1.vika.cn/space/2021/05/29/62b9fac60904424993bab02b9eea035f","token":"space/2021/05/29/62b9fac60904424993bab02b9eea035f","category_id":"symbols"},"pleading_face":{"native":"🥺","name":"Face with Pleading Eyes","url":"https://s1.vika.cn/space/2021/05/29/984a921c109f4fefb5f41550abb7bb80","token":"space/2021/05/29/984a921c109f4fefb5f41550abb7bb80","category_id":"people"},"point_down":{"native":"👇","name":"White Down Pointing Backhand Index","url":"https://s1.vika.cn/space/2021/05/29/6901db4c04aa49ab92d1ab38acaa371f","token":"space/2021/05/29/6901db4c04aa49ab92d1ab38acaa371f","category_id":"people"},"point_left":{"native":"👈","name":"White Left Pointing Backhand Index","url":"https://s1.vika.cn/space/2021/05/29/88aca865457245d7874c7695e429a66a","token":"space/2021/05/29/88aca865457245d7874c7695e429a66a","category_id":"people"},"point_right":{"native":"👉","name":"White Right Pointing Backhand Index","url":"https://s1.vika.cn/space/2021/05/29/2f2aeb8a77bb402abd92b4a4108d471c","token":"space/2021/05/29/2f2aeb8a77bb402abd92b4a4108d471c","category_id":"people"},"point_up":{"native":"☝️","name":"White Up Pointing Index","url":"https://s1.vika.cn/space/2021/05/29/2a47cc287ad44d9182c8cb7f94e2297e","token":"space/2021/05/29/2a47cc287ad44d9182c8cb7f94e2297e","category_id":"people"},"point_up_2":{"native":"👆","name":"White Up Pointing Backhand Index","url":"https://s1.vika.cn/space/2021/05/29/db64542d35984fe3b3c9d4450f339a55","token":"space/2021/05/29/db64542d35984fe3b3c9d4450f339a55","category_id":"people"},"police_car":{"native":"🚓","name":"Police Car","url":"https://s1.vika.cn/space/2021/05/29/dd21740b509d47a58946637cb35b35d3","token":"space/2021/05/29/dd21740b509d47a58946637cb35b35d3","category_id":"places"},"poodle":{"native":"🐩","name":"Poodle","url":"https://s1.vika.cn/space/2021/05/29/00ad02b2693f44338e8c56540a2be810","token":"space/2021/05/29/00ad02b2693f44338e8c56540a2be810","category_id":"nature"},"popcorn":{"native":"🍿","name":"Popcorn","url":"https://s1.vika.cn/space/2021/05/29/6c0a89a0673245f4a30a790c0da947da","token":"space/2021/05/29/6c0a89a0673245f4a30a790c0da947da","category_id":"foods"},"post_office":{"native":"🏣","name":"Japanese Post Office","url":"https://s1.vika.cn/space/2021/05/29/42634fe4160149e0a671ce8d4ee244aa","token":"space/2021/05/29/42634fe4160149e0a671ce8d4ee244aa","category_id":"places"},"postal_horn":{"native":"📯","name":"Postal Horn","url":"https://s1.vika.cn/space/2021/05/29/e35617d0baeb435abbfd8c74e33624b8","token":"space/2021/05/29/e35617d0baeb435abbfd8c74e33624b8","category_id":"objects"},"postbox":{"native":"📮","name":"Postbox","url":"https://s1.vika.cn/space/2021/05/29/e9cb706041d34c52a2fcf5ada358cbc0","token":"space/2021/05/29/e9cb706041d34c52a2fcf5ada358cbc0","category_id":"objects"},"potable_water":{"native":"🚰","name":"Potable Water Symbol","url":"https://s1.vika.cn/space/2021/05/29/66a9a2374b4a4e17a51d9e34286a5223","token":"space/2021/05/29/66a9a2374b4a4e17a51d9e34286a5223","category_id":"symbols"},"potato":{"native":"🥔","name":"Potato","url":"https://s1.vika.cn/space/2021/05/29/0f917ed70ac34663bd2281c816d5ac8f","token":"space/2021/05/29/0f917ed70ac34663bd2281c816d5ac8f","category_id":"foods"},"pouch":{"native":"👝","name":"Pouch","url":"https://s1.vika.cn/space/2021/05/29/afbee08ee33a4fefa31a8bdbe09af0e1","token":"space/2021/05/29/afbee08ee33a4fefa31a8bdbe09af0e1","category_id":"objects"},"poultry_leg":{"native":"🍗","name":"Poultry Leg","url":"https://s1.vika.cn/space/2021/05/29/acc5c977644944a6bcd2c002621d65f2","token":"space/2021/05/29/acc5c977644944a6bcd2c002621d65f2","category_id":"foods"},"pound":{"native":"💷","name":"Banknote with Pound Sign","url":"https://s1.vika.cn/space/2021/05/29/b0c12f916a2a47409fe06f1db7768ba8","token":"space/2021/05/29/b0c12f916a2a47409fe06f1db7768ba8","category_id":"objects"},"pouting_cat":{"native":"😾","name":"Pouting Cat Face","url":"https://s1.vika.cn/space/2021/05/29/3123bbb451f14c1d9afacbe14ffad6c3","token":"space/2021/05/29/3123bbb451f14c1d9afacbe14ffad6c3","category_id":"people"},"pray":{"native":"🙏","name":"Person with Folded Hands","url":"https://s1.vika.cn/space/2021/05/29/8a3e25286f7348c7919016d2b1a49191","token":"space/2021/05/29/8a3e25286f7348c7919016d2b1a49191","category_id":"people"},"prayer_beads":{"native":"📿","name":"Prayer Beads","url":"https://s1.vika.cn/space/2021/05/29/03d48291be90488889bb5e7b1933c302","token":"space/2021/05/29/03d48291be90488889bb5e7b1933c302","category_id":"objects"},"pregnant_woman":{"native":"🤰","name":"Pregnant Woman","url":"https://s1.vika.cn/space/2021/05/29/5b92a135ed704557a30aaac41be85f8a","token":"space/2021/05/29/5b92a135ed704557a30aaac41be85f8a","category_id":"people"},"pretzel":{"native":"🥨","name":"Pretzel","url":"https://s1.vika.cn/space/2021/05/29/2002f298df0e4cc18ae1bf105286f494","token":"space/2021/05/29/2002f298df0e4cc18ae1bf105286f494","category_id":"foods"},"prince":{"native":"🤴","name":"Prince","url":"https://s1.vika.cn/space/2021/05/29/d35d970c71a74b78b8cb48278bb209c9","token":"space/2021/05/29/d35d970c71a74b78b8cb48278bb209c9","category_id":"people"},"princess":{"native":"👸","name":"Princess","url":"https://s1.vika.cn/space/2021/05/29/0e5bedc509b4472ab1ddc0ac3aaeb04f","token":"space/2021/05/29/0e5bedc509b4472ab1ddc0ac3aaeb04f","category_id":"people"},"printer":{"native":"🖨️","name":"Printer","url":"https://s1.vika.cn/space/2021/05/29/38fbd68111f44ad29d3cb3f4b76b5ff7","token":"space/2021/05/29/38fbd68111f44ad29d3cb3f4b76b5ff7","category_id":"objects"},"probing_cane":{"native":"🦯","name":"Probing Cane","url":"https://s1.vika.cn/space/2021/05/29/43ef4ccc907b4079b0b4d15f29f93072","token":"space/2021/05/29/43ef4ccc907b4079b0b4d15f29f93072","category_id":"objects"},"purple_heart":{"native":"💜","name":"Purple Heart","url":"https://s1.vika.cn/space/2021/05/29/e2204df2a213426fa1fe4d797699438d","token":"space/2021/05/29/e2204df2a213426fa1fe4d797699438d","category_id":"people"},"purse":{"native":"👛","name":"Purse","url":"https://s1.vika.cn/space/2021/05/29/285a56621e814e3ab45c2e685a10e135","token":"space/2021/05/29/285a56621e814e3ab45c2e685a10e135","category_id":"objects"},"pushpin":{"native":"📌","name":"Pushpin","url":"https://s1.vika.cn/space/2021/05/29/7a7aa100131e417ba0341371cdf5f647","token":"space/2021/05/29/7a7aa100131e417ba0341371cdf5f647","category_id":"objects"},"put_litter_in_its_place":{"native":"🚮","name":"Put Litter in Its Place Symbol","url":"https://s1.vika.cn/space/2021/05/29/2d5b6c54966c432a96dc8113d9999cba","token":"space/2021/05/29/2d5b6c54966c432a96dc8113d9999cba","category_id":"symbols"},"question":{"native":"❓","name":"Black Question Mark Ornament","url":"https://s1.vika.cn/space/2021/05/29/aa2839fc999d42579bebe4eed0500ba6","token":"space/2021/05/29/aa2839fc999d42579bebe4eed0500ba6","category_id":"symbols"},"rabbit":{"native":"🐰","name":"Rabbit Face","url":"https://s1.vika.cn/space/2021/05/29/a4926abeaccb4adaabf262505aad0139","token":"space/2021/05/29/a4926abeaccb4adaabf262505aad0139","category_id":"nature"},"rabbit2":{"native":"🐇","name":"Rabbit","url":"https://s1.vika.cn/space/2021/05/29/0f07ce5ea3f544378b0bf1179b11f278","token":"space/2021/05/29/0f07ce5ea3f544378b0bf1179b11f278","category_id":"nature"},"raccoon":{"native":"🦝","name":"Raccoon","url":"https://s1.vika.cn/space/2021/05/29/2dbbb9d48bad4c8ebba611706c32d45d","token":"space/2021/05/29/2dbbb9d48bad4c8ebba611706c32d45d","category_id":"nature"},"racehorse":{"native":"🐎","name":"Horse","url":"https://s1.vika.cn/space/2021/05/29/d7999c6d7fae4901bd752d12533a7d00","token":"space/2021/05/29/d7999c6d7fae4901bd752d12533a7d00","category_id":"nature"},"racing_car":{"native":"🏎️","name":"Racing Car","url":"https://s1.vika.cn/space/2021/05/29/838d62e13b23454294392a625b92a92a","token":"space/2021/05/29/838d62e13b23454294392a625b92a92a","category_id":"places"},"racing_motorcycle":{"native":"🏍️","name":"Racing Motorcycle","url":"https://s1.vika.cn/space/2021/05/29/f440079b15384e8d9a55c247e9405edb","token":"space/2021/05/29/f440079b15384e8d9a55c247e9405edb","category_id":"places"},"radio":{"native":"📻","name":"Radio","url":"https://s1.vika.cn/space/2021/05/29/19b3581eddf3441a86efc357c84796c4","token":"space/2021/05/29/19b3581eddf3441a86efc357c84796c4","category_id":"objects"},"radio_button":{"native":"🔘","name":"Radio Button","url":"https://s1.vika.cn/space/2021/05/29/9238beb85ba046bc885da85aa2537942","token":"space/2021/05/29/9238beb85ba046bc885da85aa2537942","category_id":"symbols"},"radioactive_sign":{"native":"☢️","name":"Radioactive Sign","url":"https://s1.vika.cn/space/2021/05/29/85c11ed8a7d04e0d9e031dac3657ba43","token":"space/2021/05/29/85c11ed8a7d04e0d9e031dac3657ba43","category_id":"symbols"},"rage":{"native":"😡","name":"Pouting Face","url":"https://s1.vika.cn/space/2021/05/29/56eb5c1f0def4166a1a9f4a2dfe9e4ef","token":"space/2021/05/29/56eb5c1f0def4166a1a9f4a2dfe9e4ef","category_id":"people"},"railway_car":{"native":"🚃","name":"Railway Car","url":"https://s1.vika.cn/space/2021/05/29/dac584294b3e46599566db36542b13bc","token":"space/2021/05/29/dac584294b3e46599566db36542b13bc","category_id":"places"},"railway_track":{"native":"🛤️","name":"Railway Track","url":"https://s1.vika.cn/space/2021/05/29/7c17ad45acd64372a48b31cc559681e2","token":"space/2021/05/29/7c17ad45acd64372a48b31cc559681e2","category_id":"places"},"rain_cloud":{"native":"🌧️","name":"Rain Cloud","url":"https://s1.vika.cn/space/2021/05/29/2edbf628396f4549a4afe7da5d2f188e","token":"space/2021/05/29/2edbf628396f4549a4afe7da5d2f188e","category_id":"places"},"rainbow":{"native":"🌈","name":"Rainbow","url":"https://s1.vika.cn/space/2021/05/29/e89d6918a828455c8f068f5ad5fcdd3e","token":"space/2021/05/29/e89d6918a828455c8f068f5ad5fcdd3e","category_id":"places"},"rainbow-flag":{"native":"🏳️‍🌈","name":"Rainbow Flag","url":"https://s1.vika.cn/space/2021/05/29/ab3473a263d84841a6d8551c7c9fb172","token":"space/2021/05/29/ab3473a263d84841a6d8551c7c9fb172","category_id":"flags"},"raised_back_of_hand":{"native":"🤚","name":"Raised Back of Hand","url":"https://s1.vika.cn/space/2021/05/29/f4b3e198674148078b0bad20f3bd4764","token":"space/2021/05/29/f4b3e198674148078b0bad20f3bd4764","category_id":"people"},"raised_hand_with_fingers_splayed":{"native":"🖐️","name":"Raised Hand with Fingers Splayed","url":"https://s1.vika.cn/space/2021/05/29/8707d8937e9142fca5737281a8804613","token":"space/2021/05/29/8707d8937e9142fca5737281a8804613","category_id":"people"},"raised_hands":{"native":"🙌","name":"Person Raising Both Hands in Celebration","url":"https://s1.vika.cn/space/2021/05/29/f96a4a8454164fbb89ce48d9bb5743ba","token":"space/2021/05/29/f96a4a8454164fbb89ce48d9bb5743ba","category_id":"people"},"raising_hand":{"native":"🙋","name":"Happy Person Raising One Hand","url":"https://s1.vika.cn/space/2021/05/29/f4ed59e8c11f47e9923b558577ec6b4e","token":"space/2021/05/29/f4ed59e8c11f47e9923b558577ec6b4e","category_id":"people"},"ram":{"native":"🐏","name":"Ram","url":"https://s1.vika.cn/space/2021/05/29/e8cd1ab2c82049f7b5068ebb94caf3dc","token":"space/2021/05/29/e8cd1ab2c82049f7b5068ebb94caf3dc","category_id":"nature"},"ramen":{"native":"🍜","name":"Steaming Bowl","url":"https://s1.vika.cn/space/2021/05/29/1c7f066d0fff4df5980425652b7c2110","token":"space/2021/05/29/1c7f066d0fff4df5980425652b7c2110","category_id":"foods"},"rat":{"native":"🐀","name":"Rat","url":"https://s1.vika.cn/space/2021/05/29/86ebdd6d2a2d45898470a3d391c05f45","token":"space/2021/05/29/86ebdd6d2a2d45898470a3d391c05f45","category_id":"nature"},"razor":{"native":"🪒","name":"Razor","url":"https://s1.vika.cn/space/2021/05/29/7224972befa1421cbd21efdd4be44e84","token":"space/2021/05/29/7224972befa1421cbd21efdd4be44e84","category_id":"objects"},"receipt":{"native":"🧾","name":"Receipt","url":"https://s1.vika.cn/space/2021/05/29/d8a381d553424daf9b1f092a259fad66","token":"space/2021/05/29/d8a381d553424daf9b1f092a259fad66","category_id":"objects"},"recycle":{"native":"♻️","name":"Black Universal Recycling Symbol","url":"https://s1.vika.cn/space/2021/05/29/0c34ee8317894d809fde1474ca1989fe","token":"space/2021/05/29/0c34ee8317894d809fde1474ca1989fe","category_id":"symbols"},"red_circle":{"native":"🔴","name":"Large Red Circle","url":"https://s1.vika.cn/space/2021/05/29/acb5b0e95b17441c8e96b7dc00f9c34b","token":"space/2021/05/29/acb5b0e95b17441c8e96b7dc00f9c34b","category_id":"symbols"},"red_envelope":{"native":"🧧","name":"Red Gift Envelope","url":"https://s1.vika.cn/space/2021/05/29/ae49082a604e44daaf68f4d4e2e7bb27","token":"space/2021/05/29/ae49082a604e44daaf68f4d4e2e7bb27","category_id":"activity"},"red_haired_man":{"native":"👨‍🦰","name":"Red Haired Man","url":"https://s1.vika.cn/space/2021/05/29/96fa9a0574b8448db4ddc0d1670934fc","token":"space/2021/05/29/96fa9a0574b8448db4ddc0d1670934fc","category_id":"people"},"red_haired_person":{"native":"🧑‍🦰","name":"Red Haired Person","url":"https://s1.vika.cn/space/2021/05/29/766465e3a2bd4226a7b95ec186a80963","token":"space/2021/05/29/766465e3a2bd4226a7b95ec186a80963","category_id":"people"},"red_haired_woman":{"native":"👩‍🦰","name":"Red Haired Woman","url":"https://s1.vika.cn/space/2021/05/29/f3755590232f43c0bdf4058bafcf5b24","token":"space/2021/05/29/f3755590232f43c0bdf4058bafcf5b24","category_id":"people"},"registered":{"native":"®️","name":"Registered Sign","url":"https://s1.vika.cn/space/2021/05/29/ee5b2800cdc54d57953a3d7bc8911b22","token":"space/2021/05/29/ee5b2800cdc54d57953a3d7bc8911b22","category_id":"symbols"},"relaxed":{"native":"☺️","name":"White Smiling Face","url":"https://s1.vika.cn/space/2021/05/29/366af7fbd44b48c3be0dd02c29613ffa","token":"space/2021/05/29/366af7fbd44b48c3be0dd02c29613ffa","category_id":"people"},"relieved":{"native":"😌","name":"Relieved Face","url":"https://s1.vika.cn/space/2021/05/29/0b9627a747f748d696507883f4242b85","token":"space/2021/05/29/0b9627a747f748d696507883f4242b85","category_id":"people"},"reminder_ribbon":{"native":"🎗️","name":"Reminder Ribbon","url":"https://s1.vika.cn/space/2021/05/29/b3b8efae29474cd39e2524eb95897c68","token":"space/2021/05/29/b3b8efae29474cd39e2524eb95897c68","category_id":"activity"},"repeat":{"native":"🔁","name":"Clockwise Rightwards and Leftwards Open Circle Arrows","url":"https://s1.vika.cn/space/2021/05/29/dd07c70ba08e4b81ab3059c7fd85db06","token":"space/2021/05/29/dd07c70ba08e4b81ab3059c7fd85db06","category_id":"symbols"},"repeat_one":{"native":"🔂","name":"Clockwise Rightwards and Leftwards Open Circle Arrows with Circled One Overlay","url":"https://s1.vika.cn/space/2021/05/29/f862494be67740f6b1eedbe9a12a2476","token":"space/2021/05/29/f862494be67740f6b1eedbe9a12a2476","category_id":"symbols"},"restroom":{"native":"🚻","name":"Restroom","url":"https://s1.vika.cn/space/2021/05/29/eedac7521db44464a57d407ad1d5bb37","token":"space/2021/05/29/eedac7521db44464a57d407ad1d5bb37","category_id":"symbols"},"revolving_hearts":{"native":"💞","name":"Revolving Hearts","url":"https://s1.vika.cn/space/2021/05/29/0c471da1faf34b10a274a9cf68eb0885","token":"space/2021/05/29/0c471da1faf34b10a274a9cf68eb0885","category_id":"people"},"rewind":{"native":"⏪","name":"Black Left-Pointing Double Triangle","url":"https://s1.vika.cn/space/2021/05/29/826766cbd6a24b359f16351db79af374","token":"space/2021/05/29/826766cbd6a24b359f16351db79af374","category_id":"symbols"},"rhinoceros":{"native":"🦏","name":"Rhinoceros","url":"https://s1.vika.cn/space/2021/05/29/b9d5ab8a53e04b4480c2fefca1ec152d","token":"space/2021/05/29/b9d5ab8a53e04b4480c2fefca1ec152d","category_id":"nature"},"ribbon":{"native":"🎀","name":"Ribbon","url":"https://s1.vika.cn/space/2021/05/29/4fe7ad90f4904478b38a24e30077d908","token":"space/2021/05/29/4fe7ad90f4904478b38a24e30077d908","category_id":"activity"},"rice":{"native":"🍚","name":"Cooked Rice","url":"https://s1.vika.cn/space/2021/05/29/17f24f82a1da4119909fc28cd0b0529e","token":"space/2021/05/29/17f24f82a1da4119909fc28cd0b0529e","category_id":"foods"},"rice_ball":{"native":"🍙","name":"Rice Ball","url":"https://s1.vika.cn/space/2021/05/29/a11c1b2b3cae40398e8eae55f712dcf1","token":"space/2021/05/29/a11c1b2b3cae40398e8eae55f712dcf1","category_id":"foods"},"rice_cracker":{"native":"🍘","name":"Rice Cracker","url":"https://s1.vika.cn/space/2021/05/29/1d50262f46f44c51aacb9d557acfbd47","token":"space/2021/05/29/1d50262f46f44c51aacb9d557acfbd47","category_id":"foods"},"rice_scene":{"native":"🎑","name":"Moon Viewing Ceremony","url":"https://s1.vika.cn/space/2021/05/29/bf9615dcd27545f2a01b072cfc1e9d9a","token":"space/2021/05/29/bf9615dcd27545f2a01b072cfc1e9d9a","category_id":"activity"},"right_anger_bubble":{"native":"🗯️","name":"Right Anger Bubble","url":"https://s1.vika.cn/space/2021/05/29/9aad9aebb7084fa19f54f0b78bfd49aa","token":"space/2021/05/29/9aad9aebb7084fa19f54f0b78bfd49aa","category_id":"people"},"right-facing_fist":{"native":"🤜","name":"Right-Facing Fist","url":"https://s1.vika.cn/space/2021/05/29/e9dbff6f903f4d559c0eabc0d4370560","token":"space/2021/05/29/e9dbff6f903f4d559c0eabc0d4370560","category_id":"people"},"ring":{"native":"💍","name":"Ring","url":"https://s1.vika.cn/space/2021/05/29/718140687d6c47efaa3ab6caa0170faa","token":"space/2021/05/29/718140687d6c47efaa3ab6caa0170faa","category_id":"objects"},"ringed_planet":{"native":"🪐","name":"Ringed Planet","url":"https://s1.vika.cn/space/2021/05/29/60393d27458c497dab296f88837128bd","token":"space/2021/05/29/60393d27458c497dab296f88837128bd","category_id":"places"},"robot_face":{"native":"🤖","name":"Robot Face","url":"https://s1.vika.cn/space/2021/05/29/a60382d1f12b4706bbeb96a40cf7cfa4","token":"space/2021/05/29/a60382d1f12b4706bbeb96a40cf7cfa4","category_id":"people"},"rocket":{"native":"🚀","name":"Rocket","url":"https://s1.vika.cn/space/2021/05/29/229b8d332e144fd886b53f22c10cd3a1","token":"space/2021/05/29/229b8d332e144fd886b53f22c10cd3a1","category_id":"places"},"roll_of_paper":{"native":"🧻","name":"Roll of Paper","url":"https://s1.vika.cn/space/2021/05/29/ff0e440a950240fcbd054f7890425836","token":"space/2021/05/29/ff0e440a950240fcbd054f7890425836","category_id":"objects"},"rolled_up_newspaper":{"native":"🗞️","name":"Rolled Up Newspaper","url":"https://s1.vika.cn/space/2021/05/29/15a62473c80e4ce7ba6783ba27204920","token":"space/2021/05/29/15a62473c80e4ce7ba6783ba27204920","category_id":"objects"},"roller_coaster":{"native":"🎢","name":"Roller Coaster","url":"https://s1.vika.cn/space/2021/05/29/fcdd46420b5e4926b965bc9691e9936f","token":"space/2021/05/29/fcdd46420b5e4926b965bc9691e9936f","category_id":"places"},"rolling_on_the_floor_laughing":{"native":"🤣","name":"Rolling on the Floor Laughing","url":"https://s1.vika.cn/space/2021/05/29/8a3ff2f62f2743e493350cd5211b5a6d","token":"space/2021/05/29/8a3ff2f62f2743e493350cd5211b5a6d","category_id":"people"},"rooster":{"native":"🐓","name":"Rooster","url":"https://s1.vika.cn/space/2021/05/29/c95fc1d6803f4eb1ae7450ba451efd76","token":"space/2021/05/29/c95fc1d6803f4eb1ae7450ba451efd76","category_id":"nature"},"rose":{"native":"🌹","name":"Rose","url":"https://s1.vika.cn/space/2021/05/29/096a729fc08c43f1bf02b3a71df320ca","token":"space/2021/05/29/096a729fc08c43f1bf02b3a71df320ca","category_id":"nature"},"rosette":{"native":"🏵️","name":"Rosette","url":"https://s1.vika.cn/space/2021/05/29/047459b92fb54253955253f505701ba1","token":"space/2021/05/29/047459b92fb54253955253f505701ba1","category_id":"nature"},"rotating_light":{"native":"🚨","name":"Police Cars Revolving Light","url":"https://s1.vika.cn/space/2021/05/29/53e3ce268ff84f96b3fbfc1b2463b1bb","token":"space/2021/05/29/53e3ce268ff84f96b3fbfc1b2463b1bb","category_id":"places"},"round_pushpin":{"native":"📍","name":"Round Pushpin","url":"https://s1.vika.cn/space/2021/05/29/67a2bbe38d3b4e1aadae031c431cce8d","token":"space/2021/05/29/67a2bbe38d3b4e1aadae031c431cce8d","category_id":"objects"},"rowboat":{"native":"🚣","name":"Rowboat","url":"https://s1.vika.cn/space/2021/05/29/8cc1f42120ee43b585c662992d3a44bc","token":"space/2021/05/29/8cc1f42120ee43b585c662992d3a44bc","category_id":"people"},"ru":{"native":"🇷🇺","name":"Russia Flag","url":"https://s1.vika.cn/space/2021/05/29/104838db14db43f8b132b9d86796c5f3","token":"space/2021/05/29/104838db14db43f8b132b9d86796c5f3","category_id":"flags"},"rugby_football":{"native":"🏉","name":"Rugby Football","url":"https://s1.vika.cn/space/2021/05/29/8b1bc18ca3d2444eaac514ecfb2802c5","token":"space/2021/05/29/8b1bc18ca3d2444eaac514ecfb2802c5","category_id":"activity"},"runner":{"native":"🏃","name":"Runner","url":"https://s1.vika.cn/space/2021/05/29/58da0f36f698423eb36afb808bab8032","token":"space/2021/05/29/58da0f36f698423eb36afb808bab8032","category_id":"people"},"running_shirt_with_sash":{"native":"🎽","name":"Running Shirt with Sash","url":"https://s1.vika.cn/space/2021/05/29/5d5a14255a644821a79c91d0ffa19423","token":"space/2021/05/29/5d5a14255a644821a79c91d0ffa19423","category_id":"activity"},"sa":{"native":"🈂️","name":"Squared Katakana Sa","url":"https://s1.vika.cn/space/2021/05/29/c209b203486340acabf090092a9723c7","token":"space/2021/05/29/c209b203486340acabf090092a9723c7","category_id":"symbols"},"safety_pin":{"native":"🧷","name":"Safety Pin","url":"https://s1.vika.cn/space/2021/05/29/8138825dae23473cbafae32a1c0dbfff","token":"space/2021/05/29/8138825dae23473cbafae32a1c0dbfff","category_id":"objects"},"safety_vest":{"native":"🦺","name":"Safety Vest","url":"https://s1.vika.cn/space/2021/05/29/0b0c114ba8ef414eab1880790c9f2851","token":"space/2021/05/29/0b0c114ba8ef414eab1880790c9f2851","category_id":"objects"},"sagittarius":{"native":"♐","name":"Sagittarius","url":"https://s1.vika.cn/space/2021/05/29/87097d85d9f842c2b74ab69aa772d117","token":"space/2021/05/29/87097d85d9f842c2b74ab69aa772d117","category_id":"symbols"},"sake":{"native":"🍶","name":"Sake Bottle and Cup","url":"https://s1.vika.cn/space/2021/05/29/b7f449f21c754e55a4e08055b255fd06","token":"space/2021/05/29/b7f449f21c754e55a4e08055b255fd06","category_id":"foods"},"salt":{"native":"🧂","name":"Salt Shaker","url":"https://s1.vika.cn/space/2021/05/29/858439cceaa64da9a1b05ae5dd90e914","token":"space/2021/05/29/858439cceaa64da9a1b05ae5dd90e914","category_id":"foods"},"sandal":{"native":"👡","name":"Womans Sandal","url":"https://s1.vika.cn/space/2021/05/29/0b4358e8a3de4207a890b5490aa73810","token":"space/2021/05/29/0b4358e8a3de4207a890b5490aa73810","category_id":"objects"},"sandwich":{"native":"🥪","name":"Sandwich","url":"https://s1.vika.cn/space/2021/05/29/6e931f7400b54b9d97f41a439bdf4ddf","token":"space/2021/05/29/6e931f7400b54b9d97f41a439bdf4ddf","category_id":"foods"},"santa":{"native":"🎅","name":"Father Christmas","url":"https://s1.vika.cn/space/2021/05/29/312afc52ddf44b94bd5f101c946c0b15","token":"space/2021/05/29/312afc52ddf44b94bd5f101c946c0b15","category_id":"people"},"sari":{"native":"🥻","name":"Sari","url":"https://s1.vika.cn/space/2021/05/29/9a23005091db47a298bb37a4df919714","token":"space/2021/05/29/9a23005091db47a298bb37a4df919714","category_id":"objects"},"satellite":{"native":"🛰️","name":"Satellite","url":"https://s1.vika.cn/space/2021/05/29/cbb8efaa4afc47499e1ba1a0997a8e4f","token":"space/2021/05/29/cbb8efaa4afc47499e1ba1a0997a8e4f","category_id":"places"},"satellite_antenna":{"native":"📡","name":"Satellite Antenna","url":"https://s1.vika.cn/space/2021/05/29/3790e0d1d9184bf6ac7d15e57d15351f","token":"space/2021/05/29/3790e0d1d9184bf6ac7d15e57d15351f","category_id":"objects"},"sauropod":{"native":"🦕","name":"Sauropod","url":"https://s1.vika.cn/space/2021/05/29/122c2b15bbac4e72a82409250d60b94e","token":"space/2021/05/29/122c2b15bbac4e72a82409250d60b94e","category_id":"nature"},"saxophone":{"native":"🎷","name":"Saxophone","url":"https://s1.vika.cn/space/2021/05/29/f6f6e48a651c4e0a91ae5dda95abf9ce","token":"space/2021/05/29/f6f6e48a651c4e0a91ae5dda95abf9ce","category_id":"objects"},"scales":{"native":"⚖️","name":"Scales","url":"https://s1.vika.cn/space/2021/05/29/285fd16f62fe401486804d66654d7445","token":"space/2021/05/29/285fd16f62fe401486804d66654d7445","category_id":"objects"},"scarf":{"native":"🧣","name":"Scarf","url":"https://s1.vika.cn/space/2021/05/29/6e8b8effc09e4645a2ce4a5f79ac00c8","token":"space/2021/05/29/6e8b8effc09e4645a2ce4a5f79ac00c8","category_id":"objects"},"school":{"native":"🏫","name":"School","url":"https://s1.vika.cn/space/2021/05/29/de28f5840d534438b8073fe5ff87c451","token":"space/2021/05/29/de28f5840d534438b8073fe5ff87c451","category_id":"places"},"school_satchel":{"native":"🎒","name":"School Satchel","url":"https://s1.vika.cn/space/2021/05/29/7ab8d9ae790d441197fdc3fa60031d10","token":"space/2021/05/29/7ab8d9ae790d441197fdc3fa60031d10","category_id":"objects"},"scientist":{"native":"🧑‍🔬","name":"Scientist","url":"https://s1.vika.cn/space/2021/05/29/6162ec2ae2e04613b3a9c46c7c35462e","token":"space/2021/05/29/6162ec2ae2e04613b3a9c46c7c35462e","category_id":"people"},"scissors":{"native":"✂️","name":"Black Scissors","url":"https://s1.vika.cn/space/2021/05/29/7938ac4bacce42a59da7d6196a320f0d","token":"space/2021/05/29/7938ac4bacce42a59da7d6196a320f0d","category_id":"objects"},"scooter":{"native":"🛴","name":"Scooter","url":"https://s1.vika.cn/space/2021/05/29/e37ba0725c854b4cbf982bbf3f630ed6","token":"space/2021/05/29/e37ba0725c854b4cbf982bbf3f630ed6","category_id":"places"},"scorpion":{"native":"🦂","name":"Scorpion","url":"https://s1.vika.cn/space/2021/05/29/04b340096ea54ba9aadcbdeea29b98b9","token":"space/2021/05/29/04b340096ea54ba9aadcbdeea29b98b9","category_id":"nature"},"scorpius":{"native":"♏","name":"Scorpius","url":"https://s1.vika.cn/space/2021/05/29/42038784bc4f4fe6a5fd05b84376202e","token":"space/2021/05/29/42038784bc4f4fe6a5fd05b84376202e","category_id":"symbols"},"scream":{"native":"😱","name":"Face Screaming in Fear","url":"https://s1.vika.cn/space/2021/05/29/8d081d1534d64fbfb6f2a66bb45a3163","token":"space/2021/05/29/8d081d1534d64fbfb6f2a66bb45a3163","category_id":"people"},"scream_cat":{"native":"🙀","name":"Weary Cat Face","url":"https://s1.vika.cn/space/2021/05/29/db527d614f0742f9948bf85e6abd83a6","token":"space/2021/05/29/db527d614f0742f9948bf85e6abd83a6","category_id":"people"},"scroll":{"native":"📜","name":"Scroll","url":"https://s1.vika.cn/space/2021/05/29/67c8dbaba79f42e79681296ec69f6d5b","token":"space/2021/05/29/67c8dbaba79f42e79681296ec69f6d5b","category_id":"objects"},"seat":{"native":"💺","name":"Seat","url":"https://s1.vika.cn/space/2021/05/29/2b89267eeae743d9b4793491790df593","token":"space/2021/05/29/2b89267eeae743d9b4793491790df593","category_id":"places"},"second_place_medal":{"native":"🥈","name":"Second Place Medal","url":"https://s1.vika.cn/space/2021/05/29/a03b2c0c6fbf4e6fae8f70bffb16832d","token":"space/2021/05/29/a03b2c0c6fbf4e6fae8f70bffb16832d","category_id":"activity"},"secret":{"native":"㊙️","name":"Circled Ideograph Secret","url":"https://s1.vika.cn/space/2021/05/29/6a3364781d134374aab7f82ca135ab7e","token":"space/2021/05/29/6a3364781d134374aab7f82ca135ab7e","category_id":"symbols"},"see_no_evil":{"native":"🙈","name":"See-No-Evil Monkey","url":"https://s1.vika.cn/space/2021/05/29/934b37aa01034afb914e0c36f86d1925","token":"space/2021/05/29/934b37aa01034afb914e0c36f86d1925","category_id":"people"},"seedling":{"native":"🌱","name":"Seedling","url":"https://s1.vika.cn/space/2021/05/29/bbb9ff928b024c13aca9850d8deaa432","token":"space/2021/05/29/bbb9ff928b024c13aca9850d8deaa432","category_id":"nature"},"selfie":{"native":"🤳","name":"Selfie","url":"https://s1.vika.cn/space/2021/05/29/9d45e9b0d7de49149f752913dd416670","token":"space/2021/05/29/9d45e9b0d7de49149f752913dd416670","category_id":"people"},"service_dog":{"native":"🐕‍🦺","name":"Service Dog","url":"https://s1.vika.cn/space/2021/05/29/d44b196a219641ed8286ef3744e871c0","token":"space/2021/05/29/d44b196a219641ed8286ef3744e871c0","category_id":"nature"},"seven":{"native":"7️⃣","name":"Keycap 7","url":"https://s1.vika.cn/space/2021/05/29/0bc47838e1294adbbe704adab5da881e","token":"space/2021/05/29/0bc47838e1294adbbe704adab5da881e","category_id":"symbols"},"shallow_pan_of_food":{"native":"🥘","name":"Shallow Pan of Food","url":"https://s1.vika.cn/space/2021/05/29/2b4891d5321349b6ac5f38b6fb8c1476","token":"space/2021/05/29/2b4891d5321349b6ac5f38b6fb8c1476","category_id":"foods"},"shamrock":{"native":"☘️","name":"Shamrock","url":"https://s1.vika.cn/space/2021/05/29/68ff88dfd421471786ef2cdfe3fc02a4","token":"space/2021/05/29/68ff88dfd421471786ef2cdfe3fc02a4","category_id":"nature"},"shark":{"native":"🦈","name":"Shark","url":"https://s1.vika.cn/space/2021/05/29/f3fa3a2dc6bb44e6bfa01224519a2b66","token":"space/2021/05/29/f3fa3a2dc6bb44e6bfa01224519a2b66","category_id":"nature"},"shaved_ice":{"native":"🍧","name":"Shaved Ice","url":"https://s1.vika.cn/space/2021/05/29/77b3a21623ca4a60ad432b191866fef9","token":"space/2021/05/29/77b3a21623ca4a60ad432b191866fef9","category_id":"foods"},"sheep":{"native":"🐑","name":"Sheep","url":"https://s1.vika.cn/space/2021/05/29/e8ce6f5042f845e3919b50b3fc261799","token":"space/2021/05/29/e8ce6f5042f845e3919b50b3fc261799","category_id":"nature"},"shell":{"native":"🐚","name":"Spiral Shell","url":"https://s1.vika.cn/space/2021/05/29/ebe8c4e114994e7ab33266fbb15d33be","token":"space/2021/05/29/ebe8c4e114994e7ab33266fbb15d33be","category_id":"nature"},"shield":{"native":"🛡️","name":"Shield","url":"https://s1.vika.cn/space/2021/05/29/b5a0db3bee564a259a5879489ab6f33c","token":"space/2021/05/29/b5a0db3bee564a259a5879489ab6f33c","category_id":"objects"},"shinto_shrine":{"native":"⛩️","name":"Shinto Shrine","url":"https://s1.vika.cn/space/2021/05/29/dd312295b23d465ba91255353f5fd9d5","token":"space/2021/05/29/dd312295b23d465ba91255353f5fd9d5","category_id":"places"},"ship":{"native":"🚢","name":"Ship","url":"https://s1.vika.cn/space/2021/05/29/5bf19df93f5048bb90e57ad49fd616e7","token":"space/2021/05/29/5bf19df93f5048bb90e57ad49fd616e7","category_id":"places"},"shirt":{"native":"👕","name":"T-Shirt","url":"https://s1.vika.cn/space/2021/05/29/deef65668c1442b9aa9a9077c2abad0b","token":"space/2021/05/29/deef65668c1442b9aa9a9077c2abad0b","category_id":"objects"},"shopping_bags":{"native":"🛍️","name":"Shopping Bags","url":"https://s1.vika.cn/space/2021/05/29/4d6cda09db38413686a8f14d29c66131","token":"space/2021/05/29/4d6cda09db38413686a8f14d29c66131","category_id":"objects"},"shopping_trolley":{"native":"🛒","name":"Shopping Trolley","url":"https://s1.vika.cn/space/2021/05/29/77917e907f0e4ab1a9bc7990b3c06953","token":"space/2021/05/29/77917e907f0e4ab1a9bc7990b3c06953","category_id":"objects"},"shorts":{"native":"🩳","name":"Shorts","url":"https://s1.vika.cn/space/2021/05/29/11193b8825eb4e9f8d776b9589a4735c","token":"space/2021/05/29/11193b8825eb4e9f8d776b9589a4735c","category_id":"objects"},"shower":{"native":"🚿","name":"Shower","url":"https://s1.vika.cn/space/2021/05/29/e8638bf8856447cd90fe91cc0bae8779","token":"space/2021/05/29/e8638bf8856447cd90fe91cc0bae8779","category_id":"objects"},"shrimp":{"native":"🦐","name":"Shrimp","url":"https://s1.vika.cn/space/2021/05/29/fb135d849aee4f7abf89e6059f5cd899","token":"space/2021/05/29/fb135d849aee4f7abf89e6059f5cd899","category_id":"foods"},"shrug":{"native":"🤷","name":"Shrug","url":"https://s1.vika.cn/space/2021/05/29/1736da3ac33b4afeac08f8cd9d8f1fcf","token":"space/2021/05/29/1736da3ac33b4afeac08f8cd9d8f1fcf","category_id":"people"},"shushing_face":{"native":"🤫","name":"Face with Finger Covering Closed Lips","url":"https://s1.vika.cn/space/2021/05/29/84da677ba1f746f1b48dede12bc7d094","token":"space/2021/05/29/84da677ba1f746f1b48dede12bc7d094","category_id":"people"},"signal_strength":{"native":"📶","name":"Antenna with Bars","url":"https://s1.vika.cn/space/2021/05/29/153cd55994874a77879a408755b3a889","token":"space/2021/05/29/153cd55994874a77879a408755b3a889","category_id":"symbols"},"singer":{"native":"🧑‍🎤","name":"Singer","url":"https://s1.vika.cn/space/2021/05/29/a9612ef550794680967e613dc4b53d72","token":"space/2021/05/29/a9612ef550794680967e613dc4b53d72","category_id":"people"},"six":{"native":"6️⃣","name":"Keycap 6","url":"https://s1.vika.cn/space/2021/05/29/715fe26ac65848df91726fde7fd49af2","token":"space/2021/05/29/715fe26ac65848df91726fde7fd49af2","category_id":"symbols"},"six_pointed_star":{"native":"🔯","name":"Six Pointed Star with Middle Dot","url":"https://s1.vika.cn/space/2021/05/29/f45b27993da648059bc2d13547cb6fa9","token":"space/2021/05/29/f45b27993da648059bc2d13547cb6fa9","category_id":"symbols"},"skateboard":{"native":"🛹","name":"Skateboard","url":"https://s1.vika.cn/space/2021/05/29/aa07ec6f530741ee818a98819ea044a9","token":"space/2021/05/29/aa07ec6f530741ee818a98819ea044a9","category_id":"places"},"ski":{"native":"🎿","name":"Ski and Ski Boot","url":"https://s1.vika.cn/space/2021/05/29/a6db6f78dc8c437d88afd9c98ed83f56","token":"space/2021/05/29/a6db6f78dc8c437d88afd9c98ed83f56","category_id":"activity"},"skier":{"native":"⛷️","name":"Skier","url":"https://s1.vika.cn/space/2021/05/29/11076a18749842d39c5ca2dba4d4b45e","token":"space/2021/05/29/11076a18749842d39c5ca2dba4d4b45e","category_id":"people"},"skull":{"native":"💀","name":"Skull","url":"https://s1.vika.cn/space/2021/05/29/70043da794a84bd8a4a576c4a8c6c7e7","token":"space/2021/05/29/70043da794a84bd8a4a576c4a8c6c7e7","category_id":"people"},"skull_and_crossbones":{"native":"☠️","name":"Skull and Crossbones","url":"https://s1.vika.cn/space/2021/05/29/a25603ac4b1b4af2b7025c80d091f0d9","token":"space/2021/05/29/a25603ac4b1b4af2b7025c80d091f0d9","category_id":"people"},"skunk":{"native":"🦨","name":"Skunk","url":"https://s1.vika.cn/space/2021/05/29/68714b86398c465c8270e0c98d6be1fb","token":"space/2021/05/29/68714b86398c465c8270e0c98d6be1fb","category_id":"nature"},"sled":{"native":"🛷","name":"Sled","url":"https://s1.vika.cn/space/2021/05/29/08f1d49c3ec44549bfa45fb9163302c2","token":"space/2021/05/29/08f1d49c3ec44549bfa45fb9163302c2","category_id":"activity"},"sleeping":{"native":"😴","name":"Sleeping Face","url":"https://s1.vika.cn/space/2021/05/29/3a4160473f21496994b89a587e823997","token":"space/2021/05/29/3a4160473f21496994b89a587e823997","category_id":"people"},"sleeping_accommodation":{"native":"🛌","name":"Sleeping Accommodation","url":"https://s1.vika.cn/space/2021/05/29/30dcb46907cb46e28d289507ef6a6f2d","token":"space/2021/05/29/30dcb46907cb46e28d289507ef6a6f2d","category_id":"people"},"sleepy":{"native":"😪","name":"Sleepy Face","url":"https://s1.vika.cn/space/2021/05/29/4df24e73e970430391057cc69f16fbc5","token":"space/2021/05/29/4df24e73e970430391057cc69f16fbc5","category_id":"people"},"sleuth_or_spy":{"native":"🕵️","name":"Sleuth or Spy","url":"https://s1.vika.cn/space/2021/05/29/a10fbb8c643143c1a68b96239a6b1c25","token":"space/2021/05/29/a10fbb8c643143c1a68b96239a6b1c25","category_id":"people"},"slightly_frowning_face":{"native":"🙁","name":"Slightly Frowning Face","url":"https://s1.vika.cn/space/2021/05/29/071edbdad9904e45b840d63e39becb65","token":"space/2021/05/29/071edbdad9904e45b840d63e39becb65","category_id":"people"},"slightly_smiling_face":{"native":"🙂","name":"Slightly Smiling Face","url":"https://s1.vika.cn/space/2021/05/29/03782725d2744b55b7d1dcc34c04aa4b","token":"space/2021/05/29/03782725d2744b55b7d1dcc34c04aa4b","category_id":"people"},"slot_machine":{"native":"🎰","name":"Slot Machine","url":"https://s1.vika.cn/space/2021/05/29/f9b33ae96a71456489f8efbe3eb0ecda","token":"space/2021/05/29/f9b33ae96a71456489f8efbe3eb0ecda","category_id":"activity"},"sloth":{"native":"🦥","name":"Sloth","url":"https://s1.vika.cn/space/2021/05/29/abcbfdcd46f94d2fbfee222d3f70ac6f","token":"space/2021/05/29/abcbfdcd46f94d2fbfee222d3f70ac6f","category_id":"nature"},"small_airplane":{"native":"🛩️","name":"Small Airplane","url":"https://s1.vika.cn/space/2021/05/29/718cd60ea4454ddc991a2b2c11f82fd3","token":"space/2021/05/29/718cd60ea4454ddc991a2b2c11f82fd3","category_id":"places"},"small_blue_diamond":{"native":"🔹","name":"Small Blue Diamond","url":"https://s1.vika.cn/space/2021/05/29/80005bb72b7244e7955d0d7eaeeac53c","token":"space/2021/05/29/80005bb72b7244e7955d0d7eaeeac53c","category_id":"symbols"},"small_orange_diamond":{"native":"🔸","name":"Small Orange Diamond","url":"https://s1.vika.cn/space/2021/05/29/3b14eaa495224c6888848aca195c4066","token":"space/2021/05/29/3b14eaa495224c6888848aca195c4066","category_id":"symbols"},"small_red_triangle":{"native":"🔺","name":"Up-Pointing Red Triangle","url":"https://s1.vika.cn/space/2021/05/29/df350c0c3ab04b03a476caa62ba0b2c5","token":"space/2021/05/29/df350c0c3ab04b03a476caa62ba0b2c5","category_id":"symbols"},"small_red_triangle_down":{"native":"🔻","name":"Down-Pointing Red Triangle","url":"https://s1.vika.cn/space/2021/05/29/abcfc540741341b7a8fc6c97226174e3","token":"space/2021/05/29/abcfc540741341b7a8fc6c97226174e3","category_id":"symbols"},"smile":{"native":"😄","name":"Smiling Face with Open Mouth and Smiling Eyes","url":"https://s1.vika.cn/space/2021/05/29/c0462e9ad0ed4bc1abe22311a33d918e","token":"space/2021/05/29/c0462e9ad0ed4bc1abe22311a33d918e","category_id":"people"},"smile_cat":{"native":"😸","name":"Grinning Cat Face with Smiling Eyes","url":"https://s1.vika.cn/space/2021/05/29/13ae2b551f6d4d5cb6e9d289ed386da7","token":"space/2021/05/29/13ae2b551f6d4d5cb6e9d289ed386da7","category_id":"people"},"smiley":{"native":"😃","name":"Smiling Face with Open Mouth","url":"https://s1.vika.cn/space/2021/05/29/073465e1bc78499fb8bdfd528af6bec0","token":"space/2021/05/29/073465e1bc78499fb8bdfd528af6bec0","category_id":"people"},"smiley_cat":{"native":"😺","name":"Smiling Cat Face with Open Mouth","url":"https://s1.vika.cn/space/2021/05/29/eabd6bd6a101467cb0ca6aa634a88ece","token":"space/2021/05/29/eabd6bd6a101467cb0ca6aa634a88ece","category_id":"people"},"smiling_face_with_3_hearts":{"native":"🥰","name":"Smiling Face with Smiling Eyes and Three Hearts","url":"https://s1.vika.cn/space/2021/05/29/92065ee211394168893cfa5d28e0a241","token":"space/2021/05/29/92065ee211394168893cfa5d28e0a241","category_id":"people"},"smiling_imp":{"native":"😈","name":"Smiling Face with Horns","url":"https://s1.vika.cn/space/2021/05/29/59db3c94db2141b19287911ed1001430","token":"space/2021/05/29/59db3c94db2141b19287911ed1001430","category_id":"people"},"smirk":{"native":"😏","name":"Smirking Face","url":"https://s1.vika.cn/space/2021/05/29/5eb354749335479993fe7cda57768e75","token":"space/2021/05/29/5eb354749335479993fe7cda57768e75","category_id":"people"},"smirk_cat":{"native":"😼","name":"Cat Face with Wry Smile","url":"https://s1.vika.cn/space/2021/05/29/88d2891a9b764fe989f5f573dd24cf72","token":"space/2021/05/29/88d2891a9b764fe989f5f573dd24cf72","category_id":"people"},"smoking":{"native":"🚬","name":"Smoking Symbol","url":"https://s1.vika.cn/space/2021/05/29/3e49574352854116a271fb67a115cc7f","token":"space/2021/05/29/3e49574352854116a271fb67a115cc7f","category_id":"objects"},"snail":{"native":"🐌","name":"Snail","url":"https://s1.vika.cn/space/2021/05/29/3673d29a89ec427795aa091a12bf35fd","token":"space/2021/05/29/3673d29a89ec427795aa091a12bf35fd","category_id":"nature"},"snake":{"native":"🐍","name":"Snake","url":"https://s1.vika.cn/space/2021/05/29/20cd50a230e248d984cf6929682a0133","token":"space/2021/05/29/20cd50a230e248d984cf6929682a0133","category_id":"nature"},"sneezing_face":{"native":"🤧","name":"Sneezing Face","url":"https://s1.vika.cn/space/2021/05/29/737b06f4ad45464d85604fefa5f0c4af","token":"space/2021/05/29/737b06f4ad45464d85604fefa5f0c4af","category_id":"people"},"snow_capped_mountain":{"native":"🏔️","name":"Snow Capped Mountain","url":"https://s1.vika.cn/space/2021/05/29/80e52add3f8547ef9702ff7a7cf752a6","token":"space/2021/05/29/80e52add3f8547ef9702ff7a7cf752a6","category_id":"places"},"snow_cloud":{"native":"🌨️","name":"Snow Cloud","url":"https://s1.vika.cn/space/2021/05/29/a16ffb16b3aa425fa28a2fec6f267ce2","token":"space/2021/05/29/a16ffb16b3aa425fa28a2fec6f267ce2","category_id":"places"},"snowboarder":{"native":"🏂","name":"Snowboarder","url":"https://s1.vika.cn/space/2021/05/29/cb788387c6cf4f6fae61db3ccf4de015","token":"space/2021/05/29/cb788387c6cf4f6fae61db3ccf4de015","category_id":"people"},"snowflake":{"native":"❄️","name":"Snowflake","url":"https://s1.vika.cn/space/2021/05/29/47db8c379d914b22a999bf4de946b874","token":"space/2021/05/29/47db8c379d914b22a999bf4de946b874","category_id":"places"},"snowman":{"native":"☃️","name":"Snowman","url":"https://s1.vika.cn/space/2021/05/29/e6d2be9dd9cf4eb49ecac9b81e521b9a","token":"space/2021/05/29/e6d2be9dd9cf4eb49ecac9b81e521b9a","category_id":"places"},"snowman_without_snow":{"native":"⛄","name":"Snowman Without Snow","url":"https://s1.vika.cn/space/2021/05/29/f2272b23df6f410da72a60b983708af7","token":"space/2021/05/29/f2272b23df6f410da72a60b983708af7","category_id":"places"},"soap":{"native":"🧼","name":"Bar of Soap","url":"https://s1.vika.cn/space/2021/05/29/67008fd6942b4d009d9db1e175604d5e","token":"space/2021/05/29/67008fd6942b4d009d9db1e175604d5e","category_id":"objects"},"sob":{"native":"😭","name":"Loudly Crying Face","url":"https://s1.vika.cn/space/2021/05/29/7c83ab3085344fed8bff392c303ec0ce","token":"space/2021/05/29/7c83ab3085344fed8bff392c303ec0ce","category_id":"people"},"soccer":{"native":"⚽","name":"Soccer Ball","url":"https://s1.vika.cn/space/2021/05/29/81c27d34dcb844e180bda13a51441470","token":"space/2021/05/29/81c27d34dcb844e180bda13a51441470","category_id":"activity"},"socks":{"native":"🧦","name":"Socks","url":"https://s1.vika.cn/space/2021/05/29/8db6246caece46278e45363463970346","token":"space/2021/05/29/8db6246caece46278e45363463970346","category_id":"objects"},"softball":{"native":"🥎","name":"Softball","url":"https://s1.vika.cn/space/2021/05/29/01a561bd311e4245b41504b1ea33bd50","token":"space/2021/05/29/01a561bd311e4245b41504b1ea33bd50","category_id":"activity"},"soon":{"native":"🔜","name":"Soon with Rightwards Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/d276047365d246daa90abcf2fa319dd3","token":"space/2021/05/29/d276047365d246daa90abcf2fa319dd3","category_id":"symbols"},"sos":{"native":"🆘","name":"Squared Sos","url":"https://s1.vika.cn/space/2021/05/29/d6bb8ccaab3940a696f6d6b8d2fbe63d","token":"space/2021/05/29/d6bb8ccaab3940a696f6d6b8d2fbe63d","category_id":"symbols"},"sound":{"native":"🔉","name":"Speaker with One Sound Wave","url":"https://s1.vika.cn/space/2021/05/29/f35b84c322d343f0ab44d761c6a47019","token":"space/2021/05/29/f35b84c322d343f0ab44d761c6a47019","category_id":"objects"},"space_invader":{"native":"👾","name":"Alien Monster","url":"https://s1.vika.cn/space/2021/05/29/a20538cb04b249ed89db20fbf58d4f98","token":"space/2021/05/29/a20538cb04b249ed89db20fbf58d4f98","category_id":"people"},"spades":{"native":"♠️","name":"Black Spade Suit","url":"https://s1.vika.cn/space/2021/05/29/64b47bb3f8a049cab3d1fa8843b983db","token":"space/2021/05/29/64b47bb3f8a049cab3d1fa8843b983db","category_id":"activity"},"spaghetti":{"native":"🍝","name":"Spaghetti","url":"https://s1.vika.cn/space/2021/05/29/ee4e1b5d600943cda0870e8444edbba9","token":"space/2021/05/29/ee4e1b5d600943cda0870e8444edbba9","category_id":"foods"},"sparkle":{"native":"❇️","name":"Sparkle","url":"https://s1.vika.cn/space/2021/05/29/54cf7760cbd64439a0ba4660f56c6f4c","token":"space/2021/05/29/54cf7760cbd64439a0ba4660f56c6f4c","category_id":"symbols"},"sparkler":{"native":"🎇","name":"Firework Sparkler","url":"https://s1.vika.cn/space/2021/05/29/b99fbbf2360f402592b3d51fc66553bb","token":"space/2021/05/29/b99fbbf2360f402592b3d51fc66553bb","category_id":"activity"},"sparkles":{"native":"✨","name":"Sparkles","url":"https://s1.vika.cn/space/2021/05/29/a3d4eff0becc47bb8dfd981e4417bb77","token":"space/2021/05/29/a3d4eff0becc47bb8dfd981e4417bb77","category_id":"activity"},"sparkling_heart":{"native":"💖","name":"Sparkling Heart","url":"https://s1.vika.cn/space/2021/05/29/8620327557bb436088d5e1a0a7fc22b0","token":"space/2021/05/29/8620327557bb436088d5e1a0a7fc22b0","category_id":"people"},"speak_no_evil":{"native":"🙊","name":"Speak-No-Evil Monkey","url":"https://s1.vika.cn/space/2021/05/29/6d0132d771db4ddf950a084cdc4ed637","token":"space/2021/05/29/6d0132d771db4ddf950a084cdc4ed637","category_id":"people"},"speaker":{"native":"🔈","name":"Speaker","url":"https://s1.vika.cn/space/2021/05/29/7dc7d834ef6340c9bdb485a2397603fe","token":"space/2021/05/29/7dc7d834ef6340c9bdb485a2397603fe","category_id":"objects"},"speaking_head_in_silhouette":{"native":"🗣️","name":"Speaking Head in Silhouette","url":"https://s1.vika.cn/space/2021/05/29/4710df2180434ca493e89b20e9c6d15f","token":"space/2021/05/29/4710df2180434ca493e89b20e9c6d15f","category_id":"people"},"speech_balloon":{"native":"💬","name":"Speech Balloon","url":"https://s1.vika.cn/space/2021/05/29/e146732b198d4186a2985dbb4f6e07f3","token":"space/2021/05/29/e146732b198d4186a2985dbb4f6e07f3","category_id":"people"},"speedboat":{"native":"🚤","name":"Speedboat","url":"https://s1.vika.cn/space/2021/05/29/89b4b9b9d608444a93fc7099f29fa4d1","token":"space/2021/05/29/89b4b9b9d608444a93fc7099f29fa4d1","category_id":"places"},"spider":{"native":"🕷️","name":"Spider","url":"https://s1.vika.cn/space/2021/05/29/c799408201de489c9af2963e9f94bcec","token":"space/2021/05/29/c799408201de489c9af2963e9f94bcec","category_id":"nature"},"spider_web":{"native":"🕸️","name":"Spider Web","url":"https://s1.vika.cn/space/2021/05/29/7db627fb2b534fd19f0eebabc7e48931","token":"space/2021/05/29/7db627fb2b534fd19f0eebabc7e48931","category_id":"nature"},"spiral_calendar_pad":{"native":"🗓️","name":"Spiral Calendar Pad","url":"https://s1.vika.cn/space/2021/05/29/145bb547c9604667814f7fbb248b94f8","token":"space/2021/05/29/145bb547c9604667814f7fbb248b94f8","category_id":"objects"},"spiral_note_pad":{"native":"🗒️","name":"Spiral Note Pad","url":"https://s1.vika.cn/space/2021/05/29/f604d8524bfd4c75a10975afc17c9ad6","token":"space/2021/05/29/f604d8524bfd4c75a10975afc17c9ad6","category_id":"objects"},"spock-hand":{"native":"🖖","name":"Raised Hand with Part Between Middle and Ring Fingers","url":"https://s1.vika.cn/space/2021/05/29/2561e1e6c6ad4ce09fcfa4a9e549ad00","token":"space/2021/05/29/2561e1e6c6ad4ce09fcfa4a9e549ad00","category_id":"people"},"sponge":{"native":"🧽","name":"Sponge","url":"https://s1.vika.cn/space/2021/05/29/efc148cffafc4f8c88e3b47d1354fae0","token":"space/2021/05/29/efc148cffafc4f8c88e3b47d1354fae0","category_id":"objects"},"spoon":{"native":"🥄","name":"Spoon","url":"https://s1.vika.cn/space/2021/05/29/305ac425a79441d685365d6b882a0771","token":"space/2021/05/29/305ac425a79441d685365d6b882a0771","category_id":"foods"},"sports_medal":{"native":"🏅","name":"Sports Medal","url":"https://s1.vika.cn/space/2021/05/29/d8960f5e597149b5b0c38a205817b7df","token":"space/2021/05/29/d8960f5e597149b5b0c38a205817b7df","category_id":"activity"},"squid":{"native":"🦑","name":"Squid","url":"https://s1.vika.cn/space/2021/05/29/45b61faeb4d546629b8c38283afde35d","token":"space/2021/05/29/45b61faeb4d546629b8c38283afde35d","category_id":"foods"},"stadium":{"native":"🏟️","name":"Stadium","url":"https://s1.vika.cn/space/2021/05/29/a4112ad913084dd4b5b27af05777f40d","token":"space/2021/05/29/a4112ad913084dd4b5b27af05777f40d","category_id":"places"},"standing_person":{"native":"🧍","name":"Standing Person","url":"https://s1.vika.cn/space/2021/05/29/255d997278b440f3b4337edecc75d9d3","token":"space/2021/05/29/255d997278b440f3b4337edecc75d9d3","category_id":"people"},"star":{"native":"⭐","name":"White Medium Star","url":"https://s1.vika.cn/space/2021/05/29/53a17a2f664b49cca77610d37a63df14","token":"space/2021/05/29/53a17a2f664b49cca77610d37a63df14","category_id":"places"},"star_and_crescent":{"native":"☪️","name":"Star and Crescent","url":"https://s1.vika.cn/space/2021/05/29/beb64db6171d4c73b9fe9c5e55b6ee61","token":"space/2021/05/29/beb64db6171d4c73b9fe9c5e55b6ee61","category_id":"symbols"},"star_of_david":{"native":"✡️","name":"Star of David","url":"https://s1.vika.cn/space/2021/05/29/b955cdd44ed64a479b3e0013c732d816","token":"space/2021/05/29/b955cdd44ed64a479b3e0013c732d816","category_id":"symbols"},"star-struck":{"native":"🤩","name":"Grinning Face with Star Eyes","url":"https://s1.vika.cn/space/2021/05/29/cea10cec773a4c59995bfd5c5cedcc4a","token":"space/2021/05/29/cea10cec773a4c59995bfd5c5cedcc4a","category_id":"people"},"star2":{"native":"🌟","name":"Glowing Star","url":"https://s1.vika.cn/space/2021/05/29/342a6045c76544deab70a2587a26573b","token":"space/2021/05/29/342a6045c76544deab70a2587a26573b","category_id":"places"},"stars":{"native":"🌠","name":"Shooting Star","url":"https://s1.vika.cn/space/2021/05/29/254c224245ed486f875891491ecf614f","token":"space/2021/05/29/254c224245ed486f875891491ecf614f","category_id":"places"},"station":{"native":"🚉","name":"Station","url":"https://s1.vika.cn/space/2021/05/29/4c7211cd7529493e9a95bb90c50ae394","token":"space/2021/05/29/4c7211cd7529493e9a95bb90c50ae394","category_id":"places"},"statue_of_liberty":{"native":"🗽","name":"Statue of Liberty","url":"https://s1.vika.cn/space/2021/05/29/a2ae419bc5954ac0b9151639efe3a00d","token":"space/2021/05/29/a2ae419bc5954ac0b9151639efe3a00d","category_id":"places"},"steam_locomotive":{"native":"🚂","name":"Steam Locomotive","url":"https://s1.vika.cn/space/2021/05/29/b1763b5293144159a73b9eac3b876095","token":"space/2021/05/29/b1763b5293144159a73b9eac3b876095","category_id":"places"},"stethoscope":{"native":"🩺","name":"Stethoscope","url":"https://s1.vika.cn/space/2021/05/29/1dcfbe770e014e928f18ab4035716837","token":"space/2021/05/29/1dcfbe770e014e928f18ab4035716837","category_id":"objects"},"stew":{"native":"🍲","name":"Pot of Food","url":"https://s1.vika.cn/space/2021/05/29/e9b1bf99725a4c94adac03e9c8fdf9ea","token":"space/2021/05/29/e9b1bf99725a4c94adac03e9c8fdf9ea","category_id":"foods"},"stopwatch":{"native":"⏱️","name":"Stopwatch","url":"https://s1.vika.cn/space/2021/05/29/b9a0bd4125ae4370bb6b127d397d838a","token":"space/2021/05/29/b9a0bd4125ae4370bb6b127d397d838a","category_id":"places"},"straight_ruler":{"native":"📏","name":"Straight Ruler","url":"https://s1.vika.cn/space/2021/05/29/9e3503c8199f4ed883650a241fc98230","token":"space/2021/05/29/9e3503c8199f4ed883650a241fc98230","category_id":"objects"},"strawberry":{"native":"🍓","name":"Strawberry","url":"https://s1.vika.cn/space/2021/05/29/8ceaa7337ae04d8a845e051e65f7b776","token":"space/2021/05/29/8ceaa7337ae04d8a845e051e65f7b776","category_id":"foods"},"stuck_out_tongue":{"native":"😛","name":"Face with Stuck-out Tongue","url":"https://s1.vika.cn/space/2021/05/29/e5e5af659a544b25827b050648d37d21","token":"space/2021/05/29/e5e5af659a544b25827b050648d37d21","category_id":"people"},"stuck_out_tongue_closed_eyes":{"native":"😝","name":"Face with Stuck-out Tongue and Tightly-Closed Eyes","url":"https://s1.vika.cn/space/2021/05/29/3c0607008f5b41328af5453066bf65e2","token":"space/2021/05/29/3c0607008f5b41328af5453066bf65e2","category_id":"people"},"stuck_out_tongue_winking_eye":{"native":"😜","name":"Face with Stuck-out Tongue and Winking Eye","url":"https://s1.vika.cn/space/2021/05/29/5a840ed8661644f785fa4c2cc1ba50b6","token":"space/2021/05/29/5a840ed8661644f785fa4c2cc1ba50b6","category_id":"people"},"student":{"native":"🧑‍🎓","name":"Student","url":"https://s1.vika.cn/space/2021/05/29/dbba13d9356b497294e161af7088bd6a","token":"space/2021/05/29/dbba13d9356b497294e161af7088bd6a","category_id":"people"},"studio_microphone":{"native":"🎙️","name":"Studio Microphone","url":"https://s1.vika.cn/space/2021/05/29/45d8a75db8f34723a95f24802401213b","token":"space/2021/05/29/45d8a75db8f34723a95f24802401213b","category_id":"objects"},"stuffed_flatbread":{"native":"🥙","name":"Stuffed Flatbread","url":"https://s1.vika.cn/space/2021/05/29/8efe748b661e4ed6b0764b0863fae4c1","token":"space/2021/05/29/8efe748b661e4ed6b0764b0863fae4c1","category_id":"foods"},"sun_with_face":{"native":"🌞","name":"Sun with Face","url":"https://s1.vika.cn/space/2021/05/29/9286b5b398434946be5976d6eb492d8f","token":"space/2021/05/29/9286b5b398434946be5976d6eb492d8f","category_id":"places"},"sunflower":{"native":"🌻","name":"Sunflower","url":"https://s1.vika.cn/space/2021/05/29/7c6bc632e70749aca6d9ae51eecce42c","token":"space/2021/05/29/7c6bc632e70749aca6d9ae51eecce42c","category_id":"nature"},"sunglasses":{"native":"😎","name":"Smiling Face with Sunglasses","url":"https://s1.vika.cn/space/2021/05/29/84009735bd4f44e59154ed176bd79cca","token":"space/2021/05/29/84009735bd4f44e59154ed176bd79cca","category_id":"people"},"sunny":{"native":"☀️","name":"Black Sun with Rays","url":"https://s1.vika.cn/space/2021/05/29/c51e3b2494b4413d8fc33576a60b0168","token":"space/2021/05/29/c51e3b2494b4413d8fc33576a60b0168","category_id":"places"},"sunrise":{"native":"🌅","name":"Sunrise","url":"https://s1.vika.cn/space/2021/05/29/09023921c1ce48038c96249b37db1d97","token":"space/2021/05/29/09023921c1ce48038c96249b37db1d97","category_id":"places"},"sunrise_over_mountains":{"native":"🌄","name":"Sunrise over Mountains","url":"https://s1.vika.cn/space/2021/05/29/48192fa86f3243108aaaca631f2b9e19","token":"space/2021/05/29/48192fa86f3243108aaaca631f2b9e19","category_id":"places"},"superhero":{"native":"🦸","name":"Superhero","url":"https://s1.vika.cn/space/2021/05/29/572d498359e2420b9a015269cdb98c8a","token":"space/2021/05/29/572d498359e2420b9a015269cdb98c8a","category_id":"people"},"supervillain":{"native":"🦹","name":"Supervillain","url":"https://s1.vika.cn/space/2021/05/29/00762e9a648f41529c56b56c707169af","token":"space/2021/05/29/00762e9a648f41529c56b56c707169af","category_id":"people"},"surfer":{"native":"🏄","name":"Surfer","url":"https://s1.vika.cn/space/2021/05/29/2ad687cf07734ba3a9a251925797fd11","token":"space/2021/05/29/2ad687cf07734ba3a9a251925797fd11","category_id":"people"},"sushi":{"native":"🍣","name":"Sushi","url":"https://s1.vika.cn/space/2021/05/29/1883386488da415e81083a6dd02adf0d","token":"space/2021/05/29/1883386488da415e81083a6dd02adf0d","category_id":"foods"},"suspension_railway":{"native":"🚟","name":"Suspension Railway","url":"https://s1.vika.cn/space/2021/05/29/2ad5ae241cff41f6b908e888da7f87b1","token":"space/2021/05/29/2ad5ae241cff41f6b908e888da7f87b1","category_id":"places"},"swan":{"native":"🦢","name":"Swan","url":"https://s1.vika.cn/space/2021/05/29/30e60f8b92614a628318dde0a6a40303","token":"space/2021/05/29/30e60f8b92614a628318dde0a6a40303","category_id":"nature"},"sweat":{"native":"😓","name":"Face with Cold Sweat","url":"https://s1.vika.cn/space/2021/05/29/ab0d38eed576430683c4fbc6ece4c5ee","token":"space/2021/05/29/ab0d38eed576430683c4fbc6ece4c5ee","category_id":"people"},"sweat_drops":{"native":"💦","name":"Splashing Sweat Symbol","url":"https://s1.vika.cn/space/2021/05/29/0472405229974eeeaccf8232f9159a6e","token":"space/2021/05/29/0472405229974eeeaccf8232f9159a6e","category_id":"people"},"sweat_smile":{"native":"😅","name":"Smiling Face with Open Mouth and Cold Sweat","url":"https://s1.vika.cn/space/2021/05/29/c7d160c9c2ee40efa3c7bf8aee8f803f","token":"space/2021/05/29/c7d160c9c2ee40efa3c7bf8aee8f803f","category_id":"people"},"sweet_potato":{"native":"🍠","name":"Roasted Sweet Potato","url":"https://s1.vika.cn/space/2021/05/29/fee56256b82041d29b7b38bc51900865","token":"space/2021/05/29/fee56256b82041d29b7b38bc51900865","category_id":"foods"},"swimmer":{"native":"🏊","name":"Swimmer","url":"https://s1.vika.cn/space/2021/05/29/60fe5d72d99143f8866b7614c4fc3086","token":"space/2021/05/29/60fe5d72d99143f8866b7614c4fc3086","category_id":"people"},"symbols":{"native":"🔣","name":"Input Symbol for Symbols","url":"https://s1.vika.cn/space/2021/05/29/4a020a2311de4bc79c8629bf0194f4fa","token":"space/2021/05/29/4a020a2311de4bc79c8629bf0194f4fa","category_id":"symbols"},"synagogue":{"native":"🕍","name":"Synagogue","url":"https://s1.vika.cn/space/2021/05/29/79e18af2433d4b1b8514945e4dfdcafb","token":"space/2021/05/29/79e18af2433d4b1b8514945e4dfdcafb","category_id":"places"},"syringe":{"native":"💉","name":"Syringe","url":"https://s1.vika.cn/space/2021/05/29/7155b9c3f6034ca09734a4443d3c979a","token":"space/2021/05/29/7155b9c3f6034ca09734a4443d3c979a","category_id":"objects"},"t-rex":{"native":"🦖","name":"T-Rex","url":"https://s1.vika.cn/space/2021/05/29/d763931d00614c399cef7820e9e3f42e","token":"space/2021/05/29/d763931d00614c399cef7820e9e3f42e","category_id":"nature"},"table_tennis_paddle_and_ball":{"native":"🏓","name":"Table Tennis Paddle and Ball","url":"https://s1.vika.cn/space/2021/05/29/b38b3c2ecc944483b5042f2398fd0838","token":"space/2021/05/29/b38b3c2ecc944483b5042f2398fd0838","category_id":"activity"},"taco":{"native":"🌮","name":"Taco","url":"https://s1.vika.cn/space/2021/05/29/49a1d978e29342819143cebf49e75901","token":"space/2021/05/29/49a1d978e29342819143cebf49e75901","category_id":"foods"},"tada":{"native":"🎉","name":"Party Popper","url":"https://s1.vika.cn/space/2021/05/29/6cc2308888734d5896542122b80ad96c","token":"space/2021/05/29/6cc2308888734d5896542122b80ad96c","category_id":"activity"},"takeout_box":{"native":"🥡","name":"Takeout Box","url":"https://s1.vika.cn/space/2021/05/29/c182852fa52e4808a12e1b9c846ab864","token":"space/2021/05/29/c182852fa52e4808a12e1b9c846ab864","category_id":"foods"},"tanabata_tree":{"native":"🎋","name":"Tanabata Tree","url":"https://s1.vika.cn/space/2021/05/29/ef80d11adb5f4bbb8a5e975c17b27693","token":"space/2021/05/29/ef80d11adb5f4bbb8a5e975c17b27693","category_id":"activity"},"tangerine":{"native":"🍊","name":"Tangerine","url":"https://s1.vika.cn/space/2021/05/29/fdfcc1b587594ac880d319cb00e8f881","token":"space/2021/05/29/fdfcc1b587594ac880d319cb00e8f881","category_id":"foods"},"taurus":{"native":"♉","name":"Taurus","url":"https://s1.vika.cn/space/2021/05/29/0ae0b4e3452e4843aac4cbad48ff5d2f","token":"space/2021/05/29/0ae0b4e3452e4843aac4cbad48ff5d2f","category_id":"symbols"},"taxi":{"native":"🚕","name":"Taxi","url":"https://s1.vika.cn/space/2021/05/29/6ff840d292884905a4c6f84f109e5d2d","token":"space/2021/05/29/6ff840d292884905a4c6f84f109e5d2d","category_id":"places"},"tea":{"native":"🍵","name":"Teacup Without Handle","url":"https://s1.vika.cn/space/2021/05/29/5304f786c51745ba9693e7c0a04772c9","token":"space/2021/05/29/5304f786c51745ba9693e7c0a04772c9","category_id":"foods"},"teacher":{"native":"🧑‍🏫","name":"Teacher","url":"https://s1.vika.cn/space/2021/05/29/3604c0a6b8d84cb3a8e85712446f6fbb","token":"space/2021/05/29/3604c0a6b8d84cb3a8e85712446f6fbb","category_id":"people"},"technologist":{"native":"🧑‍💻","name":"Technologist","url":"https://s1.vika.cn/space/2021/05/29/1cd84e7e69c149aba3115b1b41ae489e","token":"space/2021/05/29/1cd84e7e69c149aba3115b1b41ae489e","category_id":"people"},"teddy_bear":{"native":"🧸","name":"Teddy Bear","url":"https://s1.vika.cn/space/2021/05/29/057f634598d845059e362afbcbb5e69f","token":"space/2021/05/29/057f634598d845059e362afbcbb5e69f","category_id":"activity"},"telephone_receiver":{"native":"📞","name":"Telephone Receiver","url":"https://s1.vika.cn/space/2021/05/29/a962d5c707974a71b52848ff390d5b37","token":"space/2021/05/29/a962d5c707974a71b52848ff390d5b37","category_id":"objects"},"telescope":{"native":"🔭","name":"Telescope","url":"https://s1.vika.cn/space/2021/05/29/c333d837b0c54a548885840af335c77e","token":"space/2021/05/29/c333d837b0c54a548885840af335c77e","category_id":"objects"},"tennis":{"native":"🎾","name":"Tennis Racquet and Ball","url":"https://s1.vika.cn/space/2021/05/29/5a500c67530e491e90f9c9ef0cef81d3","token":"space/2021/05/29/5a500c67530e491e90f9c9ef0cef81d3","category_id":"activity"},"tent":{"native":"⛺","name":"Tent","url":"https://s1.vika.cn/space/2021/05/29/93b03ec3ed65439886f63410a4f681d2","token":"space/2021/05/29/93b03ec3ed65439886f63410a4f681d2","category_id":"places"},"test_tube":{"native":"🧪","name":"Test Tube","url":"https://s1.vika.cn/space/2021/05/29/6007f97dc8634f3f8e0da631be7fcfe3","token":"space/2021/05/29/6007f97dc8634f3f8e0da631be7fcfe3","category_id":"objects"},"the_horns":{"native":"🤘","name":"Sign of the Horns","url":"https://s1.vika.cn/space/2021/05/29/78de758dc3de404f9e0c62c465fb8d7f","token":"space/2021/05/29/78de758dc3de404f9e0c62c465fb8d7f","category_id":"people"},"thermometer":{"native":"🌡️","name":"Thermometer","url":"https://s1.vika.cn/space/2021/05/29/0c44a88bba4048eba5d00477a0289286","token":"space/2021/05/29/0c44a88bba4048eba5d00477a0289286","category_id":"places"},"thinking_face":{"native":"🤔","name":"Thinking Face","url":"https://s1.vika.cn/space/2021/05/29/61ddb2edd50144ee8f1909015531ad01","token":"space/2021/05/29/61ddb2edd50144ee8f1909015531ad01","category_id":"people"},"third_place_medal":{"native":"🥉","name":"Third Place Medal","url":"https://s1.vika.cn/space/2021/05/29/d105667b435d4153867dd65607a0195d","token":"space/2021/05/29/d105667b435d4153867dd65607a0195d","category_id":"activity"},"thought_balloon":{"native":"💭","name":"Thought Balloon","url":"https://s1.vika.cn/space/2021/05/29/b1cb2c6f627d4a10bf9dbc084b2e3d3d","token":"space/2021/05/29/b1cb2c6f627d4a10bf9dbc084b2e3d3d","category_id":"people"},"thread":{"native":"🧵","name":"Spool of Thread","url":"https://s1.vika.cn/space/2021/05/29/a03c3cfbbafb4cadb4ac8764c53cc2cd","token":"space/2021/05/29/a03c3cfbbafb4cadb4ac8764c53cc2cd","category_id":"activity"},"three":{"native":"3️⃣","name":"Keycap 3","url":"https://s1.vika.cn/space/2021/05/29/8f9cfc6eaf3f4fabab2870f3b2274314","token":"space/2021/05/29/8f9cfc6eaf3f4fabab2870f3b2274314","category_id":"symbols"},"three_button_mouse":{"native":"🖱️","name":"Three Button Mouse","url":"https://s1.vika.cn/space/2021/05/29/0087fd775fef49c3ac0d09157215e01a","token":"space/2021/05/29/0087fd775fef49c3ac0d09157215e01a","category_id":"objects"},"thunder_cloud_and_rain":{"native":"⛈️","name":"Thunder Cloud and Rain","url":"https://s1.vika.cn/space/2021/05/29/f61c8a067988464dad450187e8454c08","token":"space/2021/05/29/f61c8a067988464dad450187e8454c08","category_id":"places"},"ticket":{"native":"🎫","name":"Ticket","url":"https://s1.vika.cn/space/2021/05/29/6a4635774b4d4c8eb828d26316e68682","token":"space/2021/05/29/6a4635774b4d4c8eb828d26316e68682","category_id":"activity"},"tiger":{"native":"🐯","name":"Tiger Face","url":"https://s1.vika.cn/space/2021/05/29/b3239488b9ab4ab9a1dbec64a5316336","token":"space/2021/05/29/b3239488b9ab4ab9a1dbec64a5316336","category_id":"nature"},"tiger2":{"native":"🐅","name":"Tiger","url":"https://s1.vika.cn/space/2021/05/29/529416c390f942fc966c4f73deab65c1","token":"space/2021/05/29/529416c390f942fc966c4f73deab65c1","category_id":"nature"},"timer_clock":{"native":"⏲️","name":"Timer Clock","url":"https://s1.vika.cn/space/2021/05/29/3d5f133584e74aab8aba14969ac41fc1","token":"space/2021/05/29/3d5f133584e74aab8aba14969ac41fc1","category_id":"places"},"tired_face":{"native":"😫","name":"Tired Face","url":"https://s1.vika.cn/space/2021/05/29/956e824b2a4b47578cc7f87e035c50b7","token":"space/2021/05/29/956e824b2a4b47578cc7f87e035c50b7","category_id":"people"},"tm":{"native":"™️","name":"Trade Mark Sign","url":"https://s1.vika.cn/space/2021/05/29/b85409fc87ae450abbefffdbf9c154ff","token":"space/2021/05/29/b85409fc87ae450abbefffdbf9c154ff","category_id":"symbols"},"toilet":{"native":"🚽","name":"Toilet","url":"https://s1.vika.cn/space/2021/05/29/de393de1d3cb4d94924c142eeb59782f","token":"space/2021/05/29/de393de1d3cb4d94924c142eeb59782f","category_id":"objects"},"tokyo_tower":{"native":"🗼","name":"Tokyo Tower","url":"https://s1.vika.cn/space/2021/05/29/79584200fc7d4e01a23226f2475b24e1","token":"space/2021/05/29/79584200fc7d4e01a23226f2475b24e1","category_id":"places"},"tomato":{"native":"🍅","name":"Tomato","url":"https://s1.vika.cn/space/2021/05/29/43b375c7221842f5b02c306764455260","token":"space/2021/05/29/43b375c7221842f5b02c306764455260","category_id":"foods"},"tongue":{"native":"👅","name":"Tongue","url":"https://s1.vika.cn/space/2021/05/29/52600db4bfff4672a586e1608f347f37","token":"space/2021/05/29/52600db4bfff4672a586e1608f347f37","category_id":"people"},"toolbox":{"native":"🧰","name":"Toolbox","url":"https://s1.vika.cn/space/2021/05/29/2c588a7183dc481fad760615483f1106","token":"space/2021/05/29/2c588a7183dc481fad760615483f1106","category_id":"objects"},"tooth":{"native":"🦷","name":"Tooth","url":"https://s1.vika.cn/space/2021/05/29/f21bc97ea0b543b58a25225647a3c31b","token":"space/2021/05/29/f21bc97ea0b543b58a25225647a3c31b","category_id":"people"},"top":{"native":"🔝","name":"Top with Upwards Arrow Above","url":"https://s1.vika.cn/space/2021/05/29/cee8ab5fdb3345a193298a7793b6a37f","token":"space/2021/05/29/cee8ab5fdb3345a193298a7793b6a37f","category_id":"symbols"},"tophat":{"native":"🎩","name":"Top Hat","url":"https://s1.vika.cn/space/2021/05/29/cea33072f7d449c8bf9bb0fd7d160a65","token":"space/2021/05/29/cea33072f7d449c8bf9bb0fd7d160a65","category_id":"objects"},"tornado":{"native":"🌪️","name":"Tornado","url":"https://s1.vika.cn/space/2021/05/29/0a96356459de4b61a9d56d40b28cc22d","token":"space/2021/05/29/0a96356459de4b61a9d56d40b28cc22d","category_id":"places"},"trackball":{"native":"🖲️","name":"Trackball","url":"https://s1.vika.cn/space/2021/05/29/8706f674b8ad459d8f7d579d21e7d87f","token":"space/2021/05/29/8706f674b8ad459d8f7d579d21e7d87f","category_id":"objects"},"tractor":{"native":"🚜","name":"Tractor","url":"https://s1.vika.cn/space/2021/05/29/632cc563efeb4b40a370251e0659826d","token":"space/2021/05/29/632cc563efeb4b40a370251e0659826d","category_id":"places"},"traffic_light":{"native":"🚥","name":"Horizontal Traffic Light","url":"https://s1.vika.cn/space/2021/05/29/a541b7ff39484ca7819319e8fbaea97e","token":"space/2021/05/29/a541b7ff39484ca7819319e8fbaea97e","category_id":"places"},"train":{"native":"🚋","name":"Tram Car","url":"https://s1.vika.cn/space/2021/05/29/e6df54e76b0344e8b6e96c41c8d03ba3","token":"space/2021/05/29/e6df54e76b0344e8b6e96c41c8d03ba3","category_id":"places"},"train2":{"native":"🚆","name":"Train","url":"https://s1.vika.cn/space/2021/05/29/fc305dea531a4e5fab3bae649a26fd13","token":"space/2021/05/29/fc305dea531a4e5fab3bae649a26fd13","category_id":"places"},"tram":{"native":"🚊","name":"Tram","url":"https://s1.vika.cn/space/2021/05/29/16697e5e39ce46daa02a77c9da37f544","token":"space/2021/05/29/16697e5e39ce46daa02a77c9da37f544","category_id":"places"},"triangular_flag_on_post":{"native":"🚩","name":"Triangular Flag on Post","url":"https://s1.vika.cn/space/2021/05/29/d08b2027309f44d3ad60c92666e48822","token":"space/2021/05/29/d08b2027309f44d3ad60c92666e48822","category_id":"flags"},"triangular_ruler":{"native":"📐","name":"Triangular Ruler","url":"https://s1.vika.cn/space/2021/05/29/8ab7bf951b664e9ca5cacf4da2039ca3","token":"space/2021/05/29/8ab7bf951b664e9ca5cacf4da2039ca3","category_id":"objects"},"trident":{"native":"🔱","name":"Trident Emblem","url":"https://s1.vika.cn/space/2021/05/29/c0f74991b6fa47e19b1b7b2534954b0a","token":"space/2021/05/29/c0f74991b6fa47e19b1b7b2534954b0a","category_id":"symbols"},"triumph":{"native":"😤","name":"Face with Look of Triumph","url":"https://s1.vika.cn/space/2021/05/29/700784a65f9f40eab324b83348abe5c1","token":"space/2021/05/29/700784a65f9f40eab324b83348abe5c1","category_id":"people"},"trolleybus":{"native":"🚎","name":"Trolleybus","url":"https://s1.vika.cn/space/2021/05/29/4f4a69d8e1bd42deb62aac3580355e47","token":"space/2021/05/29/4f4a69d8e1bd42deb62aac3580355e47","category_id":"places"},"trophy":{"native":"🏆","name":"Trophy","url":"https://s1.vika.cn/space/2021/05/29/9745778ff7764c9091d0e030b8b94c14","token":"space/2021/05/29/9745778ff7764c9091d0e030b8b94c14","category_id":"activity"},"tropical_drink":{"native":"🍹","name":"Tropical Drink","url":"https://s1.vika.cn/space/2021/05/29/8489b6bc994c4c229e5cc61e5144f185","token":"space/2021/05/29/8489b6bc994c4c229e5cc61e5144f185","category_id":"foods"},"tropical_fish":{"native":"🐠","name":"Tropical Fish","url":"https://s1.vika.cn/space/2021/05/29/e02b6e5134834133a7e1c9070128c870","token":"space/2021/05/29/e02b6e5134834133a7e1c9070128c870","category_id":"nature"},"truck":{"native":"🚚","name":"Delivery Truck","url":"https://s1.vika.cn/space/2021/05/29/ca6abf3c72084017ad2bd60c71851c9c","token":"space/2021/05/29/ca6abf3c72084017ad2bd60c71851c9c","category_id":"places"},"trumpet":{"native":"🎺","name":"Trumpet","url":"https://s1.vika.cn/space/2021/05/29/c47f318e362e4835bb3aeddb2d984446","token":"space/2021/05/29/c47f318e362e4835bb3aeddb2d984446","category_id":"objects"},"tulip":{"native":"🌷","name":"Tulip","url":"https://s1.vika.cn/space/2021/05/29/a815494fc2dd47509dbc4a7bdd156f47","token":"space/2021/05/29/a815494fc2dd47509dbc4a7bdd156f47","category_id":"nature"},"tumbler_glass":{"native":"🥃","name":"Tumbler Glass","url":"https://s1.vika.cn/space/2021/05/29/a7f1ee0b600d43ef9f40807d915d5fba","token":"space/2021/05/29/a7f1ee0b600d43ef9f40807d915d5fba","category_id":"foods"},"turkey":{"native":"🦃","name":"Turkey","url":"https://s1.vika.cn/space/2021/05/29/79b51cf4de494f24800f046592b90693","token":"space/2021/05/29/79b51cf4de494f24800f046592b90693","category_id":"nature"},"turtle":{"native":"🐢","name":"Turtle","url":"https://s1.vika.cn/space/2021/05/29/f859636c8cf94dc6ac16b10c2a43dc16","token":"space/2021/05/29/f859636c8cf94dc6ac16b10c2a43dc16","category_id":"nature"},"tv":{"native":"📺","name":"Television","url":"https://s1.vika.cn/space/2021/05/29/50fd8f4bef1f4c3db964d9366f367f61","token":"space/2021/05/29/50fd8f4bef1f4c3db964d9366f367f61","category_id":"objects"},"twisted_rightwards_arrows":{"native":"🔀","name":"Twisted Rightwards Arrows","url":"https://s1.vika.cn/space/2021/05/29/079a11f827e34c6ba9d35796f1c9a318","token":"space/2021/05/29/079a11f827e34c6ba9d35796f1c9a318","category_id":"symbols"},"two":{"native":"2️⃣","name":"Keycap 2","url":"https://s1.vika.cn/space/2021/05/29/430a0eb65c7c42abae18c2a624d6819c","token":"space/2021/05/29/430a0eb65c7c42abae18c2a624d6819c","category_id":"symbols"},"two_hearts":{"native":"💕","name":"Two Hearts","url":"https://s1.vika.cn/space/2021/05/29/a6560e7785bf474c99671501f9bcbd88","token":"space/2021/05/29/a6560e7785bf474c99671501f9bcbd88","category_id":"people"},"two_men_holding_hands":{"native":"👬","name":"Two Men Holding Hands","url":"https://s1.vika.cn/space/2021/05/29/f01ca8e1da64496e82379c3a331c49b6","token":"space/2021/05/29/f01ca8e1da64496e82379c3a331c49b6","category_id":"people"},"two_women_holding_hands":{"native":"👭","name":"Two Women Holding Hands","url":"https://s1.vika.cn/space/2021/05/29/4909aa7d061c4f5b922f12a7362d4efd","token":"space/2021/05/29/4909aa7d061c4f5b922f12a7362d4efd","category_id":"people"},"u5272":{"native":"🈹","name":"Squared Cjk Unified Ideograph-5272","url":"https://s1.vika.cn/space/2021/05/29/953a0af7fe014c6baab07bfdb0a32f75","token":"space/2021/05/29/953a0af7fe014c6baab07bfdb0a32f75","category_id":"symbols"},"u5408":{"native":"🈴","name":"Squared Cjk Unified Ideograph-5408","url":"https://s1.vika.cn/space/2021/05/29/ad791f64c16b475bb64778994d9ea335","token":"space/2021/05/29/ad791f64c16b475bb64778994d9ea335","category_id":"symbols"},"u55b6":{"native":"🈺","name":"Squared Cjk Unified Ideograph-55b6","url":"https://s1.vika.cn/space/2021/05/29/2be993f5df7542e989d79547ff8c83e3","token":"space/2021/05/29/2be993f5df7542e989d79547ff8c83e3","category_id":"symbols"},"u6307":{"native":"🈯","name":"Squared Cjk Unified Ideograph-6307","url":"https://s1.vika.cn/space/2021/05/29/fbdafa466ff745309ee80f00ed05210d","token":"space/2021/05/29/fbdafa466ff745309ee80f00ed05210d","category_id":"symbols"},"u6708":{"native":"🈷️","name":"Squared Cjk Unified Ideograph-6708","url":"https://s1.vika.cn/space/2021/05/29/add418072bb84abc9cd35ef48e35cd16","token":"space/2021/05/29/add418072bb84abc9cd35ef48e35cd16","category_id":"symbols"},"u6709":{"native":"🈶","name":"Squared Cjk Unified Ideograph-6709","url":"https://s1.vika.cn/space/2021/05/29/828abe7402cc47d2a6ab0d4bc287d109","token":"space/2021/05/29/828abe7402cc47d2a6ab0d4bc287d109","category_id":"symbols"},"u6e80":{"native":"🈵","name":"Squared Cjk Unified Ideograph-6e80","url":"https://s1.vika.cn/space/2021/05/29/a12d718f40bd4ba38f2d793f5f9d9f74","token":"space/2021/05/29/a12d718f40bd4ba38f2d793f5f9d9f74","category_id":"symbols"},"u7121":{"native":"🈚","name":"Squared Cjk Unified Ideograph-7121","url":"https://s1.vika.cn/space/2021/05/29/853e73a038b54a26bd183516b5596b77","token":"space/2021/05/29/853e73a038b54a26bd183516b5596b77","category_id":"symbols"},"u7533":{"native":"🈸","name":"Squared Cjk Unified Ideograph-7533","url":"https://s1.vika.cn/space/2021/05/29/a54d6a0b38774b3e9fd23957acc5cda3","token":"space/2021/05/29/a54d6a0b38774b3e9fd23957acc5cda3","category_id":"symbols"},"u7981":{"native":"🈲","name":"Squared Cjk Unified Ideograph-7981","url":"https://s1.vika.cn/space/2021/05/29/ce6ed3e2a6e34d74b3f694bba1df43e3","token":"space/2021/05/29/ce6ed3e2a6e34d74b3f694bba1df43e3","category_id":"symbols"},"u7a7a":{"native":"🈳","name":"Squared Cjk Unified Ideograph-7a7a","url":"https://s1.vika.cn/space/2021/05/29/d8b4e19e21be4457a06d9593ba0bdd49","token":"space/2021/05/29/d8b4e19e21be4457a06d9593ba0bdd49","category_id":"symbols"},"umbrella":{"native":"☂️","name":"Umbrella","url":"https://s1.vika.cn/space/2021/05/29/18d2ee5694a84ef8bdec4f0513144d46","token":"space/2021/05/29/18d2ee5694a84ef8bdec4f0513144d46","category_id":"places"},"umbrella_on_ground":{"native":"⛱️","name":"Umbrella on Ground","url":"https://s1.vika.cn/space/2021/05/29/77b8ee6b79134e07b7265f512d658b0f","token":"space/2021/05/29/77b8ee6b79134e07b7265f512d658b0f","category_id":"places"},"umbrella_with_rain_drops":{"native":"☔","name":"Umbrella with Rain Drops","url":"https://s1.vika.cn/space/2021/05/29/684a5e347a854e1b93b8407041c12ba0","token":"space/2021/05/29/684a5e347a854e1b93b8407041c12ba0","category_id":"places"},"unamused":{"native":"😒","name":"Unamused Face","url":"https://s1.vika.cn/space/2021/05/29/9eea68d0e6824dadbc16d10582885c5f","token":"space/2021/05/29/9eea68d0e6824dadbc16d10582885c5f","category_id":"people"},"underage":{"native":"🔞","name":"No One Under Eighteen Symbol","url":"https://s1.vika.cn/space/2021/05/29/61a96b1f0c8c433aa1a858081361c550","token":"space/2021/05/29/61a96b1f0c8c433aa1a858081361c550","category_id":"symbols"},"unicorn_face":{"native":"🦄","name":"Unicorn Face","url":"https://s1.vika.cn/space/2021/05/29/f84b8f5fe8694daa97dc49b915e40f2f","token":"space/2021/05/29/f84b8f5fe8694daa97dc49b915e40f2f","category_id":"nature"},"unlock":{"native":"🔓","name":"Open Lock","url":"https://s1.vika.cn/space/2021/05/29/d61e621dcf8e473ab8d15cbcf4140faa","token":"space/2021/05/29/d61e621dcf8e473ab8d15cbcf4140faa","category_id":"objects"},"up":{"native":"🆙","name":"Squared Up with Exclamation Mark","url":"https://s1.vika.cn/space/2021/05/29/67733f7d43254b4bb184fee0afd2781d","token":"space/2021/05/29/67733f7d43254b4bb184fee0afd2781d","category_id":"symbols"},"upside_down_face":{"native":"🙃","name":"Upside-Down Face","url":"https://s1.vika.cn/space/2021/05/29/ff6d8092fc5e4f3f9cf80a91f260d238","token":"space/2021/05/29/ff6d8092fc5e4f3f9cf80a91f260d238","category_id":"people"},"us":{"native":"🇺🇸","name":"United States Flag","url":"https://s1.vika.cn/space/2021/05/29/5d8b5480e12e41798603548970fff2bf","token":"space/2021/05/29/5d8b5480e12e41798603548970fff2bf","category_id":"flags"},"v":{"native":"✌️","name":"Victory Hand","url":"https://s1.vika.cn/space/2021/05/29/b8e3f192c7a741da8fc6fd1b3c623493","token":"space/2021/05/29/b8e3f192c7a741da8fc6fd1b3c623493","category_id":"people"},"vampire":{"native":"🧛","name":"Vampire","url":"https://s1.vika.cn/space/2021/05/29/57cbebd62a194f64a23d172219cdb93c","token":"space/2021/05/29/57cbebd62a194f64a23d172219cdb93c","category_id":"people"},"vertical_traffic_light":{"native":"🚦","name":"Vertical Traffic Light","url":"https://s1.vika.cn/space/2021/05/29/1e3c63212a494cc7a0bde062c22978db","token":"space/2021/05/29/1e3c63212a494cc7a0bde062c22978db","category_id":"places"},"vhs":{"native":"📼","name":"Videocassette","url":"https://s1.vika.cn/space/2021/05/29/de080d9ac0584777a461ef30d8b098fc","token":"space/2021/05/29/de080d9ac0584777a461ef30d8b098fc","category_id":"objects"},"vibration_mode":{"native":"📳","name":"Vibration Mode","url":"https://s1.vika.cn/space/2021/05/29/3455ecec29b345f0942f8d02849b2fa1","token":"space/2021/05/29/3455ecec29b345f0942f8d02849b2fa1","category_id":"symbols"},"video_camera":{"native":"📹","name":"Video Camera","url":"https://s1.vika.cn/space/2021/05/29/f598b4f38b1a4c5893f72059ae439ca1","token":"space/2021/05/29/f598b4f38b1a4c5893f72059ae439ca1","category_id":"objects"},"video_game":{"native":"🎮","name":"Video Game","url":"https://s1.vika.cn/space/2021/05/29/42a3989576314386877d025493b7abf8","token":"space/2021/05/29/42a3989576314386877d025493b7abf8","category_id":"activity"},"violin":{"native":"🎻","name":"Violin","url":"https://s1.vika.cn/space/2021/05/29/20dc3ec4d10a4d6ba580f8780af59cf4","token":"space/2021/05/29/20dc3ec4d10a4d6ba580f8780af59cf4","category_id":"objects"},"virgo":{"native":"♍","name":"Virgo","url":"https://s1.vika.cn/space/2021/05/29/ddd5bab850384fd399654de77ef15125","token":"space/2021/05/29/ddd5bab850384fd399654de77ef15125","category_id":"symbols"},"volcano":{"native":"🌋","name":"Volcano","url":"https://s1.vika.cn/space/2021/05/29/438d30a4918346ea8bf6ab583581fb88","token":"space/2021/05/29/438d30a4918346ea8bf6ab583581fb88","category_id":"places"},"volleyball":{"native":"🏐","name":"Volleyball","url":"https://s1.vika.cn/space/2021/05/29/57bc8d3cccac44428fbab1df4223db07","token":"space/2021/05/29/57bc8d3cccac44428fbab1df4223db07","category_id":"activity"},"vs":{"native":"🆚","name":"Squared Vs","url":"https://s1.vika.cn/space/2021/05/29/fc2b73b129254ddba011501a0cc19cf9","token":"space/2021/05/29/fc2b73b129254ddba011501a0cc19cf9","category_id":"symbols"},"waffle":{"native":"🧇","name":"Waffle","url":"https://s1.vika.cn/space/2021/05/29/2365bfaa004e4443a0c751a8318a7bdb","token":"space/2021/05/29/2365bfaa004e4443a0c751a8318a7bdb","category_id":"foods"},"walking":{"native":"🚶","name":"Pedestrian","url":"https://s1.vika.cn/space/2021/05/29/db921a3846744efb8efac3a02f6138d0","token":"space/2021/05/29/db921a3846744efb8efac3a02f6138d0","category_id":"people"},"waning_crescent_moon":{"native":"🌘","name":"Waning Crescent Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/2f57f2e8218147be99214312a9c3bb3c","token":"space/2021/05/29/2f57f2e8218147be99214312a9c3bb3c","category_id":"places"},"waning_gibbous_moon":{"native":"🌖","name":"Waning Gibbous Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/7ae68a8ce9454325b2a7c292d3ac6e1f","token":"space/2021/05/29/7ae68a8ce9454325b2a7c292d3ac6e1f","category_id":"places"},"warning":{"native":"⚠️","name":"Warning Sign","url":"https://s1.vika.cn/space/2021/05/29/9d52ff95a755434f98df7bd83cccc8c7","token":"space/2021/05/29/9d52ff95a755434f98df7bd83cccc8c7","category_id":"symbols"},"wastebasket":{"native":"🗑️","name":"Wastebasket","url":"https://s1.vika.cn/space/2021/05/29/59327fbcbbc348d3bbd0591bf4112ed8","token":"space/2021/05/29/59327fbcbbc348d3bbd0591bf4112ed8","category_id":"objects"},"watch":{"native":"⌚","name":"Watch","url":"https://s1.vika.cn/space/2021/05/29/42f83ccfca7d4f85b64758eacb405b1d","token":"space/2021/05/29/42f83ccfca7d4f85b64758eacb405b1d","category_id":"places"},"water_buffalo":{"native":"🐃","name":"Water Buffalo","url":"https://s1.vika.cn/space/2021/05/29/be588ec0472b46a89a8fcb0dbd8a0755","token":"space/2021/05/29/be588ec0472b46a89a8fcb0dbd8a0755","category_id":"nature"},"water_polo":{"native":"🤽","name":"Water Polo","url":"https://s1.vika.cn/space/2021/05/29/59dac2b072604a0ba04910a714032836","token":"space/2021/05/29/59dac2b072604a0ba04910a714032836","category_id":"people"},"watermelon":{"native":"🍉","name":"Watermelon","url":"https://s1.vika.cn/space/2021/05/29/0920b657f68b41f1b1bf47f57540289b","token":"space/2021/05/29/0920b657f68b41f1b1bf47f57540289b","category_id":"foods"},"wave":{"native":"👋","name":"Waving Hand Sign","url":"https://s1.vika.cn/space/2021/05/29/d91276cf249244219f34df32419f2bb7","token":"space/2021/05/29/d91276cf249244219f34df32419f2bb7","category_id":"people"},"waving_black_flag":{"native":"🏴","name":"Waving Black Flag","url":"https://s1.vika.cn/space/2021/05/29/5e5c9d10fe284c5cbf552201fcf70132","token":"space/2021/05/29/5e5c9d10fe284c5cbf552201fcf70132","category_id":"flags"},"waving_white_flag":{"native":"🏳️","name":"Waving White Flag","url":"https://s1.vika.cn/space/2021/05/29/4081eb58cf3043e3929a98af1c0188b5","token":"space/2021/05/29/4081eb58cf3043e3929a98af1c0188b5","category_id":"flags"},"wavy_dash":{"native":"〰️","name":"Wavy Dash","url":"https://s1.vika.cn/space/2021/05/29/747d2272392141deb9bf70b657a84ca6","token":"space/2021/05/29/747d2272392141deb9bf70b657a84ca6","category_id":"symbols"},"waxing_crescent_moon":{"native":"🌒","name":"Waxing Crescent Moon Symbol","url":"https://s1.vika.cn/space/2021/05/29/4c4913bf7e4d42bba9af8d31f33970eb","token":"space/2021/05/29/4c4913bf7e4d42bba9af8d31f33970eb","category_id":"places"},"wc":{"native":"🚾","name":"Water Closet","url":"https://s1.vika.cn/space/2021/05/29/39f377f09eda40f3a628e227eaf81e69","token":"space/2021/05/29/39f377f09eda40f3a628e227eaf81e69","category_id":"symbols"},"weary":{"native":"😩","name":"Weary Face","url":"https://s1.vika.cn/space/2021/05/29/13d83a7194544a62bb621d2c6fa85f94","token":"space/2021/05/29/13d83a7194544a62bb621d2c6fa85f94","category_id":"people"},"wedding":{"native":"💒","name":"Wedding","url":"https://s1.vika.cn/space/2021/05/29/f5359d32c46b44e7ad5b1aaa3a555581","token":"space/2021/05/29/f5359d32c46b44e7ad5b1aaa3a555581","category_id":"places"},"weight_lifter":{"native":"🏋️","name":"Weight Lifter","url":"https://s1.vika.cn/space/2021/05/29/25b13dfe1ec7411d8eaad3f49a3f14f6","token":"space/2021/05/29/25b13dfe1ec7411d8eaad3f49a3f14f6","category_id":"people"},"whale":{"native":"🐳","name":"Spouting Whale","url":"https://s1.vika.cn/space/2021/05/29/71026f7641184d5a8a6c795a67402ca4","token":"space/2021/05/29/71026f7641184d5a8a6c795a67402ca4","category_id":"nature"},"whale2":{"native":"🐋","name":"Whale","url":"https://s1.vika.cn/space/2021/05/29/c7bfd27f248744b88a95c02a8c4e1fe2","token":"space/2021/05/29/c7bfd27f248744b88a95c02a8c4e1fe2","category_id":"nature"},"wheel_of_dharma":{"native":"☸️","name":"Wheel of Dharma","url":"https://s1.vika.cn/space/2021/05/29/8921c1a8cdc142b7a9b7e023862955e6","token":"space/2021/05/29/8921c1a8cdc142b7a9b7e023862955e6","category_id":"symbols"},"wheelchair":{"native":"♿","name":"Wheelchair Symbol","url":"https://s1.vika.cn/space/2021/05/29/42154d846fc04a29b9a17ada5ff93ef7","token":"space/2021/05/29/42154d846fc04a29b9a17ada5ff93ef7","category_id":"symbols"},"white_check_mark":{"native":"✅","name":"White Heavy Check Mark","url":"https://s1.vika.cn/space/2021/05/29/8e2c4d9380974a25876f383e1e6776f4","token":"space/2021/05/29/8e2c4d9380974a25876f383e1e6776f4","category_id":"symbols"},"white_circle":{"native":"⚪","name":"Medium White Circle","url":"https://s1.vika.cn/space/2021/05/29/5e533934f50e497dbef367b33a538164","token":"space/2021/05/29/5e533934f50e497dbef367b33a538164","category_id":"symbols"},"white_flower":{"native":"💮","name":"White Flower","url":"https://s1.vika.cn/space/2021/05/29/31c2a22066f74b84b99dc488493dc2c2","token":"space/2021/05/29/31c2a22066f74b84b99dc488493dc2c2","category_id":"nature"},"white_frowning_face":{"native":"☹️","name":"White Frowning Face","url":"https://s1.vika.cn/space/2021/05/29/30bad268146f4adc981446fd7825559f","token":"space/2021/05/29/30bad268146f4adc981446fd7825559f","category_id":"people"},"white_haired_man":{"native":"👨‍🦳","name":"White Haired Man","url":"https://s1.vika.cn/space/2021/05/29/ea62e7d6fe5e4589ba0df22ff422135d","token":"space/2021/05/29/ea62e7d6fe5e4589ba0df22ff422135d","category_id":"people"},"white_haired_person":{"native":"🧑‍🦳","name":"White Haired Person","url":"https://s1.vika.cn/space/2021/05/29/d76c94078fc44d5d8cd6c82b5757b1e6","token":"space/2021/05/29/d76c94078fc44d5d8cd6c82b5757b1e6","category_id":"people"},"white_haired_woman":{"native":"👩‍🦳","name":"White Haired Woman","url":"https://s1.vika.cn/space/2021/05/29/88d915b5c935467b9873985f0e33e353","token":"space/2021/05/29/88d915b5c935467b9873985f0e33e353","category_id":"people"},"white_heart":{"native":"🤍","name":"White Heart","url":"https://s1.vika.cn/space/2021/05/29/b65976a5d2954e1e96b6a4277be026ba","token":"space/2021/05/29/b65976a5d2954e1e96b6a4277be026ba","category_id":"people"},"white_large_square":{"native":"⬜","name":"White Large Square","url":"https://s1.vika.cn/space/2021/05/29/f2b9cd26c6234f6f8272de7512f3cb2c","token":"space/2021/05/29/f2b9cd26c6234f6f8272de7512f3cb2c","category_id":"symbols"},"white_medium_small_square":{"native":"◽","name":"White Medium Small Square","url":"https://s1.vika.cn/space/2021/05/29/b7d78e3f36cf4ad3ad7b2e1a51c14524","token":"space/2021/05/29/b7d78e3f36cf4ad3ad7b2e1a51c14524","category_id":"symbols"},"white_medium_square":{"native":"◻️","name":"White Medium Square","url":"https://s1.vika.cn/space/2021/05/29/5c254d0b0bee4878a069ff4367721277","token":"space/2021/05/29/5c254d0b0bee4878a069ff4367721277","category_id":"symbols"},"white_small_square":{"native":"▫️","name":"White Small Square","url":"https://s1.vika.cn/space/2021/05/29/d7077084628b4e58a014d1def6ae5815","token":"space/2021/05/29/d7077084628b4e58a014d1def6ae5815","category_id":"symbols"},"white_square_button":{"native":"🔳","name":"White Square Button","url":"https://s1.vika.cn/space/2021/05/29/3567c9949df4470c8e277da362d6a9ef","token":"space/2021/05/29/3567c9949df4470c8e277da362d6a9ef","category_id":"symbols"},"wilted_flower":{"native":"🥀","name":"Wilted Flower","url":"https://s1.vika.cn/space/2021/05/29/0dcfc1a923aa40928a396401e4991701","token":"space/2021/05/29/0dcfc1a923aa40928a396401e4991701","category_id":"nature"},"wind_blowing_face":{"native":"🌬️","name":"Wind Blowing Face","url":"https://s1.vika.cn/space/2021/05/29/0a2d7d2263494c599f892256b1f5730e","token":"space/2021/05/29/0a2d7d2263494c599f892256b1f5730e","category_id":"places"},"wind_chime":{"native":"🎐","name":"Wind Chime","url":"https://s1.vika.cn/space/2021/05/29/1221fbdc223f463d80c62393d0920d6f","token":"space/2021/05/29/1221fbdc223f463d80c62393d0920d6f","category_id":"activity"},"wine_glass":{"native":"🍷","name":"Wine Glass","url":"https://s1.vika.cn/space/2021/05/29/7eb307eabcf24bd79965a04df63ea081","token":"space/2021/05/29/7eb307eabcf24bd79965a04df63ea081","category_id":"foods"},"wink":{"native":"😉","name":"Winking Face","url":"https://s1.vika.cn/space/2021/05/29/c33e132382294e8e85d9de8bc29cb5e9","token":"space/2021/05/29/c33e132382294e8e85d9de8bc29cb5e9","category_id":"people"},"wolf":{"native":"🐺","name":"Wolf Face","url":"https://s1.vika.cn/space/2021/05/29/219f54a4f2614380a201de2c6dfce7c1","token":"space/2021/05/29/219f54a4f2614380a201de2c6dfce7c1","category_id":"nature"},"woman":{"native":"👩","name":"Woman","url":"https://s1.vika.cn/space/2021/05/29/c09c54701bb049498201fab7ffd0eea3","token":"space/2021/05/29/c09c54701bb049498201fab7ffd0eea3","category_id":"people"},"woman_climbing":{"native":"🧗‍♀️","name":"Woman Climbing","url":"https://s1.vika.cn/space/2021/05/29/497596f7ada944f5a76e0717dc3a077c","token":"space/2021/05/29/497596f7ada944f5a76e0717dc3a077c","category_id":"people"},"woman_in_lotus_position":{"native":"🧘‍♀️","name":"Woman in Lotus Position","url":"https://s1.vika.cn/space/2021/05/29/757e719ebee94f13a7d05cb7b2c0d920","token":"space/2021/05/29/757e719ebee94f13a7d05cb7b2c0d920","category_id":"people"},"woman_in_manual_wheelchair":{"native":"👩‍🦽","name":"Woman in Manual Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/bc7a904e89fb4a758aadb0da2b5a9358","token":"space/2021/05/29/bc7a904e89fb4a758aadb0da2b5a9358","category_id":"people"},"woman_in_motorized_wheelchair":{"native":"👩‍🦼","name":"Woman in Motorized Wheelchair","url":"https://s1.vika.cn/space/2021/05/29/ead441c1c7d6497b9b47005ff7feea02","token":"space/2021/05/29/ead441c1c7d6497b9b47005ff7feea02","category_id":"people"},"woman_in_steamy_room":{"native":"🧖‍♀️","name":"Woman in Steamy Room","url":"https://s1.vika.cn/space/2021/05/29/bededc63b90348fa85f1f3251238d013","token":"space/2021/05/29/bededc63b90348fa85f1f3251238d013","category_id":"people"},"woman_kneeling":{"native":"🧎‍♀️","name":"Woman Kneeling","url":"https://s1.vika.cn/space/2021/05/29/db2bfb65f2024aea8f39dc197616de5b","token":"space/2021/05/29/db2bfb65f2024aea8f39dc197616de5b","category_id":"people"},"woman_standing":{"native":"🧍‍♀️","name":"Woman Standing","url":"https://s1.vika.cn/space/2021/05/29/a1cc4bbe8849490e9c32787827834505","token":"space/2021/05/29/a1cc4bbe8849490e9c32787827834505","category_id":"people"},"woman_with_probing_cane":{"native":"👩‍🦯","name":"Woman with Probing Cane","url":"https://s1.vika.cn/space/2021/05/29/a32b2b92516846acb961a230589824c4","token":"space/2021/05/29/a32b2b92516846acb961a230589824c4","category_id":"people"},"woman-biking":{"native":"🚴‍♀️","name":"Woman Biking","url":"https://s1.vika.cn/space/2021/05/29/2a1f7ac424d745618496c42ea274ae49","token":"space/2021/05/29/2a1f7ac424d745618496c42ea274ae49","category_id":"people"},"woman-bouncing-ball":{"native":"⛹️‍♀️","name":"Woman Bouncing Ball","url":"https://s1.vika.cn/space/2021/05/29/3f3845d2b44141f68af075665694c6c3","token":"space/2021/05/29/3f3845d2b44141f68af075665694c6c3","category_id":"people"},"woman-bowing":{"native":"🙇‍♀️","name":"Woman Bowing","url":"https://s1.vika.cn/space/2021/05/29/0d8cb46267274d6396473ef1acf11320","token":"space/2021/05/29/0d8cb46267274d6396473ef1acf11320","category_id":"people"},"woman-boy":{"native":"👩‍👦","name":"Woman Boy","url":"https://s1.vika.cn/space/2021/05/29/00f7d0e72f984416b6f21979ad016d5d","token":"space/2021/05/29/00f7d0e72f984416b6f21979ad016d5d","category_id":"people"},"woman-boy-boy":{"native":"👩‍👦‍👦","name":"Woman Boy Boy","url":"https://s1.vika.cn/space/2021/05/29/70b66d68d9ef4bb6ae52f9b748563c05","token":"space/2021/05/29/70b66d68d9ef4bb6ae52f9b748563c05","category_id":"people"},"woman-cartwheeling":{"native":"🤸‍♀️","name":"Woman Cartwheeling","url":"https://s1.vika.cn/space/2021/05/29/04e6c0f0a5ba4df1bff67c6770cd6632","token":"space/2021/05/29/04e6c0f0a5ba4df1bff67c6770cd6632","category_id":"people"},"woman-facepalming":{"native":"🤦‍♀️","name":"Woman Facepalming","url":"https://s1.vika.cn/space/2021/05/29/3aa5e7581293497bb161986d4005b06a","token":"space/2021/05/29/3aa5e7581293497bb161986d4005b06a","category_id":"people"},"woman-frowning":{"native":"🙍‍♀️","name":"Woman Frowning","url":"https://s1.vika.cn/space/2021/05/29/029f1816fa984c4c8e7bd1823e75911a","token":"space/2021/05/29/029f1816fa984c4c8e7bd1823e75911a","category_id":"people"},"woman-gesturing-no":{"native":"🙅‍♀️","name":"Woman Gesturing No","url":"https://s1.vika.cn/space/2021/05/29/3b98ad13251e4fb09e6aef69a03017d9","token":"space/2021/05/29/3b98ad13251e4fb09e6aef69a03017d9","category_id":"people"},"woman-gesturing-ok":{"native":"🙆‍♀️","name":"Woman Gesturing Ok","url":"https://s1.vika.cn/space/2021/05/29/e9c991f0e2574704b09e75e14599e3b1","token":"space/2021/05/29/e9c991f0e2574704b09e75e14599e3b1","category_id":"people"},"woman-getting-haircut":{"native":"💇‍♀️","name":"Woman Getting Haircut","url":"https://s1.vika.cn/space/2021/05/29/a968b84095534097a381d37680d11dd1","token":"space/2021/05/29/a968b84095534097a381d37680d11dd1","category_id":"people"},"woman-getting-massage":{"native":"💆‍♀️","name":"Woman Getting Massage","url":"https://s1.vika.cn/space/2021/05/29/525aedb9892746579f79cd046cf9ce63","token":"space/2021/05/29/525aedb9892746579f79cd046cf9ce63","category_id":"people"},"woman-girl":{"native":"👩‍👧","name":"Woman Girl","url":"https://s1.vika.cn/space/2021/05/29/5a93e60e2bf841259ae005254e70894e","token":"space/2021/05/29/5a93e60e2bf841259ae005254e70894e","category_id":"people"},"woman-girl-boy":{"native":"👩‍👧‍👦","name":"Woman Girl Boy","url":"https://s1.vika.cn/space/2021/05/29/72b6b099589742958aa71aa10c01d607","token":"space/2021/05/29/72b6b099589742958aa71aa10c01d607","category_id":"people"},"woman-girl-girl":{"native":"👩‍👧‍👧","name":"Woman Girl Girl","url":"https://s1.vika.cn/space/2021/05/29/cd14d8fc332349ecba817664359fa5b9","token":"space/2021/05/29/cd14d8fc332349ecba817664359fa5b9","category_id":"people"},"woman-golfing":{"native":"🏌️‍♀️","name":"Woman Golfing","url":"https://s1.vika.cn/space/2021/05/29/0e023be09570444d8f34c174df8be7ca","token":"space/2021/05/29/0e023be09570444d8f34c174df8be7ca","category_id":"people"},"woman-heart-man":{"native":"👩‍❤️‍👨","name":"Woman Heart Man","url":"https://s1.vika.cn/space/2021/05/29/98d9e427efdd421891a331987e1e0231","token":"space/2021/05/29/98d9e427efdd421891a331987e1e0231","category_id":"people"},"woman-heart-woman":{"native":"👩‍❤️‍👩","name":"Woman Heart Woman","url":"https://s1.vika.cn/space/2021/05/29/6d4101eec144426ab9c097fd5f9d08fe","token":"space/2021/05/29/6d4101eec144426ab9c097fd5f9d08fe","category_id":"people"},"woman-juggling":{"native":"🤹‍♀️","name":"Woman Juggling","url":"https://s1.vika.cn/space/2021/05/29/d4e8f554844b408499942fc773b51fb4","token":"space/2021/05/29/d4e8f554844b408499942fc773b51fb4","category_id":"people"},"woman-kiss-man":{"native":"👩‍❤️‍💋‍👨","name":"Woman Kiss Man","url":"https://s1.vika.cn/space/2021/05/29/ee2f9e9849474b50bd037a5b36ff98ec","token":"space/2021/05/29/ee2f9e9849474b50bd037a5b36ff98ec","category_id":"people"},"woman-kiss-woman":{"native":"👩‍❤️‍💋‍👩","name":"Woman Kiss Woman","url":"https://s1.vika.cn/space/2021/05/29/9fefe8f0a39d401d96685e819c82fe5d","token":"space/2021/05/29/9fefe8f0a39d401d96685e819c82fe5d","category_id":"people"},"woman-lifting-weights":{"native":"🏋️‍♀️","name":"Woman Lifting Weights","url":"https://s1.vika.cn/space/2021/05/29/2252ac3441724acda8f013c990736985","token":"space/2021/05/29/2252ac3441724acda8f013c990736985","category_id":"people"},"woman-mountain-biking":{"native":"🚵‍♀️","name":"Woman Mountain Biking","url":"https://s1.vika.cn/space/2021/05/29/32920f6b957042ea8e90284a5dd51560","token":"space/2021/05/29/32920f6b957042ea8e90284a5dd51560","category_id":"people"},"woman-playing-handball":{"native":"🤾‍♀️","name":"Woman Playing Handball","url":"https://s1.vika.cn/space/2021/05/29/74cf3be1738d42fbae34afd5461e9153","token":"space/2021/05/29/74cf3be1738d42fbae34afd5461e9153","category_id":"people"},"woman-playing-water-polo":{"native":"🤽‍♀️","name":"Woman Playing Water Polo","url":"https://s1.vika.cn/space/2021/05/29/38cf372ea74f48cdb01f22d6c5e7f3de","token":"space/2021/05/29/38cf372ea74f48cdb01f22d6c5e7f3de","category_id":"people"},"woman-pouting":{"native":"🙎‍♀️","name":"Woman Pouting","url":"https://s1.vika.cn/space/2021/05/29/72a522d4f2ee4984b05d945a2f274bb3","token":"space/2021/05/29/72a522d4f2ee4984b05d945a2f274bb3","category_id":"people"},"woman-raising-hand":{"native":"🙋‍♀️","name":"Woman Raising Hand","url":"https://s1.vika.cn/space/2021/05/29/16bf68935b5042fd83671251d984bcbd","token":"space/2021/05/29/16bf68935b5042fd83671251d984bcbd","category_id":"people"},"woman-rowing-boat":{"native":"🚣‍♀️","name":"Woman Rowing Boat","url":"https://s1.vika.cn/space/2021/05/29/34364e7fa65545f39791f58157a5bb2f","token":"space/2021/05/29/34364e7fa65545f39791f58157a5bb2f","category_id":"people"},"woman-running":{"native":"🏃‍♀️","name":"Woman Running","url":"https://s1.vika.cn/space/2021/05/29/09ef327e0764442f9e74f30d4154a9d0","token":"space/2021/05/29/09ef327e0764442f9e74f30d4154a9d0","category_id":"people"},"woman-shrugging":{"native":"🤷‍♀️","name":"Woman Shrugging","url":"https://s1.vika.cn/space/2021/05/29/d8f9cfc40d9b4c24aeff308abaf59f0e","token":"space/2021/05/29/d8f9cfc40d9b4c24aeff308abaf59f0e","category_id":"people"},"woman-surfing":{"native":"🏄‍♀️","name":"Woman Surfing","url":"https://s1.vika.cn/space/2021/05/29/0d0cd7949da542a1b2523499fcb568fb","token":"space/2021/05/29/0d0cd7949da542a1b2523499fcb568fb","category_id":"people"},"woman-swimming":{"native":"🏊‍♀️","name":"Woman Swimming","url":"https://s1.vika.cn/space/2021/05/29/7058fee543bf4287abb5641a9f4d8067","token":"space/2021/05/29/7058fee543bf4287abb5641a9f4d8067","category_id":"people"},"woman-tipping-hand":{"native":"💁‍♀️","name":"Woman Tipping Hand","url":"https://s1.vika.cn/space/2021/05/29/dca8eb7faab149bc89788ce76a481839","token":"space/2021/05/29/dca8eb7faab149bc89788ce76a481839","category_id":"people"},"woman-walking":{"native":"🚶‍♀️","name":"Woman Walking","url":"https://s1.vika.cn/space/2021/05/29/aa5f0025979e4ae6b90fa80e540ed646","token":"space/2021/05/29/aa5f0025979e4ae6b90fa80e540ed646","category_id":"people"},"woman-wearing-turban":{"native":"👳‍♀️","name":"Woman Wearing Turban","url":"https://s1.vika.cn/space/2021/05/29/1612574fa4f648d28c606c1db521b5fb","token":"space/2021/05/29/1612574fa4f648d28c606c1db521b5fb","category_id":"people"},"woman-with-bunny-ears-partying":{"native":"👯‍♀️","name":"Woman with Bunny Ears Partying","url":"https://s1.vika.cn/space/2021/05/29/58f758f281d340ee8bf53bff0fba1edc","token":"space/2021/05/29/58f758f281d340ee8bf53bff0fba1edc","category_id":"people"},"woman-woman-boy":{"native":"👩‍👩‍👦","name":"Woman Woman Boy","url":"https://s1.vika.cn/space/2021/05/29/a2fd622a0c4d4cb28440f244bb69a9a8","token":"space/2021/05/29/a2fd622a0c4d4cb28440f244bb69a9a8","category_id":"people"},"woman-woman-boy-boy":{"native":"👩‍👩‍👦‍👦","name":"Woman Woman Boy Boy","url":"https://s1.vika.cn/space/2021/05/29/3c849ec5cdd34b1a9bbdd235540b27e8","token":"space/2021/05/29/3c849ec5cdd34b1a9bbdd235540b27e8","category_id":"people"},"woman-woman-girl":{"native":"👩‍👩‍👧","name":"Woman Woman Girl","url":"https://s1.vika.cn/space/2021/05/29/c3b3a14e6eb74dc4a99bcb96a41deabb","token":"space/2021/05/29/c3b3a14e6eb74dc4a99bcb96a41deabb","category_id":"people"},"woman-woman-girl-boy":{"native":"👩‍👩‍👧‍👦","name":"Woman Woman Girl Boy","url":"https://s1.vika.cn/space/2021/05/29/6dd9d924d7f141a0816c7e6289058315","token":"space/2021/05/29/6dd9d924d7f141a0816c7e6289058315","category_id":"people"},"woman-woman-girl-girl":{"native":"👩‍👩‍👧‍👧","name":"Woman Woman Girl Girl","url":"https://s1.vika.cn/space/2021/05/29/9148009a685f4ab39b49478959075dc2","token":"space/2021/05/29/9148009a685f4ab39b49478959075dc2","category_id":"people"},"woman-wrestling":{"native":"🤼‍♀️","name":"Woman Wrestling","url":"https://s1.vika.cn/space/2021/05/29/0b92c48e1c9e437f94dd7de340541c43","token":"space/2021/05/29/0b92c48e1c9e437f94dd7de340541c43","category_id":"people"},"womans_clothes":{"native":"👚","name":"Womans Clothes","url":"https://s1.vika.cn/space/2021/05/29/739c6cf756504bc49ed4a7c4c5b3afe4","token":"space/2021/05/29/739c6cf756504bc49ed4a7c4c5b3afe4","category_id":"objects"},"womans_flat_shoe":{"native":"🥿","name":"Flat Shoe","url":"https://s1.vika.cn/space/2021/05/29/9645625563084638bc495dfc84256f69","token":"space/2021/05/29/9645625563084638bc495dfc84256f69","category_id":"objects"},"womans_hat":{"native":"👒","name":"Womans Hat","url":"https://s1.vika.cn/space/2021/05/29/5450e9cb4aa74618b4c381094c2b7742","token":"space/2021/05/29/5450e9cb4aa74618b4c381094c2b7742","category_id":"objects"},"womens":{"native":"🚺","name":"Womens Symbol","url":"https://s1.vika.cn/space/2021/05/29/c8e0f79f21d7422891501e0ae52afbea","token":"space/2021/05/29/c8e0f79f21d7422891501e0ae52afbea","category_id":"symbols"},"woozy_face":{"native":"🥴","name":"Face with Uneven Eyes and Wavy Mouth","url":"https://s1.vika.cn/space/2021/05/29/b62916b6378c42fba2503a8f30b947a2","token":"space/2021/05/29/b62916b6378c42fba2503a8f30b947a2","category_id":"people"},"world_map":{"native":"🗺️","name":"World Map","url":"https://s1.vika.cn/space/2021/05/29/16f37ebf6b014f90a217788a82b96e27","token":"space/2021/05/29/16f37ebf6b014f90a217788a82b96e27","category_id":"places"},"worried":{"native":"😟","name":"Worried Face","url":"https://s1.vika.cn/space/2021/05/29/6b820ba22ea747b79f08a21cb0d759b1","token":"space/2021/05/29/6b820ba22ea747b79f08a21cb0d759b1","category_id":"people"},"wrench":{"native":"🔧","name":"Wrench","url":"https://s1.vika.cn/space/2021/05/29/632d37ac7dcb4600a66399b4869f4be0","token":"space/2021/05/29/632d37ac7dcb4600a66399b4869f4be0","category_id":"objects"},"wrestlers":{"native":"🤼","name":"Wrestlers","url":"https://s1.vika.cn/space/2021/05/29/06884a738f8d4ccfb28a57388b4caba0","token":"space/2021/05/29/06884a738f8d4ccfb28a57388b4caba0","category_id":"people"},"writing_hand":{"native":"✍️","name":"Writing Hand","url":"https://s1.vika.cn/space/2021/05/29/cfe31f8e527a44dfa95066f538ecbdbd","token":"space/2021/05/29/cfe31f8e527a44dfa95066f538ecbdbd","category_id":"people"},"x":{"native":"❌","name":"Cross Mark","url":"https://s1.vika.cn/space/2021/05/29/93a67659629346a8aedc00ec2c9096bf","token":"space/2021/05/29/93a67659629346a8aedc00ec2c9096bf","category_id":"symbols"},"yarn":{"native":"🧶","name":"Ball of Yarn","url":"https://s1.vika.cn/space/2021/05/29/d481602941724b9d9366ad7f508ba330","token":"space/2021/05/29/d481602941724b9d9366ad7f508ba330","category_id":"activity"},"yawning_face":{"native":"🥱","name":"Yawning Face","url":"https://s1.vika.cn/space/2021/05/29/fbc93da311364816995c9fb5a2634527","token":"space/2021/05/29/fbc93da311364816995c9fb5a2634527","category_id":"people"},"yellow_heart":{"native":"💛","name":"Yellow Heart","url":"https://s1.vika.cn/space/2021/05/29/538ea50d09994a5f90ee584c670f1f7d","token":"space/2021/05/29/538ea50d09994a5f90ee584c670f1f7d","category_id":"people"},"yen":{"native":"💴","name":"Banknote with Yen Sign","url":"https://s1.vika.cn/space/2021/05/29/24a16d94411941f4bc0e694f5935cd96","token":"space/2021/05/29/24a16d94411941f4bc0e694f5935cd96","category_id":"objects"},"yin_yang":{"native":"☯️","name":"Yin Yang","url":"https://s1.vika.cn/space/2021/05/29/7f3e59f8c4904cf4b2262b43b69f8a42","token":"space/2021/05/29/7f3e59f8c4904cf4b2262b43b69f8a42","category_id":"symbols"},"yo-yo":{"native":"🪀","name":"Yo-Yo","url":"https://s1.vika.cn/space/2021/05/29/356426f7ceb9455b8d4b97db565ef55d","token":"space/2021/05/29/356426f7ceb9455b8d4b97db565ef55d","category_id":"activity"},"yum":{"native":"😋","name":"Face Savouring Delicious Food","url":"https://s1.vika.cn/space/2021/05/29/5c49a3e7f2664613915df3e50a173ee2","token":"space/2021/05/29/5c49a3e7f2664613915df3e50a173ee2","category_id":"people"},"zany_face":{"native":"🤪","name":"Grinning Face with One Large and One Small Eye","url":"https://s1.vika.cn/space/2021/05/29/8d26c3351a59461c8002bd7e9f4e4dd0","token":"space/2021/05/29/8d26c3351a59461c8002bd7e9f4e4dd0","category_id":"people"},"zap":{"native":"⚡","name":"High Voltage Sign","url":"https://s1.vika.cn/space/2021/05/29/39ef9d626c204158bce51635aceb2b2f","token":"space/2021/05/29/39ef9d626c204158bce51635aceb2b2f","category_id":"places"},"zebra_face":{"native":"🦓","name":"Zebra Face","url":"https://s1.vika.cn/space/2021/05/29/4a11f63665b447d48f390c3c10c5cbc3","token":"space/2021/05/29/4a11f63665b447d48f390c3c10c5cbc3","category_id":"nature"},"zero":{"native":"0️⃣","name":"Keycap 0","url":"https://s1.vika.cn/space/2021/05/29/44c9eba9e0cf4778949d440386f09cc6","token":"space/2021/05/29/44c9eba9e0cf4778949d440386f09cc6","category_id":"symbols"},"zipper_mouth_face":{"native":"🤐","name":"Zipper-Mouth Face","url":"https://s1.vika.cn/space/2021/05/29/33118cdf195b49c6b894c172a3c2b451","token":"space/2021/05/29/33118cdf195b49c6b894c172a3c2b451","category_id":"people"},"zombie":{"native":"🧟","name":"Zombie","url":"https://s1.vika.cn/space/2021/05/29/b5efc204782a46bca4e4f2623732ca89","token":"space/2021/05/29/b5efc204782a46bca4e4f2623732ca89","category_id":"people"},"zzz":{"native":"💤","name":"Sleeping Symbol","url":"https://s1.vika.cn/space/2021/05/29/2148ada421454c11a3655bc8c971a342","token":"space/2021/05/29/2148ada421454c11a3655bc8c971a342","category_id":"people"}}}');

/***/ }),

/***/ 52238:
/***/ ((module) => {

module.exports = JSON.parse('{"environment":{"integration":{"env":"integration"},"production":{"env":"production"},"staging":{"env":"staging"}},"settings":{"_build_branch":{"value":"local"},"_build_id":{"value":"0"},"_version_type":{"value":"local"},"activity_center_end_time":{"value":"2021-05-30 19:30"},"activity_center_url":{"value":"https://mp.weixin.qq.com/s/s2IRoAMHzsGq697TP0CCrQ"},"activity_train_camp_end_time":{"value":"2022-08-31 23:59"},"activity_train_camp_start_time":{"value":"2022-03-31 00:00"},"agree_terms_of_service":{"value":"75"},"api_apiffox_patch_url":{"value":"https://www.apifox.cn/apidoc/project-613370/api-13867672-run?path[datasheetId]=${datasheetId}&query[viewId]=${viewId}&environment[token]=${token}&environment[body]=${body}"},"api_apiffox_post_url":{"value":"https://www.apifox.cn/apidoc/project-613370/api-13867671-run?path[datasheetId]=${datasheetId}&query[viewId]=${viewId}&environment[token]=${token}&environment[body]=${body}"},"api_apifox_delete_url":{"value":"https://www.apifox.cn/apidoc/project-613370/api-13867673-run?path[datasheetId]=${datasheetId}&query[viewId]=${viewId}&query[recordIds]=${recordId}&environment[token]=${token}"},"api_apifox_get_url":{"value":"https://www.apifox.cn/apidoc/project-613370/api-13867447-run?path[datasheetId]=${datasheetId}&query[viewId]=${viewId}&environment[token]=${token}"},"api_apifox_upload_url":{"value":"https://www.apifox.cn/apidoc/project-613370/api-13867674-run?path[datasheetId]=${datasheetId}&environment[token]=${token}"},"api_times_per_day":{"value":"1000000"},"api_times_per_hour":{"value":"0"},"api_times_per_minute":{"value":"100"},"api_times_per_second":{"value":"10"},"apitable_login_logo":{"value":"space/2022/12/05/1e36972963f64c85a7ce998c6abc075d"},"assistant":{"value":"true"},"assistant_activity_train_camp_end_time":{"value":"2022-08-31 23:59"},"assistant_activity_train_camp_start_time":{"value":"2022-03-31 00:00"},"assistant_ai_course_url":{"value":"https://vika.cn/ai-course/"},"assistant_release_history_url":{"value":"https://bbs.vika.cn/column/details/13"},"automation_action_send_msg_to_dingtalk":{"value":"true"},"automation_action_send_msg_to_feishu":{"value":"true"},"automation_action_send_msg_to_wecom":{"value":"true"},"billing_default_billing_period":{"value":"annual"},"billing_default_grade":{"value":"silver"},"billing_default_seats":{"value":"50"},"billing_enterprise_qr_code":{"value":"space/2022/02/16/cf2f386d300142a19268c487b351d6bb"},"billing_pay_contact_us":{"value":"space/2022/02/17/b32ecd3a5dcb43a1add4d320632c6d2a"},"billing_pay_success_qr_code":{"value":"space/2022/02/17/b7cd077fca35444aa02fba4d11f2c1ba"},"datasheet_max_view_count_per_sheet":{"value":"60"},"datasheet_unlogin_user_avatar":{"value":"space/2020/09/11/744b39b7ed5240e1b257553f683ed6cd"},"delete_account_step1_cover":{"value":"space/2022/01/11/05fb6ad3c03b4b4da95156313b5d7777"},"delete_account_step2_email_icon":{"value":"space/2022/01/11/b0d06adfb14d457b9db266349edbf656"},"delete_account_step2_mobile_icon":{"value":"space/2022/01/11/ba4572da263c46ccb94843046a2a8e6c"},"education_url":{"value":"https://edu.vika.cn"},"email_icon":{"value":"space/2022/12/05/0d3881bd9d3c4be59845739090d06051"},"emoji_apple_32":{"value":"space/2021/03/23/6972f73d8bfe4539b67a4d3e264771e0"},"emoji_apple_64":{"value":"space/2021/03/23/c88653f7b7424d10bef058c345f6df6d"},"experimental_features_unsynchronized_view_intro_img":{"value":"space/2021/11/30/854742d76eaa46bba848d80f358f9cdf"},"field_cascade":{"value":"true"},"github_icon":{"value":"space/2022/12/14/08393af8ffc84039a75f99b8ff01b61f"},"grades_info":{"value":"/pricing/"},"help_assistant":{"value":"true"},"help_contact_us_type":{"value":"qrcode"},"help_developers_center_url":{"value":"https://vika.cn/developers"},"help_download_app":{"value":"true"},"help_join_chatgroup_url":{"value":"https://vika.cn/chatgroup/"},"help_official_website_url":{"value":"vika.cn?home=1"},"help_product_roadmap_url":{"value":"https://bbs.vika.cn/page/product_roadmap"},"help_solution_url":{"value":"https://vika.cn/solutions/"},"help_subscribe_demonstrate_form_url":{"value":"https://vika.cn/share/shrFVCtHXQwYm3DVgNn91"},"help_user_community_url":{"value":"{\\"dev\\":\\"https://bbs.vika.cn\\",\\"prod\\":\\"https://bbs.vika.cn\\"}"},"help_user_community_url_dev":{"value":"https://bbs.vika.cn"},"help_user_community_url_prod":{"value":"https://bbs.vika.cn"},"help_user_feedback_url":{"value":"https://vika.cn/share/shrzw0miJVmSkJ7eBBa9k/fomx5qPX0JGPFvfEEP"},"help_video_tutorials_url":{"value":"https://edu.vika.cn"},"integration_apifox_url":{"value":"https://www.apifox.cn/apidoc/project-613370/doc-806641"},"integration_dingtalk_da":{"value":"https://h5.dingtalk.com/dingtalk-da/index.html"},"integration_dingtalk_help_url":{"value":"https://help.vika.cn/docs/guide/integration-dingtalk","marketplace":{"integration":"ina9134969049653777"}},"integration_dingtalk_upgrade_url":{"value":"http://h5.dingtalk.com/open-purchase/mobileUrl.html?redirectUrl=https%3A%2F%2Fh5.dingtalk.com%2Fopen-market%2Fshare.html%3FshareGoodsCode%3DD34E5A30A9AC7FC6CA73DEEEDFCEC860C2F97D997C85C521B71035D4F4F2DADF5E69AE3825326C7F%26token%3D65482d6a78796151887e033769bebfd8%26shareUid%3DBCB170692B0B56DA0C22819901B68B80&dtaction=os"},"integration_feishu_help":{"value":"vika维格表 使用指南"},"integration_feishu_help_url":{"value":"https://help.vika.cn/docs/guide/integration-lark","marketplace":{"integration":"cli_9f3930dd7d7ad00c, cli_a08120b120fad00e, cli_9f614b454434500e"}},"integration_feishu_manage_open_url":{"value":"https://applink.feishu.cn/client/bot/open"},"integration_feishu_seats_form_url":{"value":"https://u.vika.cn/pb7cj"},"integration_feishu_upgrade_url":{"value":"https://feishu.cn/admin/appCenter/manage/cli_9f614b454434500e"},"integration_feishu_upgrade_url_dev":{"value":"https://feishu.cn/admin/appCenter/manage/cli_a28611a8b9e2900d"},"integration_feisu_register_now_url":{"value":"https://u.vika.cn/qmdp3"},"integration_wecom_bind_help_center":{"value":"/help"},"integration_wecom_bind_help_center_url":{"value":"/help"},"integration_wecom_bind_success_icon_img":{"value":"/space/2021/09/16/124e249b651f4934949ae39839e3ee77"},"integration_wecom_custom_subdomain_help_url":{"value":"https://help.vika.cn/docs/guide/intro_custom_subdomain"},"integration_wecom_help_url":{"value":"https://help.vika.cn/docs/guide/integration-wecom","marketplace":{"integration":"ina5200279359980055"}},"integration_wecom_login_qrcode_js":{"value":"http://wwcdn.weixin.qq.com/node/wework/wwopen/js/wwLogin-1.2.4.js"},"integration_wecom_qrcode_css":{"value":"/space/2021/08/02/6b5374b4b3ba42aba69022ae2b13a577"},"integration_wecom_shop_cms":{"value":"https://help.vika.cn/docs/guide/integration-wecom"},"integration_wecom_shop_corpid_dev":{"value":"ww11761d11177ae10b"},"integration_wecom_shop_corpid_prod":{"value":"ww11761d11177ae10b"},"integration_wecom_shop_corpid_staging":{"value":"ww11761d11177ae10b"},"integration_wecom_shop_corpid_test":{"value":"ww11761d11177ae10b"},"integration_wecom_shop_suiteid_dev":{"value":"wwc98ec5fc01dfdaeb"},"integration_wecom_shop_suiteid_prod":{"value":"ww0506baa4d734acb9"},"integration_wecom_shop_suiteid_staging":{"value":"ww514bd11dfd0f294f"},"integration_wecom_shop_suiteid_test":{"value":"ww3dd616a360b3ce97"},"integration_wecom_upgrade_guide_url":{"value":"/wecom-integration/#upgrade"},"integration_yozosoft_help_url":{"value":"https://help.vika.cn/docs/guide/integration-yozosoft","marketplace":{"integration":"ina5645957505507647"}},"introduction_video":{"value":"space/2022/04/14/aff988f37b6849b1bf438a73d8721ae2"},"linkedin_icon":{"value":"space/2022/12/05/762594b3353141f6a7a83d10a3e47ea4"},"login_agree_terms_of_service":{"value":"75"},"login_icp1_url":{"value":"https://beian.miit.gov.cn/"},"login_icp2_url":{"value":"http://www.beian.gov.cn/portal/registerSystemInfo"},"login_introduction_video":{"value":"space/2022/04/14/aff988f37b6849b1bf438a73d8721ae2"},"login_join_chatgroup_url":{"value":"https://vika.cn/chatgroup/"},"login_privacy_policy":{"value":"维格隐私政策"},"login_private_deployment_form_url":{"value":"https://vika.cn/share/shrVrGPclBql6w9ysUHzR/fomed5397fFJfdcRvL"},"login_service_agreement":{"value":"维格服务协议"},"official_avatar":{"value":"space/2021/12/07/aaac193704834e9a9e4af27a1535826a"},"page_apply_logout":{"value":"space/2022/01/11/5bb30117e4934522af081a05eb4fd903"},"page_apply_logout_bg":{"value":"space/2022/01/11/35106645c2614d11bea689a540d13787"},"permission_config_in_workbench_page":{"value":"[{\\"key\\":0,\\"title\\":\\"表格内的操作权限\\",\\"detail\\":[{\\"title\\":\\"编辑视图工具栏\\",\\"permissions\\":[0,1,2]},{\\"title\\":\\"编辑视图列表\\",\\"permissions\\":[0,1,2]},{\\"title\\":\\"导出视图数据\\",\\"permissions\\":[0,1]},{\\"title\\":\\"增删维格列\\",\\"permissions\\":[0,1]},{\\"title\\":\\"编辑维格列属性（列名/类型/描述）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"编辑维格列样式（列宽/统计栏）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"编辑行（增删/拖动）\\",\\"permissions\\":[0,1,2]},{\\"title\\":\\"编辑单元格（增删改数据）\\",\\"permissions\\":[0,1,2]},{\\"title\\":\\" 撤销，重做\\",\\"permissions\\":[0,1,2]}]},{\\"key\\":1,\\"title\\":\\"对文件（夹）的操作权限\\",\\"detail\\":[{\\"title\\":\\"设置文件（夹）权限\\",\\"permissions\\":[0,1]},{\\"title\\":\\"将继承切换为指定权限\\",\\"permissions\\":[0,1]},{\\"title\\":\\"将指定切换为继承权限\\",\\"permissions\\":[0]},{\\"title\\":\\"新建文件（夹）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"导入文件\\",\\"permissions\\":[0,1]},{\\"title\\":\\"导出文件\\",\\"permissions\\":[0,1]},{\\"title\\":\\"复制文件（当前文件&上级文件夹权限）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"移动文件（当前文件&目标文件夹权限）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"重命名文件（夹）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"删除文件（夹）\\",\\"permissions\\":[0,1]},{\\"title\\":\\"分享文件（夹）\\",\\"permissions\\":[0,1,2]},{\\"title\\":\\"保存为模板\\",\\"permissions\\":[0,1]}]}]"},"quick_search_default_dark":{"value":"space/2023/03/15/42dc46843161478fb56d27efb43a50b8"},"quick_search_default_light":{"value":"space/2023/03/15/0fd81978a8c04d96a483f4c785736b62"},"server_error_page_bg":{"value":"/space/2022/09/07/cbaf2ee93be24f6bbe361a85db0efba7?attname=theserverisundermaintenance.%402x.png"},"share_iframe_brand":{"value":"space/2021/12/09/3b09b857cee04a12b6b02cd63bb90a81?attname=%E7%BB%B4%E6%A0%BC%E8%A1%A8logo.svg"},"share_iframe_brand_dark":{"value":"space/2022/11/28/94e87bd1fd25472e99556c9b5f72c62e?attname=logo-reverse.svg"},"space_setting_integrations_dingtalk":{"value":"true"},"space_setting_integrations_feishu":{"value":"true"},"space_setting_integrations_preview_office_file":{"value":"true"},"space_setting_integrations_wecom":{"value":"true"},"space_setting_invite_user_to_get_v_coins":{"value":"true"},"space_setting_list_of_enable_all_lab_features":{"value":"[\\"spcXXXXX\\"]"},"space_setting_role_empty_img":{"value":"space/2022/08/03/3fbdff65d66547a8ab796e1b808d45b0"},"space_setting_upgrade":{"value":"true"},"system_configuration_logo_with_name_white_font":{"value":"/space/2021/09/17/5c69f63932da4be7aa0965d3b0e543c4"},"system_configuration_minmum_version_require":{"value":"0.5.0"},"system_configuration_server_error_bg_img":{"value":"/space/2022/09/07/cbaf2ee93be24f6bbe361a85db0efba7?attname=theserverisundermaintenance.%402x.png"},"system_configuration_version":{"value":"0.5.0"},"twitter_icon":{"value":"space/2022/12/05/09cc01ee1f894fb2923bd08b715226b6"},"user_account_deleted_bg_img":{"value":"space/2022/01/11/35106645c2614d11bea689a540d13787"},"user_account_deleted_img":{"value":"space/2022/01/11/5bb30117e4934522af081a05eb4fd903"},"user_guide_welcome_developer_center_url":{"value":"/help/developers/"},"user_guide_welcome_introduction_video":{"value":"{ \\"title\\":\\"玩转一张维格表\\", \\"video\\":\\"space/2020/12/21/cb7bdf6fe22146068111d46915587fb2\\", \\"autoPlay\\":true }"},"user_guide_welcome_quick_start_video":{"value":"{\\"title\\":\\"一分钟快速入门\\", \\"video\\":\\"space/2021/03/10/a68dbf1e2e7943b09b1550175253fdab\\", \\"autoPlay\\":true}"},"user_guide_welcome_template1_icon":{"value":"现有的 icon 链接"},"user_guide_welcome_template1_url":{"value":"/template/tpchFkNFaaJMC/tplDYzZqqwpRQ"},"user_guide_welcome_template2_icon":{"value":"现有的 icon 链接"},"user_guide_welcome_template2_url":{"value":"/template/tpc76og2J6D8p/tplDBUKmXFo7c"},"user_guide_welcome_template3_icon":{"value":"现有的 icon 链接"},"user_guide_welcome_template3_url":{"value":"/template/tpcMixDKM5f3s/tplaglc40487X"},"user_guide_welcome_what_is_datasheet_video":{"value":"{ \\"title\\":\\"什么是维格表\\", \\"video\\":\\"space/2022/02/21/94cb82f9ffd84a5499c8931a224ad234\\", \\"autoPlay\\":true }"},"user_setting_account_bind":{"value":"true"},"user_setting_account_bind_dingtalk":{"value":"true"},"user_setting_account_bind_qq":{"value":"true"},"user_setting_account_bind_wechat":{"value":"true"},"user_setting_default_avatar":{"value":"space/2020/09/11/e6aa3037a38f45acb65324ea314aea58,space/2021/03/10/61a8aae11da2439ebb4df35b9075587d,space/2020/09/11/41e723917dc742d2974e41abab8cf60b,space/2020/09/11/4dce50e4ec4649b9a408a494aca28183,space/2020/09/11/e4d073b1fa674bc884a8c194e9248ecf,space/2020/09/11/31a1acb4734c4dd3ae9538299282b39e"},"view_architecture_empty_graphics_img":{"value":"space/2021/11/19/b1c660a317fb4068bd312d16671308a1"},"view_architecture_empty_record_list_img":{"value":"space/2021/11/19/73c1cda56b3d4d448416d9b69c757598"},"view_architecture_guide_video":{"value":"space/2021/11/18/428b94bb262845afabf46efff8e082b5"},"view_calendar_guide_create":{"value":"space/2021/08/16/bda3a4c51ebc444ea9f26d4573987257"},"view_calendar_guide_no_permission":{"value":"space/2022/05/23/4206adbf0aaa43bf90342fd0e568dc73"},"view_calendar_guide_video":{"value":"space/2021/08/06/e3a4e480768c4b4d8d01ea4a269bf2bb"},"view_form_guide_video":{"value":"space/2020/12/25/f0ecc536d7324df888d165cb73cd22c6"},"view_gallery_guide_video":{"value":"space/2020/09/15/4383ec2f8eb041599396df0f18d99f5a"},"view_gantt_guide_video":{"value":"space/2021/06/02/8bd6c5263ba444aabc138ed051b83c8c"},"view_grid_guide_video":{"value":"space/2020/09/16/77e941353d8141b69f684e2592350ec7"},"view_kanban_guide_video":{"value":"space/2020/09/11/c964bcf3ec48458dae7fbdc55a59856b"},"view_mirror_list_empty_img":{"value":"space/2022/05/23/d880e95a4a204492b20d8725c61c998c"},"widget_center_feature_not_unturned_on_img":{"value":"/space/2021/12/27/cc7c3d706c8e4443a0e9b79673a078e0"},"widget_center_help_link":{"value":"#"},"widget_center_space_widget_empty_img":{"value":"/space/2021/10/08/18343b0891a74bdb9ca0b36b6c543e3b"},"widget_cli_miumum_version":{"value":"0.0.1"},"widget_custom_widget_empty_img":{"value":"/space/2021/10/08/18343b0891a74bdb9ca0b36b6c543e3b"},"widget_default_cover_img":{"value":"/space/2021/11/09/f82a5c9cb6c74452b824e17b03f20f67"},"widget_panel_empty_img":{"value":"space/2022/05/23/c5096fdb5d674985a49725e23f72cdc7"},"workbench_folder_default_cover_list":{"value":"space/2021/12/29/7306be86fc6d4cac9d8de9b4a787b1fa,space/2021/12/29/58073bbfe0f64dc7bd2f5f44a123c172,space/2021/12/29/e36e93966aa049e1ba7fd53907c2265f,space/2021/12/29/ebd570b6ee3b429f8c2e51e1b1df6657,space/2021/12/29/7eb38331f61240dcb74b1fce3a90c6bc,space/2021/12/29/a8c5df5eba2e4c07a78bdca6b9613579"},"workbench_max_node_number_show_invite_and_new_node":{"value":"13"},"workbench_no_permission_img":{"value":"/space/2022/09/07/6e95e804d5f44fe4a0dec81d228b0286?attname=filecannotbeaccessed%402x.png"}},"shortcut_keys":[{"show":true,"key":"cmd+z","winKey":"ctrl+z","name":["undo"],"when":"!isGlobalEditing","id":"cmd+z","command":"Undo","description":"撤销","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+z","winKey":"ctrl+shift+z","name":["redo"],"when":"!isGlobalEditing","id":"cmd+shift+z","command":"Redo","description":"重做","type":["global_shortcuts"]},{"show":true,"key":"cmd+y","winKey":"ctrl+y","name":["redo"],"when":"!isGlobalEditing","id":"cmd+y","command":"Redo","description":"重做","type":["global_shortcuts"]},{"show":true,"key":"cmd+f","winKey":"ctrl+f","name":["find"],"when":"!isRecordExpanding","id":"cmd+f","command":"ToggleFindPanel","description":"查找","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+p","winKey":"ctrl+shift+p","name":["open_api_panel"],"when":"true ","id":"cmd+shift+p","command":"ToggleApiPanel","description":"打开 API 示例面板","type":["global_shortcuts"]},{"show":true,"key":"cmd+/","winKey":"ctrl+/","name":["open_keyboard_shortcuts_panel"],"when":"!isGlobalEditing && !isRecordExpanding","id":"cmd+/","command":"Help","description":"打开快捷键面板","type":["global_shortcuts"]},{"show":true,"key":"cmd+up","winKey":"ctrl+up","name":["previous_record"],"when":"isRecordExpanding","id":"cmd+up","command":"PreviousRecord","description":"卡片翻到上一条记录","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+,","winKey":"ctrl+shift+,","name":["previous_record"],"when":"isRecordExpanding","id":"cmd+shift+,","command":"PreviousRecord","description":"卡片翻到上一条记录","type":["global_shortcuts"]},{"show":true,"key":"cmd+down","winKey":"ctrl+down","name":["next_record"],"when":"isRecordExpanding","id":"cmd+down","command":"NextRecord","description":"卡片翻到下一条记录","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+.","winKey":"ctrl+shift+.","name":["next_record"],"when":"isRecordExpanding","id":"cmd+shift+.","command":"NextRecord","description":"卡片翻到下一条记录","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+,","winKey":"ctrl+shift+,","name":["switch_view_prev"],"when":"!isRecordExpanding","id":"cmd+shift+,","command":"ViewPrev","description":"视图标签向前切换视图","type":["global_shortcuts"]},{"show":true,"key":"cmd+shift+.","winKey":"ctrl+shift+.","name":["switch_view_next"],"when":"!isRecordExpanding","id":"cmd+shift+.","command":"ViewNext","description":"视图标签向后切换视图","type":["global_shortcuts"]},{"show":true,"key":"cmd+c","winKey":"ctrl+c","name":["duplicate_cell_data"],"when":"hasActiveCell","id":"cmd+c","command":"Copy","description":"复制","type":[]},{"show":true,"key":"cmd+v","winKey":"ctrl+v","name":["paste_cell_data"],"when":"hasActiveCell","id":"cmd+v","command":"Paste","description":"粘贴","type":[]},{"show":true,"key":"cmd+x","winKey":"ctrl+x","name":["cut_cell_data"],"id":"cmd+x","command":"None","description":"剪切","type":[]},{"show":true,"key":"space","winKey":"space","name":["expand_record"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding && !isEditing","id":"space","command":"ExpandRecord","description":"展开行","type":[]},{"show":true,"key":"escape","winKey":"escape","name":["escape"],"when":"isEditing","id":"escape","command":"ExitEditing","description":"退出编辑或关闭窗口","type":[]},{"show":true,"key":"shift+enter","winKey":"shift+enter","name":["insert_record_below"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding && recordEditable","id":"shift+enter","command":"AppendRow","description":"向下插入行","type":[]},{"show":true,"key":"cmd+shift+enter","winKey":"ctrl+shift+enter","name":["insert_record_above"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding && recordEditable","id":"cmd+shift+enter","command":"PrependRow","description":"向上插入行","type":[]},{"show":true,"key":"enter","winKey":"enter","name":["edit_cell_data"],"when":"isFocusing && !isRecordExpanding","id":"enter","command":"ToggleNextEditing","description":"激活单元格编辑状态","type":[]},{"show":true,"key":"F2","winKey":"F2","name":["edit_cell_data"],"when":"isFocusing && !isRecordExpanding","id":"F2","command":"ToggleNextEditing","description":"激活单元格编辑状态","type":[]},{"show":true,"key":"backspace","winKey":"backspace","name":["clear_record"],"when":"!isGlobalEditing && !isRecordExpanding","id":"backspace","command":"Clear","description":"清除单元格内容","type":[]},{"show":true,"key":"delete","winKey":"delete","name":["clear_record"],"when":"!isGlobalEditing && !isRecordExpanding","id":"delete","command":"Clear","description":"清除单元格内容","type":[]},{"show":true,"key":"tab","winKey":"tab","name":["finish_editing_cell_right"],"when":"(isEditing || hasActiveCell) && !isRecordExpanding && !isMenuOpening","id":"tab","command":"CellTab","description":"完成编辑并向右一个单元格","type":[]},{"show":true,"key":"shift+tab","winKey":"shift+tab","name":["finish_editing_cell_left"],"when":"(isEditing || hasActiveCell) && !isRecordExpanding&& !isMenuOpening","id":"shift+tab","command":"CellShiftTab","description":"完成编辑并向左一个单元格","type":[]},{"show":true,"key":"up","winKey":"up","name":["up"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening && !modalVisible","id":"up","command":"CellUp","description":"向上移动一个单元格","type":[]},{"show":true,"key":"down","winKey":"down","name":["down"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening && !modalVisible","id":"down","command":"CellDown","description":"向下移动一个单元格","type":[]},{"show":true,"key":"left","winKey":"left","name":["left"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding && !isMenuOpening && !modalVisible","id":"left","command":"CellLeft","description":"向左移动一个单元格","type":[]},{"show":true,"key":"right","winKey":"right","name":["right"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening && !modalVisible","id":"right","command":"CellRight","description":"向右移动一个单元格","type":[]},{"show":true,"key":"cmd+up","winKey":"ctrl+up","name":["cell_to_up_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+up","command":"CellUpEdge","description":"移动到顶部单元格","type":[]},{"show":true,"key":"cmd+down","winKey":"ctrl+down","name":["cell_to_down_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+down","command":"CellDownEdge","description":"移动到底部单元格","type":[]},{"show":true,"key":"cmd+left","winKey":"ctrl+left","name":["cell_to_left_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+left","command":"CellLeftEdge","description":"移动到最左侧单元格","type":[]},{"show":true,"key":"cmd+right","winKey":"ctrl+right","name":["cell_to_right_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+right","command":"CellRightEdge","description":"移动到最右侧单元格","type":[]},{"show":true,"key":"fn+↑","winKey":"fn+↑","name":["scroll_screen_up"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"fn+↑","command":"None","description":"向上滚动一屏","type":[]},{"show":true,"key":"pageup","winKey":"pageup","name":["scroll_screen_up"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"pageup","command":"PageUp","description":"向上滚动一屏","type":[]},{"show":true,"key":"fn+↓","winKey":"fn+↓","name":["scroll_screen_down"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"fn+↓","command":"None","description":"向下滚动一屏","type":[]},{"show":true,"key":"pagedown","winKey":"pagedown","name":["scroll_screen_down"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"pagedown","command":"PageDown","description":"向下滚动一屏","type":[]},{"show":true,"key":"fn+←","winKey":"fn+←","name":["scroll_screen_left"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"fn+←","command":"None","description":"向左滚动一屏","type":[]},{"show":true,"key":"home","winKey":"home","name":["scroll_screen_left"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"home","command":"PageLeft","description":"向左滚动一屏","type":[]},{"show":true,"key":"fn+→","winKey":"fn+→","name":["scroll_screen_right"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"fn+→","command":"None","description":"向右滚动一屏","type":[]},{"show":true,"key":"end","winKey":"end","name":["scroll_screen_right"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"end","command":"PageRight","description":"向右滚动一屏","type":[]},{"show":true,"key":"cmd+a","winKey":"ctrl+a","name":["select_all"],"when":"!isGlobalEditing && !isRecordExpanding","id":"cmd+a","command":"SelectionAll","description":"全选","type":[]},{"show":true,"key":"shift+up","winKey":"shift+up","name":["selection_to_up"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"shift+up","command":"SelectionUp","description":"单元格选区向上","type":[]},{"show":true,"key":"shift+down","winKey":"shift+down","name":["selection_to_down"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"shift+down","command":"SelectionDown","description":"单元格选区向下","type":[]},{"show":true,"key":"shift+left","winKey":"shift+left","name":["selection_to_left"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"shift+left","command":"SelectionLeft","description":"单元格选区向左","type":[]},{"show":true,"key":"shift+right","winKey":"shift+right","name":["selection_to_right"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"shift+right","command":"SelectionRight","description":"单元格选区向右","type":[]},{"show":true,"key":"cmd+shift+up","winKey":"ctrl+shift+up","name":["selection_to_up_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+shift+up","command":"SelectionUpEdge","description":"单元格选区向上至顶部","type":[]},{"show":true,"key":"cmd+shift+down","winKey":"ctrl+shift+down","name":["selection_to_down_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+shift+down","command":"SelectionDownEdge","description":"单元格选区向下至底部","type":[]},{"show":true,"key":"cmd+shift+left","winKey":"ctrl+shift+left","name":["selection_to_left_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+shift+left","command":"SelectionLeftEdge","description":"单元格选区向左到边缘","type":[]},{"show":true,"key":"cmd+shift+right","winKey":"ctrl+shift+right","name":["selection_to_right_edge"],"when":"hasActiveCell && !isGlobalEditing && !isRecordExpanding&& !isMenuOpening","id":"cmd+shift+right","command":"SelectionRightEdge","description":"单元格选区向右至边缘","type":[]},{"show":true,"key":"fn+↑","winKey":"fn+↑","name":["scroll_screen_up"],"when":"!isRecordExpanding","id":"fn+↑","command":"None","description":"向上滚动一屏","type":["gallery_view_shortcuts"]},{"show":true,"key":"pageup","winKey":"pageup","name":["scroll_screen_up"],"when":"!isRecordExpanding","id":"pageup","command":"PageUp","description":"向上滚动一屏","type":["gallery_view_shortcuts"]},{"show":true,"key":"fn+↓","winKey":"fn+↓","name":["scroll_screen_down"],"when":"!isRecordExpanding","id":"fn+↓","command":"None","description":"向下滚动一屏","type":["gallery_view_shortcuts"]},{"show":true,"key":"pagedown","winKey":"pagedown","name":["scroll_screen_down"],"when":"!isRecordExpanding","id":"pagedown","command":"PageDown","description":"向下滚动一屏","type":["gallery_view_shortcuts"]},{"show":true,"key":"cmd+up","winKey":"ctrl+up","name":["page_to_up_edge"],"when":"!isRecordExpanding","id":"cmd+up","command":"PageUpEdge","description":"滚动到页面顶部","type":["gallery_view_shortcuts"]},{"show":true,"key":"cmd+down","winKey":"ctrl+down","name":["page_to_down_edge"],"when":"!isRecordExpanding","id":"cmd+down","command":"PageDownEdge","description":"滚动到页面底部","type":["gallery_view_shortcuts"]},{"key":"cmd+s","winKey":"ctrl+s","name":["toast_ctrl_s"],"when":"true","id":"cmd+s","command":"ToastForSave","description":"你的修改数据会实时保存到云端，无需手动保存","type":["gallery_view_shortcuts"]},{"show":true,"key":"cmd+k","winKey":"ctrl+k","name":["open_quickgo_panel"],"when":"!isRecordExpanding","id":"cmd+k","command":"SearchNode","description":"打开工作台的搜索栏","type":["workbenck_shortcuts"]},{"show":true,"key":"ctrl+n","winKey":"alt+n","name":[],"when":"!isRecordExpanding","id":"ctrl+n","command":"NewDatasheet","description":"新建维格表","type":["workbenck_shortcuts"]},{"show":true,"key":"ctrl+shift+n","winKey":"alt+shift+n","name":["new_folder"],"when":"!isRecordExpanding","id":"ctrl+shift+n","command":"NewFolder","description":"新建文件夹","type":["workbenck_shortcuts"]},{"show":true,"key":"f2","winKey":"f2 ","name":["rename"],"when":"!isRecordExpanding","id":"f2","command":"RenameNode","description":"重命名","type":["workbenck_shortcuts"]},{"show":true,"key":"ctrl+s","winKey":"alt+s","name":["share"],"when":"!isRecordExpanding","id":"ctrl+s","command":"Share","description":"分享","type":["workbenck_shortcuts"]},{"show":true,"key":"ctrl+p","winKey":"alt+p","name":[],"when":"!isRecordExpanding","id":"ctrl+p","command":"Permission","description":"设置权限","type":["workbenck_shortcuts"]},{"show":true,"key":"ctrl+t","winKey":"alt+t","name":["save_as_template"],"when":"!isRecordExpanding","id":"ctrl+t","command":"SaveAsTemplate","description":"保存为模板","type":["workbenck_shortcuts"]},{"show":true,"key":"cmd+b","winKey":"ctrl+b","name":["toggle_catalog_panel"],"when":"!isRecordExpanding && !modalVisible","id":"cmd+b","command":"ToggleCatalogPanel","description":"展开折叠目录面板","type":["workbenck_shortcuts"]},{"key":"space","winKey":"space","when":"!isGlobalEditing && isRecordExpanding && !isEditing","id":"space","command":"CloseExpandRecord"},{"key":"shift+tab","winKey":"shift+tab","when":"isRecordExpanding","id":"shift+tab","command":"RecordShiftTab"},{"key":"tab","winKey":"tab","when":"isRecordExpanding","id":"tab","command":"RecordTab"},{"show":true,"key":"cmd+shift+o","winKey":"ctrl+shift+o","name":["toggle_widget_panel"],"when":"!isRecordExpanding","id":"cmd+shift+o","command":"ToggleWidgetPanel","description":"展开小程序","type":["global_shortcuts"]},{"key":"cmd+shift+d","winKey":"ctrl+shift+d","when":"!isRecordExpanding","id":"cmd+shift+d","command":"ToggleDevPanel"},{"key":"cmd+alt+d","winKey":"ctrl+alt+d","when":"!isRecordExpanding","id":"cmd+alt+d","command":"ToggleDevPanel"},{"key":"up","winKey":"up","when":"isQuickSearchExpanding","id":"up","command":"QuickSearchUp"},{"key":"down","winKey":"down","when":"isQuickSearchExpanding","id":"down","command":"QuickSearchDown"},{"key":"tab","winKey":"tab","when":"isQuickSearchExpanding","id":"tab","command":"QuickSearchTab"},{"key":"enter","winKey":"enter","when":"isQuickSearchExpanding","id":"enter","command":"QuickSearchEnter"}],"country_code_and_phone_code":{"china":{"phoneCode":"86"},"hong_kong":{"phoneCode":"852"},"macau":{"phoneCode":"853"},"taiwan":{"phoneCode":"886"},"albania":{"phoneCode":"355"},"algeria":{"phoneCode":"213"},"afghanistan":{"phoneCode":"93"},"argentina":{"phoneCode":"54"},"united_arab_emirates":{"phoneCode":"971"},"aruba":{"phoneCode":"297"},"oman":{"phoneCode":"968"},"azerbaijan":{"phoneCode":"994"},"egypt":{"phoneCode":"20"},"ethiopia":{"phoneCode":"251"},"ireland":{"phoneCode":"353"},"estonia":{"phoneCode":"372"},"andorra":{"phoneCode":"376"},"angola":{"phoneCode":"244"},"anguilla":{"phoneCode":"1264"},"antigua_and_barbuda":{"phoneCode":"1268"},"austria":{"phoneCode":"43"},"australia":{"phoneCode":"61"},"barbados":{"phoneCode":"1246"},"papua_new_guinea":{"phoneCode":"675"},"bahamas":{"phoneCode":"1242"},"pakistan":{"phoneCode":"92"},"paraguay":{"phoneCode":"595"},"palestine":{"phoneCode":"970"},"bahrain":{"phoneCode":"973"},"panama":{"phoneCode":"507"},"brazil":{"phoneCode":"55"},"belarus":{"phoneCode":"375"},"bermuda":{"phoneCode":"1441"},"bulgaria":{"phoneCode":"359"},"benin":{"phoneCode":"229"},"belgium":{"phoneCode":"32"},"iceland":{"phoneCode":"354"},"puerto_rico":{"phoneCode":"1787"},"poland":{"phoneCode":"48"},"bosnia_and_herzegovina":{"phoneCode":"387"},"bolivia":{"phoneCode":"591"},"belize":{"phoneCode":"501"},"botswana":{"phoneCode":"267"},"bhutan":{"phoneCode":"975"},"burkina_faso":{"phoneCode":"226"},"burundi":{"phoneCode":"257"},"equatorial_guinea":{"phoneCode":"240"},"denmark":{"phoneCode":"45"},"germany":{"phoneCode":"49"},"timor_leste":{"phoneCode":"670"},"togo":{"phoneCode":"228"},"dominica":{"phoneCode":"1767"},"dominican_republic":{"phoneCode":"1809"},"russia":{"phoneCode":"7"},"ecuador":{"phoneCode":"593"},"eritrea":{"phoneCode":"291"},"france":{"phoneCode":"33"},"faroe_islands":{"phoneCode":"298"},"french_polynesia":{"phoneCode":"689"},"french_guiana":{"phoneCode":"594"},"philippines":{"phoneCode":"63"},"fiji":{"phoneCode":"679"},"finland":{"phoneCode":"358"},"gambia":{"phoneCode":"220"},"republic_of_the_congo":{"phoneCode":"242"},"democratic_republic_of_the_congo":{"phoneCode":"243"},"colombia":{"phoneCode":"57"},"costa_rica":{"phoneCode":"506"},"grenada":{"phoneCode":"1473"},"greenland":{"phoneCode":"299"},"georgia":{"phoneCode":"995"},"cuba":{"phoneCode":"53"},"guadeloupe":{"phoneCode":"590"},"guatemala":{"phoneCode":"502"},"guam":{"phoneCode":"1671"},"guyana":{"phoneCode":"592"},"kazakhstan":{"phoneCode":"7"},"haiti":{"phoneCode":"509"},"south_korea":{"phoneCode":"82"},"netherlands":{"phoneCode":"31"},"montenegro":{"phoneCode":"382"},"honduras":{"phoneCode":"504"},"kiribati":{"phoneCode":"686"},"djibouti":{"phoneCode":"253"},"kyrgyzstan":{"phoneCode":"996"},"guinea":{"phoneCode":"224"},"guinea_bissau":{"phoneCode":"245"},"canada":{"phoneCode":"1"},"ghana":{"phoneCode":"233"},"gabon":{"phoneCode":"241"},"cambodia":{"phoneCode":"855"},"czech":{"phoneCode":"420"},"zimbabwe":{"phoneCode":"263"},"cameroon":{"phoneCode":"237"},"qatar":{"phoneCode":"974"},"cayman_islands":{"phoneCode":"1345"},"cape_verde":{"phoneCode":"238"},"comoros":{"phoneCode":"269"},"kuwait":{"phoneCode":"965"},"croatia":{"phoneCode":"385"},"kenya":{"phoneCode":"254"},"cook_islands":{"phoneCode":"682"},"curacao":{"phoneCode":"599"},"latvia":{"phoneCode":"371"},"lesotho":{"phoneCode":"266"},"laos":{"phoneCode":"856"},"lebanon":{"phoneCode":"961"},"lithuania":{"phoneCode":"370"},"liberia":{"phoneCode":"231"},"libya":{"phoneCode":"218"},"liechtenstein":{"phoneCode":"423"},"reunion_island":{"phoneCode":"262"},"luxembourg":{"phoneCode":"352"},"rwanda":{"phoneCode":"250"},"romania":{"phoneCode":"40"},"madagascar":{"phoneCode":"261"},"maldives":{"phoneCode":"960"},"malta":{"phoneCode":"356"},"malawi":{"phoneCode":"265"},"malaysia":{"phoneCode":"60"},"mali":{"phoneCode":"223"},"macedonia":{"phoneCode":"389"},"martinique":{"phoneCode":"596"},"mayotte":{"phoneCode":"269"},"mauritius":{"phoneCode":"230"},"mauritania":{"phoneCode":"222"},"united_states":{"phoneCode":"1"},"american_samoa":{"phoneCode":"1684"},"virgin_islands_us":{"phoneCode":"1284"},"mongolia":{"phoneCode":"976"},"montserrat":{"phoneCode":"1664"},"bangladesh":{"phoneCode":"880"},"peru":{"phoneCode":"51"},"myanmar":{"phoneCode":"95"},"moldova":{"phoneCode":"373"},"morocco":{"phoneCode":"212"},"monaco":{"phoneCode":"377"},"mozambique":{"phoneCode":"258"},"mexico":{"phoneCode":"52"},"namibia":{"phoneCode":"264"},"south_africa":{"phoneCode":"27"},"nicaragua":{"phoneCode":"505"},"nepal":{"phoneCode":"977"},"niger":{"phoneCode":"227"},"nigeria":{"phoneCode":"234"},"norway":{"phoneCode":"47"},"palau":{"phoneCode":"680"},"portugal":{"phoneCode":"351"},"japan":{"phoneCode":"81"},"sweden":{"phoneCode":"46"},"switzerland":{"phoneCode":"41"},"el_salvador":{"phoneCode":"503"},"samoa":{"phoneCode":"685"},"serbia":{"phoneCode":"381"},"sierra_leone":{"phoneCode":"232"},"senegal":{"phoneCode":"221"},"cyprus":{"phoneCode":"357"},"seychelles":{"phoneCode":"248"},"saudi_arabia":{"phoneCode":"966"},"saint_pierre_and_miquelon":{"phoneCode":"508"},"sao_tome_and_principe":{"phoneCode":"239"},"saint_kitts_and_nevis":{"phoneCode":"1869"},"saint_lucia":{"phoneCode":"1758"},"saint_maarten_dutch_part":{"phoneCode":"1721"},"san_marino":{"phoneCode":"378"},"saint_vincent_and_the_grenadines":{"phoneCode":"1784"},"sri_lanka":{"phoneCode":"94"},"slovakia":{"phoneCode":"421"},"slovenia":{"phoneCode":"386"},"swaziland":{"phoneCode":"268"},"sudan":{"phoneCode":"249"},"suriname":{"phoneCode":"597"},"solomon_islands":{"phoneCode":"677"},"somalia":{"phoneCode":"252"},"tajikistan":{"phoneCode":"992"},"thailand":{"phoneCode":"66"},"tanzania":{"phoneCode":"255"},"tonga":{"phoneCode":"676"},"turks_and_caicos_islands":{"phoneCode":"1649"},"trinidad_and_tobago":{"phoneCode":"1868"},"tunisia":{"phoneCode":"216"},"turkey":{"phoneCode":"90"},"turkmenistan":{"phoneCode":"993"},"vanuatu":{"phoneCode":"678"},"venezuela":{"phoneCode":"58"},"brunei":{"phoneCode":"673"},"uganda":{"phoneCode":"256"},"ukraine":{"phoneCode":"380"},"uruguay":{"phoneCode":"598"},"uzbekistan":{"phoneCode":"998"},"spain":{"phoneCode":"34"},"greece":{"phoneCode":"30"},"ivory_coast":{"phoneCode":"225"},"singapore":{"phoneCode":"65"},"new_caledonia":{"phoneCode":"687"},"new_zealand":{"phoneCode":"64"},"hungary":{"phoneCode":"36"},"syria":{"phoneCode":"963"},"jamaica":{"phoneCode":"1876"},"armenia":{"phoneCode":"374"},"yemen":{"phoneCode":"967"},"iraq":{"phoneCode":"964"},"iran":{"phoneCode":"98"},"israel":{"phoneCode":"972"},"italy":{"phoneCode":"39"},"india":{"phoneCode":"91"},"indonesia":{"phoneCode":"62"},"united_kingdom":{"phoneCode":"44"},"virgin_islands_british":{"phoneCode":"1340"},"jordan":{"phoneCode":"962"},"vietnam":{"phoneCode":"84"},"zambia":{"phoneCode":"260"},"chad":{"phoneCode":"235"},"gibraltar":{"phoneCode":"350"},"chile":{"phoneCode":"56"},"central_african_republic":{"phoneCode":"236"}},"api_panel":{"Attachment":{"defaultExampleId":"api_panel_type_default_example_attachment","description":"由若干“附件对象”组成的数组  每一个附件对象应该包含下列属性： mimeType (string) : 附件的媒体类型 name (string) : 附件的名称 size (number) : 附件的大小，单位为字节 width (number) : 如果附件是图片格式，表示图片的宽度，单位为px height (number) : 如果附件是图片格式，表示图片的高度，单位为px token (string) : 附件的访问路径 preview (string) : 如果附件是PDF格式，将会生成一个预览图，用户可以通过此网址访问","descriptionId":"api_panel_type_desc_attachment","defaultExample":"[\\n    {\\n        \\"id\\": \\"atcPtxnvqti5M\\",\\n        \\"name\\": \\"6.gif\\",\\n        \\"size\\": 33914,\\n        \\"mimeType\\": \\"image/gif\\",\\n        \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n        \\"width\\": 240,\\n        \\"height\\": 240,\\n        \\"url\\": \\"__host__/space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\"\\n    }\\n]","valueType":"array of attachment objects"},"AutoNumber":{"defaultExampleId":"api_panel_type_default_example_auto_number","description":"数值，正整数  创建记录时自动生成，不支持手动写入","descriptionId":"api_panel_type_desc_autonumber","defaultExample":"10001","valueType":"number"},"Checkbox":{"defaultExampleId":"api_panel_type_default_example_checkbox","description":"布尔类型的true 或 空  当此字段被勾选时返回“true”。除此以外，记录中不返回此字段！","descriptionId":"api_panel_type_desc_checkbox","defaultExample":"true","valueType":"boolean"},"CreatedBy":{"defaultExampleId":"api_panel_type_default_example_created_by","description":"创建此记录的成员（unit），以数组形式返回  「组织单元」是维格表中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  *创建人必须为成员（member） unitId (string) : 组织单元的ID unitType (number) : 组织单元的类型，1是小组，3是成员 unitName (string) : 组织单元的名称，如果unitType是1，此值为小组名称；如果unitType是3，此值为成员站内昵称","descriptionId":"api_panel_type_desc_created_by","defaultExample":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","valueType":"array of unit objects"},"CreatedTime":{"defaultExampleId":"api_panel_type_default_example_created_time","description":"日期和时间，以毫秒(ms)为单位返回时间戳","descriptionId":"api_panel_type_desc_created_time","defaultExample":"1600777860000","valueType":"number | string"},"Currency":{"defaultExampleId":"api_panel_type_default_example_currency","description":"数值，支持负值  通过api调用返回的值，不受列配置里指定的精度影响，只会原样返回。","descriptionId":"api_panel_type_desc_currency","defaultExample":"8.88","valueType":"number"},"DateTime":{"defaultExampleId":"api_panel_type_default_example_date_time","description":"日期和时间，以毫秒（ms）为单位返回时间戳","descriptionId":"api_panel_type_desc_date_time","defaultExample":"1600777860000","valueType":"number | string"},"Email":{"defaultExampleId":"api_panel_type_default_example_email","description":"邮箱地址（字符串）","descriptionId":"api_panel_type_desc_email","defaultExample":"support@vikadata.com","valueType":"string"},"Formula":{"defaultExampleId":"api_panel_type_default_example_formula","description":"经过公式和函数运算后的结果，数据类型可能是数字、字符串、布尔值  此字段是运算值，创建/更新记录时不支持写入","descriptionId":"api_panel_type_desc_formula","defaultExample":"在第一行完整填写数据，就可以查看示例了","valueType":"number | string | boolean"},"LastModifiedBy":{"defaultExampleId":"api_panel_type_default_example_last_modified_by","description":"最近一次编辑记录/指定字段的成员（unit），以数组形式返回  「组织单元」是维格表中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  *修改人必须为成员（member） unitId (string) : 组织单元的ID unitType (number) : 组织单元的类型，1是小组，3是成员 unitName (string) : 组织单元的名称，如果unitType是1，此值为小组名称；如果unitType是3，此值为成员站内昵称","descriptionId":"api_panel_type_desc_last_modified_by","defaultExample":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","valueType":"array of unit objects"},"LastModifiedTime":{"defaultExampleId":"api_panel_type_default_example_last_modified_time","description":"日期和时间，以毫秒 (ms) 为单位返回时间戳","descriptionId":"api_panel_type_desc_last_modified_time","defaultExample":"1600777860000","valueType":"number | string"},"Link":{"defaultExampleId":"api_panel_type_default_example_link","description":"由多条已关联记录的ID组成的数组  ","descriptionId":"api_panel_type_desc_link","defaultExample":"[\\n    \\"rec8116cdd76088af\\",\\n    \\"rec245db9343f55e8\\",\\n    \\"rec4f3bade67ff565\\"\\n]","valueType":"array of record IDs (strings)"},"LookUp":{"defaultExampleId":"api_panel_type_default_example_look_up","description":"A表与B表通过神奇关联字段进行表关联后，可使用此字段对B表的任意字段进行引用，视乎引用方式的不同，而返回不同数据类型的运算值。  如果引用方式选择了「原样引用」，则运算结果的数据类型保持与B表源字段一致； 其他引用方式皆返回数字类型的运算值","descriptionId":"api_panel_type_desc_look_up","defaultExample":"在第一行完整填写数据，就可以查看示例了","valueType":"any"},"Member":{"defaultExampleId":"api_panel_type_default_example_member","description":"由若干「组织单元（unit）」组成的数组  「组织单元」是维格表中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  id (string) : 组织单元的ID type (number) : 组织单元的类型，1是小组，3是成员 name (string) : 组织单元的名称，如果 type 是1，此值为小组名称；如果 type 是3，此值为成员站内昵称","descriptionId":"api_panel_type_desc_member","defaultExample":"[\\n    {\\n        \\"id\\": \\"1291258301781176321\\",\\n        \\"type\\": 3,\\n        \\"name\\": \\"小葵\\",\\n        \\"avatar\\": \\"https://s1.vika.cn/default/avatar004.jpg\\"\\n    }\\n]","valueType":"array of unit objects"},"MultiSelect":{"defaultExampleId":"api_panel_type_default_example_multi_select","description":"可能有多个选项，返回已选上的若干个选项值构成的字符串数组  当创建/更新记录时，提交的选项值并不存在于选项列表，则会返回错误码400，提示“参数错误”","descriptionId":"api_panel_type_desc_multi_select","defaultExample":"[\\n    \\"选项 A\\",\\n    \\"选项 B\\"\\n]","valueType":"array of strings"},"Number":{"defaultExampleId":"api_panel_type_default_example_number","description":"数值，支持负值  通过api调用返回的值，不受列配置里指定的精度影响，只会原样返回。","descriptionId":"api_panel_type_desc_number","defaultExample":"8","valueType":"number"},"Percent":{"defaultExampleId":"api_panel_type_default_example_percent","description":"数值，支持负值  通过API调用返回的值，不受列配置里指定的精度影响，只会原样返回。","descriptionId":"api_panel_type_desc_percent","defaultExample":"0.88","valueType":"number"},"Phone":{"defaultExampleId":"api_panel_type_default_example_phone","description":"电话号码（字符串）","descriptionId":"api_panel_type_desc_phone","defaultExample":"138xxxx7240","valueType":"string"},"Rating":{"defaultExampleId":"api_panel_type_default_example_rating","description":"评分值是 1-9 之间的一个正整数  如果单元格为空或者撤销评分，则记录中不返回此字段！","descriptionId":"api_panel_type_desc_rating","defaultExample":"1","valueType":"number"},"SingleSelect":{"defaultExampleId":"api_panel_type_default_example_single_select","description":"可能有多个选项，返回已选上的一个选项值（字符串）  当创建/更新记录时，提交的选项值并不存在于选项列表，则会返回错误码400，提示“参数错误”","descriptionId":"api_panel_type_desc_single_select","defaultExample":"选项 A","valueType":"string"},"SingleText":{"defaultExampleId":"api_panel_type_default_example_single_text","description":"单行文本，适合保存不带换行符的文本，例如文章的标题。","descriptionId":"api_panel_type_desc_single_text","defaultExample":"单行文本内容","valueType":"string"},"Text":{"defaultExampleId":"api_panel_type_default_example_text","description":"多行文本，可用于存放较长的文本内容，例如一篇学术论文。","descriptionId":"api_panel_type_desc_text","defaultExample":"多行\\n文本内容","valueType":"string"},"URL":{"defaultExampleId":"api_panel_type_default_example_url","description":"URL 地址（字符串）","descriptionId":"api_panel_type_desc_url","defaultExample":"https://vika.cn","valueType":"string"}},"audit":{"actual_delete_space":{"content":"audit_space_complete_delete_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_complete_delete"},"add_field_role":{"content":"audit_add_field_role_detail","type":"space","category":"datasheet_field_permission_change_event","name":"audit_add_field_role"},"add_node_role":{"content":"audit_add_node_role_detail","online":true,"type":"space","sort":"11","show_in_audit_log":true,"category":"work_catalog_permission_change_event","name":"audit_add_node_role"},"add_sub_admin":{"type":"space","category":"admin_permission_change_event"},"add_team_to_member":{"type":"space","category":"organization_change_event"},"agree_user_apply":{"type":"space","category":"organization_change_event"},"cancel_delete_space":{"content":"audit_space_cancel_delete_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_cancel_delete"},"change_main_admin":{"type":"space","category":"admin_permission_change_event"},"copy_node":{"content":"audit_space_node_copy_detail","online":true,"type":"space","sort":"4","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_copy"},"create_node":{"content":"audit_space_node_create_detail","online":true,"type":"space","sort":"1","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_create"},"create_space":{"content":"audit_space_create_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_create"},"create_team":{"type":"space","category":"organization_change_event"},"create_template":{"content":"audit_create_template_detail","online":true,"type":"space","category":"space_template_event","name":"audit_create_template"},"delete_field_role":{"content":"audit_delete_field_role_detail","type":"space","category":"datasheet_field_permission_change_event","name":"audit_delete_field_role"},"delete_node":{"content":"audit_space_node_delete_detail","online":true,"type":"space","sort":"6","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_delete"},"delete_node_role":{"content":"audit_delete_node_role_detail","online":true,"type":"space","sort":"13","show_in_audit_log":true,"category":"work_catalog_permission_change_event","name":"audit_delete_node_role"},"delete_rubbish_node":{"content":"audit_space_rubbish_node_delete_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_space_rubbish_node_delete"},"delete_space":{"content":"audit_space_delete_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_delete"},"delete_sub_admin":{"type":"space","category":"admin_permission_change_event"},"delete_team":{"type":"space","category":"organization_change_event"},"delete_template":{"content":"audit_delete_template_detail","online":true,"type":"space","category":"space_template_event","name":"audit_delete_template"},"disable_field_role":{"content":"audit_disable_field_role_detail","type":"space","category":"datasheet_field_permission_change_event","name":"audit_disable_field_role"},"disable_node_role":{"content":"audit_disable_node_role_detail","online":true,"type":"space","sort":"10","show_in_audit_log":true,"category":"work_catalog_permission_change_event","name":"audit_disable_node_role"},"disable_node_share":{"content":"audit_disable_node_share_detail","online":true,"type":"space","sort":"16","show_in_audit_log":true,"category":"work_catalog_share_event","name":"audit_disable_node_share"},"enable_field_role":{"content":"audit_enable_field_role_detail","type":"space","category":"datasheet_field_permission_change_event","name":"audit_enable_field_role"},"enable_node_role":{"content":"audit_enable_node_role_detail","online":true,"type":"space","sort":"9","show_in_audit_log":true,"category":"work_catalog_permission_change_event","name":"audit_enable_node_role"},"enable_node_share":{"content":"audit_enable_node_share_detail","online":true,"type":"space","sort":"14","show_in_audit_log":true,"category":"work_catalog_share_event","name":"audit_enable_node_share"},"export_node":{"content":"audit_space_node_export_detail","type":"space","category":"work_catalog_change_event","name":"audit_space_node_export"},"import_node":{"content":"audit_space_node_import_detail","online":true,"type":"space","sort":"3","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_import"},"invite_user_join_by_email":{"content":"audit_space_invite_user_detail","type":"space","category":"organization_change_event","name":"audit_space_invite_user"},"move_node":{"content":"audit_space_node_move_detail","online":true,"type":"space","sort":"5","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_move"},"quote_template":{"content":"audit_quote_template_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_quote_template"},"recover_rubbish_node":{"content":"audit_space_rubbish_node_recover_detail","online":true,"type":"space","sort":"7","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_rubbish_node_recover"},"remove_member_from_team":{"type":"space","category":"organization_change_event"},"remove_user":{"type":"space","category":"organization_change_event"},"rename_node":{"content":"audit_space_node_rename_detail","online":true,"type":"space","sort":"2","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_space_node_rename"},"rename_space":{"content":"audit_space_rename_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_rename"},"sort_node":{"content":"audit_space_node_sort_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_space_node_sort"},"store_share_node":{"content":"audit_store_share_node_detail","online":true,"type":"space","sort":"8","show_in_audit_log":true,"category":"work_catalog_change_event","name":"audit_store_share_node"},"update_field_role":{"content":"audit_update_field_role_detail","type":"space","category":"datasheet_field_permission_change_event","name":"audit_update_field_role"},"update_field_role_setting":{"type":"space","category":"datasheet_field_permission_change_event"},"update_member_property":{"type":"space","category":"organization_change_event"},"update_member_team":{"type":"space","category":"organization_change_event"},"update_node_cover":{"content":"audit_space_node_update_cover_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_space_node_update_cover"},"update_node_desc":{"content":"audit_space_node_update_desc_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_space_node_update_desc"},"update_node_icon":{"content":"audit_space_node_update_icon_detail","online":true,"type":"space","category":"work_catalog_change_event","name":"audit_space_node_update_icon"},"update_node_role":{"content":"audit_update_node_role_detail","online":true,"type":"space","sort":"12","show_in_audit_log":true,"category":"work_catalog_permission_change_event","name":"audit_update_node_role"},"update_node_share_setting":{"content":"audit_update_node_share_setting_detail","online":true,"type":"space","sort":"15","show_in_audit_log":true,"category":"work_catalog_share_event","name":"audit_update_node_share_setting"},"update_space_logo":{"content":"audit_space_update_logo_detail","online":true,"type":"space","category":"space_change_event","name":"audit_space_update_logo"},"update_sub_admin_role":{"type":"space","category":"admin_permission_change_event"},"update_team_property":{"type":"space","category":"organization_change_event"},"user_leave_space":{"content":"audit_user_quit_space_detail","type":"space","category":"organization_change_event","name":"audit_user_quit_space"},"user_login":{"content":"audit_user_login_detail","online":true,"type":"system","category":"account_event","name":"audit_user_login"},"user_logout":{"content":"audit_user_logout_detail","online":true,"type":"system","category":"account_event","name":"audit_user_logout"}},"locales":[{"currency_name":"Pounds","currency_symbol":"$","id":"en_GB","strings_language":"en_US","currency_code":"GBD","name":"English(United Kingdom)"},{"currency_name":"US Dollar","currency_symbol":"$","id":"en_US","strings_language":"en_US","currency_code":"USD","name":"English(USA)"},{"currency_name":"日元","currency_symbol":"￥","id":"ja_JP","strings_language":"ja_JP","currency_code":"JPY","name":"Japan"},{"currency_name":"人民币","currency_symbol":"￥","id":"zh_CN","strings_language":"zh_CN","currency_code":"RMB","name":"简体中文\\n"},{"currency_name":"港币","currency_symbol":"$","id":"zh_HK","strings_language":"zh_HK","currency_code":"HKD","name":"繁体中文(中国香港)"},{"currency_name":"新币","currency_symbol":"$","id":"zh_SG","strings_language":"zh_HK","currency_code":"SGD","name":"繁体中文(新加坡)"},{"currency_name":"台币","currency_symbol":"$","id":"zh_TW","strings_language":"zh_HK","currency_code":"HKD","name":"繁体中文(台湾)"}],"marketplace":{"cli_9f3930dd7d7ad00c":{"logo":{"id":"atcEEp5gDuMWu","name":"feishu.svg","size":1059,"mimeType":"image/svg+xml","token":"space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95"},"env":["integration"],"disable":true,"app_info":"marketplace_integration_app_info_fesihu","note":"marketplace_integration_app_note_feishu","app_name":"marketplace_integration_app_name_feishu","type":"integration","app_description":"marketplace_integration_app_dec_feishu","id":"cli_9f3930dd7d7ad00c","display_order":10,"image":{"id":"atcnIol43SAeV","name":"飞书集成.png","size":362548,"mimeType":"image/png","token":"space/2021/12/08/8742173785d34efc905ba1fd23227cc0","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/8742173785d34efc905ba1fd23227cc0"},"app_id":"cli_9f3930dd7d7ad00c","link_to_cms":"integration_feishu_help_url","app_type":"LARK_STORE","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_open","btn_action":"https://app.feishu.cn/app/cli_9f3930dd7d7ad00c","btn_type":"primary","btn_close_action":"https://www.feishu.cn/admin/#/appCenter/manage/cli_9f3930dd7d7ad00c?lang=zh-CN","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"marketplace_integration_btncard_appsbtntext_read_more","btn_action":"https://app.feishu.cn/app/cli_9f3930dd7d7ad00c","app_description":"marketplace_integration_app_dec_feishu","btn_type":"primary","help_link":"integration_feishu_help_url"}},"cli_a08120b120fad00e":{"logo":{"id":"atc8qT4qak5kW","name":"feishu.svg","size":1059,"mimeType":"image/svg+xml","token":"space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95"},"env":["staging"],"disable":true,"app_info":"marketplace_integration_app_info_fesihu","note":"marketplace_integration_app_note_feishu","app_name":"marketplace_integration_app_name_feishu","type":"integration","app_description":"marketplace_integration_app_dec_feishu","id":"cli_a08120b120fad00e","display_order":10,"image":{"id":"atcEedAZX3ufL","name":"飞书集成.png","size":362548,"mimeType":"image/png","token":"space/2021/12/08/8742173785d34efc905ba1fd23227cc0","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/8742173785d34efc905ba1fd23227cc0"},"app_id":"cli_a08120b120fad00e","link_to_cms":"integration_feishu_help_url","app_type":"LARK_STORE","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_open","btn_action":"https://app.feishu.cn/app/cli_a08120b120fad00e","btn_type":"primary","btn_close_action":"https://www.feishu.cn/admin/#/appCenter/manage/cli_a08120b120fad00e?lang=zh-CN","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"marketplace_integration_btncard_appsbtntext_read_more","btn_action":"https://app.feishu.cn/app/cli_a08120b120fad00e","app_description":"marketplace_integration_app_dec_feishu","btn_type":"primary","help_link":"integration_feishu_help_url"}},"cli_9f614b454434500e":{"logo":{"id":"atckEWR2o3EgR","name":"feishu.svg","size":1059,"mimeType":"image/svg+xml","token":"space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/4c4be697b9e94672a7c65d979b60ab95"},"env":["production"],"disable":true,"app_info":"marketplace_integration_app_info_fesihu","note":"marketplace_integration_app_note_feishu","app_name":"marketplace_integration_app_name_feishu","type":"integration","app_description":"marketplace_integration_app_dec_feishu","id":"cli_9f614b454434500e","display_order":10,"image":{"id":"atcLNS2l4KYxV","name":"飞书集成.png","size":362548,"mimeType":"image/png","token":"space/2021/12/08/8742173785d34efc905ba1fd23227cc0","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/8742173785d34efc905ba1fd23227cc0"},"app_id":"cli_9f614b454434500e","link_to_cms":"integration_feishu_help_url","app_type":"LARK_STORE","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_open","btn_action":"https://app.feishu.cn/app/cli_9f614b454434500e","btn_type":"primary","btn_close_action":"https://www.feishu.cn/admin/#/appCenter/manage/cli_9f614b454434500e?lang=zh-CN","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"marketplace_integration_btncard_appsbtntext_read_more","btn_action":"https://app.feishu.cn/app/cli_9f614b454434500e","app_description":"marketplace_integration_app_dec_feishu","btn_type":"primary","help_link":"integration_feishu_help_url"}},"ina5200279359980055":{"logo":{"id":"atcPfGUqrcZ5j","name":"企业微信.svg","size":5878,"mimeType":"image/svg+xml","token":"space/2021/04/28/e043014e0af54bf58c6bb78e92b00b60","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/e043014e0af54bf58c6bb78e92b00b60"},"env":["integration","staging","production"],"app_info":"marketplace_integration_app_info_wecahtcp","note":"marketplace_integration_app_note_wechatcp","app_name":"marketplace_integration_app_name_wechatcp","type":"integration","app_description":"marketplace_integration_app_dec_wechatcp","id":"ina5200279359980055","display_order":30,"image":{"id":"atcuiGRXDfIoT","name":"企业微信集成.png","size":599396,"mimeType":"image/png","token":"space/2021/12/08/772be217f729479985295ae30dc63291","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/772be217f729479985295ae30dc63291"},"app_id":"ina5200279359980055","link_to_cms":"integration_wecom_help_url","app_type":"WECOM_STORE","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_open","btn_action":"/user/wecom/integration/bind","btn_type":"primary","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"0","app_description":"marketplace_integration_app_dec_wechatcp","btn_type":"primary","help_link":"integration_wecom_help_url"}},"ina9134969049653777":{"logo":{"id":"atcpH3rGddayo","name":"ding.svg","size":1831,"mimeType":"image/svg+xml","token":"space/2021/04/28/7af742cdbb3c4ae3a76e30e68bf471cb","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/7af742cdbb3c4ae3a76e30e68bf471cb"},"env":["integration","staging","production"],"app_info":"marketplace_integration_app_info_dingtalk","note":"marketplace_integration_app_note_dingtalk","app_name":"marketplace_integration_app_name_dingtalk","type":"integration","app_description":"marketplace_integration_app_dec_dingtalk","id":"ina9134969049653777","display_order":20,"image":{"id":"atcOhMLdK4DOv","name":"钉钉集成.png","size":124923,"mimeType":"image/png","token":"space/2021/12/08/46a769fdf74d4c0f8676f3ccca358643","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/46a769fdf74d4c0f8676f3ccca358643"},"app_id":"ina9134969049653777","link_to_cms":"integration_dingtalk_help_url","app_type":"DINGTALK_STORE","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_open","btn_action":"/help/integration-dingtalk/","btn_type":"primary","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"marketplace_integration_btncard_appsbtntext_read_more","btn_action":"/help/integration-dingtalk/","app_description":"marketplace_integration_app_dec_dingtalk","btn_type":"primary","help_link":"integration_dingtalk_help_url"}},"ina5645957505507647":{"logo":{"id":"atclqW8EjJIFz","name":"Frame.svg","size":575,"mimeType":"image/svg+xml","token":"space/2021/04/28/0c070534ccda4b4dbae3f4c7c303d02e","width":0,"height":0,"url":"https://s1.vika.cn/space/2021/04/28/0c070534ccda4b4dbae3f4c7c303d02e"},"env":["integration","staging","production"],"app_info":"marketplace_integration_app_info_office_preview","note":"marketplace_integration_app_note_office_preview","app_name":"marketplace_integration_app_name_officepreview","type":"integration","app_description":"marketplace_integration_app_dec_office_preview","id":"ina5645957505507647","display_order":20,"image":{"id":"atczaIPjTBq8F","name":"永中集成.png","size":473712,"mimeType":"image/png","token":"space/2021/12/08/18efb2fce9a64dc08262fc5cc8f0eac1","width":1600,"height":1072,"url":"https://s1.vika.cn/space/2021/12/08/18efb2fce9a64dc08262fc5cc8f0eac1"},"app_id":"ina5645957505507647","link_to_cms":"integration_yozosoft_help_url","app_type":"OFFICE_PREVIEW","btn_card":{"btn_text":"marketplace_integration_btncard_btntext_authorize","btn_type":"primary","apps_btn_text":"marketplace_integration_btncard_appsbtntext_read_more"},"modal":{"btn_text":"marketplace_integration_btncard_appsbtntext_read_more","app_description":"marketplace_integration_app_dec_office_preview","btn_type":"primary","help_link":"integration_yozosoft_help_url"}}},"test_function":{"async_compute":{"feature_name":"async_compute","logo":"space/2022/01/25/bef8c76826c540c8a14c7f10938a60f9","id":"async_compute","note":"test_function_note_async_compute","feature_key":"async_compute","modal":{"btn_text":"enable","info":"test_function_modal_info_async_compute","btn_action":"https://app.feishu.cn/app/cli_9f3930dd7d7ad00c","btn_type":"primary","info的副本":"test_function_card_info_async_compute","info_image":"space/2022/01/25/83d9e37eac454877a5d2a9c1a6bdacae"},"card":{"btn_open_action":"/","info":"test_function_card_info_async_compute","info的副本":"test_function_card_info_async_compute","btn_close_action":"/","btn_text":"test_function_btncard_btntext_open","btn_type":"primary"}},"render_prompt":{"feature_name":"render_prompt","logo":"space/2022/01/25/387465f4e3eb40b4a53a44fea624cd02","id":"render_prompt","note":"test_function_note_render_prompt","feature_key":"render_prompt","modal":{"btn_text":"enable","info":"test_function_modal_info_render_prompt","btn_action":"https://app.feishu.cn/app/cli_a08120b120fad00e","btn_type":"primary","info的副本":"test_function_card_info_render_prompt","info_image":"space/2022/01/25/e2957e5c44aa4b40a7deee427c37cf30"},"card":{"btn_open_action":"/","info":"test_function_card_info_render_prompt","info的副本":"test_function_card_info_render_prompt","btn_close_action":"/","btn_text":"test_function_btncard_btntext_open","btn_type":"primary"}},"robot":{"feature_name":"robot","logo":"space/2022/01/25/4a36a62cf12c47a0bf29b4808f5fcbb8","id":"robot","note":"test_function_note_robot","feature_key":"robot","modal":{"btn_text":"test_function_btnmodal_btntext","info":"test_function_modal_info_robot","btn_action":"https://vika.cn/share/shrL1BVlA2ZhkSE7nYEgt","btn_type":"primary","info的副本":"test_function_card_info_robot","info_image":"space/2022/01/25/7679e8085aa0473e9aaa86809cf1bdeb"},"card":{"btn_open_action":"/","info":"test_function_card_info_robot","info的副本":"test_function_card_info_robot","btn_close_action":"/","btn_text":"test_function_btncard_btntext_apply","btn_type":"primary"}},"widget_center":{"feature_name":"widget_name","logo":"space/2022/01/25/ff9091547ee84a6c87c3bc7ec1640f25","id":"widget_center","note":"test_function_note_widget","feature_key":"widget_center","modal":{"btn_text":"test_function_btnmodal_btntext","info":"test_function_modal_info_widget","btn_action":"https://vika.cn/share/shrL1BVlA2ZhkSE7nYEgt","btn_type":"primary","info的副本":"test_function_card_info_widget","info_image":"space/2022/01/25/3828da03312f4035a37912edd6db6f0b"},"card":{"btn_open_action":"/","info":"test_function_card_info_widget","info的副本":"test_function_card_info_widget","btn_close_action":"/","btn_text":"test_function_btncard_btntext_apply","btn_type":"primary"}},"render_normal":{"feature_name":"render_normal","logo":"space/2022/01/25/52f1fe2f1be34a2fb1227fc36d8861fc","id":"render_normal","note":"test_function_note_render_normal","feature_key":"render_normal","modal":{"btn_text":"enable","info":"test_function_modal_info_render_normal","btn_type":"primary","info的副本":"test_function_card_info_render_normal","info_image":"space/2022/01/25/e2957e5c44aa4b40a7deee427c37cf30"},"card":{"btn_open_action":"/","info":"test_function_card_info_render_normal","info的副本":"test_function_card_info_render_normal","btn_close_action":"/","btn_text":"test_function_btncard_btntext_open","btn_type":"primary"}},"view_manual_save":{"feature_name":"view_manual_save","logo":"space/2022/01/25/4aa6c029188645cebd8c31f3def205d9","id":"view_manual_save","note":"test_function_note_view_manual_save","feature_key":"view_manual_save","modal":{"btn_text":"enable","info":"test_function_modal_info_view_manual_save","btn_type":"primary","info的副本":"test_function_card_info_view_manual_save","info_image":"space/2021/11/30/854742d76eaa46bba848d80f358f9cdf"},"card":{"btn_open_action":"/","info":"test_function_card_info_view_manual_save","info的副本":"test_function_card_info_view_manual_save","btn_close_action":"/","btn_text":"test_function_btncard_btntext_open","btn_type":"primary"}}},"player":{"trigger":[{"actions":["open_guide_wizards([4])"],"rules":["identity_ALL_OF_TRUE_[\'main_admin\']","device_IS_pc","sign_up_time_IS_AFTER_2023-03-17 09:00"],"id":"address_shown,[identity_ALL_OF_TRUE_[\'main_admin\'], device_IS_pc, sign_up_time_IS_AFTER_2023-03-17 09:00],[open_guide_wizards([4])]","event":["address_shown"]},{"actions":["open_guide_wizard(35)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId","edition_IS_vika"],"id":"datasheet_add_new_view,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId, edition_IS_vika],[open_guide_wizard(35)]","event":["datasheet_add_new_view"],"eventState":"{\\"viewType\\":6}"},{"actions":["open_guide_wizard(38)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId","edition_IS_vika"],"id":"datasheet_add_new_view,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId, edition_IS_vika],[open_guide_wizard(38)]","event":["datasheet_add_new_view"],"eventState":"{\\"viewType\\":5}"},{"actions":["open_guide_wizard(55)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId","edition_IS_vika"],"id":"datasheet_add_new_view,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId, edition_IS_vika],[open_guide_wizard(55)]","event":["datasheet_add_new_view"],"eventState":"{\\"viewType\\":7}"},{"actions":["open_guide_wizard(106)"],"rules":["device_IS_pc"],"id":"datasheet_create_mirror_tip,[device_IS_pc],[open_guide_wizard(106)]","event":["datasheet_create_mirror_tip"]},{"actions":["open_guide_wizard(30)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"datasheet_dashboard_panel_shown,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(30)]","event":["datasheet_dashboard_panel_shown"]},{"actions":["open_guide_wizard(88)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"datasheet_gantt_view_shown,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(88)]","event":["datasheet_gantt_view_shown"]},{"actions":["open_guide_wizard(84)"],"rules":["device_IS_pc"],"id":"datasheet_user_menu,[device_IS_pc],[open_guide_wizard(84)]","event":["datasheet_user_menu"]},{"actions":["open_guide_wizards([31])"],"rules":["device_IS_pc","sign_up_time_IS_AFTER_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"datasheet_wigdet_empty_panel_shown,[device_IS_pc, sign_up_time_IS_AFTER_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizards([31])]","event":["datasheet_wigdet_empty_panel_shown"]},{"actions":["open_guide_wizard(85)"],"rules":["device_IS_pc","sign_up_time_IS_AFTER_2022-04-10 00:00"],"id":"questionnaire_shown_after_sign,[device_IS_pc, sign_up_time_IS_AFTER_2022-04-10 00:00],[open_guide_wizard(85)]","event":["questionnaire_shown_after_sign"]},{"actions":["open_guide_wizard(41)"],"rules":["device_IS_pc","url_EXCLUDES_shareId","wizard[42].count_GREATER_THAN_300","wizard[43].count_GREATER_THAN_100"],"id":"questionnaire_shown,[device_IS_pc, url_EXCLUDES_shareId, wizard[42].count_GREATER_THAN_300, wizard[43].count_GREATER_THAN_100],[open_guide_wizard(41)]","event":["questionnaire_shown"]},{"actions":["open_guide_wizard(41)"],"rules":["wizard[42].count_GREATER_THAN_1000","device_IS_pc","url_EXCLUDES_shareId","wizard[43].count_GREATER_THAN_200"],"id":"questionnaire_shown,[wizard[42].count_GREATER_THAN_1000, device_IS_pc, url_EXCLUDES_shareId, wizard[43].count_GREATER_THAN_200],[open_guide_wizard(41)]","event":["questionnaire_shown"]},{"actions":["open_guide_wizard(41)"],"rules":["wizard[42].count_GREATER_THAN_6000","identity_ALL_OF_TRUE_[\'main_admin\']","device_IS_pc","url_EXCLUDES_shareId"],"id":"questionnaire_shown,[wizard[42].count_GREATER_THAN_6000, identity_ALL_OF_TRUE_[\'main_admin\'], device_IS_pc, url_EXCLUDES_shareId],[open_guide_wizard(41)]","event":["questionnaire_shown"]},{"actions":["open_guide_wizards([19])"],"rules":["device_IS_pc","identity_ALL_OF_TRUE_[\'main_admin\']","sign_up_time_IS_AFTER_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"template_center_shown,[device_IS_pc, identity_ALL_OF_TRUE_[\'main_admin\'], sign_up_time_IS_AFTER_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizards([19])]","event":["template_center_shown"]},{"actions":["open_guide_wizard(78)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"view_add_panel_shown,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(78)]","event":["view_add_panel_shown"]},{"actions":["open_guide_wizard(52)"],"rules":["labs_ONE_OF_TRUE_[\'view_manual_save\']"],"id":"view_notice_auto_save_true,[labs_ONE_OF_TRUE_[\'view_manual_save\']],[open_guide_wizard(52)]","event":["view_notice_auto_save_true"]},{"actions":["open_guide_wizard(51)"],"rules":["labs_ONE_OF_TRUE_[\'view_manual_save\']"],"id":"view_notice_view_auto_false,[labs_ONE_OF_TRUE_[\'view_manual_save\']],[open_guide_wizard(51)]","event":["view_notice_view_auto_false"]},{"actions":["open_guide_wizard(50)"],"rules":["labs_ONE_OF_TRUE_[\'view_manual_save\']"],"id":"viewset_manual_save_tip,[labs_ONE_OF_TRUE_[\'view_manual_save\']],[open_guide_wizard(50)]","event":["viewset_manual_save_tip"]},{"actions":["open_guide_wizard(22)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_create_form_bth_clicked,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(22)]","event":["workbench_create_form_bth_clicked"],"suspended":true},{"actions":["open_guide_wizard(61)"],"rules":["device_IS_pc","url_EXCLUDES_shareId"],"id":"workbench_folder_from_template_showcase_shown,[device_IS_pc, url_EXCLUDES_shareId],[open_guide_wizard(61)]","event":["workbench_folder_from_template_showcase_shown"]},{"actions":["open_guide_wizard(46)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_form_container_shown,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(46)]","event":["workbench_form_container_shown"]},{"actions":["open_guide_wizard(25)"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_hidden_vikaby_btn_clicked,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizard(25)]","event":["workbench_hidden_vikaby_btn_clicked"]},{"actions":["open_guide_wizards([104, 105])"],"rules":["device_IS_pc","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_show_trial_tip,[device_IS_pc, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizards([104, 105])]","event":["workbench_show_trial_tip"]},{"actions":["open_guide_wizards([104, 105])"],"rules":["device_IS_pc","sign_up_time_IS_AFTER_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId","edition_IS_apitable"],"id":"workbench_shown,[device_IS_pc, sign_up_time_IS_AFTER_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId, edition_IS_apitable],[open_guide_wizards([104, 105])]","event":["workbench_shown"]},{"actions":["open_guide_wizards([24, 1])"],"rules":["device_IS_pc","sign_up_time_IS_AFTER_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId","edition_IS_vika"],"id":"workbench_shown,[device_IS_pc, sign_up_time_IS_AFTER_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId, edition_IS_vika],[open_guide_wizards([24, 1])]","event":["workbench_shown"]},{"actions":["open_guide_wizards([29, 76, 107])"],"rules":["device_IS_pc","sign_up_time_IS_BEFORE_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_shown,[device_IS_pc, sign_up_time_IS_BEFORE_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizards([29, 76, 107])]","event":["workbench_shown"]},{"actions":["open_guide_wizards([76, 107])"],"rules":["sign_up_time_IS_BEFORE_2023-03-17 09:00","device_IS_mobile","url_EXCLUDES_templateId","url_EXCLUDES_shareId"],"id":"workbench_shown,[sign_up_time_IS_BEFORE_2023-03-17 09:00, device_IS_mobile, url_EXCLUDES_templateId, url_EXCLUDES_shareId],[open_guide_wizards([76, 107])]","event":["workbench_shown"]},{"actions":["open_guide_wizards([76, 87])"],"rules":["sign_up_time_IS_BEFORE_2023-03-17 09:00","url_EXCLUDES_templateId","url_EXCLUDES_shareId","device_IS_app"],"id":"workbench_shown,[sign_up_time_IS_BEFORE_2023-03-17 09:00, url_EXCLUDES_templateId, url_EXCLUDES_shareId, device_IS_app],[open_guide_wizards([76, 87])]","event":["workbench_shown"]}],"events":{"_":{},"address_shown":{"module":"address","name":"shown"},"app_error_logger":{"module":"app","name":"error_logger"},"app_modal_confirm":{"module":"app","name":"modal_confirm"},"app_set_user_id":{"module":"app","name":"set_user_id"},"app_tracker":{"module":"app","name":"tracker"},"datasheet_add_new_view":{"module":"datasheet","name":"add_new_view"},"datasheet_create_mirror_tip":{"module":"datasheet","name":"create_mirror_tip","guide":{"step":["recixOMO4Roib"]}},"datasheet_dashboard_panel_shown":{"module":"datasheet","name":"dashboard_panel_shown"},"datasheet_delete_record":{"module":"datasheet","name":"delete_record"},"datasheet_field_context_hidden":{"module":"datasheet","name":"field_context_hidden"},"datasheet_field_context_shown":{"module":"datasheet","name":"field_context_shown"},"datasheet_field_setting_hidden":{"module":"datasheet","name":"field_setting_hidden","guide":{"step":["recMyeQyjTId0"]}},"datasheet_field_setting_shown":{"module":"datasheet","name":"field_setting_shown"},"datasheet_gantt_view_shown":{"module":"datasheet","name":"gantt_view_shown"},"datasheet_grid_view_shown":{"module":"datasheet","name":"grid_view_shown","guide":{"step":["recYXMUXd8Rv8"]}},"datasheet_org_has_link_field":{"module":"datasheet","name":"org_has_link_field"},"datasheet_org_view_add_first_node":{"module":"datasheet","name":"org_view_add_first_node"},"datasheet_org_view_drag_to_unhandled_list":{"module":"datasheet","name":"org_view_drag_to_unhandled_list"},"datasheet_org_view_right_panel_shown":{"module":"datasheet","name":"org_view_right_panel_shown"},"datasheet_search_panel_hidden":{"module":"datasheet","name":"search_panel_hidden","guide":{"step":["recnHGTjyU7Jw"]}},"datasheet_search_panel_shown":{"module":"datasheet","name":"search_panel_shown","guide":{"step":["reczmcUK1NLK4"]}},"datasheet_shown":{"module":"datasheet","name":"shown"},"datasheet_user_menu":{"module":"datasheet","name":"user_menu"},"datasheet_widget_center_modal_shown":{"module":"datasheet","name":"widget_center_modal_shown","guide":{"step":["reciAEMbU27Q0"]}},"datasheet_wigdet_empty_panel_shown":{"module":"datasheet","name":"wigdet_empty_panel_shown"},"get_context_menu_file_more":{"module":"get_context_menu","name":"file_more"},"get_context_menu_folder_more":{"module":"get_context_menu","name":"folder_more"},"get_context_menu_root_add":{"module":"get_context_menu","name":"root_add"},"get_nav_list":{"module":"get_nav","name":"list"},"invite_entrance_modal_shown":{"module":"invite","name":"entrance_modal_shown"},"questionnaire_shown":{"module":"questionnaire","name":"shown"},"questionnaire_shown_after_sign":{"module":"questionnaire","name":"shown_after_sign"},"space_setting_main_admin_shown":{"module":"space_setting","name":"main_admin_shown"},"space_setting_member_manage_shown":{"module":"space_setting","name":"member_manage_shown"},"space_setting_overview_shown":{"module":"space_setting","name":"overview_shown"},"space_setting_sub_admin_shown":{"module":"space_setting","name":"sub_admin_shown"},"space_setting_workbench_shown":{"module":"space_setting","name":"workbench_shown"},"template_center_shown":{"module":"template","name":"center_shown"},"template_detail_shown":{"module":"template","name":"detail_shown"},"template_use_confirm_modal_shown":{"module":"template","name":"use_confirm_modal_shown"},"view_add_panel_shown":{"module":"view","name":"add_panel_shown"},"view_convert_gallery":{"module":"view","name":"convert_gallery"},"view_notice_auto_save_true":{"module":"view","name":"notice_auto_save_true"},"view_notice_view_auto_false":{"module":"view","name":"notice_view_auto_false"},"viewset_manual_save_tip":{"module":"viewset","name":"manual_save_tip"},"workbench_create_form_bth_clicked":{"module":"workbench","name":"create_form_bth_clicked"},"workbench_create_form_panel_shown":{"module":"workbench","name":"create_form_panel_shown"},"workbench_create_form_previewer_shown":{"module":"workbench","name":"create_form_previewer_shown","guide":{"step":["recZFoBGGlEJ5"]}},"workbench_entry":{"module":"workbench","name":"entry"},"workbench_folder_from_template_showcase_shown":{"module":"workbench","name":"folder_from_template_showcase_shown"},"workbench_folder_showcase_shown":{"module":"workbench","name":"folder_showcase_shown"},"workbench_form_container_shown":{"module":"workbench","name":"form_container_shown"},"workbench_hidden_vikaby_btn_clicked":{"module":"workbench","name":"hidden_vikaby_btn_clicked"},"workbench_no_emit":{"module":"workbench","name":"no_emit"},"workbench_show_trial_tip":{"module":"workbench","name":"show_trial_tip"},"workbench_shown":{"module":"workbench","name":"shown"},"workbench_space_list_shown":{"module":"workbench","name":"space_list_shown"}},"rule":[{"operator":"IS","condition":"device","id":"device_IS_app","conditionArgs":"app"},{"operator":"IS","condition":"device","id":"device_IS_mobile","conditionArgs":"mobile"},{"operator":"IS","condition":"device","id":"device_IS_pc","conditionArgs":"pc"},{"operator":"IS","condition":"edition","id":"edition_IS_apitable","conditionArgs":"apitable"},{"operator":"IS","condition":"edition","id":"edition_IS_vika","conditionArgs":"vika"},{"operator":"ALL_OF_FALSE","condition":"identity","id":"identity_ALL_OF_FALSE_[\'sub_admin\', \'main_admin\', \'member\']","conditionArgs":"[\'sub_admin\', \'main_admin\', \'member\']"},{"operator":"ALL_OF_TRUE","condition":"identity","id":"identity_ALL_OF_TRUE_[\'main_admin\']","conditionArgs":"[\'main_admin\']"},{"operator":"ALL_OF_TRUE","condition":"identity","id":"identity_ALL_OF_TRUE_[\'sub_admin\']","conditionArgs":"[\'sub_admin\']"},{"operator":"ONE_OF_TRUE","condition":"identity","id":"identity_ONE_OF_TRUE_[\'member\']","conditionArgs":"[\'member\']"},{"operator":"ONE_OF_TRUE","condition":"identity","id":"identity_ONE_OF_TRUE_[\'sub_admin,\'member\']","conditionArgs":"[\'sub_admin,\'member\']"},{"operator":"ONE_OF_TRUE","condition":"labs","id":"labs_ONE_OF_TRUE_[\'view_manual_save\']","conditionArgs":"[\'view_manual_save\']"},{"operator":"IS_AFTER","condition":"sign_up_time","id":"sign_up_time_IS_AFTER_2022-04-10 00:00","conditionArgs":"2022-04-10 00:00"},{"operator":"IS_AFTER","condition":"sign_up_time","id":"sign_up_time_IS_AFTER_2023-03-17 09:00","conditionArgs":"2023-03-17 09:00"},{"operator":"IS_BEFORE","condition":"sign_up_time","id":"sign_up_time_IS_BEFORE_2023-03-17 09:00","conditionArgs":"2023-03-17 09:00"},{"operator":"EXCLUDES","condition":"url","id":"url_EXCLUDES_shareId","conditionArgs":"shareId"},{"operator":"EXCLUDES","condition":"url","id":"url_EXCLUDES_templateId","conditionArgs":"templateId"},{"operator":"GREATER_THAN","condition":"wizard[1].count","id":"wizard[1].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"EQUAL","condition":"wizard[12].count","id":"wizard[12].count_EQUAL_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[12].count","id":"wizard[12].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"EQUAL","condition":"wizard[14].count","id":"wizard[14].count_EQUAL_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[14].count","id":"wizard[14].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"EQUAL","condition":"wizard[21].count","id":"wizard[21].count_EQUAL_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[21].count","id":"wizard[21].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[24].count","id":"wizard[24].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[27].count","id":"wizard[27].count_GREATER_THAN_0","conditionArgs":"0"},{"operator":"GREATER_THAN","condition":"wizard[42].count","id":"wizard[42].count_GREATER_THAN_1000","conditionArgs":"1000"},{"operator":"GREATER_THAN","condition":"wizard[42].count","id":"wizard[42].count_GREATER_THAN_300","conditionArgs":"300"},{"operator":"GREATER_THAN","condition":"wizard[42].count","id":"wizard[42].count_GREATER_THAN_6000","conditionArgs":"6000"},{"operator":"GREATER_THAN","condition":"wizard[43].count","id":"wizard[43].count_GREATER_THAN_100","conditionArgs":"100"},{"operator":"GREATER_THAN","condition":"wizard[43].count","id":"wizard[43].count_GREATER_THAN_200","conditionArgs":"200"}],"jobs":{"15_days_recall":{"actions":[],"cron":"0 7 * * *"},"3_days_recall":{"actions":[],"cron":"0 7 * * *"},"7_days_recall":{"actions":[],"cron":"0 7 * * *"}},"action":[{"id":"clear_guide_all_ui()","command":"clear_guide_all_ui","guide":{"step":["recsHUjGVAb1E"]}},{"id":"clear_guide_uis([\\"popover\\"])","command":"clear_guide_uis","commandArgs":"[\\"popover\\"]"},{"id":"open_guide_next_step()","command":"open_guide_next_step"},{"id":"open_guide_next_step({\\"clearAllPrevUi\\":true})","command":"open_guide_next_step","commandArgs":"{\\"clearAllPrevUi\\":true}"},{"id":"open_guide_wizard(106)","command":"open_guide_wizard","commandArgs":"106"},{"id":"open_guide_wizard(18)","command":"open_guide_wizard","commandArgs":"18"},{"id":"open_guide_wizard(21)","command":"open_guide_wizard","commandArgs":"21"},{"id":"open_guide_wizard(22)","command":"open_guide_wizard","commandArgs":"22"},{"id":"open_guide_wizard(25)","command":"open_guide_wizard","commandArgs":"25"},{"id":"open_guide_wizard(29)","command":"open_guide_wizard","commandArgs":"29"},{"id":"open_guide_wizard(30)","command":"open_guide_wizard","commandArgs":"30"},{"id":"open_guide_wizard(35)","command":"open_guide_wizard","commandArgs":"35"},{"id":"open_guide_wizard(38)","command":"open_guide_wizard","commandArgs":"38"},{"id":"open_guide_wizard(40)","command":"open_guide_wizard","commandArgs":"40"},{"id":"open_guide_wizard(41)","command":"open_guide_wizard","commandArgs":"41"},{"id":"open_guide_wizard(46)","command":"open_guide_wizard","commandArgs":"46"},{"id":"open_guide_wizard(50)","command":"open_guide_wizard","commandArgs":"50"},{"id":"open_guide_wizard(51)","command":"open_guide_wizard","commandArgs":"51"},{"id":"open_guide_wizard(52)","command":"open_guide_wizard","commandArgs":"52"},{"id":"open_guide_wizard(55)","command":"open_guide_wizard","commandArgs":"55"},{"id":"open_guide_wizard(57)","command":"open_guide_wizard","commandArgs":"57"},{"id":"open_guide_wizard(58)","command":"open_guide_wizard","commandArgs":"58"},{"id":"open_guide_wizard(61)","command":"open_guide_wizard","commandArgs":"61"},{"id":"open_guide_wizard(78)","command":"open_guide_wizard","commandArgs":"78"},{"id":"open_guide_wizard(84)","command":"open_guide_wizard","commandArgs":"84"},{"id":"open_guide_wizard(85)","command":"open_guide_wizard","commandArgs":"85"},{"id":"open_guide_wizard(88)","command":"open_guide_wizard","commandArgs":"88"},{"id":"open_guide_wizards([104, 105])","command":"open_guide_wizards","commandArgs":"[104, 105]"},{"id":"open_guide_wizards([19])","command":"open_guide_wizards","commandArgs":"[19]"},{"id":"open_guide_wizards([21])","command":"open_guide_wizards","commandArgs":"[21]"},{"id":"open_guide_wizards([24, 1])","command":"open_guide_wizards","commandArgs":"[24, 1]"},{"id":"open_guide_wizards([29, 76, 107])","command":"open_guide_wizards","commandArgs":"[29, 76, 107]"},{"id":"open_guide_wizards([31])","command":"open_guide_wizards","commandArgs":"[31]"},{"id":"open_guide_wizards([4])","command":"open_guide_wizards","commandArgs":"[4]"},{"id":"open_guide_wizards([76, 107])","command":"open_guide_wizards","commandArgs":"[76, 107]"},{"id":"open_guide_wizards([76, 87])","command":"open_guide_wizards","commandArgs":"[76, 87]"},{"id":"open_guide_wizards(47)","command":"open_guide_wizards","commandArgs":"47"},{"id":"open_vikaby({\\n\\"visible\\": true,\\n\\"defaultExpandDialog\\": true,\\n\\"dialogConfig\\": {\\n\\"title\\": \\"维格表首届模板征集大赛\\",\\n\\"description\\":\\"分享你的模板，免费获得200G空间赠礼，并有机会获得20人版6个月白银空间站！\\",\\n\\"btnText\\":\\"查看详情\\",\\n\\"btnUrl\\": \\"https://u.vika.cn/3pkza\\",\\n\\"wizardId\\": 21\\n}\\n}\\n )","command":"open_vikaby","commandArgs":"{\\n\\"visible\\": true,\\n\\"defaultExpandDialog\\": true,\\n\\"dialogConfig\\": {\\n\\"title\\": \\"维格表首届模板征集大赛\\",\\n\\"description\\":\\"分享你的模板，免费获得200G空间赠礼，并有机会获得20人版6个月白银空间站！\\",\\n\\"btnText\\":\\"查看详情\\",\\n\\"btnUrl\\": \\"https://u.vika.cn/3pkza\\",\\n\\"wizardId\\": 21\\n}\\n}\\n "},{"id":"open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})","command":"open_vikaby","commandArgs":"{\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n}"},{"id":"open_vikaby({\\"defaultExpandMenu\\": true, \\"visible\\": true})","command":"open_vikaby","commandArgs":"{\\"defaultExpandMenu\\": true, \\"visible\\": true}"},{"id":"set_wizard_completed({\\"curWizard\\": true})","command":"set_wizard_completed","commandArgs":"{\\"curWizard\\": true}","guide":{"step":["recQExamygtJd","recgn9PAJNAtX","recE9LnXquMPZ","recSkdfQ9C4uM"]}},{"id":"set_wizard_completed({\\"wizardId\\": 14})","command":"set_wizard_completed","commandArgs":"{\\"wizardId\\": 14}","guide":{"step":["recLftzTSNtNZ"]}},{"id":"skip_all_wizards()","command":"skip_all_wizards"},{"id":"skip_current_wizard()","command":"skip_current_wizard"},{"id":"skip_current_wizard({\\"curWizardCompleted\\": true})","command":"skip_current_wizard","commandArgs":"{\\"curWizardCompleted\\": true}"}],"tips":{"first_node_tips":{"description":"你可以xxxxx哦","title":"亲爱的","desc":"保存至本地，即可编辑和下载哦！~"}}},"guide":{"wizard":{"1":{"completeIndex":-1,"steps":"[[2]]","player":{"action":["recH5upxLpgTD"]}},"2":{"completeIndex":0},"3":{"repeat":true,"completeIndex":-1},"4":{"completeIndex":0,"steps":"[[8,9],[12,13],[10,11]]","player":{"action":["recSciFoQEPTM"]}},"5":{"repeat":true,"completeIndex":-1},"6":{"completeIndex":0},"7":{"completeIndex":0},"8":{"completeIndex":0},"9":{"completeIndex":0},"10":{"completeIndex":0},"11":{"completeIndex":0,"endTime":1620628680000,"startTime":1620023880000},"12":{"completeIndex":0},"13":{"completeIndex":0,"steps":"[[3]]"},"14":{"repeat":true,"completeIndex":-1,"steps":"[[4]]","freeVCount":200,"integral_action":"wizard_video_reward"},"15":{"repeat":true,"completeIndex":-1,"steps":"[[5]]","freeVCount":200,"integral_action":"wizard_video_reward"},"16":{"repeat":true,"completeIndex":-1,"steps":"[[6]]","freeVCount":200,"integral_action":"wizard_video_reward"},"17":{"repeat":true,"completeIndex":-1,"steps":"[[7]]","freeVCount":200,"integral_action":"wizard_video_reward"},"18":{"repeat":true,"completeIndex":1,"steps":"[[107,108],[105,106]]","player":{"action":["recMKNK2u3tkA"]}},"19":{"completeIndex":0,"steps":"[[14],[15,16],[17],[18],[20,21],[22]]","player":{"action":["recl36N2sBDBe"]}},"20":{"completeIndex":-1,"freeVCount":1000,"integral_action":"complete_bind_email"},"21":{"completeIndex":-1,"manualActions":["open_vikaby({\\n\\"visible\\": true,\\n\\"defaultExpandDialog\\": true,\\n\\"dialogConfig\\": {\\n\\"title\\": \\"维格表首届模板征集大赛\\",\\n\\"description\\":\\"分享你的模板，免费获得200G空间赠礼，并有机会获得20人版6个月白银空间站！\\",\\n\\"btnText\\":\\"查看详情\\",\\n\\"btnUrl\\": \\"https://u.vika.cn/3pkza\\",\\n\\"wizardId\\": 21\\n}\\n}\\n )"],"player":{"action":["recCrcOjScQhC","rec2I8ZbLDFGw"]}},"22":{"completeIndex":0,"steps":"[[23],[24]]","player":{"action":["recbAdanWwVvE"]}},"23":{"completeIndex":0,"steps":"[[40,41],[42]]"},"24":{"completeIndex":0,"steps":"[[44]]","player":{"action":["recH5upxLpgTD"]}},"25":{"completeIndex":-1,"steps":"[[43]]","player":{"action":["recpp069I2Fvi"]}},"26":{"completeIndex":0,"manualActions":["open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})"]},"27":{"completeIndex":0,"steps":"[[45]]"},"28":{"completeIndex":0,"steps":"[[46]]"},"29":{"completeIndex":0,"steps":"[[47,48],[49],[50],[51,52],[53],[54]]","player":{"action":["recBtbbzXDolQ"]}},"30":{"completeIndex":0,"steps":"[[55],[56,57],[58],[50],[51,52],[59],[60],[61]]","player":{"action":["recnbU7bovh9p"]}},"31":{"completeIndex":0,"steps":"[[49],[50],[51,52],[53],[54]]","player":{"action":["recH7YVXq8ev2"]}},"32":{"completeIndex":0,"steps":"[[62]]"},"33":{"completeIndex":0,"steps":"[[63]]"},"34":{"repeat":true,"completeIndex":-1,"steps":"[[64]]"},"35":{"completeIndex":0,"steps":"[[64]]","player":{"action":["recWzFTYL5aqi"]}},"36":{"completeIndex":0,"steps":"[[65]]"},"37":{"repeat":true,"completeIndex":-1,"steps":"[[66]]"},"38":{"completeIndex":0,"steps":"[[66]]","player":{"action":["recUsJf5WI1XK"]}},"39":{"completeIndex":0,"steps":"[[67]]"},"40":{"completeIndex":0,"steps":"[[70],[68],[69]]","player":{"action":["rec3Wfcm2vUu4"]}},"41":{"repeat":true,"completeIndex":0,"steps":"[[71]]","player":{"action":["recksrkgpIWGA"]}},"42":{},"43":{},"44":{"completeIndex":0,"steps":"[[72]]"},"45":{"completeIndex":0,"steps":"[[76],[73]]"},"46":{"completeIndex":0,"steps":"[[74]]","player":{"action":["reczvbPaxSPAU"]}},"47":{"completeIndex":0,"steps":"[[75]]","player":{"action":["recV5500IVb6G"]}},"48":{"completeIndex":0,"steps":"[[76]]"},"49":{"completeIndex":0,"steps":"[[77]]"},"50":{"completeIndex":0,"manualActions":["open_guide_wizard(50)"],"steps":"[[78]]","player":{"action":["recepgn7o0mNn"]}},"51":{"completeIndex":0,"manualActions":["open_guide_wizard(51)"],"steps":"[[79]]","player":{"action":["recnv8Qb15HQI"]}},"52":{"completeIndex":0,"manualActions":["open_guide_wizard(52)"],"steps":"[[80]]","player":{"action":["recoiIMY1gIXm"]}},"53":{"completeIndex":0,"steps":"[[81]]"},"54":{"completeIndex":-1,"steps":"[[82]]"},"55":{"completeIndex":0,"steps":"[[82]]","player":{"action":["rech73EZuut4l"]}},"56":{"completeIndex":0,"steps":"[[83, 84]]"},"57":{"completeIndex":0,"steps":"[[85]]","player":{"action":["rec7Y8opYoPK5"]}},"58":{"completeIndex":0,"steps":"[[86,87],[88,89],[90,91]]","player":{"action":["recNjTOtE8kzG"]}},"59":{"completeIndex":0,"steps":"[[92]]"},"60":{"completeIndex":0},"61":{"completeIndex":-1,"steps":"[[94]]","player":{"action":["recWziPefmN7N"]}},"62":{"completeIndex":0,"steps":"[[95]]"},"63":{"completeIndex":0,"steps":"[[97]]"},"64":{"repeat":true,"completeIndex":-1,"steps":"[[97]]"},"65":{"completeIndex":-1,"steps":"[[98]]"},"66":{"completeIndex":0,"steps":"[[99]]"},"67":{"repeat":true,"completeIndex":0,"steps":"[[100,101]]"},"68":{"completeIndex":-1,"steps":"[[93]]"},"69":{"repeat":true,"completeIndex":-1,"steps":"[[103]]"},"70":{"repeat":true,"completeIndex":1,"steps":"[[26,27],[28,29],[30],[32],[35],[37,38],[39]]"},"71":{"completeIndex":-1,"steps":"[[109]]"},"72":{"steps":"[[93]]"},"73":{"steps":"[[93]]"},"74":{"steps":"[[93]]"},"75":{"steps":"[[93]]"},"76":{"steps":"[[93]]","player":{"action":["recBtbbzXDolQ","recEIcl9v4jzr","recZmyGfgUNR6"]}},"77":{"steps":"[[111]]"},"78":{"completeIndex":1,"steps":"[[83]]","player":{"action":["recBEBtlrHNqc"]}},"79":{"completeIndex":0,"steps":"[[126,127]]"},"80":{"completeIndex":0,"steps":"[[128,129]]"},"81":{"completeIndex":0,"steps":"[[124,125],[88,89]]"},"82":{"completeIndex":-1,"steps":"[[131]]"},"83":{"completeIndex":-1,"steps":"[[132],[137]]"},"84":{"completeIndex":0,"steps":"[[135,133]]","player":{"action":["rec5MG0Q07sgC"]}},"85":{"repeat":true,"steps":"[[136]]","player":{"action":["recpiCI64j675"]}},"86":{"steps":"[[137]]"},"87":{"steps":"[[138]]","player":{"action":["recZmyGfgUNR6"]}},"88":{"completeIndex":0,"steps":"[[139,140],[141,143]]","player":{"action":["recGMkwh9WpxC"]}},"89":{"completeIndex":-1,"steps":"[[144]]"},"90":{"completeIndex":-1,"steps":"[[145]]"},"91":{"completeIndex":-1,"steps":"[[152]]"},"92":{"completeIndex":-1,"steps":"[[153]]"},"93":{"completeIndex":-1,"steps":"[[154]]"},"94":{"completeIndex":-1,"steps":"[[155]]"},"95":{"completeIndex":0,"steps":"[[156,160]]"},"96":{"completeIndex":0,"steps":"[[157]]"},"97":{"completeIndex":0,"steps":"[[158]]"},"98":{"completeIndex":-1,"steps":"[[159]]"},"99":{"completeIndex":-1,"steps":"[[161]]"},"100":{"completeIndex":-1,"steps":"[[162]]"},"101":{"completeIndex":-1,"steps":"[[163]]"},"102":{"completeIndex":-1,"steps":"[[164]]"},"104":{"repeat":true,"completeIndex":0,"steps":"[[166]]","player":{"action":["recRyoECYFqBv"]}},"105":{"completeIndex":-1,"steps":"[[167]]","player":{"action":["recRyoECYFqBv"]}},"106":{"manualActions":["open_guide_wizard(106)"],"steps":"[[168]]","player":{"action":["recO09HUv27dd"]}},"107":{"completeIndex":-1,"steps":"[[169]]","player":{"action":["recEIcl9v4jzr","recBtbbzXDolQ"]}},"108":{"completeIndex":-1,"endTime":1677677940000,"steps":"[[169]]"}},"step":{"1":{"uiConfigId":"player_step_ui_config_1","uiType":"notice","prev":"-","backdrop":"around_mask","onPlay":["clear_guide_all_ui()"],"onNext":["skip_all_wizards()"],"next":"确定","onPrev":["clear_guide_all_ui()"],"nextId":"confirm","onSkip":["clear_guide_all_ui()"],"uiConfig":"{}","onClose":["skip_current_wizard()"],"onTarget":["skip_current_wizard({\\"curWizardCompleted\\": true})"]},"2":{"uiConfigId":"player_step_ui_config_2","uiType":"questionnaire","backdrop":"around_mask","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"确定","nextId":"confirm","uiConfig":"{\\n  \\"config\\": [\\n    {\\n      \\"key\\": 1,\\n      \\"name\\": \\"answer1\\",\\n      \\"title\\": \\"您希望通过维格表解决哪些问题？\\",\\n      \\"type\\": \\"checkbox\\",\\n      \\"answers\\": [\\n        \\"工作规划\\",\\n        \\"客户服务\\",\\n        \\"项目管理\\",\\n        \\"采购供应\\",\\n        \\"内容生产\\",\\n        \\"电商运营\\",\\n        \\"活动策划\\",\\n        \\"人力资源\\",\\n        \\"行政管理\\",\\n        \\"财务管理\\",\\n        \\"网络直播\\",\\n        \\"高校管理\\",\\n        \\"其它\\"\\n      ],\\n      \\"lastAllowInput\\": true\\n    },\\n    {\\n      \\"key\\": 2,\\n      \\"name\\": \\"answer2\\",\\n      \\"title\\": \\"您的工作岗位是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"管理者\\",\\n        \\"项目经理\\",\\n        \\"产品经理\\",\\n        \\"设计师\\",\\n        \\"研发、工程师\\",\\n        \\"运营、编辑\\",\\n        \\"销售、客服\\",\\n        \\"人事、行政\\",\\n        \\"财务、会计\\",\\n        \\"律师、法务\\",\\n        \\"市场\\",\\n        \\"教师\\",\\n        \\"学生\\",\\n        \\"其它\\"\\n      ],\\n      \\"lastAllowInput\\": true\\n    },\\n    {\\n      \\"key\\": 3,\\n      \\"name\\": \\"answer3\\",\\n      \\"title\\": \\"您的公司名称是？\\",\\n      \\"type\\": \\"input\\",\\n      \\"submit\\": false\\n    },\\n    {\\n      \\"key\\": 4,\\n      \\"name\\": \\"answer4\\",\\n      \\"title\\": \\"请留下你的邮箱/手机/微信号，以便我们及时提供帮助。\\",\\n      \\"type\\": \\"input\\",\\n      \\"submit\\": true\\n    },\\n    {\\n      \\"key\\": 5,\\n      \\"title\\": \\"感谢你的填写，请加一下客服号以备不时之需\\",\\n      \\"platform\\": {\\n        \\"website\\": \\"https://s1.vika.cn/space/2023/03/02/b34e3205a9154463be16f497524f1327\\",\\n        \\"dingtalk\\": \\"https://s1.vika.cn/space/2023/03/02/4b16cef6602a4586a21d6346bf25d300\\",\\n        \\"wecom\\": \\"https://s1.vika.cn/space/2023/03/02/60119b1b69b64aa887bd1be6a2928bec\\",\\n        \\"feishu\\": \\"https://u.vika.cn/z9ygm\\"\\n      },\\n      \\"type\\": \\"contactUs\\",\\n      \\"next\\": true\\n    }\\n  ]\\n}\\n","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"3":{"uiConfigId":"player_step_ui_config_3","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"确定","nextId":"confirm","uiConfig":"{\\n    \\"title\\": \\"更新公告\\",\\n    \\"children\\": \\"<h2 style=\'text-align: center;line-height:2em\'>✨ Hello, 星球居民们~ </h2><p style=\'margin-bottom:30px;\'>伴随12月的前奏，维格星球又迎来了一波更新，动动手指探索下最新的资源吧 🎉</p><h2 style=\'line-height: 1.2em;\'>🎊 播报 News</h2><ul style=\'line-height:2em;\'><li>手机端支持编辑啦，现在你可以直接在手机上探索维格表</li><li>维格表API 增加Golang语言的SDK</li><li>新增记录的「动态评论」，你和小伙伴可以在维格表内展开深入的讨论</li><li>「空间站管理-普通成员」页面新增全局开关，可以控制是否在分享页面展示「申请加入空间站」的入口</li></ul><h2>🍜 优化 Enhancement</h2><ul style=\'line-height:2em;\'><li>分享模态窗改版，可以更清晰地选择自己的协作方式</li><li>权限模态窗改版，设置权限变成独立的页面</li><li>看板视图可以在卡片上切换封面图片，高清无码大图如此性感</li><li>单选/多选/成员的选项列表支持键盘快捷键上下选择选项，解放互联网冲浪达人的双手</li></ul>\\"\\n  }","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"4":{"uiConfigId":"player_step_ui_config_4","uiType":"modal","onPlay":["set_wizard_completed({\\"curWizard\\": true})"],"onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"什么是维格表\\",\\n\\"video\\":\\"space/2022/02/21/94cb82f9ffd84a5499c8931a224ad234\\",\\n\\"videoId\\":\\"VIKA_GUIDE_VIDEO_1\\",\\n\\"autoPlay\\":true\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})"]},"5":{"uiConfigId":"player_step_ui_config_5","uiType":"modal","onPlay":["set_wizard_completed({\\"curWizard\\": true})"],"onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"一分钟快速入门\\",\\n\\"video\\":\\"space/2021/03/10/a68dbf1e2e7943b09b1550175253fdab\\",\\n\\"videoId\\":\\"VIKA_GUIDE_VIDEO_2\\",\\n\\"autoPlay\\":true\\n}\\n","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})"]},"6":{"uiConfigId":"player_step_ui_config_6","uiType":"modal","onPlay":["set_wizard_completed({\\"curWizard\\": true})"],"onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"玩转一张维格表\\",\\n\\"video\\":\\"space/2020/12/21/cb7bdf6fe22146068111d46915587fb2\\",\\n\\"videoId\\":\\"VIKA_GUIDE_VIDEO_3\\",\\n\\"autoPlay\\":true\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})"]},"7":{"uiConfigId":"player_step_ui_config_7","uiType":"modal","onPlay":["set_wizard_completed({\\"curWizard\\": true})"],"onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"分享和邀请成员\\",\\n\\"video\\":\\"space/2020/12/21/b8fa92ba4c7d41c6acbd7f24469e15fc\\",\\n\\"videoId\\":\\"VIKA_GUIDE_VIDEO_4\\",\\n\\"autoPlay\\":true\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_vikaby({\\n\\"visible\\":true,\\n\\"defaultExpandTodo\\": true,\\n\\"defaultExpandMenu\\": false\\n})"]},"8":{"uiConfigId":"player_step_ui_config_8","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\"#ADDRESS_INVITE_BTN\\", \\n\\"placement\\": \\"bottomLeft\\",\\n \\"title\\": \\"邀请方式\\", \\n\\"description\\": \\"当前空间站支持链接、邮箱、导入三种方式邀请成员\\", \\"children\\":\\"\\" \\n} "},"9":{"uiConfigId":"player_step_ui_config_9","uiType":"breath","backdrop":"around_mask","uiConfig":"{\\n \\"element\\": \\"#ADDRESS_INVITE_BTN\\"\\n} ","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"10":{"uiConfigId":"player_step_ui_config_10","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\".style_linkWrapper__12Kgi  .style_urlWrapper__2IVlG button\\", \\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"复制并分享\\",\\n\\"description\\": \\"点击复制链接并分享给成员，即可完成邀请\\", \\"children\\":\\"\\" \\n} "},"11":{"uiConfigId":"player_step_ui_config_11","uiType":"breath","backdrop":"around_mask","uiConfig":"{\\"element\\": \\".style_linkWrapper__12Kgi  .style_urlWrapper__2IVlG button\\",\\n\\"shadowDirection\\": \\"none\\"} ","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"12":{"uiConfigId":"player_step_ui_config_12","uiType":"popover","backdrop":"around_mask","onNext":["clear_guide_uis([\\"popover\\"])"],"onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\".style_addNewLink__3ALup>button\\", \\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"创建邀请链接\\", \\n\\"description\\": \\"创建链接邀请成员加入空间站或站内指定小组\\", \\"children\\":\\"\\" \\n} "},"13":{"uiConfigId":"player_step_ui_config_13","uiType":"breath","uiConfig":"{\\n \\"element\\": \\".style_addNewLink__3ALup>button\\"\\n} ","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"14":{"skipId":"no_and_thanks","uiConfigId":"player_step_ui_config_14","uiType":"slideout","onNext":["clear_guide_all_ui()","open_guide_next_step()"],"next":"好的","skip":"不用了，谢谢","nextId":"okay","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"placement\\": \\"bottomRight\\",\\n  \\"description\\": \\"欢迎来到维格模板中心，这里有丰富的模板，让我来给你介绍一下如何使用一个模板吧\\"\\n}"},"15":{"skipId":"skip","uiConfigId":"player_step_ui_config_15","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","skip":"跳过","nextId":"okay","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\".style_templateItem__1UDe0\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"使用模板教程\\", \\n\\"description\\": \\"我们先选择一个模板，点击进入它的预览页\\", \\"children\\":\\"\\" \\n}\\n"},"16":{"uiConfigId":"player_step_ui_config_16","uiType":"breath","backdrop":"around_mask","uiConfig":"{\\n \\"element\\": \\".style_templateItem__1UDe0\\"\\n}\\n","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"17":{"skipId":"skip","uiConfigId":"player_step_ui_config_17","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","skip":"跳过","nextId":"okay","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\"#TEMPLATE_CENTER_USE_TEMPLATE_BTN>button\\", \\n\\"placement\\": \\"rightBottom\\",\\n\\"offsetY\\": 20,\\n \\"title\\": \\"使用模板教程\\", \\n\\"description\\": \\"点击左侧按钮使用模板\\", \\"children\\":\\"\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"18":{"skipId":"skip","uiConfigId":"player_step_ui_config_18","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"下一步","skip":"跳过","nextId":"next_step","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\".style_usingTemplateWrapper__2vLm0 .ant-select>.ant-select-selector\\", \\n\\"placement\\": \\"bottomLeft\\",\\n \\"title\\": \\"使用模板教程\\", \\n\\"description\\": \\"选择模板要存放的位置\\", \\"children\\":\\"\\" \\n}"},"19":{"uiConfigId":"player_step_ui_config_19","uiType":"breath","uiConfig":"{\\n \\"element\\": \\".style_usingTemplateWrapper__2vLm0 .ant-select .ant-select-selector\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"20":{"skipId":"skip","uiConfigId":"player_step_ui_config_20","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","skip":"跳过","nextId":"okay","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\"#TEMPLATE_CENTER_CONFIRM_BTN_IN_TEMPLATE_MODAL\\", \\n\\"placement\\": \\"bottomLeft\\",\\n \\"title\\": \\"使用模板教程\\", \\n\\"description\\": \\"在确定了要存放的位置后，点击确定，模板才会使用生效哦\\", \\"children\\":\\"\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"21":{"uiConfigId":"player_step_ui_config_21","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#TEMPLATE_CENTER_CONFIRM_BTN_IN_TEMPLATE_MODAL\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"22":{"uiConfigId":"player_step_ui_config_22","uiType":"slideout","onNext":["open_guide_next_step()"],"next":"好的","nextId":"okay","onSkip":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n \\"placement\\": \\"bottomLeft\\",\\n  \\"description\\": \\"恭喜你学会了如何使用一个模板，维格表还有更多功能等待你的探索哦～\\"\\n}"},"23":{"uiConfigId":"player_step_ui_config_23","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_searchPanelContainer__1_iOe\\", \\n\\"placement\\": \\"leftTop\\",\\n \\"title\\": \\"如何生成神奇表单\\", \\n\\"description\\": \\"首先，需要选择一张维格表来存放收集的数据\\", \\"children\\":\\"\\" \\n}"},"24":{"uiConfigId":"player_step_ui_config_24","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","byEvent":["workbench_create_form_previewer_shown"],"uiConfig":"{\\n \\"element\\": \\".style_formPreviewer__2Au6g\\", \\n\\"placement\\": \\"leftTop\\",\\n \\"title\\": \\"如何生成神奇表单\\", \\n\\"description\\": \\"神奇表单的字段数量以及顺序，会与所选视图的配置保持一致。基于你选择的视图，右侧为自动生成的预览效果。\\", \\"children\\":\\"\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"25":{"uiConfigId":"player_step_ui_config_25","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#WORKBENCH_SIDE_FORM_USE_GUIDE_BTN\\", \\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"收集表教程\\", \\n\\"description\\": \\"如果需要更加详细的收集表教程，可以点击上方的入口查看哦\\", \\"children\\":\\"\\" \\n}"},"26":{"uiConfigId":"player_step_ui_config_26","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#WORKBENCH_SIDE_ADD_NODE_BTN\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"让我们新建一张空白的维格表试一试\\", \\"children\\":\\"\\" \\n}"},"27":{"uiConfigId":"player_step_ui_config_27","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#WORKBENCH_SIDE_ADD_NODE_BTN\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"28":{"uiConfigId":"player_step_ui_config_28","uiType":"popover","onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#NODE_CONTEXT_MENU_ID .react-contexify__item:nth-of-type(1)\\", \\n\\"placement\\": \\"rightCenter\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"接着，选择“新建空白维格表”\\", \\"children\\":\\"\\" \\n}"},"29":{"uiConfigId":"player_step_ui_config_29","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#NODE_CONTEXT_MENU_ID > .react-contexify__item:nth-of-type(1) .react-contexify__item__content > div:nth-of-type(1)\\",\\n\\"shadowDirection\\":\\"inset\\"\\n} "},"30":{"uiConfigId":"player_step_ui_config_30","uiType":"popover","backdrop":"around_mask","onNext":["clear_guide_uis([\\"popover\\"])"],"byEvent":["datasheet_grid_view_shown"],"onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ADD_COLUMN_BTN\\", \\n\\"placement\\": \\"leftTop\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"一张空白的维格表创建好啦，接下来我们来尝试一下新建一个维格列吧\\", \\"children\\":\\"\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"31":{"uiConfigId":"player_step_ui_config_31","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#WORKBENCH_SIDE_FORM_USE_GUIDE_BTN\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"32":{"uiConfigId":"player_step_ui_config_32","uiType":"popover","onNext":["open_guide_next_step()"],"next":"好的","nextId":"okay","onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_GRID_CUR_COLUMN_TYPE\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"维格表提供了丰富的维格列类型以匹配各种使用场景，鼠标悬浮在这里即可查看\\", \\"children\\":\\"\\" \\n}"},"33":{"uiConfigId":"player_step_ui_config_33","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_VIEW_TAB_BAR .style_viewBarWrapper__AJlc-\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"同一张维格表可提供多种视图模式，通过“分组、筛选、排序”等功能来自定义视图的展示数据。但是要注意，一张维格表下所有的视图用的都是同一份数据源，只是展示的样式各有不同，所以不要把视图当作excel的工作簿用哦！\\", \\"children\\":\\"\\" \\n}"},"34":{"uiConfigId":"player_step_ui_config_34","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_VIEW_TAB_BAR .style_viewBarWrapper__AJlc-\\"\\n}"},"35":{"uiConfigId":"player_step_ui_config_35","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"下一步","nextId":"next_step","byEvent":["datasheet_field_setting_hidden"],"onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ADD_VIEW_BTN\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"维格表除了标准表格形式的“维格视图”外，还支持变换“相册视图”“看板视图””甘特视图“”日历视图“”架构视图“，分别对应管理丰富的图像化数据和任务化数据，让你事半功倍，还是得要提醒一次，视图只是展示的样式不同，但是数据源是同一份哦！\\", \\"children\\":\\"\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"36":{"uiConfigId":"player_step_ui_config_36","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ADD_VIEW_BTN\\",\\n\\"shadowDirection\\":\\"inset\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"37":{"uiConfigId":"player_step_ui_config_37","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_TOOL_BAR .style_toolbarMiddle__2kxTf>button:nth-of-type(7)\\", \\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"如果要将内容分享给空间站外的人员，你可以通过这个功能创建一条链接分享出去\\", \\"children\\":\\"\\" \\n}"},"38":{"uiConfigId":"player_step_ui_config_38","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_TOOL_BAR .style_toolbarMiddle__2kxTf>button:nth-of-type(7)\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"39":{"uiConfigId":"player_step_ui_config_39","uiType":"slideout","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n \\"placement\\": \\"bottomLeft\\",\\n  \\"description\\": \\"智能引导就到这里啦，如果想要查看维格表更加详细的教程，你可以点击左下角的帮助中心去查看我们的产品手册哦\\"\\n}"},"40":{"uiConfigId":"player_step_ui_config_40","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_FORM_BTN\\",\\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"新功能\\", \\n\\"description\\": \\"可以通过神奇表单来录入数据了，赶紧体验一下吧～\\", \\"children\\":\\"\\" \\n}"},"41":{"uiConfigId":"player_step_ui_config_41","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_FORM_BTN\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"42":{"uiConfigId":"player_step_ui_config_42","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_FORM_LIST_PANEL\\", \\n\\"placement\\": \\"leftTop\\",\\n \\"title\\": \\"神奇表单\\", \\n\\"description\\": \\"在这里可以快速生成当前视图的神奇表单，神奇表单的字段是依照视图的维格列数量以及顺序来生成的哦\\", \\"children\\":\\"\\" \\n}"},"43":{"skipId":"remind_never_again","uiConfigId":"player_step_ui_config_43","uiType":"popover","backdrop":"around_mask","onNext":["skip_current_wizard()"],"next":"知道啦","skip":"不再提醒","nextId":"known","onSkip":["skip_current_wizard({\\"curWizardCompleted\\": true})"],"uiConfig":"{\\n \\"element\\": \\".style_navigation__1U5cR .style_help__1sXEA\\", \\n\\"placement\\": \\"rightBottom\\",\\n \\"title\\": \\"小提示\\", \\n\\"offsetY\\":5,\\n\\"description\\": \\"你可以在左侧的「帮助中心」找回你的维格小助手\\", \\"children\\":\\"\\" \\n}"},"44":{"uiConfigId":"player_step_ui_config_44","uiType":"modal","onPlay":["set_wizard_completed({\\"wizardId\\": 14})"],"onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"一分钟快速入门\\",\\n\\"video\\":\\"space/2021/03/10/a68dbf1e2e7943b09b1550175253fdab\\",\\n\\"videoId\\":\\"VIKA_GUIDE_VIDEO_NEW_USER\\",\\n\\"autoPlay\\":true\\n}\\n","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_guide_wizard(18)"]},"45":{"uiConfigId":"player_step_ui_config_45","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n    \\"title\\": \\"更新公告\\",\\n    \\"children\\": \\"<h2 style=\'text-align: center;line-height:2em\'>✨ Hello, 星球居民们~ </h2><p style=\'margin-bottom:30px;\'>在2020年的尾声，维格星球迎来了一波更新，新年新气象，一起来探索2021年的新玩法吧~</p><h2 style=\'line-height: 1.2em;\'>🎉 播报 News</h2><ul style=\'line-height:2em;\'><li>「收集表」正式上线，全新玩法让数据收集、内部协作更加轻松自如</li><li>「移动端」支持编辑列配置，距离理想的「躺在沙滩上办公」更近啦！</li><li>记录将提供「预排序」交互效果，修改后的记录不会马上飞走了，多一步的停留让改动更有深度</li><li>维格列配置菜单支持搜索维格列类型——咦，你看出我们的野心了？</li></ul><h2>🍜 优化 Enhancement</h2><ul style=\'line-height:2em;\'><li>重新设计的新手引导，拥有「魔力」的维格小助手带你轻松上手维格表</li><li>维格表支持邮箱注册了</li><li>还有许多小优化，欢迎探索体验。</li></ul>\\"\\n  }"},"46":{"uiConfigId":"player_step_ui_config_46","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n    \\"title\\": \\"更新公告\\",\\n    \\"children\\": \\"<h2 style=\'text-align: center;line-height:2em\'>✨ Hello 星球居民们~ </h2><p style=\'margin-bottom:30px;\'>牛年新气象，维格表值此新春之际上新啦。若干重磅功能闪亮登场，让你的工作效率再上一个台阶 🔥。</p><h3 style=\'line-height: 1.2em;\'>🕤 仪表盘</h3><p>全新文件类型，举手之间轻松搭建图表驾驶舱，清晰呈现每个指标，汇聚工作焦点。</p><h3>📈 图表</h3><p>简洁灵活的数据可视化图表，支持柱状图、折线图、饼状图等多种类型。<br>添加即查看，一键切换维度和数值计算，10s 完成制作。</p><h3>💯 统计与指标</h3><p>指定统计字段并选择求和、平均值等指标，将自动计算并快速呈现关键结果。<br>支持自定义统计说明和对比目标，提升阅读体验。</p><h3>🎉 飞书集成</h3><p>打通飞书，智能同步通讯录和组织架构，员工账号管理更轻松。<br>在维格表中，如有成员提及和评论 @ 等都可以在飞书中收到同步通知。</p><p class=\'tip\' style=\'color:#636363; font-size: 0.8em\'>提示：目前飞书登录仍处于官方审核阶段，暂无法使用飞书扫码登录，请谅解。</p><h3>💻 维格表桌面端</h3><p>全新的桌面级客户端，支持 Windows 和 macOS，让您随时随地维格一下。</p><h3>👬 邀请码</h3><p>优化邀请码分享机制，复制后自动转化为邀请链接，以便他人更快完成注册和使用，双方还将获得 1000 V 币奖励。</p>\\"\\n  }"},"47":{"uiConfigId":"player_step_ui_config_47","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_WIDGET_BTN\\",\\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"新功能\\", \\n\\"description\\": \\"小程序上线！想要让沉淀下来的数据得到更好的运用吗？那就赶紧来体验一下吧\\", \\"children\\":\\"\\" \\n}"},"48":{"uiConfigId":"player_step_ui_config_48","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_WIDGET_BTN\\",\\n\\"shadowDirection\\": \\"inset\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"49":{"uiConfigId":"player_step_ui_config_49","uiType":"popover","backdrop":"around_mask","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_widgetPanelContainer__1l2ZV\\",\\n\\"placement\\": \\"leftCenter\\",\\n \\"title\\": \\"什么是小程序\\", \\n\\"description\\": \\"维格小程序是维格表的一种扩展应用，可实现数据可视化、数据传输、数据清洗等等额外功能。通过在小程序面板安装适合团队的小程序，可以让工作事半功倍\\", \\"children\\":\\"\\" \\n}"},"50":{"uiConfigId":"player_step_ui_config_50","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","byEvent":["datasheet_widget_center_modal_shown"],"uiConfig":"{\\n \\"element\\": \\".style_widgetModal__eXmdB\\",\\n\\"placement\\": \\"leftTop\\",\\n \\"title\\": \\"小程序中心\\", \\n\\"description\\": \\"官方推荐和空间站自建的小程序会发布到这里。你可以根据场景，在这里挑选合适的小程序放置到仪表盘或小程序面板里\\", \\"children\\":\\"\\" \\n}"},"51":{"uiConfigId":"player_step_ui_config_51","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_widgetModal__eXmdB .style_widgetItem__3Pl-1 button\\",\\n\\"placement\\": \\"rightBottom\\",\\n \\"title\\": \\"安装小程序\\", \\n\\"description\\": \\"我们安装这个「图表」小程序看看吧\\", \\"children\\":\\"\\" \\n}"},"52":{"uiConfigId":"player_step_ui_config_52","uiType":"breath","uiConfig":"{\\n \\"element\\": \\".style_widgetModal__eXmdB .style_widgetItem__3Pl-1 button\\",\\n\\"shadowDirection\\":\\"none\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"53":{"uiConfigId":"player_step_ui_config_53","uiType":"popover","backdrop":"around_mask","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_widgetPanelContainer__1l2ZV\\",\\n\\"placement\\": \\"leftCenter\\",\\n\\"description\\": \\"安装成功，同时我们也为你创建了一个小程序面板，一个维格表的所有小程序都会放置在这个区域\\", \\"children\\":\\"\\" \\n}"},"54":{"uiConfigId":"player_step_ui_config_54","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_widgetPanelContainer__1l2ZV .style_panelHeader__3X0pG\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"小程序面板\\", \\n\\"description\\": \\"小程序面板是用于装载小程序的容器，可以通过创建多个小程序面板来给你的小程序进行分类\\", \\"children\\":\\"\\" \\n}"},"55":{"uiConfigId":"player_step_ui_config_55","uiType":"slideout","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"placement\\": \\"bottomLeft\\",\\n  \\"description\\": \\"仪表盘作为维格表的一种文件类型，添加/导入小程序后，可视化能力提升。你可以通过数据统计和图表分析，更好地进行判断和决策\\"\\n}"},"56":{"uiConfigId":"player_step_ui_config_56","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DASHBOARD_PANEL_ID .style_tabRight__4YAkM button:nth-of-type(1)\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"添加小程序\\", \\n\\"description\\": \\"在这里有两种方法添加小程序，一种是从小程序中心添加，一种是从已有的小程序中导入进去\\", \\"children\\":\\"\\" \\n}"},"57":{"uiConfigId":"player_step_ui_config_57","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DASHBOARD_PANEL_ID .style_tabRight__4YAkM button:nth-of-type(1)\\",\\n \\"shadowDirection\\":\\"inset\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"58":{"uiConfigId":"player_step_ui_config_58","uiType":"popover","next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_addWidgetMenu__29bIe .style_menuItem__3Ugjz:nth-of-type(1)\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"添加小程序\\", \\n\\"description\\": \\"让我们来尝试一下，添加一个小程序到仪表盘吧\\", \\"children\\":\\"\\" \\n}"},"59":{"uiConfigId":"player_step_ui_config_59","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DASHBOARD_PANEL_ID .style_widgetContainer__2HwEf\\",\\n\\"placement\\": \\"rightTop\\",\\n \\"title\\": \\"关联维格表\\", \\n\\"description\\": \\"由于部分小程序需要依赖维格表的数据，所以安装小程序之后还需要选择一个维格表进行关联\\", \\"children\\":\\"\\" \\n}"},"60":{"uiConfigId":"player_step_ui_config_60","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","byEvent":["datasheet_search_panel_shown"],"uiConfig":"{\\n \\"element\\": \\".style_searchPanelContainer__1_iOe\\",\\n\\"placement\\": \\"rightTop\\",\\n \\"title\\": \\"关联维格表\\", \\n\\"description\\": \\"在这里选择你需要关联的维格表，以供小程序访问数据\\", \\"children\\":\\"\\" \\n}"},"61":{"uiConfigId":"player_step_ui_config_61","uiType":"slideout","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","byEvent":["datasheet_search_panel_hidden"],"uiConfig":"{\\n \\"placement\\": \\"bottomLeft\\",\\n  \\"description\\": \\"恭喜你，已掌握了仪表盘和添加小程序的基本使用方法。接下来，你可以根据业务场景去搭建专属的仪表盘了\\"\\n}"},"62":{"uiConfigId":"player_step_ui_config_62","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n    \\"title\\": \\"✨ 星球居民们，好久不见～\\",\\n\\"children\\": \\"<p class=\'body2\'>在过去的 2 个月里，维格表一直有在悄悄更新，改善使用体验。<br>这次新增了不少显性功能点，先来了解一下再上手吧～</p><h3 class=\'h5\'>📈&nbsp;&nbsp;图表组件增强可视化</h3><p class=\'body3\'>自动识别日期维度，开启格式化日期后可选择按周/月/季度/年展示，清晰呈现数据走势</p><img src=\'https://s1.vika.cn/space/2021/04/15/3338e4247a61432d82ef0f30423159a5\' alt=\'wegist1\' style=\'width:100%; margin-bottom:16px;border-radius:4px;\'/><br><p class=\'body3\'>新增 10+ 款单色渐变主题，适合在多个数据系列的图表中应用，增强审视，突出焦点</p><img src=\'https://s1.vika.cn/space/2021/04/15/43ed849bddd8469fb332f4e81caaf101\' alt=\'wegist2\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>📎&nbsp;&nbsp;office 文件在线预览</h3><p class=\'body3\'>附件字段上传文件后可在线预览，提升协作效率，支持文档、表格、PPT 多种格式<br/>路径：空间站设置-第三方应用集成-office 文件预览，授权后才能生效哦</p><img src=\'https://s1.vika.cn/space/2021/04/15/e5300f320a2245ccb4e2b7ec20f8455a\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>🔍&nbsp;&nbsp;神奇引用列支持筛选</h3><p class=\'body3\'>在神奇引用列中，对引用的数据进行筛选，以便在海量数据中快速、精准地展示某类数据</p><img src=\'https://s1.vika.cn/space/2021/04/15/2cb660b2968b415e9a07aa504287b4e2\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>📅&nbsp;&nbsp;日期格式更丰富</h3><p class=\'body3\'>日期字段新增年、月、日三种日期格式</p><img src=\'https://s1.vika.cn/space/2021/04/15/d6c381a31b044a13a756b23eee6c624f\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>➕&nbsp;&nbsp;其他</h3><p class=\'body3\' style=\'margin-bottom:0;\'>优化页面刷新逻辑，删除、复制文件后无需重载，保持当前操作不被打断</p>\\"\\n  }"},"63":{"uiConfigId":"player_step_ui_config_63","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n\\"children\\": \\"<p class=\'body2\'>vika 维格表又双叒更新啦，千呼万唤的列权限、甘特图已上线，快来点亮 vika 的魔法棒吧～</p><h3 class=\'h5\'>🔒&nbsp;&nbsp;精细化权限管理</h3><p class=\'body3\'>列权限上线，保护敏感数据。开启列权限后，可限制成员查看或编辑表格内的某列数据。<br/>路径：设置列权限前，需先开启文件权限</p><img src=\'https://s1.vika.cn/space/2021/05/24/e88abc2bcc844c38ad20f08d22e9181f\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\'/><br><h3 class=\'h5\'>⏳&nbsp;&nbsp;项目跟进，张弛有度</h3><p class=\'body3\'>超强甘特图，助力项目管理。以时间为轴，展示每一个任务的时间节点以及关键信息，全面把控进度。</p><img src=\'https://s1.vika.cn/space/2021/05/24/a5e1517e0b3140ed987558bbc3611591\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>📋&nbsp;&nbsp;记录修改，有迹可循</h3><p class=\'body3\'>追溯修改历史，以防数据丢失。最近 90 天的修改记录，包括修改人、修改内容等完整信息都能被找回。<br/>路径：展开行-点击弹窗右上角评论-显示本表的修改历史-修改历史</p><img src=\'https://s1.vika.cn/space/2021/05/20/b3d52ee7dfa644b28467bd078c4431a4\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>🔜&nbsp;&nbsp; 畅享输入，轻松排版</h3><p class=\'body3\'>文件详情页改版，文本编辑很清爽。支持 markdown 语法，输入“/”展开菜单栏，内容排版快人一步。</p><img src=\'https://s1.vika.cn/space/2021/05/21/5da12292646f4763a31a6c22fb24c270\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>📎&nbsp;&nbsp;附件下载，一步完成</h3><p class=\'body3\'>单行记录中，附件列的多个文件可一键下载。下载文件将以压缩包的形式存储在本地设备中。</p><img src=\'https://s1.vika.cn/space/2021/06/02/ace5f3eec1574b408267360f9e34b4b3\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>☎️&nbsp;&nbsp;成员手机，可控显示</h3><p class=\'body3\'>显示成员手机号码，紧急事项及时沟通。开启选项后，通讯录成员的手机号码将完整展示。<br/>路径：空间站管理-普通成员-成员信息-显示成员手机号</p><img src=\'https://s1.vika.cn/space/2021/06/02/2ac0700c43ea45af90627ffb3487af5c\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>⌨️&nbsp;&nbsp;快捷操作指南</h3><p class=\'body3\' style=\'margin-bottom:0;\'><ul><li>双击表格头部的表名，快速完成重命名。</li><li>点击右上角的协同成员头像，快速设置成员在当前表格的权限。</li><li>批量隐藏、拖动或删除维格列，选中一列后，按住 shift 并鼠标点击其他列可快速形成选区并进行操作。</li><li>批量操作连续的记录时，鼠标勾选一行后按住 shift 并点击最后一行前的复选框，即可快速形成选区。</li></ul></p>\\"\\n  }"},"64":{"uiConfigId":"player_step_ui_config_64","uiType":"modal","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"甘特图教学视频\\",\\n\\"video\\":\\"space/2021/05/26/baddaa8b7d0c4b0390b03ef9a5549c6e\\"\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"65":{"uiConfigId":"player_step_ui_config_65","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n\\"children\\": \\"<p class=\'body2\'>7月份的尾巴，是热情洋溢的狮子座，也是魔法神奇的维格表，快来康康这次更新了哪些功能吧～</p><h3 class=\'h5\'>🧙‍&nbsp;&nbsp;神奇表单更神奇</h3><p class=\'body3\'>未提交表单内容时退出页面，重新进入自动保留上次填写内容，减少重复输入<br/>支持智能公式列、神奇引用列的内容显示，表单填写智能化</p><img src=\'https://s1.vika.cn/space/2021/07/28/6217ee8aeb174ecb97eebcabf4cf50d3\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\'/><br><h3 class=\'h5\'>🌈&nbsp;&nbsp;字段设置很贴心</h3><p class=\'body3\'>显示神奇关联列在对应关联表中的列名称，帮助使用者快速理解、一一对应</p><img src=\'https://s1.vika.cn/space/2021/07/28/8307fab749df4b2e9b595bf39103d55a\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><p class=\'body3\' style=\'margin-top:16px;\'>数字列类型格式增强，贴合业务场景自定义单位名称，多种千分位格式设置，数据记录更直观</p><img src=\'https://s1.vika.cn/space/2021/07/28/11c3766b190a4a14be4f5c8bc64cd0ad\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>⏳&nbsp;&nbsp;筛选查重新技能</h3><p class=\'body3\'>数据录入和表单提交时可能导致的重复记录，都可以通过筛选器快速查找，以便及时更正</p><img src=\'https://s1.vika.cn/space/2021/07/28/43422e30ebe64a3eb3b59902e4b3e469\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>🎉&nbsp;&nbsp; 第三方集成：钉钉</h3><p class=\'body3\'>在钉钉中创建自建应用「维格表」，平台间的组织架构和消息通知即时同步，清除协作障碍</p><img src=\'https://s1.vika.cn/space/2021/07/28/1ee369d0851e4d948e23acaf6739c986\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><h3 class=\'h5\'>🔓&nbsp;&nbsp;其他功能优化</h3><p class=\'body3\'>相册视图布局调整，平铺状态下最少可展示一列，移动端查看更加舒适</p><img src=\'https://s1.vika.cn/space/2021/07/28/134565b110d54a6a9173d1a31f77f476\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><p class=\'body3\' style=\'margin-top:16px;\'>首列列名称增加小提示，数据结构化以「记录标题」为主键，不支持拖动、隐藏和删除</p><img src=\'https://s1.vika.cn/space/2021/07/28/8408908afb284bcf8d9d83bd11664640\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/><p class=\'body3\' style=\'margin-top:16px;\'>当维格表的列数量较多需要横向拖动进行查看时，可按住 Shift 后滚动鼠标上的滚轮来实现</p><img src=\'https://s1.vika.cn/space/2021/07/28/c16481e55ec845109ea47f3b0cc31989\' alt=\'wegist1\' style=\'width:100%;border-radius:4px;\'/>\\"\\n  }"},"66":{"uiConfigId":"player_step_ui_config_66","uiType":"modal","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n\\"title\\":\\"日历视图教学视频\\",\\n\\"video\\":\\"space/2022/04/26/ab9d17db76064e9d8fd228889e30f1ad\\"\\n} ","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"67":{"uiConfigId":"player_step_ui_config_67","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"知道啦","nextId":"known","uiConfig":"{\\n\\t\\"title\\": \\"🌟星球居民们🌟\\",\\n\\t\\"children\\": \\"<p class=\'body2\'>十月更新第二弹，维格机器人来喽，打通 IM 工具，消息通知使命必达，还有满屏细节更新，快来体验吧～</p><h3 class=\'h5\'>🤖️&nbsp;&nbsp;维格机器人</h3><p class=\'body3\'>维格机器人 (Vika Robot) 是工作流或系统对接的自动化方案，将帮助企业/个人减少机械劳动，释放生产力。当前，维格机器人已实现与 IM 工具的信息连接，只需简单配置即可将维格表记录推送至飞书、钉钉、企业微信。更多可能，敬请期待～<br/>尝鲜体验需先申请内测资格，路径：左下角头像-用户中心-实验性功能-机器人-去申请内测</p><img src=\'https://s1.vika.cn/space/2021/10/28/e20943559b2b4906b4b41797b9c528f4\' alt=\'wegist1\' style=\'width:100%; border-radius:4px; margin-bottom:16px;\'/><h3 class=\'h5\'>📅&nbsp;&nbsp;日期统计更通用</h3><p class=\'body3\' style=\'margin-top:16px;\'>优化 WEEKNUM()、WORKDAY()、WORKDAY_DIFF() 三个日期公式计算逻辑，使统计结果更符合预期。</p><ul><li style=\'color: #636363; font-size:12px;\'>WEEKNUM()，日期参数默认将每年的 1 月 1 日作为第一周，且周日为每周的第一天如： WEEKNUM(\'2021-11-11\')， 输出值： 46 </li><li style=\'color: #636363; font-size:12px;\'>WORKDAY()、WORKDAY_DIFF()，修复参数影响导致的计算结果异常现象</li> </ul><h3 class=\'h5\'>🌟&nbsp;&nbsp;评分更便捷</h3><p class = \'body3\'> 在满意度调研表单中，评分字段的使用尤为频繁， 使用鼠标点击并不便捷。现在，你可以选中评分单元格后，从键盘输入数字来完成（ 支持 PC 端和网页端）。 </p><h3 class=\'h5\'>↕️&nbsp;&nbsp;分组更友好</h3><p class=\'body3\'> 神奇关联作为维格表的明星功能，细节体验十分突出，将神奇关联字段作为分组条件后，点击分组标题展开记录详情，轻松掌握更多信息。</p><h3 class=\'h5\'>🛎️&nbsp;&nbsp;通知更细腻</h3>< p class=\'body3\'> 镜像用得好，权限无烦恼，在镜像视图下@相关成员，成员查看通知记录将打开对应的镜像视图， 避免原表无访问权限的尴尬。</p>\\"\\n}"},"68":{"uiConfigId":"player_step_ui_config_68","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"div[data-guide-id=WIDGET_ITEM_WRAPPER]:last-child\\",\\n\\"placement\\": \\"leftCenter\\",\\n \\"title\\": \\"开发模式\\", \\n\\"description\\": \\"开发模式下，你可以预览小程序的最新本地改动\\", \\"children\\":\\"\\" \\n}"},"69":{"uiConfigId":"player_step_ui_config_69","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"div[data-guide-id=WIDGET_ITEM_WRAPPER]:last-child [data-guide-id=WIDGET_ITEM_REFRESH]\\",\\n\\"placement\\": \\"topRight\\",\\n \\"title\\": \\"刷新\\", \\n\\"description\\": \\"每次本地改动代码后，都需要点击刷新来预览\\", \\"children\\":\\"\\"\\n}"},"70":{"uiConfigId":"player_step_ui_config_70","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"div[data-guide-id=WIDGET_ITEM_WRAPPER]:last-child [data-guide-id=WIDGET_ITEM_MORE]\\",\\n\\"placement\\": \\"topRight\\",\\n \\"title\\": \\"退出开发模式\\", \\n\\"description\\": \\"点击此处选择「退出开发模式」，将断开与本地服务的连接，恢复至上一个版本的小程序状态\\", \\"children\\":\\"\\"\\n}"},"71":{"uiConfigId":"player_step_ui_config_71","uiType":"customQuestionnaire","uiConfig":"{}"},"72":{"uiConfigId":"player_step_ui_config_72","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n\\"children\\": \\"<p class=\'body2\'>维格表 10 月上旬更新来了，日期筛选大幅优化，满足全方位使用需求，智能公式优化，数据统计更加精准便捷。</p><h3 class=\'h5\'>📅&nbsp;&nbsp;日期筛选更自由</h3><p class=\'body3\'>运营人员每周分析广告投放效果，财务人员月末整理对账数据，这些场景与日期筛选密不可分，动态查询将让数据统计分析工作愈加轻松。</p><p class=\'body3\'>新增本周/本月/上周/上月/今年 5 个常用日期条件，一次设置长期可用，再也不用每次手动调整啦～</p><img src=\'https://s1.vika.cn/space/2021/10/15/dd594c5e889b458ea6283b9271fa23ce\' alt=\'wegist1\' style=\'width:100%; border-radius:4px; margin-bottom:16px;\'/><br><p class=\'body3\'>项目回顾、工单处理等场景下需要聚焦某个周期内的数据，支持自定义时间范围，操作更友好</p><img src=\'https://s1.vika.cn/space/2021/10/15/58da29e1f20a4732bcf1c13f3547d2f1\' alt=\'wegist1\' style=\'width:100%; border-radius:4px; margin-bottom:16px;\'/><p class=\'body3\'>数据分析中有时只需关注近期数据变化，筛选早于/晚于当前多少天的数据，结合仪表盘还能轻松实现可视化大屏效果</p><img src=\'https://s1.vika.cn/space/2021/10/15/9d368709ee6145ca8c991220b71d9241\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\'/><h3 class=\'h5\'>🆒&nbsp;&nbsp;智能公式优化</h3><p class=\'body3\' style=\'margin-top:16px;\'>优化 DATETIME_DIFF()、AVERAGE()、FIND() 三个智能公式计算逻辑：</p><ul><li style=\'color: #636363; font-size:12px;\'>DATETIME_DIFF()输出结果调整为浮点数，更精确地计算两个日期间的差值</li><li style=\'color: #636363; font-size:12px;\'>AVERAGE()所统计字段带有空值时，空值将不纳入计算</li><li  style=\'color: #636363; font-size:12px;\'>FIND()新增支持从文本末端往前查找，如：FIND(\'a\',\'vikadata\',-1)，输出结果 8</li></ul>\\"\\n  }"},"73":{"uiConfigId":"player_step_ui_config_73","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n\\"children\\": \\"<p class=\'body2\'>十月更新第二弹，维格机器人 (Vika Robot) 来喽，打通 IM 工具，消息通知使命必达。还有满屏细节更新，快来体验吧～</p><h3 class=\'h5\'>🛰️&nbsp;&nbsp;维格机器人</h3><p class=\'body3\'>维格机器人 (Vika Robot) 是工作流或系统对接的自动化方案，将帮助企业/个人减少机械劳动，释放生产力。当前，维格机器人已实现与 IM 工具的信息连接，只需简单配置即可将维格表记录推送至飞书、钉钉、企业微信。更多可能，敬请期待～</p><p class=\'body3\'>尝鲜体验需先申请内测资格，路径：左下角头像-用户中心-实验性功能-机器人-去申请内测</p><img src=\'https://s1.vika.cn/space/2021/10/28/e20943559b2b4906b4b41797b9c528f4\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\'/><br><h3 class=\'h5\'>📅&nbsp;&nbsp;日期统计更通用</h3><p class=\'body3\' style=\'margin-top:16px;\'>优化 WEEKNUM()、WORKDAY()、WORKDAY_DIFF() 三个日期公式计算逻辑，使统计结果更符合预期。</p><ul><li style=\'color: #636363; font-size:12px;\'>WEEKNUM()，日期参数默认将每年的 1 月 1 日作为第一周，且周日为每周的第一天。如：WEEKNUM(\'2021-11-11\')，输出值：46</li><li style=\'color: #636363; font-size:12px;\'>WORKDAY()、WORKDAY_DIFF()，修复参数影响导致的计算结果异常现象</li></ul><h3 class=\'h5\'>🌟&nbsp;&nbsp;评分更便捷</h3><p class=\'body3\'>在满意度调研表单中，评分字段的使用尤为频繁，使用鼠标点击并不便捷。现在，你可以选中评分单元格后，从键盘输入数字来完成（支持 PC 端和网页端）。</p><h3 class=\'h5\'>↕️&nbsp;&nbsp;分组更友好</h3><p class=\'body3\'>神奇关联作为维格表的明星功能，细节体验十分突出，将神奇关联字段作为分组条件后，点击分组标题展开记录详情，轻松掌握更多信息。</p><h3 class=\'h5\'>🛎️&nbsp;&nbsp;通知更细腻</h3><p class=\'body3\'>镜像用得好，权限无烦恼，在镜像视图下 @ 相关成员，成员查看通知记录将打开对应的镜像视图，避免源表无访问权限的尴尬。</p>\\"\\n  }"},"74":{"uiConfigId":"player_step_ui_config_74","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\".style_formSpace__1_szP .style_right__DRofa #DATASHEET_FORM_CONTAINER_SETTING\\",\\n\\"placement\\": \\"bottomRight\\",\\n \\"title\\": \\"收纳单多选的选项\\",\\n \\"arrowStyle\\": { \\"right\\": \\"40px\\" },\\n\\"description\\": \\"选项过多导致页面太长？试试把它们收纳起来吧\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"75":{"uiConfigId":"player_step_ui_config_75","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"div[data-guide-id=WIDGET_ITEM_WRAPPER]:last-child\\",\\n\\"placement\\": \\"leftCenter\\",\\n \\"title\\": \\"未发布的小程序\\", \\n\\"description\\": \\"当前小程序未发布到空间站，只能在开发模式下预览小程序效果\\", \\"children\\":\\"\\" \\n}"},"76":{"uiConfigId":"player_step_ui_config_76","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n    \\"children\\": \\"<p class=\'body2\'>这可能是史上最硬核的 Q4，继 Vika Robot 维格机器人后，本次更新再次推出自建小组件，实现更丰富的数据可视化效果，数据流转、协作更智能。</p><h3 class=\'h5\'>🧙‍♀️&nbsp;&nbsp;表单显示更紧凑</h3><p class=\'body3\'>使用神奇表单进行数据收集，单选/多选的选项较多时，页面会不断拉长，影响填写体验。对此，神奇表单进行了样式优化，开启「收纳单多选的选项」，再多的选项都可以完美兼容。</p><p class=\'body3\'>路径：神奇表单-设置-收纳单多选的选项</p><img src=\'https://s1.vika.cn/space/2021/11/10/37910babc8d744c4abf092d1d2d6a81e\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\' /><br><h3 class=\'h5\'>🔐&nbsp;&nbsp;安全与权限升级</h3><p class=\'body3\'>空间站新增「安全设置」，企业/团队负责人可更加精细化地进行安全管控，包括维格表/视图是否可导出和分享、是否可邀请他人加入协作，是否开启全局水印等，进一步规避数据泄漏风险。</p><p class=\'body3\'>路径：设置-驾驶舱-安全设置</p><img src=\'https://s1.vika.cn/space/2021/11/10/c72d93fc72444d90b195f235f95dbf80\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\' /><h3 class=\'h5\'>🧰&nbsp;&nbsp;自建小组件内测啦～</h3><p class=\'body3\'>维格表自建小组件登场，为企业团队特定的工作场景和协作流程提供更多延展可能，内测申请通过后即可体验～</p><p class=\'body3\'>路径：用户中心-实验性功能-自建小组件-申请内测</p><img src=\'https://s1.vika.cn/space/2021/11/10/651a5b00b1ba4b6dbe7c612a8bd8616c\' alt=\'wegist1\' style=\'width:100%; border-radius:4px;\' /><h3 class=\'h5\'>🛰️&nbsp;&nbsp;优化机器人</h3><p class=\'body3\'>支持发送消息至企业微信群，同时新增查看运行历史详情，以便快速定位异常，确保消息及时触达。</p><p class=\'body3\'>路径：用户中心-实验性功能-机器人-申请内测</p>\\"\\n}"},"77":{"uiConfigId":"player_step_ui_config_77","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n    \\"children\\": \\"<h3 class=\'h5\'>关于 11 月 17 日服务器维护导致不可访问的致歉说明</h3><br/><p class=\'body3\' style=\'color: #262626;\'>11 月 17 日 23:02-23:30 期间，因 vika.cn 服务器在升级维护过程出现异常，维格表出现了 28                    分钟服务不可使用状态，我们为此深感抱歉。vika维格表本应助力深夜仍在辛勤工作的用户，更舒适快速地结束工作，在这里，向所有受影响的用户再次表达我们的歉意！</p><br/><p class=\'body3\' style=\'color: #262626;\'>问题出现后，产研团队第一时间上线解决。11 月 18 日，vika维格表团队组织了问题复盘会，总结教训的同时，我们向每一位用户做出如下承诺：</p><ol style=\'line-height: 2em; font-weight: bold;\'><li>每次服务器升级维护，我们将至少提前 36 小时给您推送邮件通知、站内通知；</li><li>服务器常规升级维护的作业时间固定调整至凌晨 4 点开始；</li></ol><br/><p class=\'body3\' style=\'color: #262626;\'>再次为我们造成的不便致以诚挚歉意。如果有任何问题，请随时联系我们：</p><ul style=\'line-height: 2em;\'><li style=\'color: #262626;\'><a href=\'mailto:support@vikadata.com\' target=\'_blank\' class=\'url\'>support@vikadata.com</a></li><li style=\'color: #262626;\'>微信：vikadata</li></ul><br/><p class=\'body3\' style=\'color: #262626;\'>vika维格表全体成员将竭诚为您服务。</p><p class=\'body3\' style=\'text-align: right; color: #262626;\'>vika维格表产研团队</p><p class=\'body3\' style=\'text-align: right; color: #262626;\'>2021 年 11 月 18 日</p>\\"\\n}"},"78":{"uiConfigId":"player_step_ui_config_78","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"我知道了","nextId":"i_knew_it","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_TOOL_BAR .style_toolbarMiddle__2kxTf\\",\\n\\"placement\\": \\"bottomRight\\",\\n \\"arrowStyle\\": { \\"display\\": \\"none\\" },\\n \\"title\\": \\"视图配置不协同\\",\\n\\"description\\": \\"现在，临时的筛选、分组、排序等配置在未保存的情况下，不会同步给其他人，你的临时配置也将在刷新后失效。\\" \\n}"},"79":{"uiConfigId":"player_step_ui_config_79","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"我知道了","nextId":"i_knew_it","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_VIEW_TAB_BAR #view_item_sync_icon\\",\\n\\"placement\\": \\"bottomLeft\\",\\n \\"arrowStyle\\": { \\"left\\": \\"6px\\" },\\n \\"title\\": \\"当前视图配置未保存\\",\\n\\"description\\": \\"你刚修改了某些视图配置（筛选、分组、排序...），它们现在还没有保存哦。这意味着它们仅对你自己临时生效。你可以点击此处保存并同步给其他人\\" \\n}"},"80":{"uiConfigId":"player_step_ui_config_80","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"我知道了","nextId":"i_knew_it","uiConfig":"{\\n \\"element\\": \\"#AUTO_SAVE_SVG_ID\\",\\n\\"placement\\": \\"bottomLeft\\",\\n \\"arrowStyle\\": { \\"left\\": \\"6px\\" },\\n \\"title\\": \\"当前视图已开启自动保存\\",\\n\\"description\\": \\"你现在进行筛选、分组、排序等视图配置操作会自动保存并同步给其他人\\" \\n}"},"81":{"uiConfigId":"player_step_ui_config_81","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n    \\"title\\": \\"🌟星球居民们🌟\\",\\n    \\"children\\": \\"<p class=\'body2\'>你们反馈的每个需求和场景，我们都记在小本本上，快来康康本期更新，有你想要的吗？</p><h3 class=\'h5\' id=\'🛸-全新驾驶舱\'>🛸&nbsp;全新驾驶舱</h3><p class=\'body3\'>细分功能模块，空间站管理员可清晰地查看套餐总量和可用余量，了解团队协作情况。</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/6675a9ee262242bd98d17dc375220dfb\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/6675a9ee262242bd98d17dc375220dfb\'></p><h3 class=\'h5\' id=\'️--批量粘贴记录的优化\'>↕️&nbsp; 批量粘贴记录的优化</h3><p class=\'body3\'>小明在维格视图的分组状态下，批量粘贴记录后发现覆盖了下一分组中的数据。因此他只能撤销粘贴操作，在当前分组下新增足够的行数再进行粘贴。</p><p class=\'body3\'>对此，维格表进行优化，分组下批量粘贴记录时询问是否新增行，避免覆盖原有记录。</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/f0c66d4656b947f1a3f6a85df7a5fe99\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/f0c66d4656b947f1a3f6a85df7a5fe99\'></p><h3 class=\'h5\' id=\'️-维格机器人\'>🛰️&nbsp;维格机器人</h3><p class=\'body3\'>维格机器人选择变量时支持插入公式列，发送至钉钉/飞书/企业微信群的消息内容中将展示公式计算结果。比如：小明在维格表中创建智能公式列，用于计算任务到期天数</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/295938afe27d44b095beabb5fad254e7\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/295938afe27d44b095beabb5fad254e7\'></p><p class=\'body3\'>维格列设置权限或删除，维格机器人中与之相关的匹配条件和变量值也将实时同步异常状态。</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/5aba8bf2c5864d8aaf15b805aee6e740\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/5aba8bf2c5864d8aaf15b805aee6e740\'></p><h3 class=\'h5\' id=\'-功能优化\'>💡&nbsp;功能优化</h3><p class=\'body3\'>工作目录树新增自动折叠和悬浮效果，为工作台腾出更多操作空间</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/11a92b3dc9074f2589f0c8f20361d08e\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/11a92b3dc9074f2589f0c8f20361d08e\'></p><p class=\'body3\'>优化视图标签栏，支持显示文件描述，多视图下自动进行收纳</p><p class=\'body3\'><img src=\'https://s1.vika.cn/space/2021/11/25/0d49558ebbae4f3cb9368fe1c588c9d5\' style=\'width:100%; border-radius:4px;\'    alt=\'https://s1.vika.cn/space/2021/11/25/0d49558ebbae4f3cb9368fe1c588c9d5\'></p>\\"\\n}"},"82":{"uiConfigId":"player_step_ui_config_82","uiType":"modal","onNext":["clear_guide_all_ui()"],"uiConfig":"{\\n\\"title\\":\\"架构视图教学视频\\",\\n\\"video\\":\\"space/2022/04/26/bebe4536c330427c81e6b26627263904\\"\\n}","onClose":["clear_guide_all_ui()"]},"83":{"uiConfigId":"player_step_ui_config_83","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_CREATOR_ORG_CHART\\",\\n\\"shadowDirection\\": \\"none\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"84":{"uiConfigId":"player_step_ui_config_84","uiType":"popover","backdrop":"around_mask","onNext":["clear_guide_uis([\\"popover\\"])"],"uiConfig":"{\\n \\"element\\": \\"#DATASHEET_CREATOR_ORG_CHART\\",\\n\\"placement\\": \\"right\\",\\n \\"title\\": \\"架构视图上线\\", \\n\\"description\\": \\"赶紧来体验一下吧\\", \\n\\"children\\": \\"\\"\\n}","onTarget":["clear_guide_all_ui()"]},"85":{"uiConfigId":"player_step_ui_config_85","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})","clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ORG_CHART_RECORD_LIST\\",\\n\\"placement\\": \\"left\\",\\n \\"title\\": \\"为它创建一个子级\\", \\n\\"description\\": \\"你可以将记录拖至左侧的记录卡片中，自动成为卡片的子级\\",\\n\\"offsetY\\": 144\\n}"},"86":{"uiConfigId":"player_step_ui_config_86","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ORG_CHART_RECORD_LIST\\",\\n\\"placement\\": \\"left\\",\\n \\"title\\": \\"清除子级\\", \\n\\"description\\": \\"你可以将记录拖至右侧的待处理记录区，清除其关联关系\\",\\n\\"offsetY\\": 144\\n}"},"87":{"uiConfigId":"player_step_ui_config_87","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ORG_CHART_RECORD_LIST\\"\\n}"},"88":{"uiConfigId":"player_step_ui_config_88","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#toolHideField\\"\\n}"},"89":{"uiConfigId":"player_step_ui_config_89","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"我知道了","nextId":"i_knew_it","uiConfig":"{\\n \\"element\\": \\"#toolHideField\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"设置卡片样式\\", \\n\\"description\\": \\"自定义卡片显示的字段和封面图效果\\" \\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"90":{"uiConfigId":"player_step_ui_config_90","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_TOOL_BAR_VIEW_SETTING\\"\\n}"},"91":{"uiConfigId":"player_step_ui_config_91","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})","clear_guide_uis([\\"popover\\"])"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_TOOL_BAR_VIEW_SETTING\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"重新查看教学视频\\", \\n\\"description\\": \\"你可以点击「设置」，在里面找到「架构视图」的教学视频重新观看噢~\\" \\n}"},"92":{"uiConfigId":"player_step_ui_config_92","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\"title\\":\\"🌟星球居民们🌟\\",\\"children\\":\\"<p class=\\\\\\"body3\\\\\\">架构视图来袭，拖动完成绘制，视图配置不协同，数据呈现千人千面，快来体验吧～</p>\\\\n<h3 class=\\\\\\"h5\\\\\\" style=\\\\\\"margin-bottom: 8px;\\\\\\">🙋‍♂️&nbsp;架构视图</h3>\\\\n<p class=\\\\\\"body3\\\\\\">架构视图用于呈现本表每条记录间的层级关系，只需将记录卡片拖动至图形区建立关联，即可轻松绘制组织架构图、软件架构图等效果，省时又高效</p>\\\\n<p class=\\\\\\"body3\\\\\\"><img src=\\\\\\"https://s1.vika.cn/space/2021/12/09/8e2aa90c2fa44641a59141b3a040ce55\\\\\\" alt=\\\\\\"https://s1.vika.cn/space/2021/12/09/8e2aa90c2fa44641a59141b3a040ce55\\\\\\" style=\\\\\\"width: 100%; border: 1px solid rgb(233, 233, 245); border-radius: 4px;\\\\\\"></p>\\\\n<h3 class=\\\\\\"h5\\\\\\" style=\\\\\\"margin-bottom: 8px;\\\\\\">🙅‍♂️&nbsp;视图配置不协同</h3>\\\\n<p class=\\\\\\"body3\\\\\\">多成员在同一视图下协作时，希望通过筛选/分组/排序等操作快速展示符合自身需求的记录并且不受其他成员的操作干扰，通过「视图配置不协同」，可实现视图效果仅当前生效。</p>\\\\n<p class=\\\\\\"body3\\\\\\">路径：空间站 &gt; 空间站管理 &gt; 管理员的实验性功能 &gt; 视图配置不协同</p>\\\\n<p class=\\\\\\"body3\\\\\\"><img src=\\\\\\"https://s1.vika.cn/space/2021/12/09/8aa52753ff5342eaa8a05dbf20bd0efc\\\\\\" alt=\\\\\\"https://s1.vika.cn/space/2021/12/09/8aa52753ff5342eaa8a05dbf20bd0efc\\\\\\" style=\\\\\\"width: 100%; border: 1px solid rgb(233, 233, 245); border-radius: 4px;\\\\\\"></p>\\\\n<h3 class=\\\\\\"h5\\\\\\" style=\\\\\\"margin-bottom: 8px;\\\\\\">🛰️&nbsp;维格机器人</h3>\\\\n<p class=\\\\\\"body3\\\\\\">维格机器人选择变量时支持插入神奇引用列类型的值，所有引用类型都可在消息通知中展示。</p>\\\\n<p class=\\\\\\"body3\\\\\\"><img src=\\\\\\"https://s1.vika.cn/space/2021/12/09/d58e4863b0aa4a47b0fe32e416ad6289\\\\\\" alt=\\\\\\"https://s1.vika.cn/space/2021/12/09/d58e4863b0aa4a47b0fe32e416ad6289\\\\\\" style=\\\\\\"width: 100%; border: 1px solid rgb(233, 233, 245); border-radius: 4px;\\\\\\"></p>\\\\n<h3 class=\\\\\\"h5\\\\\\" style=\\\\\\"margin-bottom: 8px;\\\\\\">🧣&nbsp;细节体验优化</h3>\\\\n<p class=\\\\\\"body3\\\\\\">神奇引用列和智能公式列中的网址点击可跳转，数字支持设置千分位。</p>\\\\n<p class=\\\\\\"body3\\\\\\">相册视图优化封面图尤其是长图的适配效果，记录卡片支持跨组拖动。</p>\\"}"},"93":{"uiConfigId":"player_step_ui_config_93","uiType":"privacyModal","onNext":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"title\\": \\"维格隐私政策\\",\\n  \\"children\\": \\"<h3><strong>1. 我们如何收集并使用您的信息</strong></h3>\\\\n<p>在您使用维格表提供的以下服务或功能过程中，我们将基于以下基本功能收集您的相关必要个人信息。</p>\\\\n<h3><strong>1.1 账号的注册及使用</strong></h3>\\\\n<p>您首先需要注册一个维格表账号成为维格表的注册用户。当您注册时，您需要向我们提供您本人的手机号码或者电子邮箱，我们将通过发送短信验证码或者邮件验证码的方式来验证您的身份是否有效。如果您不提供该信息，您也可以通过第三方平台（微信、钉钉、飞书、企业微信）授权的形式快速完成注册，此方式需要您授权维格表获得您在第三方平台的头像、昵称。</p>\\\\n<h3><strong>1.2 基本业务使用</strong></h3>\\\\n<p><strong><strong>1.2.1 空间站的通讯录</strong></strong></p>\\\\n<p>空间站的通讯录中可能会展示您在此空间站的昵称、头像、电话号码以及邮箱。注：非本空间站的成员将不会看到您的个人信息。</p>\\\\n<p><strong><strong>1.2.2 发布记录评论</strong></strong></p>\\\\n<p>您可以对表格中的记录进行评论，评论的信息将会带上您的昵称以及头像。注：非本空间站的成员将不会看到您的个人信息。</p>\\\\n<p><strong><strong>1.2.3 带有成员相关信息的字段</strong></strong></p>\\\\n<p>在表格中使用成员字段的相关功能，将会带上您的昵称以及头像信息。</p>\\\\n<p><strong><strong>1.2.4 文件的公开链接</strong></strong></p>\\\\n<p>利用文件的公开链接能力进行分享，在分享的页面上将会带上您的昵称、头像以及空间站的名称信息。</p>\\\\n<p><strong><strong>1.2.5 “维格社区”公开发布功能</strong></strong></p>\\\\n<p>您可通过“维格社区”的问题、文章、活动、评论功能公开发布信息，相关页面将显示您的昵称和头像。您公开发布的信息中可能会涉及您或他人的个人信息甚至个人敏感信息，请您谨慎地考虑，是否在使用我们的服务时公开发布相关信息。若您公开发布的信息中涉及他人个人信息的，您需在发布前征得他人的同意。</p>\\\\n<h3><strong>1.3 客户服务</strong></h3>\\\\n<p>为了更好为您排查使用中的问题，我们会收集以下信息来帮助工程师定位问题。</p>\\\\n<p><strong><strong>1.3.1 设备信息</strong></strong></p>\\\\n<p>我们会根据您在具体使用维格表时的操作，收集您所使用的设备相关信息：包括设备型号、操作系统版本、设备设置、 MAC 地址及 IMEI 等相关信息。</p>\\\\n<p><strong><strong>1.3.2 服务日志</strong></strong></p>\\\\n<p>我们会收集您在使用维格表服务时的操作日志进行保存，包括：浏览记录、点击事件、浏览器类型、电信运营商、IP 地址、访问时长、访问日期及时间。</p>\\\\n<h3><strong>1.4 授权同意之外</strong></h3>\\\\n<p>根据法律法规的规定，在以下情形中，我们可未经您授权的情况下收集并使用以下信息：</p>\\\\n<ol>\\\\n<li>\\\\n<p>与国家安全、国防安全直接相关的；</p>\\\\n</li>\\\\n<li>\\\\n<p>与公共安全、公共卫生、重大公共利益直接相关的；</p>\\\\n</li>\\\\n<li>\\\\n<p>与犯罪侦查、起诉、审判和判决执行等直接相关的；</p>\\\\n</li>\\\\n<li>\\\\n<p>依照《中华人民共和国个人信息保护法》规定在合理的范围内处理您自行公开或者其他已经合法公开的个人信息；</p>\\\\n</li>\\\\n<li>\\\\n<p>从合法公开披露的信息中收集到您的个人信息，如从合法的新闻报道、政府信息公开等渠道；</p>\\\\n</li>\\\\n<li>\\\\n<p>根据您的要求签订和履行合同所必需的；</p>\\\\n</li>\\\\n<li>\\\\n<p>用于维护维格表的产品和/或服务的安全稳定运行所必需的；</p>\\\\n</li>\\\\n<li>\\\\n<p>法律法规规定的其他情形。</p>\\\\n</li>\\\\n</ol>\\\\n<h3><strong>2. 我们保证信息的安全性</strong></h3>\\\\n<p>维格表为保障用户的数据安全不遗余力。我们始终以软件行业最高安全标准保护用户数据，所使用的安全模型和策略全部基于国际标准和行业最佳实践。</p>\\\\n<p>我们将严格保护您的信息的安全。使用各种安全技术和程序来保护您的信息不被未经授权的访问、使用或泄漏。如果您对隐私保护有任何置疑，请发送邮件至 <a href=\\\\\\"mailto:devops@vikadata.com\\\\\\">devops@vikadata.com</a>。</p>\\\\n<h3><strong>2.1 技术措施</strong></h3>\\\\n<p><strong><strong>2.1.1 数据位置</strong></strong></p>\\\\n<p>维格表的数据全部托管在亚马逊中国（AWS）宁夏区域、北京区域、阿里云的多个数据中心的可用区中，采用多副本冗余存储。他们是中国最顶尖的云服务提供商，数据托管在他们的基础设施上，避免了硬盘被盗或失效、甚至整个区域故障导致的数据丢失风险。</p>\\\\n<p><strong><strong>2.1.2 数据灾备与恢复</strong></strong></p>\\\\n<p>维格表每天都会对数据进行备份，备份数据也存储在多个数据中心的可用区中，并使用 AES-256 算法进行加密， 所有备份都会定期追踪其完整性并进行验证检查，以确保故障发生时，我们可以迅速启动恢复流程并立即修复数据。</p>\\\\n<p><strong><strong>2.1.3 服务器安全</strong></strong></p>\\\\n<p><strong>网络安全</strong></p>\\\\n<p>维格表采用亚马逊云中国（AWS）云提供的、具有多层保护和防御机制的网络安全技术，通过防火墙阻挡未经授权的访问，同时还采用多个交换机和安全网关来确保网络冗余，防止内部网络的单点故障。</p>\\\\n<p><strong>DDoS 防御</strong></p>\\\\n<p>维格表使用新一代Amazon WAF（Web 应用防护系统）技术来防止对服务器的 DDoS 攻击，只允许正常的流量通过，防止恶意流量攻击造成的业务中断，使网站和 API 保持高可用性和高性能。</p>\\\\n<p><strong>服务器强化</strong></p>\\\\n<p>维格表所有服务器未使用的端口和帐户都被禁用，我们定期对云服务器进行安全扫描和补丁升级。</p>\\\\n<p><strong>服务灾难恢复和业务连续性</strong></p>\\\\n<p>维格表的服务均采用多副本冗余机制，分布在多个不同区域内，在单个区域发生故障的情况下，其他区域会接管并平稳地进行切换操作。除此之外，我们还制定了业务连续性计划并对基础架构进行持续监控，确保维格表的各项服务能够正常运行。</p>\\\\n<p><strong>管理权限</strong></p>\\\\n<p>维格表采用访问控制技术严格管理服务器的访问权限。基于最小特权和基于角色的权限控制原则，最大程度地减少数据泄露的风险。登录服务器被要求使用受密码保护的 SSH 密钥和双因素身份验证，并记录所有的服务器操作，日常审核。</p>\\\\n<p><strong><strong>2.1.4 软件服务安全</strong></strong></p>\\\\n<p><strong>代码安全</strong></p>\\\\n<p>维格表的所有代码在部署到服务器之前均经过严格的安全检验，包括威胁建模、自动化测试、自动扫描和代码审核。同时我们的开发人员会进行安全培训，以保证他们掌握最新、最佳的安全开发实践，防止隐患产生。</p>\\\\n<p><strong>通信加密</strong></p>\\\\n<p>当用户执行访问网站或上传附件等操作时，数据会在他的设备和我们的数据中心之间加密传输。我们设置了多重安全防护来保护用户数据的传输：要求所有与服务器的连接均使用 TLS 1.2 / TLS 1.3 和现代密码算法对流量进行加密；启用了 HTTPS 安全协议，要求浏览器仅能通过加密连接与我们建立连接。</p>\\\\n<p><strong>数据鉴权和隔离</strong></p>\\\\n<p>为了确保数据的合法访问，维格表使用国际标准的鉴权体系，提供身份管理、认证管理和角色授权三位一体的用户业务鉴权服务。通过用户身份标识、用户授权检查、业务身份标识形成端对端的鉴权体系，防止非授权的数据访问发生。以鉴权的安全性为基础，维格表依照 SaaS 服务多租户的最佳实践，设计实现了用户团队之间数据的隔离性。</p>\\\\n<p><strong>网站安全加固</strong></p>\\\\n<p>维格表定期进行专业漏洞扫描, 通过Web漏洞扫描、操作系统漏洞扫描、资产内容合规检测、配置基线扫描、弱密码检测五大方面，自动发现网站或服务器暴露在网络中的安全风险，为云上业务提供多维度的安全检测服务，满足合规要求，让安全弱点无所遁形。</p>\\\\n<h3><strong>2.2 安全认证</strong></h3>\\\\n<p><strong><strong>2.2.1 网络安全等级保护 2.0</strong></strong></p>\\\\n<p>依据网络安全等级保护 2.0 的标准及相关条例规定，维格表对整个系统进行安全加固，正在申请认证机关的审核，将于 2022 年内完成此项认证。</p>\\\\n<p>中国网络安全等级保护 2.0（简称等保 2.0）于 2019 年 12 月 1 日起正式实施。等保 2.0 更加注重主动防御，从被动防御到事前、事中、事后全流程的安全可信、动态感知和全面审计，实现了对传统信息系统、基础信息网络、云计算、移动互联、物联网、大数据和工业控制系统等级保护对象的全覆盖。</p>\\\\n<p><strong><strong>2.2.2 ISO/IEC 27001:2013 信息安全管理体系</strong></strong></p>\\\\n<p>维格表按照 ISO 27001 的各项标准及相关条例规定，维格表对整个系统进行安全加固，正在申请认证机关的审核，将于2022年内完成此项认证。</p>\\\\n<p>通过 ISO 27001 认证，能体现企业对安全的承诺，表明企业信息安全管理已建立起一套科学有效的管理体系，能够为用户提供可靠的信息服务。目前国内外许多政府机构、银行、证券、保险公司、电信运营商、网络公司及许多跨国公司均采用了此项 ISO 标准对自己的信息安全进行系统的管理。</p>\\\\n<h3><strong>3. 我们如何使用 cookie 和同类技术</strong></h3>\\\\n<p>为确保网站正常运转，我们会在您的计算机或移动设备上存储名为 cookie 的数据文件。cookie 通常包含用户身份标识符、城市名称以及一些字符。cookie 主要的功能是便于您使用网站产品和服务，以及帮助网站统计独立访客数量等。运用 cookie 技术，我们能够为您提供更加周到的服务。我们不会将 cookie 用于本政策所述目的之外的任何用途。您可根据自己的偏好管理或删除 cookie。您可以清除计算机上保存的所有 cookie，大部分网络浏览器都设有阻止 cookie 的功能。但如果您这么做，则需要在每一次访问我们的网站时亲自更改用户设置，但您可能因为该等修改，无法登录或使用依赖于 cookie 的维格表提供的服务或功能。您可以通过更改您的浏览器设置限制维格表对 cookie 的使用。以 Chrome 浏览器为例，您可以在 Chrome 浏览器右上方的下拉菜单的“浏览器设置”中，通过“设置-高级-清除浏览数据”，选择清除您的 cookie。</p>\\\\n<h3><strong>4. 我们如何共享、转让、披露收集到的信息</strong></h3>\\\\n<h3><strong>4.1 共享您的个人信息</strong></h3>\\\\n<p>我们在获得您的明确同意后，会在以下地方或与授权的第三方合作伙伴共享您的个人信息。共享的个人信息的用途限制：提供基础的业务服务、协助我们向您提供服务。</p>\\\\n<ol>\\\\n<li>\\\\n<p>我们在法律法规及您本人的允许下，根据申请方的请求对外共享您的个人信息。</p>\\\\n</li>\\\\n<li>\\\\n<p>与授权的第三方合作伙伴共享：我们与我们授权过的第三方共享您的个人信息，但仅会出于本隐私权政策声明的合法、正当、必要、特定、明确的目的共享您的信息，比如您使用的设备信息、操作的时间、访问页面时长等来收集您功能的使用情况，以此帮助我们改进功能的设计。我们会审慎选择第三方和第三方服务，督促相关第三方在按照本政策或另行与您达成的约定收集和使用您的个人信息，并采取适当的安全技术和管理措施保障您的个人信息安全。</p>\\\\n</li>\\\\n</ol>\\\\n<h3><strong>4.2 转让及披露您的个人信息</strong></h3>\\\\n<p>除非获取您明确的同意，否则我们不会公开转让、披露您的个人信息。</p>\\\\n<p>但在以下情形中，我们可以在不征求您的授权同意下，共享、转让、披露您的个人信息：</p>\\\\n<ol>\\\\n<li>\\\\n<p>与国家安全相关；</p>\\\\n</li>\\\\n<li>\\\\n<p>与犯罪侦查、起诉、审批和判决执行等有关；</p>\\\\n</li>\\\\n<li>\\\\n<p>行政、司法机关依法提出的要求；</p>\\\\n</li>\\\\n<li>\\\\n<p>为了维护您所属维格表团队的财产安全或出于其他企业主提出的合法权益合理且必要的用途</p>\\\\n</li>\\\\n<li>\\\\n<p>您主动公开的个人信息；</p>\\\\n</li>\\\\n<li>\\\\n<p>从合法渠道收集到的个人信息；</p>\\\\n</li>\\\\n<li>\\\\n<p>法律法规的其他情形。</p>\\\\n</li>\\\\n</ol>\\\\n<p>如您主动公开、共享个人信息，不受本协议限制。</p>\\\\n<h3><strong>5. 有害信息处理</strong></h3>\\\\n<p>根据法律法规，我们禁止用户写入并存储一切有害信息，包括：</p>\\\\n<ol>\\\\n<li>\\\\n<p>违反宪法的基本原则的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>危害国家安全，泄露国家秘密的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>一切反动、破坏国家统一的言论；</p>\\\\n</li>\\\\n<li>\\\\n<p>破坏国家关系、民族和谐统一的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>封建迷信的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>散布谣言或不实消息扰乱社会秩序、破坏社会稳定的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>侵犯他人名誉、隐私等合法权益的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>散布淫秽、色情、赌博、暴力恐怖犯罪信息的内容；</p>\\\\n</li>\\\\n<li>\\\\n<p>违反国家法律、行政法规禁止的其他内容；</p>\\\\n</li>\\\\n</ol>\\\\n<p>我们将对以上信息进行屏蔽处理。如果后续的举报中发现，我们有权对违反政策的内容进行删除，并对违反政策的用户进行封号处理，同时保留依法追究当事人的法律责任的权利。</p>\\\\n<h3><strong>6. 您的权利</strong></h3>\\\\n<p>我们根据法律法规支持并保护您个人的隐私，您对自己的个人信息拥有访问、修改、删除以及撤回的权利。</p>\\\\n<ol>\\\\n<li>\\\\n<p>管理账号信息：您可在【用户中心】中修改您的昵称、头像、手机号、邮箱以及密码。</p>\\\\n</li>\\\\n<li>\\\\n<p>账号注销：您可在【个人中心】中点击【注销】，根据页面具体提示来提交您的账号注销申请，并在您符合注销条件的情况下，我们将在30个工作日后完成注销。注销申请可在操作成功后的30日内撤回。在您主动注销账号之后，我们将停止为您提供产品或服务，并根据法律的要求删除您的个人信息，或对其进行匿名化处理，因法律规定需要留存个人信息的，我们不会再将其用于日常业务活动中。</p>\\\\n</li>\\\\n</ol>\\\\n<p>在以下情形中，您可以通过与客服沟通向我们提出删除个人信息的请求，我们会对应做出删除响应：</p>\\\\n<ol>\\\\n<li>\\\\n<p>我们收集并使用了您的信息但未经过您的允许或同意；</p>\\\\n</li>\\\\n<li>\\\\n<p>在您同意我们收集并使用的情况下，我们使用您的个人信息时严重违反了与您的约定；</p>\\\\n</li>\\\\n<li>\\\\n<p>我们使用您的信息时，违反了法律法规。</p>\\\\n</li>\\\\n</ol>\\\\n<p>在以下情形中，我们不能响应您删除的请求：</p>\\\\n<ol>\\\\n<li>\\\\n<p>国家安全相关；</p>\\\\n</li>\\\\n<li>\\\\n<p>有证据表明您存在侵权行为；</p>\\\\n</li>\\\\n<li>\\\\n<p>与犯罪侦查、起诉、审批和判决执行相关；</p>\\\\n</li>\\\\n<li>\\\\n<p>行政、司法机关依法提出的要求；</p>\\\\n</li>\\\\n<li>\\\\n<p>响应您的请求将损害他人或企业的合法权益。</p>\\\\n</li>\\\\n</ol>\\\\n<h3><strong>7. 面对未成年人的的隐私策略</strong></h3>\\\\n<p>我们非常重视对未成年人个人信息的保护。根据相关法律法规的规定，若您是 18 周岁以下的未成年人，在使用维格表服务前，应事先取得您的家长或法定监护人的书面同意。若您是未成年人的监护人，当您对您所监护的未成年人的个人信息有相关疑问时，请通过邮件<a href=\\\\\\"mailto:support@vikadata.com\\\\\\">support@vikadata.com</a>向我们告知。</p>\\\\n<h3><strong>8. 免责说明</strong></h3>\\\\n<p>就下列相关事宜的发生，我们不承担任何法律责任：</p>\\\\n<ol>\\\\n<li>\\\\n<p>根据法律规定或相关政府的要求提供您的企业或个人信息。</p>\\\\n</li>\\\\n<li>\\\\n<p>由于您将用户密码告知他人或与他人共享账户，由此导致的任何企业或个人信息的泄漏，或其他非因服务原因导致的个人信息的泄漏。</p>\\\\n</li>\\\\n<li>\\\\n<p>在各服务条款及声明中列明的使用方式或免责情形。</p>\\\\n</li>\\\\n<li>\\\\n<p>因不可抗力导致的任何后果。</p>\\\\n</li>\\\\n</ol>\\\\n<h3><strong>9. 联系我们</strong></h3>\\\\n<p>有关本隐私政策或相关的隐私措施的问题，请发送邮件至 <a href=\\\\\\"mailto:support@vikadata.com\\\\\\">support@vikadata.com</a>。</p>\\\\n<h3><strong>10. 附录</strong></h3>\\\\n<p><strong>第三方SDK共享信息</strong></p>\\\\n<ol>\\\\n<li>\\\\n<p>为保障维格表的稳定运行、功能实现，使您能够使用和体验更丰富的服务及功能，我们的应用中会嵌入授权合作伙伴的 SDK。</p>\\\\n</li>\\\\n<li>\\\\n<p>我们会对软件工具开发包（SDK）进行严格的安全检测，并约定严格的数据保护措施。</p>\\\\n</li>\\\\n<li>\\\\n<p>此外，当您使用本平台接入的第三方服务时，您的信息将适用该第三方的隐私政策，建议您在接受相关服务前阅读并确认理解相关协议。</p>\\\\n</li>\\\\n</ol>\\\\n<p>对我们与之共享用户信息的公司、组织和个人，我们会与其签署严格的保密协议以及信息保护约定，要求他们严格遵守我们关于数据隐私保护的说明、本隐私政策以及其他任何相关的保密和安全措施来处理用户个人信息。</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2022/01/19/dfd3e93ff351452cb1164c8a4e3ccb1f?attname=image.png\\\\\\" alt=\\\\\\"在这里插入图片描述\\\\\\"></p>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"94":{"uiConfigId":"player_step_ui_config_94","uiType":"taskList","uiConfig":"{\\n    \\"title\\": \\"选择任务，开启探索之旅吧\\",\\n    \\"description\\": \\"移动鼠标来选择任务，跟随页面提示开启旅程吧～\\",\\n    \\"data\\": [\\n        {\\n            \\"text\\": \\"重命名文件，目录索引更直观\\",\\n            \\"stopEvents\\": [\\n                \\"onMouseDown\\"\\n            ],\\n            \\"actions\\": [\\n                {\\n                    \\"uiType\\": \\"element\\",\\n                    \\"uiConfig\\": {\\n                        \\"element\\": \\"#FOLDER_SHOWCASE_TITLE\\",\\n                        \\"emitEvent\\": \\"click\\",\\n                        \\"nextActions\\": [\\n                            {\\n                                \\"uiType\\": \\"popover\\",\\n                                \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\"#FOLDER_SHOWCASE_TITLE_INPUT\\\\\\",\\\\\\"placement\\\\\\":\\\\\\"bottom\\\\\\",\\\\\\"title\\\\\\":\\\\\\"智能引导\\\\\\",\\\\\\"description\\\\\\":\\\\\\"点击这里可以修改名称 👆\\\\\\"}\\",\\n                                \\"backdrop\\": \\"around_mask\\"\\n                            },\\n                            {\\n                                \\"uiType\\": \\"element\\",\\n                                \\"uiConfig\\": {\\n                                    \\"element\\": \\"#FOLDER_SHOWCASE_TITLE_INPUT\\",\\n                                    \\"emitEvent\\": \\"focus\\",\\n                                    \\"finishTodoWhen\\": [\\n                                        \\"blur\\"\\n                                    ]\\n                                }\\n                            }\\n                        ]\\n                    }\\n                }\\n            ]\\n        },\\n        {\\n            \\"text\\": \\"查看/修改文件夹说明，以便其他协作者理解\\",\\n            \\"actions\\": [\\n                {\\n                    \\"uiType\\": \\"breath\\",\\n                    \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\"#FOLDER_SHOWCASE_DESCRIPTION\\\\\\"}\\",\\n                    \\"backdrop\\": \\"around_mask\\"\\n                },\\n                {\\n                    \\"uiType\\": \\"popover\\",\\n                    \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\"#FOLDER_SHOWCASE_DESCRIPTION\\\\\\",\\\\\\"placement\\\\\\":\\\\\\"left\\\\\\",\\\\\\"title\\\\\\":\\\\\\"智能引导\\\\\\",\\\\\\"description\\\\\\":\\\\\\"点击这里查看/修改说明\\\\\\"}\\"\\n                },\\n                {\\n                    \\"uiType\\": \\"element\\",\\n                    \\"uiConfig\\": {\\n                        \\"element\\": \\"#FOLDER_SHOWCASE_DESCRIPTION\\",\\n                        \\"finishTodoWhen\\": [\\n                            \\"click\\"\\n                        ]\\n                    }\\n                }\\n            ]\\n        },\\n        {\\n            \\"text\\": \\"为避免数据泄露或误删，设置文件访问权限\\",\\n            \\"actions\\": [\\n                {\\n                    \\"uiType\\": \\"breath\\",\\n                    \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\"#FOLDER_SHOWCASE_BTN_MORE\\\\\\"}\\"\\n                },\\n                {\\n                    \\"uiType\\": \\"element\\",\\n                    \\"uiConfig\\": {\\n                        \\"element\\": \\"#FOLDER_SHOWCASE_BTN_MORE\\",\\n                        \\"nextActions\\": [\\n                            {\\n                                \\"uiType\\": \\"breath\\",\\n                                \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\".sc-eFehXo div:nth-of-type(1)\\\\\\",\\\\\\"shadowDirection\\\\\\":\\\\\\"inset\\\\\\"}\\"\\n                            },\\n                            {\\n                                \\"uiType\\": \\"element\\",\\n                                \\"uiConfig\\": {\\n                                    \\"element\\": \\".sc-eFehXo div:nth-of-type(1)\\",\\n                                    \\"finishTodoWhen\\": [\\n                                        \\"click\\"\\n                                    ]\\n                                }\\n                            }\\n                        ]\\n                    }\\n                }\\n            ]\\n        },\\n        {\\n            \\"text\\": \\"点击任一文件节点，开始进行数据协作吧\\",\\n            \\"actions\\": [\\n                {\\n                    \\"uiType\\": \\"breath\\",\\n                    \\"uiConfig\\": \\"{\\\\\\"element\\\\\\":\\\\\\"#FOLDER_SHOWCASE_FIRST_NODE\\\\\\"}\\"\\n                },\\n                {\\n                    \\"uiType\\": \\"element\\",\\n                    \\"uiConfig\\": {\\n                        \\"element\\": \\"#FOLDER_SHOWCASE_NODES_CONTAINER > div\\",\\n                        \\"finishTodoWhen\\": [\\n                            \\"click\\"\\n                        ]\\n                    }\\n                }\\n            ]\\n        }\\n    ]\\n}"},"95":{"uiConfigId":"player_step_ui_config_95","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\"title\\":\\"🌟星球居民们🌟\\",\\"children\\":\\"<h3>🔒 视图锁</h3>\\\\n<p>在视图标签栏中开启「视图锁」，其他协作者将无权对视图进行筛选、分组、排序等操作，稳稳保住数据呈现效果。</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2021/12/23/831976472d6c491599ff92076045bb89\\\\\\" alt=\\\\\\"https://s1.vika.cn/space/2021/12/23/831976472d6c491599ff92076045bb89\\\\\\"></p>\\\\n<h3>💬&nbsp;记录评论</h3>\\\\n<p>记录评论不仅支持引用指定评论进行回复，还可以用表情 👌&nbsp;和 👍&nbsp;表示知会和认可，让工作琐碎事事有响应。</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2021/12/23/694dcfc45bb94cbb91437cd8119d4af2\\\\\\" alt=\\\\\\"https://s1.vika.cn/space/2021/12/23/694dcfc45bb94cbb91437cd8119d4af2\\\\\\"></p>\\\\n<h3>其他优化</h3>\\\\n<p>支持只读权限成员进行视图配置，可随心进行筛选、排序等操作，不用担心影响到其他人。</p>\\\\n<p>维格小组件全面更名为「维格小程序」，组件板和组件中心同步更名为「小程序面板」、「小程序中心」。</p>\\"}"},"97":{"uiConfigId":"player_step_ui_config_97","uiType":"contactUs","onNext":["clear_guide_all_ui()","set_wizard_completed({\\"curWizard\\": true})","open_vikaby({\\"defaultExpandMenu\\": true, \\"visible\\": true})"],"next":"已完成添加","nextId":"player_contact_us_confirm_btn","uiConfig":"{\\n\\t\\"vikaby\\": {\\n\\t\\t\\"title\\": \\"你好\\",\\n\\t\\t\\"description\\": \\"如果在使用过程中遇到问题，请扫描右侧二维码联系我解决\\",\\n\\t\\t\\"list\\": \\"<ul><li>刚注册维格表，不知道怎么用</li><li>维格表可以实现我想要的效果吗</li><li>使用过程出现异常问题</li><li>后续支持的功能有哪些</li><li>获取官方邀请码</li></ul>\\",\\n\\t\\t\\"tip\\": \\"扫码添加客服\\"\\n\\t},\\n\\t\\"questionnaire\\": {\\n\\t\\t\\"title\\": \\"您好，我是维格表数字化顾问\\",\\n\\t\\t\\"list\\": \\"[{\\\\\\"title\\\\\\": \\\\\\"Bug 吐槽\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"BugOutlined\\\\\\"}, {\\\\\\"title\\\\\\": \\\\\\"需求反馈\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"AdviseSmallOutlined\\\\\\"}, {\\\\\\"title\\\\\\": \\\\\\"服务支持\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"ServeOutlined\\\\\\"}, {\\\\\\"title\\\\\\": \\\\\\"案例推荐\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"ZanOutlined\\\\\\"}, {\\\\\\"title\\\\\\": \\\\\\"解决方案\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"SolutionSmallOutlined\\\\\\"}, {\\\\\\"title\\\\\\": \\\\\\"产品答疑\\\\\\", \\\\\\"icon\\\\\\": \\\\\\"InformationLargeOutlined\\\\\\"}]\\",\\n\\t\\t\\"tip\\": \\"扫码添加微信，获得更多专属服务\\"\\n\\t},\\n\\t\\"website\\": {\\n\\t\\t\\"questionnaire\\": \\"https://s1.vika.cn/space/2023/03/02/59f4cc8e0b2b4395bf0fcd133d208e63\\",\\n\\t\\t\\"vikaby\\": \\"https://s1.vika.cn/space/2023/03/02/defbf55d1e9646eb929f9f5d11d5c119\\"\\n\\t},\\n\\t\\"dingtalk\\": {\\n\\t\\t\\"questionnaire\\": \\"https://s1.vika.cn/space/2023/03/02/964be5e3217b4fa8bfa74ef47a980093?attname=dingtalk-questionnaire.png\\",\\n\\t\\t\\"vikaby\\": \\"https://s1.vika.cn/space/2023/03/02/964be5e3217b4fa8bfa74ef47a980093?attname=dingtalk-vikaby.png\\",\\n\\"tip\\": \\"请使用钉钉扫码，加入交流群\\"\\n\\t},\\n\\t\\"wecom\\": {\\n\\t\\t\\"questionnaire\\": \\"https://s1.vika.cn/space/2023/03/02/1346d5efbd5043efb2bfcba0075c0ee9\\",\\n\\t\\t\\"vikaby\\": \\"https://s1.vika.cn/space/2023/03/02/09401a8f2d8e491a9097b9bac8b5a4e4\\"\\n\\t},\\n\\t\\"feishu\\": {\\n\\t\\t\\"title\\": \\"扫码添加客服\\",\\n\\t\\t\\"tip\\": \\"请使用飞书扫码，添加客服号备用\\",\\n\\t\\t\\"description\\": \\"以便使用过程中遇到问题，可以随时获得服务和解答\\",\\n\\t\\t\\"originUrl\\": \\"https://u.vika.cn/z9ygm\\"\\n\\t}\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"98":{"uiConfigId":"player_step_ui_config_notice_0_10_5","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/01/21/fe33887f388649579947379203ece53b\\",\\n    \\"readMoreTxt\\": \\"查看更多\\",\\n    \\"readMoreUrl\\": \\"https://cn.bing.com\\",\\n    \\"children\\": \\"<h3>2022年1月更新：第二弹</h3>\\\\n<ul>\\\\n<li>维格表功能界面支持英文语言，点亮 Hello World</li>\\\\n<li>新增文件信息窗展示创建人和创建时间，管理更有序</li>\\\\n<li>回收舱取消「彻底删除」，避免其他成员误删除导致无法恢复</li>\\\\n<li>小助手增加「历史更新」，游历社区挖掘更多功能使用小技巧</li>\\\\n</ul>\\"\\n}","onClose":["clear_guide_all_ui()","set_wizard_completed({\\"curWizard\\": true})"]},"99":{"uiConfigId":"player_step_ui_config_99","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"title\\": \\"🌟星球居民们🌟\\",\\n  \\"children\\": \\"<p>2022 年首版更新已送达，希望每个细节体验都能在「辞旧迎新」中为你提供更多便利与舒心。</p>\\\\n<h3>📅 日期输入更包容</h3>\\\\n<p>日期字段体验优化，单元格输入 1-14、1/14 后智能补全为 2022/01/14，想你所想</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2022/01/13/97f2bfa8572a43b58f83517e54fe7317\\\\\\" alt=\\\\\\"\\\\\\"></p>\\\\n<h3>📅  日历展示更清晰</h3>\\\\n<p>优化日历视图展示效果，同一日期中的记录超出 5 条时自动折叠，保持页面简洁</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2022/01/12/8173324f1f6b4cd78bb0827e21bbda71\\\\\\" alt=\\\\\\"\\\\\\"></p>\\\\n<h3>🎮 小程序能力拓展</h3>\\\\n<p>小程序能力进一步开放，vika 实验室实力出道，本期练习生：抽奖幸运儿、word 文档生成器</p>\\\\n<p>由 Liam 研发的「抽奖幸运儿」在 2022 维格年会上首次亮相，界面简约、操作简单，出场即是焦点，承担 5 万行数据不在话下，关键还免费</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2022/01/13/4121f5d7ff45473785842026811bae1a\\\\\\" alt=\\\\\\"\\\\\\"></p>\\\\n<p>由 Kelvin 研发的「Word 文档生成器」，一键即可批量填充字段并合成新的 Word 文档，减少大量重复性工作，为职场工具人的效率而生</p>\\\\n<p><img src=\\\\\\"https://s1.vika.cn/space/2022/01/13/50f6ff15fdd84b46a03f9a501d555d0f\\\\\\" alt=\\\\\\"\\\\\\"></p>\\\\n<p>*两款小程序由 vika 实验室发布，欢迎前往维格社区与开发者互动交流</p>\\\\n<p>👉  <a target=\\\\\\"_blank\\\\\\" href=\\\\\\"https://bbs.vika.cn/topic/7\\\\\\">https://bbs.vika.cn/topic/7</a></p>\\"\\n}"},"100":{"uiConfigId":"player_step_ui_config_100","uiType":"breath","uiConfig":"{\\n  \\"element\\": \\"#VIKABY_UPDATE_LOGS_HISTORY\\",\\n  \\"shadowDirection\\":\\"inset\\"\\n}"},"101":{"uiConfigId":"player_step_ui_config_101","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"element\\": \\"#VIKABY_UPDATE_LOGS_HISTORY\\",\\n  \\"offsetY\\": 23,\\n  \\"placement\\": \\"leftCenter\\",\\n  \\"title\\": \\"智能引导\\",\\n  \\"description\\": \\"来不及查看的本期更新和历史更新记录，都可以在这里找回哦\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"103":{"uiConfigId":"player_step_ui_config_103","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/01/21/0c57f86937e941289aae077071fc4338\\",\\n    \\"readMoreUrl\\": \\"https://u.vika.cn/0c85m\\",\\n    \\"children\\": \\"<h3>2022年1月更新｜第二弹</h3><ul><li>维格表功能界面支持英文语言，点亮 Hello World</li><li>回收舱取消「彻底删除」，避免其他成员误删除导致无法恢复</li><li>小助手增加「历史更新」，游历社区挖掘更多功能使用小技巧</li></ul>\\"\\n}","onClose":["clear_guide_all_ui()","set_wizard_completed({\\"curWizard\\": true})"]},"105":{"uiConfigId":"player_step_ui_config_105","uiType":"popover","onSkip":["skip_current_wizard()"],"uiConfig":"{\\n \\"element\\": \\".sc-jmpzUR:nth-last-of-type(2)\\",\\n\\"placement\\": \\"rightCenter\\",\\n \\"title\\": \\"智能引导\\", \\n\\"description\\": \\"模板中心提供了 1000+ 业务自动化解决方案，可免费安装应用\\", \\"children\\":\\"\\" \\n}"},"106":{"uiConfigId":"player_step_ui_config_106","uiType":"breath","uiConfig":"{\\n \\"element\\": \\".sc-jmpzUR:nth-last-of-type(2)\\",\\n\\"shadowDirection\\":\\"inset\\"\\n} "},"107":{"uiConfigId":"player_step_ui_config_107","uiType":"popover","onNext":["clear_guide_uis([\\"popover\\"])"],"onSkip":["skip_current_wizard()"],"uiConfig":"{ \\n\\"element\\": \\"#WORKBENCH_SIDE_ADD_NODE_BTN\\", \\"placement\\": \\"bottom\\", \\"title\\": \\"智能引导\\", \\"description\\": \\"还没想好怎么搭建业务场景？那就先从模板开始吧～\\", \\"children\\":\\"\\" }"},"108":{"uiConfigId":"player_step_ui_config_108","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#WORKBENCH_SIDE_ADD_NODE_BTN\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"109":{"uiConfigId":"player_step_ui_config_109","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n  \\"headerImg\\": \\"https://s1.vika.cn/space/2022/02/21/d9519262565a4a96a7b838ad0bd44522\\",\\n  \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/127\\",\\n  \\"children\\": \\"<ul style=\\\\\\"margin-top: 10px;\\\\\\"><li>数据录入有窍门，日期、数字按序列自动填充，又快又稳</li><li>文件信息用处多，查看创建人和创建时间，避免信息断层</li><li>数据关联一步到位，基于现有架构层级轻松创建记录卡片</li><li>协作空间按需采购，管理员可自主完成升级，避免创作受限</li><li>打通企业微信，无需复杂配置，扫码集成后将自动同步通讯录</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"111":{"uiConfigId":"player_step_ui_config_111","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n  \\"headerImg\\": \\"https://s1.vika.cn/space/2022/03/02/38faa635d13f4c158f0e91c3659af653?attname=Update_cover%402x.png\\",\\n  \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/136\\",\\n  \\"children\\": \\"<ul style=\\\\\\"margin-top: 10px;\\\\\\"><li>透视表小程序来啦，多维度的数据分析更简单</li><li>单/多选列支持设置默认值，数据录入更工整规范</li><li>仪表盘的小程序拖动更加丝滑流畅，排列组合更便捷</li><li>API创建记录和更新记录接口支持指定 viewId 参数</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"124":{"uiConfigId":"player_step_ui_config_124","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"下一步","nextId":"next_step","uiConfig":"{\\n \\"element\\": \\".styles_controls__3Uc0- > div\\",\\n\\"placement\\": \\"left\\",\\n \\"title\\": \\"展开/隐藏记录\\", \\n\\"description\\": \\"待处理的记录收纳在这里，点击可设置展开或隐藏\\", \\n\\"children\\": \\"\\"\\n}"},"125":{"uiConfigId":"player_step_ui_config_125","uiType":"breath","uiConfig":"{\\n \\"element\\": \\".styles_controls__3Uc0- > div\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"126":{"uiConfigId":"player_step_ui_config_126","uiType":"popover","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ORG_CHART_RECORD_LIST\\",\\n\\"placement\\": \\"left\\",\\n \\"title\\": \\"创建卡片\\", \\n\\"description\\": \\"选择一条记录，拖动至左侧图形区\\",\\n\\"offsetY\\": 144\\n}"},"127":{"uiConfigId":"player_step_ui_config_127","uiType":"breath","uiConfig":"{\\n \\"element\\": \\"#DATASHEET_ORG_CHART_RECORD_LIST\\"\\n}"},"128":{"uiConfigId":"player_step_ui_config_128","uiType":"breath","uiConfig":"{\\n\\"element\\": \\".react-flow__node\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"129":{"uiConfigId":"player_step_ui_config_129","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"uiConfig":"{\\n \\"element\\": \\".react-flow__node\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"建立卡片关系\\", \\n\\"description\\": \\"再选择一条记录并拖动至卡片中，建立记录的层级关系\\", \\n\\"children\\": \\"\\"\\n}"},"131":{"uiConfigId":"player_step_ui_config_131","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n\\"headerImg\\":\\"https://s1.vika.cn/space/2022/03/17/f85104a4c8c145acb83379e13cfea0dd?attname=Update_cover%402x%202.png\\",\\n  \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/151\\",\\n  \\"children\\": \\"<h3>🚀  本次更新内容</h3><ul><li>小程序新品上架，支持 Excel 追加导入数据和网址字段快速预览</li><li>架构视图新增横向布局，竖向和横向布局自由选择</li><li>小程序 SDK 更新，支持创建/删除字段</li><li>维格表安卓客户端上线，支持安卓系统手机安装使用</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"132":{"uiConfigId":"player_step_ui_config_132","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n\\"headerImg\\":\\"https://s1.vika.cn/space/2022/03/31/bb9cf7f3453e457c9473def81b081080?attname=%E4%BB%BB%E5%8A%A1%E5%88%B0%E6%9C%9F%E6%8F%90%E9%86%92.png\\",\\n  \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/153\\",\\n  \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>在日期单元格里轻轻一点，即可开启到期提醒</li>\\\\n<li>维格视图支持冻结多列</li>\\\\n<li>镜像支持导出 Excel 文件</li>\\\\n<li>新增 API 接口，可创建新的维格表</li>\\\\n<li>开发者自建小程序可申请上架「官方推荐」</li>\\\\n</ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"133":{"uiConfigId":"player_step_ui_config_133","uiType":"breath","uiConfig":"{\\n\\"element\\": \\".style_name__29FFH\\",\\n\\"color\\": \\"orange\\"\\n}","onTarget":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"134":{"uiConfigId":"player_step_ui_config_134","uiType":"breath","uiConfig":"{\\n\\"element\\": \\".style_editNameButton__34aL4\\"\\n}"},"135":{"uiConfigId":"player_step_ui_config_135","uiType":"popover","uiConfig":"{\\n\\"element\\": \\".style_topRight__2hxKm\\",\\n\\"title\\": \\"设置昵称\\",\\n\\"description\\": \\"希望大家怎么称呼你呢？\\",\\n\\"placement\\": \\"topCenter\\",\\n\\"posInfo\\": {\\n\\"bottom\\": \\"420px\\",\\n\\"left\\": \\"100px\\",\\n\\"right\\": \\"\\",\\n\\"tipNodeClasses\\": [\\"bottom\\", \\"position-center\\"]\\n}\\n}"},"136":{"uiConfigId":"player_step_ui_config_136","uiType":"afterSignNPS","uiConfig":"{}"},"137":{"uiConfigId":"player_step_ui_config_137","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n\\"headerImg\\":\\"https://s1.vika.cn/space/2022/04/15/5769ab6bf20943fc8119f74f498a7cfe?attname=%E8%A1%8C%E6%95%B0%E6%8D%AE%E6%94%AF%E6%8C%81%E5%85%B3%E6%B3%A8%E6%8F%90%E9%86%92.png\\",\\n  \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/156\\",\\n  \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>主动关注行数据，发生变化时立即提醒</li>\\\\n<li>小程序支持全屏显示，还可以URL分享同事好友</li>\\\\n<li>新增两个 API 接口，创建字段和删除字段</li>\\\\n<li>若干模板更新升级，支持更多新功能特性</li>\\\\n<li>福利来了，完成空间站认证送免费附件容量</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"138":{"uiConfigId":"player_step_ui_config_138","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看更多","nextId":"see_more","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/04/27/6a2167ddd8074078a6b13f04fa6a3f1c?attname=v0.12.7Update_cover%402x.png\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/158\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>甘特图支持设置工作日，日期和星期可同时显示</li>\\\\n<li>转化分析好帮手，漏斗图小程序上架</li>\\\\n<li>统计栏数据支持复制，右键即可获取数据</li>\\\\n<li>优化新增行的操作体验，防止误增空白行</li>\\\\n<li>日期字段支持指定接收提醒的成员或小组</li>\\\\n<li>维格表已上架苹果App Store 和各大安卓应用商店</li>\\\\n</ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"139":{"uiConfigId":"player_step_ui_config_139","uiType":"breath","uiConfig":"{\\n\\"element\\": \\"#toolHideField\\"\\n}"},"140":{"uiConfigId":"player_step_ui_config_140","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#toolHideField\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"隐藏列\\", \\n\\"description\\": \\"点击即可自定义左侧列表区的显示字段\\", \\n\\"children\\": \\"\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"141":{"uiConfigId":"player_step_ui_config_141","uiType":"breath","uiConfig":"{\\n\\"element\\": \\"#toolHideExclusiveField\\"\\n}"},"143":{"uiConfigId":"player_step_ui_config_143","uiType":"popover","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"好的","nextId":"okay","uiConfig":"{\\n \\"element\\": \\"#toolHideExclusiveField\\",\\n\\"placement\\": \\"bottom\\",\\n \\"title\\": \\"隐藏图示\\", \\n\\"description\\": \\"点击即可自定义右侧图形区任务条上的显示字段\\", \\n\\"children\\": \\"\\"\\n}","onTarget":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"144":{"uiConfigId":"player_step_ui_config_144","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/05/12/988aad1e382d49f88119873473c2ffe9\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/180\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>腾讯云HiFlow场景连接器，办公自动化流程小程序上线</li>\\\\n<li>甘特图自定义显示字段数量，任务条更清爽</li><li>神奇表单支持修改配置信息，提升表单编辑效率</li><li>镜像功能再升级，镜像也可以对外分享</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"145":{"uiConfigId":"player_step_ui_config_145","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/05/26/620822443f6244c4ba665bcc8e056135\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/185\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>暗黑模式正式上线，给你全新的视觉体验</li>\\\\n<li>看板视图支持隐藏分组，分组信息显示更自由</li><li>维格列名称支持换行，名称再长也能显示</li><li>安全设置升级，可按权限角色限制导出文件</li><li>空间站成员管理，支持筛选已加入和未加入的成员</li><li>若干模板上新，覆盖更多行业场景</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"152":{"uiConfigId":"player_step_ui_config_152","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/06/13/0cea3e8831a94518b2c9e546b1ccbb8e\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/194\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul>\\\\n<li>甘特视图、维格视图导出功能升级，可生成图片</li>\\\\n<li>安全设置权限升级，可设置显示成员和小组的范围</li><li>日历视图交互优化，年份月份切换更便捷</li><li>安全设置升级，可按权限角色限制导出文件</li><li>7个模板上新，覆盖更多行业场景</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"153":{"uiConfigId":"player_step_ui_config_153","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/06/23/6aa909506bba4e30aa9f3c57c9d07364\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/200\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>空间站操作日志上线，成员操作明细一个不漏</li><li>移动端管理功能升级，支持空间站的增删改查</li><li>电商节拼单攻略等7个模板上架，覆盖更多使用场景</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"154":{"uiConfigId":"player_step_ui_config_154","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/07/23/ad9d1b758e7f46e6839b0e6791a8fb31\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/209\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>网址字段升级，可自动获取网页标题</li><li>「隐藏列」列名称支持点击快速在表格里高亮定位</li><li>管理员可禁止成员在根目录下创建文件</li><li>手机端支持查看和使用表格里的小程序</li><li>「坐标地图」、「Airtable 导入」两款小程序上架</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"155":{"uiConfigId":"player_step_ui_config_155","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/08/04/0712f98ea50943f08e2213a3f1ebe601\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/220\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>新增「只可更新」权限，协作更精细化</li><li>记录卡片新增“侧边栏”和“全屏”两种布局</li><li>记录卡片支持修改列配置，操作更轻便</li><li>12个模板上新，覆盖更多行业和使用场景</li><li>API 面板新增调试入口</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"156":{"uiConfigId":"player_step_ui_config_156","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"element\\": \\".permission_setting_class\\",\\n  \\"placement\\": \\"leftCenter\\",\\n  \\"title\\": \\"默认权限\\",\\n  \\"description\\": \\"未指定权限时会显示默认的权限角色，你可以在这里直接给成员或小组指定权限\\",\\n  \\"children\\":\\"\\" \\n }"},"157":{"uiConfigId":"player_step_ui_config_157","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"element\\": \\"#resetPermissionButton\\",\\n  \\"placement\\": \\"topCenter\\",\\n  \\"title\\": \\"权限已限制\\",\\n  \\"offsetY\\": -15,\\n  \\"description\\": \\"因为已经设置过权限，所以仅下方列表中的成员对此可见。你可以点击这里，恢复到默认权限。\\",\\n  \\"children\\":\\"\\" \\n}"},"158":{"uiConfigId":"player_step_ui_config_158","uiType":"popover","onNext":["clear_guide_all_ui()"],"next":"好的","nextId":"okay","uiConfig":"{\\n  \\"element\\": \\"#resetPermissionButton\\",\\n  \\"placement\\": \\"topCenter\\",\\n  \\"title\\": \\"指定权限角色\\",\\n  \\"offsetY\\": -15,\\n  \\"description\\": \\"你已经重新修改了该文件的权限角色，这意味着该文件仅你指定的成员可见。你可以点击“恢复默认”，撤销刚才的设置。\\",\\n  \\"children\\":\\"\\" \\n}"},"159":{"uiConfigId":"player_step_ui_config_159","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/08/19/bca3cedf0783402b953e02b83463e8f4\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/227\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>日历视图支持筛选后新增记录</li><li>工作目录可根据右侧面板状态自动回弹</li><li>新能源车配件管理和食材配送等7 个模板上新</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"160":{"uiConfigId":"player_step_ui_config_160","uiType":"breath","uiConfig":"{\\n  \\"element\\": \\".permission_setting_class\\"\\n }"},"161":{"uiConfigId":"player_step_ui_config_161","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/09/02/3ec8ee88a8c64ee2875cc24e3650a0b3\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/242\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>甘特图新增任务依赖和自动编排功能</li><li>简化权限设置界面，提升操作体验</li><li>右键菜单可批量插入新行，助力效率提升</li><li>模板中心新增中秋专题、开学季两大板块</li><li>邀请好友注册并加入空间站，可获赠更多附件容量</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"162":{"uiConfigId":"player_step_ui_config_162","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/09/15/6eab2470b79a4ab1a6ced0fd555342a3?attname=Update_cover%402x.png\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/244\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>「只可更新」权限范围调整，协作者也能新增记录</li><li>空间站「安全设置」结束免费体验，正式按空间站等级提供服务</li><li>5 个模板上新，覆盖财务预算、翻译项目、汽车零部件管理等场景</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"163":{"uiConfigId":"player_step_ui_config_163","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/09/30/74b29d31dbc44eb48949acd6dff3bd65?attname=Update_cover%402x%203.png\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/246\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>新增「角色」功能，权限分配与任务指派更灵活</li><li>「成员」选择框增加悬浮式信息卡片</li><li>右键菜单新增「移动至」选项，文件分类归纳更快捷</li><li>模板中心新增假期旅游攻略、自卷指南和复盘规划三大专题</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"164":{"uiConfigId":"player_step_ui_config_164","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2022/10/20/1dc32d8aa47b4863a97ea84ce11ecc60?attname=Update_cover%402x.png\\",\\n    \\"readMoreUrl\\": \\"https://bbs.vika.cn/article/252\\",\\n    \\"children\\": \\"<h3>🚀 本次更新内容</h3>\\\\n<ul><li>模板中心新增「专题」板块，更多元化的模板介绍</li><li>全新帮助中心上线，提供更丰富的内容</li><li>部分功能结束免费体验，正式按空间站等级提供服务</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"166":{"skipId":"maybe_later","uiConfigId":"player_step_ui_config_166","uiType":"billingStrip","backdrop":"around_mask","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"获取特殊优惠","nextId":"claim_special_offer","uiConfig":"{\\n  \\"title\\": \\"现在订阅 Pro 方案，立享 5 折！\\",\\n  \\"description\\": \\"只需要简单几步升级到 APITable Pro，你就可以享受低至五折的早鸟优惠价\\",\\n  \\"listHeader\\": \\"升级权益：\\",\\n  \\"listContent\\": [\\n    \\"空间站记录总数上限提高至 2,000,000 行\\",\\n    \\"空间站附件容量数提高至 140 GB\\",\\n    \\"支持调用所有高级 API\\"\\n  ],\\n  \\"listFooter\\": \\"更多权益\\",\\n  \\"url\\": \\"https://apitable.com/pricing/\\"\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})"]},"167":{"uiConfigId":"player_step_ui_config_167","uiType":"questionnaire","backdrop":"around_mask","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"确定","nextId":"confirm","uiConfig":"{\\n  \\"config\\": [\\n    {\\n      \\"key\\": 1,\\n      \\"name\\": \\"answer1\\",\\n      \\"title\\": \\"您希望通过 APITable 解决哪些问题？\\",\\n      \\"type\\": \\"multiButton\\",\\n      \\"answers\\": [\\n        \\"IT 运维支持\\",\\n        \\"教育\\",\\n        \\"项目管理\\",\\n        \\"市场营销\\",\\n        \\"产品管理\\",\\n        \\"招聘管理\\",\\n        \\"运营\\",\\n        \\"金融财务\\",\\n        \\"销售 & 客户管理\\",\\n        \\"软件开发\\",\\n        \\"人力资源 & 合规\\",\\n        \\"设计 & 创意\\",\\n        \\"非盈利组织\\",\\n        \\"制造业\\",\\n        \\"其他\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 2,\\n      \\"name\\": \\"answer2\\",\\n      \\"title\\": \\"您的工作岗位是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"企业主\\",\\n        \\"团队负责人\\",\\n        \\"团队成员\\",\\n        \\"自由职业者\\",\\n        \\"主管\\",\\n        \\"高管层\\",\\n        \\"副总裁\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 3,\\n      \\"name\\": \\"answer3\\",\\n      \\"title\\": \\"您的团队规模是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"只有我\\",\\n        \\"2-5\\",\\n        \\"6-10\\",\\n        \\"11-15\\",\\n        \\"16-25\\",\\n        \\"25-50\\",\\n        \\"51-100\\",\\n        \\"101-500\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 4,\\n      \\"name\\": \\"answer4\\",\\n      \\"title\\": \\"您的公司规模是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"1-19\\",\\n        \\"20-49\\",\\n        \\"50-99\\",\\n        \\"100-250\\",\\n        \\"251-500\\",\\n        \\"501-1500\\",\\n        \\"1500+\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 5,\\n      \\"name\\": \\"answer5\\",\\n      \\"title\\": \\"您从哪种途径了解到我们？\\",\\n      \\"type\\": \\"checkbox\\",\\n      \\"answers\\": [\\n        \\"搜索引擎\\",\\n        \\"YouTube\\",\\n        \\"Product Hunt\\",\\n        \\"Github\\",\\n        \\"推特\\",\\n        \\"领英\\",\\n        \\"朋友推荐\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 6,\\n      \\"name\\": \\"answer6\\",\\n      \\"title\\": \\"加入我们的Discord社区，和全世界 APITable 的使用者一起讨论使用心得吧！在使用过程中如果遇到任何问题，可以随时在社区获得解答和帮助。\\",\\n      \\"type\\": \\"joinUs\\",\\n      \\"url\\": \\"https://discord.gg/2UXAbDTJTX\\",\\n      \\"confirmText\\": \\"加入社区\\",\\n      \\"skipText\\": \\"跳过\\",\\n      \\"submit\\": true\\n    }\\n  ]\\n}","onClose":["open_guide_next_step({\\"clearAllPrevUi\\":true})","open_guide_wizard(18)"]},"168":{"uiConfigId":"player_step_ui_config_168","uiType":"customTemplate","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"我知道了","nextId":"i_knew_it","byEvent":["datasheet_create_mirror_tip"],"uiConfig":"{\\n\\"templateKey\\":\\"createMirrorTip\\"\\n}"},"169":{"uiConfigId":"player_step_ui_config_165","uiType":"notice","onNext":["open_guide_next_step({\\"clearAllPrevUi\\":true})"],"next":"查看详情","nextId":"check_detail","uiConfig":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2023/03/16/8374ca1295664675bd1155b077555113\\",\\n    \\"readMoreUrl\\": \\"https://help.vika.cn/changelog/23-03-16-updates\\",\\n    \\"children\\": \\"<h3>🚀 新功能介绍</h3>\\\\n<ul><li>镜像功能再次升级，可禁止查看已隐藏的字段</li><li>个人设置追加时区信息，日期字段可指定时区</li><li>「全局搜索」优化，新增搜索结果分类</li><li>神奇表单支持隐藏官方标识</li><li>API 性能优化，大幅提高请求速度</li></ul>\\"\\n}","onClose":["set_wizard_completed({\\"curWizard\\": true})","open_guide_next_step({\\"clearAllPrevUi\\":true})"]}}},"notifications":{"types":{"member":{"format_string":"notify_type_member","tag":"member"},"record":{"format_string":"notify_type_datasheet","tag":"record"},"space":{"format_string":"notify_type_space","tag":"space"},"system":{"format_string":"notify_type_system","tag":"system"}},"templates":{"activity_integral_income_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"format_string":"activity_integral_income_notify","is_component":true},"activity_integral_income_toadmin":{"to_tag":"space_main_admin","notifications_type":"system","is_notification":true,"format_string":"activity_integral_income_toadmin","is_component":true},"add_record_out_of_limit":{"can_jump":true,"to_tag":"users","notifications_type":"system","is_notification":true,"is_mail":true,"mail_template_subject":"addRecordReachedLimited","format_string":"add_record_out_of_limit_by_api_notify","url":"/workbench","frequency":1,"is_component":true},"add_record_soon_to_be_limit":{"can_jump":true,"to_tag":"users","notifications_type":"system","is_notification":true,"is_mail":true,"mail_template_subject":"addRecordReachingLimited","format_string":"add_record_soon_to_be_limit_by_api_notify","url":"/workbench","frequency":1,"is_component":true},"add_sub_admin":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"space_add_sub_admin","url":"/management","is_component":true},"admin_transfer_space_widget_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"is_mail":true,"is_browser":true,"format_string":"admin_transfer_space_widget_notify","is_component":true},"admin_unpublish_space_widget_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"is_mail":true,"is_browser":true,"format_string":"admin_unpublish_space_widget_notify","is_component":true},"apply_space_beta_feature_success_notify_all":{"can_jump":true,"to_tag":"all_members","notifications_type":"space","is_notification":true,"format_string":"apply_space_beta_feature_success_notify_all"},"apply_space_beta_feature_success_notify_me":{"can_jump":true,"to_tag":"myself","notifications_type":"space","is_notification":true,"format_string":"apply_space_beta_feature_success_notify_me"},"assigned_to_group":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"space_assigned_to_group","url":"/management","is_component":true},"assigned_to_role":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"space_assigned_to_role","url":"/management","is_component":true},"capacity_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedCapacityLimit","billing_notify":"max_capacity_size_in_bytes","format_string":"capacity_limit","url":"/management","frequency":1,"is_component":true},"changed_ordinary_user":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"space_changed_ordinary_user","is_component":true},"comment_mentioned":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"format_string":"comment_mentioned","url":"/workbench","is_component":true},"common_system_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"is_browser":true,"format_string":"common_system_notify","is_component":true},"common_system_notify_web":{"to_tag":"users","notifications_type":"system","format_string":"common_system_notify_web","is_component":true},"datasheet_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedDatasheetLimit","billing_notify":"max_sheet_nums","format_string":"datasheet_limit","url":"/management","frequency":1,"is_component":true},"datasheet_record_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedDatasheetRecordLimit","billing_notify":"max_rows_per_sheet","format_string":"datasheet_record_limit","url":"/management","frequency":1,"is_component":true},"integral_income_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"format_string":"integral_income_notify","is_component":true},"invite_member_toadmin":{"can_jump":true,"to_tag":"space_member_admins","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"invite_member_toadmin","url":"/management","is_component":true},"invite_member_tomyself":{"can_jump":true,"to_tag":"myself","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"invite_member_tomyself","is_component":true},"invite_member_touser":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"invite_member_touser","url":"/workbench","is_component":true},"member_applied_to_close_account":{"to_tag":"space_member_admins","notifications_type":"member","is_notification":true,"is_browser":true,"format_string":"member_applied_to_close_account","is_component":true},"new_space_widget_notify":{"to_tag":"users","notifications_type":"system","is_notification":true,"is_browser":true,"format_string":"new_space_widget_notify","is_component":true},"new_user_welcome_notify":{"can_jump":true,"to_tag":"users","notifications_type":"system","is_notification":true,"format_string":"new_user_welcome_notify","is_component":true,"redirect_url":"new_user_welcome_notify_url"},"quit_space":{"can_jump":true,"to_tag":"space_member_admins","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"member_quit_space","url":"/management","is_component":true},"remove_from_group":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"remove_from_group","url":"/management","is_component":true},"remove_from_role":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"remove_from_role","url":"/management","is_component":true},"removed_from_space_toadmin":{"can_jump":true,"to_tag":"space_member_admins","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"user_removed_by_space_toadmin","is_component":true},"removed_from_space_touser":{"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"user_removed_by_space_touser","url":"/management","is_component":true},"removed_member_tomyself":{"can_jump":true,"to_tag":"myself","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"removed_member_tomyself","is_component":true},"server_pre_publish":{"to_tag":"all_users","notifications_type":"system","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"server_pre_publish","is_component":true},"single_record_comment_mentioned":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"format_string":"single_record_comment_mentioned","url":"/workbench","is_component":true},"single_record_member_mention":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"mail_template_subject":"remindMember","format_string":"single_record_member_mention","url":"/workbench","is_component":true},"space_add_primary_admin":{"can_jump":true,"to_tag":"members","notifications_type":"member","is_notification":true,"is_mobile":true,"is_browser":true,"format_string":"space_add_primary_admin","is_component":true},"space_admin_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedAdminLimit","billing_notify":"max_admin_nums","format_string":"space_admin_limit","url":"/management","frequency":1,"is_component":true},"space_api_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedApiLimit","billing_notify":"max_api_call","format_string":"space_api_limit","url":"/management","frequency":1,"is_component":true},"space_calendar_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedCalendarLimit","billing_notify":"max_calendar_views_in_space","format_string":"space_calendar_limit","url":"/management","frequency":1,"is_component":true},"space_certification_fail_notify":{"can_jump":true,"to_tag":"users","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_certification_fail_notify","url":"/management","is_component":true},"space_certification_notify":{"can_jump":true,"to_tag":"users","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_certification_notify","url":"/management","is_component":true},"space_deleted":{"to_tag":"all_members","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_has_been_deleted","is_component":true},"space_dingtalk_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"billing_notify":"integration_dingtalk","format_string":"space_dingtalk_notify","url":"/management","is_component":true},"space_field_permission_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedFieldPermissionLimit","billing_notify":"field_permission_nums","format_string":"space_field_permission_limit","url":"/management","frequency":1,"is_component":true},"space_file_permission_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedFilePermissionLimit","billing_notify":"file_permission_nums","format_string":"space_file_permission_limit","url":"/management","frequency":1,"is_component":true},"space_form_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedFormLimit","billing_notify":"max_form_views_in_space","format_string":"space_form_limit","url":"/management","frequency":1,"is_component":true},"space_gantt_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"SubscribedGanntLimit","billing_notify":"max_gantt_views_in_space","format_string":"space_gantt_limit","url":"/management","frequency":1,"is_component":true},"space_join_apply":{"to_tag":"space_member_admins","notifications_type":"member","is_notification":true,"is_mail":true,"format_string":"space_join_apply","is_component":true},"space_join_apply_approved":{"can_jump":true,"to_tag":"users","notifications_type":"member","is_notification":true,"format_string":"space_join_apply_approved","url":"/workbench","is_component":true},"space_join_apply_refused":{"to_tag":"users","notifications_type":"member","is_notification":true,"format_string":"space_join_apply_refused","is_component":true},"space_lark_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"billing_notify":"integration_feishu","format_string":"space_lark_notify","url":"/management","is_component":true},"space_members_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"format_string":"space_members_limit","url":"/management","is_component":true},"space_mirror_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedMirrorLimit","billing_notify":"max_mirror_views_in_space","format_string":"space_mirror_limit","url":"/management","frequency":1,"is_component":true},"space_name_change":{"can_jump":true,"to_tag":"all_members","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"notification_space_name_changed","url":"/workbench","is_component":true},"space_paid_notify":{"to_tag":"users","notifications_type":"space","is_notification":true,"format_string":"space_paid_notify","is_component":true},"space_rainbow_label_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subject.subscribed.rainbow.label.limit","billing_notify":"rainbow_label","format_string":"space_rainbow_label_limit","url":"/management","frequency":1,"is_component":true},"space_record_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedRecordLimit","billing_notify":"max_rows_in_space","format_string":"space_record_limit","url":"/management","frequency":1,"is_component":true},"space_recover":{"can_jump":true,"to_tag":"all_members","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_has_been_recover","is_component":true},"space_seats_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedSeatsLimit","billing_notify":"max_seats","format_string":"space_seats_limit","url":"/management","frequency":1,"is_component":true},"space_subscription_end_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"url":"/management","is_component":true},"space_subscription_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_subscription_notify","url":"/management","is_component":true},"space_time_machine_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subject.subscribed.time.machine.limit","billing_notify":"max_remain_timemachine_days","format_string":"space_time_machine_limit","url":"/management","frequency":1,"is_component":true},"space_trash_limit":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subject.subscribed.trash.limit","billing_notify":"max_remain_trash_days","format_string":"space_trash_limit","url":"/management","frequency":1,"is_component":true},"space_trial":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"format_string":"space_trial","url":"/management","is_component":true},"space_vika_paid_notify":{"can_jump":true,"to_tag":"users","notifications_type":"space","is_notification":true,"url":"/management","is_component":true},"space_watermark_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"billing_notify":"watermark","format_string":"space_watermark_notify","url":"/management","is_component":true},"space_wecom_api_trial_end":{"to_tag":"all_members","notifications_type":"space","is_notification":true,"is_browser":true,"format_string":"space_wecom_api_trial_end"},"space_wecom_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"billing_notify":"integration_we_com","format_string":"space_wecom_notify","url":"/management","is_component":true},"space_yozooffice_notify":{"can_jump":true,"to_tag":"space_admins","notifications_type":"space","is_notification":true,"is_mail":true,"is_browser":true,"billing_notify":"integration_yozo_office","format_string":"space_yozooffice_notify","url":"/management","is_component":true},"subscribed_record_cell_updated":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedRecordCellUpdated","format_string":"subscribed_record_cell_updated","url":"/workbench"},"subscribed_record_commented":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"mail_template_subject":"subscribedRecordCommented","format_string":"subscribed_record_commented","url":"/workbench"},"task_reminder":{"can_jump":true,"to_tag":"members","notifications_type":"space","is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"mail_template_subject":"taskReminder","format_string":"task_reminder","url":"/workbench","is_component":true},"user_field":{"can_jump":true,"to_tag":"members","notifications_type":[],"is_notification":true,"is_mobile":true,"is_mail":true,"is_browser":true,"format_string":"field_set_you_by_user","url":"/workbench","is_component":true},"web_publish":{"to_tag":"all_users","notifications_type":"system","is_mobile":true,"format_string":"web_publish","is_component":true}}},"integral":{"rule":{"be_invited_to_reward":{"action_code":"be_invited_to_reward","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":1000,"notify":true,"action_name":"被邀请奖励"},"complete_bind_email":{"action_code":"complete_bind_email","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":1000,"action_name":"完成绑定邮箱奖励"},"first_bind_email":{"action_code":"first_bind_email","day_max_integral_value":0,"display_name":[],"integral_value":1000,"action_name":"首次绑定邮箱奖励"},"first_bind_phone":{"action_code":"first_bind_phone","day_max_integral_value":0,"display_name":[],"integral_value":1000,"action_name":"首次绑定手机奖励"},"fission_reward":{"action_code":"fission_reward","display_name":[],"online":true,"notify":true,"action_name":"「“友”福同享」活动 - XX空间"},"invitation_reward":{"action_code":"invitation_reward","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":1000,"notify":true,"action_name":"邀请奖励"},"official_adjustment":{"action_code":"official_adjustment","display_name":["official_adjustment"],"online":true,"action_name":"官方调整"},"official_invitation_reward":{"action_code":"official_invitation_reward","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":500,"notify":true,"action_name":"官方邀请奖励"},"redemption_code":{"action_code":"redemption_code","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":0,"action_name":"兑换码"},"wallet_activity_reward":{"action_code":"wallet_activity_reward","display_name":[],"online":true,"action_name":"XXX 活动奖励"},"wizard_reward":{"action_code":"wizard_reward","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":200,"action_name":"智能引导奖励"},"wizard_video_reward":{"action_code":"wizard_video_reward","day_max_integral_value":0,"display_name":[],"online":true,"integral_value":200,"action_name":"观看引导视频奖励"}}}}');

/***/ }),

/***/ 19566:
/***/ ((module) => {

module.exports = JSON.parse('{"zh-CN":{"access_to_space_station_editors":"进入空间站编辑","account_ass_manage":"帐号关联管理","account_format_err":"帐号格式不正确","account_manager_invalid_subtip":"「${spaceName}」空间站「帐号关联管理」功能暂不可用","account_nickname":"帐号昵称：","account_wallet":"账户钱包","activate_space":"激活空间","active_record_hidden":"记录已被隐藏","active_space":"已激活空间","activity":"动态","activity_marker":"点击查看记录的评论","activity_no_rank_number":"未上榜","activity_rank":"当前排名：","activity_rank_number":"第 ${rank} 名","activity_register_tip1":"注册即代表同意","activity_share_btn":"立即参与","activity_tip":"每当有人在此记录中@你时，你将收到通知。","adaptive":"自适应","add":"添加","add_an_option":"添加一个选项","add_attachment":"添加附件","add_cover":"添加封面","add_dashboard":"新建仪表盘","add_datasheet_editor":"在「只可更新」基础上，还可以删除记录和增删视图","add_datasheet_manager":"拥有该表格的所有操作权限","add_datasheet_reader":"可查看该表格内容或进行评论","add_datasheet_updater":"在「只可阅读」基础上，还可以新增和编辑记录","add_favorite_success":"星标成功，可以前往星标栏查看","add_filter":"添加筛选条件","add_filter_condition_tips":"设置筛选","add_filter_empty":"请选择一列进行筛选","add_folder_editor":"在「只可更新」基础上，还可以编辑和分享文件","add_folder_manager":"拥有该文件的所有操作权限","add_folder_reader":"只可查看该文件夹下的内容","add_folder_updater":"在「只可阅读」基础上，还可以新增和编辑记录","add_form":"新建神奇表单","add_form_logo":"添加 logo","add_gantt_group_card":"在分组下添加记录","add_grouping":"添加分组条件","add_grouping_empty":"请选择一列进行分组","add_image":"添加图片","add_kanban_group_card":"添加记录","add_link_record_button":"从「${datasheetname}」添加关联记录","add_link_record_button_disable":"关联内容为空","add_manager":"可以管理","add_mark_line":"添加标注线","add_member":"添加成员","add_member_fail":"添加成员失败","add_member_or_group":"添加成员/小组","add_member_or_unit":"添加成员或小组","add_member_success":"添加成员成功","add_new_record_by_name":"添加记录${span}","add_new_view_success":"新增视图「${viewName}」成功","add_on_api_call":"增值 API 容量","add_or_cancel_favorite_fail":"取消/设置星标失败","add_record":"新增记录","add_record_out_of_limit_by_api_notify":"你通过 API 在 <a class=\\"nodeName\\"></a> 创建记录失败，原因：单个表格的行数上限是 <a class=\\"count\\"></a> 条，请尽快清理数据或者更换其他表格，以免丢失数据。","add_record_soon_to_be_limit_by_api_notify":"<a class=\\"nodeName\\"></a> 当前记录数已达 <a class=\\"usage\\"></a> 条。单个表格的行数上限是 <a class=\\"count\\"></a> 条，请注意及时清理数据或者更换其他表格，以免 API 无法正常写入新的记录","add_role_btn":"新增角色","add_role_error_empty":"角色名不能为空","add_role_error_exists":"该角色名称已存在，请修改","add_role_error_limit":"角色的名称不能超过 ${max} 字","add_role_success_message":"角色创建成功","add_role_title":"添加角色","add_row_button_tip":"新增一行","add_sort":"添加排序条件","add_sort_current_user":"我","add_sort_current_user_tips":"当前访问用户","add_sort_empty":"请选择一列进行排序","add_space":"添加空间站","add_sub_admin_contacts_configuration":"「小组管理」可以增删改小组；「成员管理」可以增删改成员；「角色管理」可以增删改角色","add_sub_admin_template_configuration":"可以删除「模板中心」的站内模板","add_sub_admin_title_member_team":"成员与小组","add_sub_admin_title_workbench":"工作台权限","add_summry_describle":"添加统计值的说明","add_target_values":"添加目标值","add_team":"添加小组","add_widget":"添加小程序","add_widget_panel":"创建小程序面板","add_widget_success":"添加小程序成功","added_not_yet":"未加入","additional_styling_options":"颜色自定义","admin":"管理员","admin_cannot_quit_space":"你是当前空间站的主管理员，无法退出。你可以在「空间站管理」转让或删除空间站","admins_per_space":"管理员数量","advanced":"高级","advanced_features":"高级功能","advanced_mode":"高级选项","afghanistan":"阿富汗","aggregate_values":"聚合散点值","aggregate_values_describle":"将散点值聚合统计","agree":"同意","agreed":"已同意","alarm_no_member_field_tips":"请在表中先新建一列成员字段","albania":"阿尔巴尼亚","algeria":"阿尔及利亚","alien":"匿名用户","alien_tip_in_user_card":"该用户不属于当前空间站","align_center":"居中对齐","align_left":"居左对齐","align_right":"居右对齐","all":"全部","all_record":"全部","allow_apply_join_space":"允许申请加入空间站","allow_apply_join_space_desc":"分享页面会提供「申请加入空间站」的入口，外部用户可以申请加入此空间站，待管理员审批通过后即可自动加入","already_know_that":"我已知晓","american_samoa":"美属萨摩亚","and":"和","andorra":"安道尔","angola":"安哥拉","anguilla":"安圭拉","anonymous":"匿名者","antigua_and_barbuda":"安提瓜和巴布达","api_add":"Add 新增","api_call":"每月 API 请求次数上限","api_cumulative_usage_info":"公测阶段，允许超量使用。","api_delete":"Delete 删除","api_delete_error":"删除数据失败","api_delete_error_foreign_datasheet_deleted":"删除记录失败，因为关联表已被删除","api_example_request":"示例请求","api_example_response":"示例返回值","api_excess":"API 用量超量使用","api_favicon_value_error":"favicon 的值必须符合URL标准，例如：https://www.example.com/favicon.ico","api_fieldid_empty_error":"fieldId 的值不能为空","api_fields":"Fields 字段","api_forbidden":"禁止访问","api_forbidden_because_of_not_in_space":"API Token 所属用户不是该空间站的成员，请调整 spaceId 或 API Token 后再试","api_frequently_error":"操作太频繁","api_get":"Get 获取","api_insert_error":"添加数据失败","api_more_params":"其他参数或提示","api_not_exists":"接口不存在","api_panel_add_records":"新增记录","api_panel_delete_records":"删除记录","api_panel_get_records":"获取记录","api_panel_init_sdk":"初始化 SDK","api_panel_other_params_and_tips":"其他参数或提示","api_panel_return_example":"示例返回值","api_panel_title":"API 示例面板","api_panel_type_default_example_attachment":"[\\n    {\\n        \\"id\\": \\"atcPtxnvqti5M\\",\\n        \\"name\\": \\"6.gif\\",\\n        \\"size\\": 33914,\\n        \\"mimeType\\": \\"image/gif\\",\\n        \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n        \\"width\\": 240,\\n        \\"height\\": 240,\\n        \\"url\\": \\"__host__/space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\"\\n    }\\n]","api_panel_type_default_example_auto_number":"10001","api_panel_type_default_example_checkbox":"true","api_panel_type_default_example_created_by":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","api_panel_type_default_example_created_time":"1600777860000","api_panel_type_default_example_currency":"8.88","api_panel_type_default_example_date_time":"1600777860000","api_panel_type_default_example_formula":"在第一行完整填写数据，就可以查看示例了","api_panel_type_default_example_last_modified_by":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","api_panel_type_default_example_last_modified_time":"1600777860000","api_panel_type_default_example_link":"[\\n    \\"rec8116cdd76088af\\",\\n    \\"rec245db9343f55e8\\",\\n    \\"rec4f3bade67ff565\\"\\n]","api_panel_type_default_example_look_up":"在第一行完整填写数据，就可以查看示例了","api_panel_type_default_example_multi_select":"[\\n    \\"选项 A\\",\\n    \\"选项 B\\"\\n]","api_panel_type_default_example_number":"8","api_panel_type_default_example_percent":"0.88","api_panel_type_default_example_phone":"138xxxx7240","api_panel_type_default_example_rating":"1","api_panel_type_default_example_single_select":"选项 A","api_panel_type_default_example_single_text":"单行文本内容","api_panel_type_default_example_text":"多行\\n文本内容","api_panel_type_desc_attachment":"由若干“附件对象”组成的数组  每一个附件对象应该包含下列属性： mimeType (string) : 附件的媒体类型 name (string) : 附件的名称 size (number) : 附件的大小，单位为字节 width (number) : 如果附件是图片格式，表示图片的宽度，单位为px height (number) : 如果附件是图片格式，表示图片的高度，单位为px token (string) : 附件的访问路径 preview (string) : 如果附件是PDF格式，将会生成一个预览图，用户可以通过此网址访问","api_panel_type_desc_autonumber":"数值，正整数  创建记录时自动生成，不支持手动写入","api_panel_type_desc_checkbox":"布尔类型的true 或 空  当此字段被勾选时返回“true”。除此以外，记录中不返回此字段！","api_panel_type_desc_created_time":"日期和时间，以毫秒(ms)为单位返回时间戳","api_panel_type_desc_currency":"数值，支持负值  通过api调用返回的值，不受列配置里指定的精度影响，只会原样返回。","api_panel_type_desc_date_time":"日期和时间，以毫秒（ms）为单位返回时间戳","api_panel_type_desc_email":"邮箱地址（字符串）","api_panel_type_desc_formula":"经过公式和函数运算后的结果，数据类型可能是数字、字符串、布尔值  此字段是运算值，创建/更新记录时不支持写入","api_panel_type_desc_last_modified_time":"日期和时间，以毫秒 (ms) 为单位返回时间戳","api_panel_type_desc_link":"由多条已关联记录的ID组成的数组  ","api_panel_type_desc_look_up":"A表与B表通过神奇关联字段进行表关联后，可使用此字段对B表的任意字段进行引用，视乎引用方式的不同，而返回不同数据类型的运算值。  如果引用方式选择了「原样引用」，则运算结果的数据类型保持与B表源字段一致； 其他引用方式皆返回数字类型的运算值","api_panel_type_desc_multi_select":"可能有多个选项，返回已选上的若干个选项值构成的字符串数组  当创建/更新记录时，提交的选项值并不存在于选项列表，则会返回错误码400，提示“参数错误”","api_panel_type_desc_number":"数值，支持负值  通过api调用返回的值，不受列配置里指定的精度影响，只会原样返回。","api_panel_type_desc_percent":"数值，支持负值  通过API调用返回的值，不受列配置里指定的精度影响，只会原样返回。","api_panel_type_desc_phone":"电话号码（字符串）","api_panel_type_desc_rating":"评分值是 1-9 之间的一个正整数  如果单元格为空或者撤销评分，则记录中不返回此字段！","api_panel_type_desc_single_select":"可能有多个选项，返回已选上的一个选项值（字符串）  当创建/更新记录时，提交的选项值并不存在于选项列表，则会返回错误码400，提示“参数错误”","api_panel_type_desc_single_text":"单行文本，适合保存不带换行符的文本，例如文章的标题。","api_panel_type_desc_text":"多行文本，可用于存放较长的文本内容，例如一篇学术论文。","api_panel_type_desc_url":"URL 地址（字符串）","api_panel_update_records":"更新记录","api_panel_upload_file":"上传文件","api_param_add_widget_btn_type_error":"参数 addWidgetBtn 只接受 boolean 类型的值","api_param_api_btn_type_error":"参数 apiBtn 只接受 boolean 类型的值","api_param_attachment_array_type_error":"附件类型必须是数组","api_param_attachment_name_type_error":"附件 name 必须是字符串","api_param_attachment_not_exists":"附件 token 指定的附件不存在","api_param_attachment_token_type_error":"附件 token 必须是字符串","api_param_basic_tools_type_error":"参数 basicTools 只接受 boolean 类型的值","api_param_checkbox_field_type_error":"field:{field} 勾选字段必须是布尔值","api_param_collaborator_status_bar_type_error":"参数 collaboratorStatusBar 只接受 boolean 类型的值","api_param_collapsed_type_error":"参数 collapsed 只接受 boolean 类型的值","api_param_currency_field_type_error":"field:{field} 货币字段的值必须是数字","api_param_datetime_field_type_error":"field:{field} 日期字段必须是 UTC 时间或者时间戳","api_param_default_error":"参数异常","api_param_email_field_type_error":"field:{field} 邮件字段必须是字符串","api_param_embed_link_id_not_empty":"参数 linkId 为必填项","api_param_form_btn_type_error":"参数 formBtn 只接受 boolean 类型的值","api_param_formula_error":"{value}","api_param_full_screen_btn_type_error":"参数 fullScreenBtn 只接受 boolean 类型的值","api_param_history_btn_type_error":"参数 historyBtn 只接受 boolean 类型的值","api_param_invailid_datasheet_name":"数表 name 不能为空","api_param_invalid_rating_field":"评分字段的值不能小于 0（值只能为 0 到 5 的任一数字）","api_param_invalid_record_id_value":"recordId:{recordId} 指定的记录不存在","api_param_invalid_space_id_value":"指定的空间站不存在，请调整 spaceId 后再试","api_param_link_field_type_error":"field:{field} 神奇关联字段必须是数组类型","api_param_member_field_type_error":"field:{field} 成员字段必须是数组类型","api_param_member_id_type_error":"field:{field} 成员 ID 必须是字符串","api_param_multiselect_field_type_error":"field:{field} 多选字段必须是数组类型","api_param_multiselect_field_value_type_error":"field:{field} 多选字段的选项必须是字符串","api_param_node_id_not_empty_key":"参数 nodeId 为必填项","api_param_node_info_bar_type_error":"参数 titleBar 只接受 boolean 类型的值","api_param_number_field_type_error":"field:{field} 数字字段的值必须是数字","api_param_payload_banner_logo_type_error":"参数 bannerLogo 只接受 boolean 类型的值","api_param_payload_editable_type_error":"参数 editable 只接受 boolean 类型的值","api_param_percent_field_type_error":"field:{field} 百分比字段的值必须是数字","api_param_phone_field_type_error":"field:{field} 电话字段必须是字符串","api_param_property_error":"[${property}]不正确","api_param_rating_field_type_error":"field:{field} 评分字段的值必须是数字","api_param_record_not_exists":"recordId 指定的记录不存在","api_param_robot_btn_type_error":"参数 robotBtn 只接受 boolean 类型的值","api_param_select_field_value_type_error":"field:{field} 单选字段必须是字符串","api_param_share_btn_type_error":"参数 shareBtn 只接受 boolean 类型的值","api_param_singletext_field_type_error":"field:{field} 单行文本字段必须是字符串","api_param_sort_field_not_exists":"sort 参数指定的字段不存在","api_param_tabbar_type_error":"参数 tabBar 只接受 boolean 类型的值","api_param_text_field_type_error":"field:{field} 文本字段必须是字符串","api_param_theme_type_error":"参数 theme 必须是以下值之一: dark, light","api_param_toolbar_type_error":"参数 toolBar 只接受 boolean 类型的值","api_param_type_error":"[{property}]必须是「{value}」类型","api_param_unit_name_type_not_exists":"unit Name 指定的组织单元不存在","api_param_unit_not_exists":"unit ID 指定的组织单元不存在","api_param_url_field_type_error":"field:{field} 网址字段必须是字符串","api_param_view_not_exists":"找不到参数 viewID 对应的视图","api_param_viewid_empty_error":"参数 viewId 的值不能为空","api_param_viewid_type_error":"参数 viewId 只接受 string 类型的值","api_param_viewids_empty_error":"viewIds 不能为空数组","api_param_widget_btn_type_error":"参数 widgetBtn 只接受 boolean 类型的值","api_params_automumber_can_not_operate":"自增数字列的值由系统自动生成，不允许编辑","api_params_can_not_operate":"[{field}]不允许添加或修改","api_params_cellformat_error":"cellFormat 参数值必须是 string 或者 id 中的一个","api_params_created_time_can_not_operate":"创建时间列的值由系统自动生成，不允许编辑","api_params_createdby_can_not_operate":"创建人列的值由系统自动生成，不允许编辑","api_params_empty_error":"[{property}]不能为空","api_params_formula_can_not_operate":"公式列的值由系统自动生成，不允许编辑","api_params_instance_attachment_name_error":"附件 name 不能为空","api_params_instance_attachment_token_error":"附件 token 不能为空","api_params_instance_error":"[{property}]必须包含{value}字段","api_params_instance_fields_error":"fields 参数不能为空","api_params_instance_member_name_error":"成员 name 不能为空","api_params_instance_member_type_error":"成员类型不能为空","api_params_instance_recordid_error":"recordId 参数不能为空","api_params_instance_sort_error":"sort 参数不能为空","api_params_instance_space_id_error":"参数 spaceId 为必填项","api_params_invalid_field_key":"传入的 fieldKey 不支持，支持的值是 id 或 name","api_params_invalid_field_type":"传入了不支持的字段类型","api_params_invalid_fields_value":"传入的 fields 参数格式不正确","api_params_invalid_order_sort":"传入的 sort 参数值无效（只支持 desc 或 asc）","api_params_invalid_primary_field_type_error":"首列类型不允许为{value}","api_params_invalid_value":"[{property}]的值不正确","api_params_link_field_recordids_empty_error":"field:{field} recordId 参数值不能为空数组","api_params_link_field_recordids_not_exists":"关联字段指定的记录 ({recordId}) 不存在","api_params_link_field_records_max_count_error":"field:{field} 只能传入一个 recordId，因为神奇关联列已设置不允许多选","api_params_lookup_can_not_operate":"神奇引用列的值由系统自动生成，不允许编辑","api_params_max_count_error":"[{property}]不能超过{value}条","api_params_max_error":"[{property}]不能超过{value}","api_params_max_length_error":"[{property}]长度不能超过{value}","api_params_maxrecords_min_error":"maxRecords 参数值不能小于 1","api_params_member_field_records_max_count_error":"只能传入一个 unit，因为成员列已设置不允许多选","api_params_min_error":"[{property}]不能等于{value}, {property}必须大于等于1","api_params_must_unique":"[{property}]必须唯一","api_params_not_exists":"[{property}]「{value}」不存在","api_params_pagenum_min_error":"pageNum 参数值不能小于 1","api_params_pagesize_max_error":"pagesize 参数值不能大于 1000","api_params_pagesize_min_error":"pagesize 参数值不能小于 1","api_params_primary_field_not_allowed_to_delete":"首列不允许删除","api_params_rating_field_max_error":"评分字段的值不能大于 5（值只能为 0 到 5 的任一数字）","api_params_recordids_empty_error":"recordId 参数值不能为空数组或者空值","api_params_records_empty_error":"records 参数值不能为空数组或者空值","api_params_records_max_count_error":"单次请求修改/删除/新增的记录不能超过 {count} 条","api_params_updated_time_can_not_operate":"修改时间列的值由系统自动生成，不允许编辑","api_params_updatedby_can_not_operate":"修改人列的值由系统自动生成，不允许编辑","api_params_views_max_count_error":"单次请求删除的视图不能超过 {count} 条","api_query_params_invalid_fields":"传入的 fields 不存在：{fields}","api_query_params_view_id_not_exists":"查询的视图({viewId}) 不存在 ","api_request_success":"Success","api_sdk":"开发者中心","api_server_error":"SERVER_ERROR ({value})","api_set_view_lock_error":"修改视图锁失败","api_show_token":"显示 API Token","api_space_capacity_over_limit":"空间站的附件容量已达上限","api_token_generate_tip":"你还没有 API Token，请点击 + 号生成一个","api_update":"Update 更新","api_update_error":"修改数据失败","api_upload":"Upload 上传","api_upload_attachment_error":"上传附件失败 {message}","api_upload_attachment_exceed_limit":"上传附件个数超出限制","api_upload_attachment_oversize":"附件超出 1 GB 的限制","api_upload_invalid_file":"上传的文件不能为空","api_upload_invalid_file_name":"上传的文件名称不能为空","api_upload_tip":"（上传完毕后，请尽快写入 data 中的数据到附件单元格里，否则附件链接可能失效）","api_usage":"API 用量","api_view_fieldid_not_exist":"conditions fieldId对应的字段不存在","api_view_filter_conditions_empty_error":"conditions 不能为空数组","api_view_filter_operator_not_support":"operator 的值和字段不匹配","api_view_filter_operator_value_error":"operator 的值必须是以下值之一: is, isNot, contains, doesNotContain, isEmpty, isNotEmpty, isGreater, isGreaterEqual, isLess, isLessEqual, isRepeat","api_view_rules_empty_error":"rules 的值不能为空数组","api_view_type_error":"type 必须是以下值之一: Grid, Gallery, Kanban, Gantt, Calendar, Architecture","api_your_token":"_替换成你的API_Token_","apitable_choose_basic":"Start Now","apitable_choose_community":"Download","apitable_choose_custom":"Request Trial","apitable_choose_enterprise":"Contact Us","apitable_choose_plus":"Choose Plus","apitable_choose_pro":"Choose Pro","apitable_confirm_password":"确认密码","apitable_forget_password_button":"忘记密码","apitable_forget_password_done":"完成","apitable_forget_password_text":"已经想起密码","apitable_no_account":"没有账号？","apitable_og_product_description_content":"APITable is an API-first, embed-friendly no-code database, the best Airtable open-source alternative. Get your data and projects managed magically.","apitable_og_site_name_content":"APITable | Open source no-code database and Airtable alternative","apitable_origin_price_by_month":"{\\n    \\"silver\\": \\"$8\\",\\n    \\"gold\\": \\"$10\\"\\n}","apitable_origin_price_by_year":"{\\n    \\"silver\\": \\"$8\\",\\n    \\"gold\\": \\"$10\\"\\n}","apitable_password_input_placeholder":"请输入 8-24 位字符的密码","apitable_price_sub_title":"Early Bird Offer ${discount} Ends March 1,2023","apitable_privatized_deployment_desc":"Manage it yourself","apitable_public_cloud_desc":"APITable as a service","apitable_sign_in":"登录","apitable_sign_up":"注册","apitable_sign_up_text":"已有账号","app_closed":"未开启的应用","app_load_failed":"加载失败，请刷新后再试","app_modal_content_policy_suffix":"，点击同意开始接受我们的服务。","app_opening":"已开启的应用","app_reload":"重新加载","app_timeout_to_refresh":"网络连接超时，请刷新后再试","apply_join_space":"申请加入","apply_join_space_alert_text":"你可以申请加入此空间站","apply_join_space_modal_content":"「${spaceName}」的空间站管理员将会收到你的申请信息","apply_join_space_modal_title":"申请加入此空间站","apply_template":"使用模板","apps_support":"全平台客户端支持","archive_record_in_menu":"归档记录","archive_record_success":"已归档记录","archive_records_in_menu":"归档 ${chose_num} 条记录","archive_records_success":"已归档 ${chose_num} 条记录","archived_failure":"转存失败","archived_operator_description":"${archived_operator} 归档了 ${archived_num} 条记录","archived_records":"归档箱","archived_successfully":"转存成功","argentina":"阿根廷","armenia":"亚美尼亚","array_functions":"数组函数","arts_and_culture":"文化艺术","aruba":"阿鲁巴","asc_sort":"选项倒序","assistant_beginner_task":"新手任务","assistant_beginner_task_4_share_and_invite":"分享和邀请成员","assistant_beginner_task_5_onboarding":"智能引导","assistant_beginner_task_6_bind_email":"邮箱绑定","assistant_release_history":"历史更新","associated_element":"关联元素","association_table":"关联表","async_compute":"异步计算","at_least_select_one":"至少要选择一个人","at_least_select_one_field":"至少要选择一个成员字段","attachment_data":"附件数据","attachment_preview_exit_fullscreen":"退出全屏","attachment_preview_fullscreen":"全屏展示","attachment_upload_fail":"有 ${count} 个附件上传失败","augmented_views":"无限使用增强视图","australia":"澳大利亚","austria":"奥地利","authorize":"授权","auto":"自动","auto_cover":"自适应","autofill_createtime":"新增记录自动填写创建时间","autonumber_check_info":"自增ID的字段应在字段的下拉菜单中配置","avatar_modified_successfully":"头像修改成功","azerbaijan":"阿塞拜疆","back":"返回","back_login":"返回登录","back_login_page":"返回登录首页","back_prev_step":"返回上一步","back_to_space":"回到我的空间站","back_to_workbench":"返回工作台","back_workbench":"回到工作台","background_purple":"背景为紫色","bahamas":"巴哈马","bahrain":"巴林","bangladesh":"孟加拉国","bar_chart":"条形图","barbados":"巴巴多斯","basis":"基础","batch_import":"批量导入","batch_remove":"移出小组","behavior_type":"行为类型","belarus":"白俄罗斯","belgium":"比利时","belize":"伯利兹","benchs_per_space":"板凳成员","benin":"贝宁","bermuda":"百慕大群岛","bhutan":"不丹","bind":"绑定","bind_email":"绑定邮箱","bind_email_same":"抱歉，无法更改为相同的邮箱，请您使用一个跟之前不一样的邮箱地址","bind_state":"绑定状态：","bind_time":"绑定时间：","binding_account":"绑定${mode}帐号","binding_account_failure_tip":"该${mode}已绑定了其它帐号，请更换","binding_failure":"绑定失败","binding_success":"绑定成功","black_mirror_list_tip":"镜像是视图的快捷方式，通过镜像可以在工作目录快速访问对应的视图","bold":"加粗","bolivia":"玻利维亚","bosnia_and_herzegovina":"波斯尼亚和黑塞哥维那","botswana":"博茨瓦纳","bound":"已绑定","brand_desc":"${logo} 提供技术支持","brazil":"巴西","bronze_btn_text":"立即体验","bronze_grade":"社区版","bronze_img":"URL","brunei":"文莱","bulgaria":"保加利亚","burkina_faso":"布基纳法索","burundi":"布隆迪","button":"按钮","button_add":"新增","button_bind_confirmed":"确认绑定","button_bind_now":"立即绑定","button_combine":"按钮组合","button_come_on":"出发吧","button_sub_team":"下级","button_submit":"提交","button_submit_anonymous":"提交","by_field_id":"使用 Field ID","calendar_add_date_time_field":"创建日期","calendar_color_more":"更多颜色","calendar_create_img_alt":"日历视图创建时间图片","calendar_date_time_setting":"选择开始和结束日期字段","calendar_drag_clear_time":"拖至记录列表将会清除原来的日期","calendar_end_field_name":"结束时间","calendar_error_record":"结束日期早于开始日期","calendar_init_fields_button":"创建日期字段","calendar_init_fields_desc":"点击下方按钮会在表格内创建一列日期字段，来生成日历视图","calendar_list_search_placeholder":"搜索记录","calendar_list_toggle_btn":"记录列表","calendar_mobile_preparing":"敬请期待","calendar_mobile_preparing_desc":"移动端日历视图正在施工中","calendar_mobile_preparing_text":"请前往 PC 端查看以获得更佳体验","calendar_pick_end_time":"选择结束日期","calendar_pick_start_time":"选择开始日期","calendar_pre_record_list":"待设置日期记录","calendar_record":"记录","calendar_setting":"视图设置","calendar_setting_clear_end_time":"不使用结束日期","calendar_setting_field_deleted":"日期字段被删除","calendar_setting_help_tips":"配置教程","calendar_start_field_name":"开始时间","calendar_view":"日历视图","calendar_view_all_records":"展开全部记录","calendar_view_all_records_mobile":"全部记录","calendar_view_desc":"更方便地查看项目进度，安排任务时间","cambodia":"柬埔寨","cameroon":"喀麦隆","can_control":"可以管理","can_duplicate":"可另存为副本","can_edit":"可以编辑","can_manage":"可管理","can_not_un_bind_title":"无法解绑","can_read":"只可阅读","can_updater":"只可更新","can_view":"可查看","canada":"加拿大","cancel":"取消","cancel_favorite_success":"取消星标成功","cancel_market_app_closing":"暂不停用","cannot_access":"禁止访问","cannot_activate_space_by_space_limit":"已激活空间站数量达到上限，删除或退出已激活的空间站后，可手动激活","cannot_join_space":"你的空间站数量已达10个上限，暂时无法加入新的空间站。","capacity_from_participation":"邀请新用户 ${user} 加入空间站","capacity_reach_limit":"空间站「<a class=\\"spaceName\\"></a>」容量已达上限","cape_verde":"开普","catalog":"工作目录","category_blank":"[空值]","catering":"餐饮业","cayman_islands":"开曼群岛","cell_find_member":"查找成员或小组名称","cell_find_option":"查找或添加一个选项","cell_not_exist_content":"你编辑的单元格对应的行/列已经被隐藏或删除","cell_not_find_member":"未查找到成员","cell_not_find_member_or_team":"未查找到成员或小组","cell_to_down_edge":"移动到底部单元格","cell_to_left_edge":"移动到最左侧单元格","cell_to_right_edge":"移动到最右侧单元格","cell_to_up_edge":"移动到顶部单元格","central_african_republic":"中非共和国","chad":"乍得","change":"修改","change_avatar":"修改头像","change_email":"修改邮箱","change_field_to_multi_text_field":"将字段 “${b}”转换为多行文本字段","change_main_admin":"变更主管理员","change_member_team_fail":"调整小组失败","change_member_team_level":"调整小组层级","change_member_team_success":"调整小组成功","change_name":"修改名字","change_nickname_tips":"小提示：昵称可以在「个人设置」进行修改","change_phone":"更换号码","change_primary_admin":"更换主管理员","change_primary_admin_succeed":"更换主管理员成功","change_space_logo_success":"空间头像修改成功","change_space_name_tip":"温馨提示：空间站名称可以在「空间站管理 - 空间站驾驶舱」里更改","changeset_diff_big_tip":"当前文件内容已更新，请刷新查看","chart_option_field_had_been_deleted":"字段已失效，请重新选择","chart_option_view_had_been_deleted":"视图已失效，请重新选择","chart_settings":"图表配置","chart_sort":"设置排序","chart_sort_by_ascending":"按正序排序","chart_sort_by_descending":"按倒序排序","chart_sort_by_x_axis":"按 X 轴的值排序","chart_sort_by_y_axis":"按 Y 轴的值排序","chart_widget_setting_help_tips":"配置教程","check_detail":"查看详情","check_failed_list":"查看失败列表","check_field":"请设置需要查询的字段","check_network_status":"请检查网络连接","check_save_space":"你需要选择一个空间站来存放该文件","check_selected_record":"只看已选记录","chile":"智利","china":"中国大陆","choose_a_member":"选择成员","choose_a_team":"选择小组","choose_picture":"选择图片","choose_share_mode":"请选择分享方式","choose_your_own_space":"（仅支持另存到自己是主管理员的空间站）","chose_new_primary_admin_button":"确认移交","claim_special_offer":"获取特殊优惠","clear":"清除","clear_all_fields":"重置","clear_cell_by_count":"已清空 ${count} 个单元格","clear_date":"清除日期","clear_record":"清除单元格内容","click_here":"请点击这里","click_load_more":"点击加载更多","click_refresh":"请点击刷新","click_to_activate_space":"点击右侧功能图标，可以激活空间站","click_to_agree":"点击同意","click_to_compare_with_detail":"点击查看详细对比","click_to_view":"点击查看","click_to_view_instructions":"帮助文档","click_top_right_to_share":"点击右上角分享","click_upload_tip":"点击此处粘贴附件","client_meta_label_file_deleted_desc":"该分享的文件已被删除，公开链接已失效","client_meta_label_file_deleted_title":"分享已失效","client_meta_label_share_disable_desc":"该分享的公开链接已被关闭，暂时无法访问","client_meta_label_share_disable_title":"暂时无法访问","client_meta_label_template_deleted_desc":"该模板不存在或已被删除，分享已失效","client_meta_label_template_deleted_title":"分享已失效","close":"关闭","close_card":"关闭卡片 Esc","close_menu":"关闭菜单","close_node_share_modal_content":"关闭分享后已生成的分享链接将会失效","close_node_share_modal_title":"关闭分享","close_public_link_success":"关闭公开链接成功","close_share_link":"关闭公开链接","close_share_tip":"关闭分享${status}","close_view_sync_success":"视图配置不再协同给其他成员","close_view_sync_tip":"关闭视图配置协同","CNY":"人民币","code_block":"代码块","code_sweep":"扫码加入","collaborate_and_share":"邀请更多人加入协作","collaborator_number":"${number} 位协作者","collapse":"收起","collapse_all_group":"收起所有分组","collapse_full_screen":"收起全屏","collapse_kanban_group":"折叠分组","collapse_subgroup":"收起该组的子分组","colombia":"哥伦比亚","color":"颜色","color_add":"添加条件和颜色","color_condition_add":"添加条件","color_description_when_sync_open":"根据下方选项，对表格的行进行着色，","color_records_based_on_conditions":"条件与颜色","color_rules_description":"当{RULE_DESCRIPTION}时，给行标记颜色 “","color_setting":"设置颜色","colord_in_record":"给行标记一种颜色","colorful_theme":"多色主题","coloring_based_on_conditions":"按自定义条件着色","column":"列","column_chart":"柱状图","comfirm_close_filter_switch":"请确定关闭筛选，关闭后筛选条件将被清空","comma":"，","comma_style":"千分位","command_add_record":"添加了记录","command_delete_field":"删除了列","command_delete_record":"删除了记录","command_fix_consistency":"修复了数据","command_insert_comment":"添加了评论","command_move_row":"移动了行","command_paste_set_record":"粘贴了记录","command_set_field_attr":"修改了列配置","command_set_record":"编辑了记录","command_undo_add_record":"撤销了添加记录","command_undo_delete_field":"撤销了删除列","command_undo_delete_records":"撤销了删除记录","command_undo_move_row":"撤销了移动行","command_undo_paste_set_record":"撤销了粘贴","command_undo_set_field_attr":"撤销了修改列配置","command_undo_set_record":"撤销了编辑记录","comment_editor_default_tip":"你可以评论并@提及成员","comment_from_who":"${who}的评论","comment_is_deleted":"原评论已删除","comment_too_long":"评论内容不能超过 ${word_count} 字","comments_per_record":"数据记录可评论数","common_format":"常用格式","communication_group_qrcode":"交流群","community":"社区版","community_and_local_interest":"社区与本地兴趣","community_edition":"开源社区版","comoros":"科摩罗","components_checkbox":"复选框","components_popconfirm":"气泡确认框","config":"配置","configuration_available_range":"配置可使用范围","confirm":"确定","confirm_activate_space_tips":"激活「 ${spaceName} 」后即可访问该空间站","confirm_activate_space_title":"激活空间站","confirm_and_continue":"同意并继续","confirm_cancel":"当前内容还未保存，确定要离开吗？","confirm_del_current_team":"确认是否删除当前小组","confirm_delete":"确认删除","confirm_delete_node_name_as":"确认要删除「${nodeNameDiv}」吗？","confirm_delete_space_btn":"了解并继续删除","confirm_exit":"确认退出","confirm_exit_space_with_name":"确认是否退出「${spaceNameDiv}」空间站\\n","confirm_import":"确认导入","confirm_join":"确认加入","confirm_join_space":"确认加入空间站","confirm_link_inconsistency_detected":"关联字段发现异常数据，是否自动修复？","confirm_link_toggle_clear_filter":"请确定切换关联列，切换后筛选条件将被清空","confirm_logout_title":"请再次确认","confirm_market_app_closing":"确认停用","confirm_open_apply":"确认开启“允许申请加入空间站”","confirm_open_invite":"确认开启“邀请成员”","confirm_the_system_has_detected_a_conflict_in_document":"表格数据有多次更新，需要你手动刷新进行合并","confirm_unbind":"确认解除绑定","connect_us":"联系我们","contact_data":"通讯录数据","contact_us":"联系客服","contacts":"通讯录","contacts_configuration":"通讯录配置","contacts_management":"通讯录管理","contain_filter_count":"包含 ${count} 个筛选条件","contains":"包含","content_is_empty":"内容为空","content_operations":"内容运营","content_production":"内容生产","convert":"转换","convert_tip":"此操作可能会清除某些单元格内已有的数据，如果转换有问题，则可以撤销该操作","cook_islands":"库克群岛","copy":"的副本","copy_card_link":"复制该记录的 URL","copy_dashboard_url":"复制仪表盘的 URL","copy_datasheet_url":"复制文件的 URL","copy_elink_share":"复制 elink 分享链接","copy_failed":"复制失败","copy_folder_url":"复制文件夹的URL","copy_form_url":"复制神奇表单的 URL","copy_from_cell":"复制该单元格","copy_link":"复制","copy_link_success":"复制成功","copy_mirror_url":"复制镜像的 URL","copy_record_data":"复制记录数据","copy_success":"复制成功","copy_template_share_link":"复制模板链接","copy_the_cell":"复制此单元格","copy_token":"复制令牌","copy_token_toast":"令牌已复制到剪切板","copy_url":"复制链接","copy_url_line":"复制该行的URL","copy_view":"复制视图","costa_rica":"哥斯达黎加","count_records":"统计记录总数","cout_records":"记录总数","cover":"封面图片","cover_field":"封面","creat_mirror_templete":"镜像关联了文件夹以外的表格，创建模板失败","create":"创建","create_and_save":"创建并转存","create_date":"创建日期","create_file_and_folder":"新建文件或文件夹","create_form":"生成神奇表单","create_form_panel_title":"选择一张表来存放表单的数据","create_invitation_link":"新建邀请链接","create_link_succeed":"创建链接成功","create_mirror":"生成视图的镜像","create_mirror_by_view":"生成当前视图的镜像","create_mirror_guide_content":"镜像具有隐藏部分数据的功能，你可以在原表的视图中设置“筛选条件”和“隐藏字段”来控制镜像中需要展示的记录和字段。\\n</br>\\n</br>\\n如果配合「视图锁」功能一起使用，可以防止其他人修改。\\n</br>\\n</br>\\n另外，前往「原表>隐藏字段」可以修改“镜像中允许查看隐藏字段”的配置","create_mirror_guide_title":"镜像将隐藏部分记录和字段","create_public_invitation_link":"创建公开的邀请链接","create_space_sub_title":"Hi，给你的空间站起个名字吧","create_team_fail":"添加小组失败","create_team_success":"添加小组成功","create_token_tip":"为了可以及时接收到 API 服务的最新消息，请绑定邮箱后再进行此操作","create_view_first":"点击这里，变换新的展示形式","create_view_form":"生成视图的神奇表单","create_widget":"创建小程序","create_widget_step_tooltip":"查看文档","create_widget_success":"创建小程序成功","create_workspace":"创建空间站","creative":"创新","creative_production":"创新产品","creator":"创建人","croatia":"克罗地亚","crypto_field":"该列无权访问","csv":"CSV 文件","cuba":"古巴","cumulative_consumption":"累计用量：${count}","cur_import_member_count":"本次导入 ${count} 条成员信息","curacao":"库拉索","currency_cell_input_tips":"货币单元格内只允许输入数字、小数点、负号和e","currency_field_configuration_default_placeholder":"新增一行时填充默认值","currency_field_configuration_precision":"精度","currency_field_configuration_symbol":"货币符号","currency_field_symbol_align":"符号对齐方式","currency_field_symbol_align_default":"默认对齐","currency_field_symbol_align_left":"左对齐","currency_field_symbol_align_right":"右对齐","currency_field_symbol_placeholder":"请输入货币符号","current_column_been_deleted":"当前列被删除或隐藏","current_count_of_person":"现有成员数","current_field_fail":"该列数据出错\\n","current_file_may_be_changed":"当前文件状态发生变化","current_form_is_invalid":"当前神奇表单连接的视图已被删除，神奇表单已失效","current_main_admin":"当前主管理员","current_team":"当前小组","current_view_add_form":"生成当前视图的神奇表单","custom":"自定义","custom_function_development":"定制功能开发","custom_picture":"自定义图片","custom_style":"样式","custom_upload":"自定义上传","custom_upload_tip":"推荐使用 1:1 的方形图片以达到更好的视觉体验","cut_cell_data":"剪切","cyprus":"塞浦路斯","czech":"捷克","dark_theme":"深色","dashboard":"仪表盘","dashboard_editor_label":"在「只可阅读」基础上，还可以编辑小程序和分享仪表盘","dashboard_manager_label":"在「可以编辑」基础上，还可以删除和配置仪表盘","dashboard_reader_label":"只可查看该仪表盘内容","dashboard_updater_label":"与「只可阅读」一致","data_calculating":"数据计算中...","data_error":"数据错误","data_loading":"数据加载中...","datasheet_count":"文件节点数量","datasheet_editor_label":"在「只可更新」基础上，还可以删除记录和增删视图","datasheet_exist_widget":"此表包含的小程序：","datasheet_experience_label":"当前处于模板体验中，需要使用模板才能正常写入数据","datasheet_is_loading":"当前有正在加载的数据，请稍后操作","datasheet_manager_label":"在「可以编辑」基础上，还可以配置字段和表格","datasheet_reader_label":"你仅可查看此表格的内容","date_after_or_equal":"晚于等于","date_before_or_equal":"早于等于","date_cell_input_tips":"日期单元格内只允许输入数字、\'/\'、\'-\'","date_day":"日","date_functions":"日期函数","date_range":"时间范围","date_setting_time_zone_tooltips":"修改时区会影响单元格内显示的时间，从而影响记录在其他视图里显示的时间","datetime_format":"日期格式","dating_back_to":"可回溯","day":"天","day_month_year":"日/月/年","DAYS":"天","db_click_to_edit_field_desc":"双击编辑列描述","decimal":"小数（1.0）","default":"默认","default_create_dashboard":"新建仪表盘","default_create_file":"新建节点","default_create_folder":"新建文件夹","default_create_form":"新建神奇表单","default_create_mirror":"新建镜像","default_datasheet_attachments":"附件","default_datasheet_options":"选项","default_datasheet_title":"标题","default_file_copy":"${file_name}的副本","default_picture":"默认图片","default_theme":"浅色","default_value":"默认值","del_invitation_link":"确定删除邀请链接","del_invitation_link_desc":"删除后已生成的分享链接将会失效","del_space_now":"彻底删除空间站","del_space_now_tip":"请注意：空间站删除后将不可恢复，包含所有表格、附件都会被彻底删除","del_space_res_tip":"删除空间站成功","del_team_success":"删除小组成功","del_view_content":"确认要删除视图「${view_name}」吗？","delete":"删除","delete_archived_records_warning_description":"该记录将被永久删除，也无法再还原到表格中，是否继续？","delete_comment_tip_content":"评论删除后无法恢复，确定要删除吗？","delete_comment_tip_title":"删除评论","delete_completey":"彻底删除","delete_completey_fail":"彻底删除文件（夹）失败","delete_field":"删除列","delete_file_message_content":"该文件已被删除，你无法继续访问当前文件。\\n","delete_kanban_group":"删除分组","delete_kanban_tip_content":"删除该分组会将其原有的记录移至未指定分组里","delete_kanban_tip_title":"删除这个分组","delete_n_columns":"删除 ${count} 列","delete_now":"立即删除","delete_person":"删除人","delete_record":"删除记录","delete_records_count":"删除这 ${count} 条记录","delete_role_member_content":"确认后该成员将会被移出当前角色","delete_role_member_success":"移出成功","delete_role_member_title":"移出该角色","delete_role_success_message":"角色删除成功","delete_role_warning_content":"你需要将该角色内的成员都移出组后，才能进行删除操作","delete_role_warning_title":"无法删除","delete_row":"删除行","delete_row_count":"删除这 ${count} 行","delete_sort":"删除排序条件","delete_space":"删除空间站","delete_succeed":"删除成功","delete_team":"删除小组","delete_team_fail":"删除小组失败","delete_template_content":"该模板将会被删除","delete_template_title":"删除模板","delete_view":"删除视图","delete_view_success":"删除视图成功","delete_widget_content":"小程序删除后无法恢复，确定要删除吗？","delete_widget_panel_content":"当前小程序面板内的小程序会一起被删除且无法恢复","delete_widget_panel_title":"删除小程序面板","delete_widget_title":"删除小程序","delete_workspace_succeed":"该空间站删除成功","deleted_in_curspace_tip":"你已被管理员移除，无法访问此空间","democratic_republic_of_the_congo":"刚果民主共和国","denmark":"丹麦","desc_sort":"选项正序","description":"描述","description_save_error":"网络发生错误，本次未保存成功，请再次保存一次","deselect":"取消选择","design_chart_structure":"设计图表结构","design_chart_style":"更多配置","dev_tools_opening_tip":"继续点击 ${count} 次打开调试工具","developer_configuration":"开发者配置","developer_token":"开发者 token","developer_token_placeholder":"请点击“+”手动生成 Token","dingtalk_isv_integration_single_record_comment_mentioned":"b4ac28623fd5493dbc5f995bb1cc17c7","dingtalk_isv_production_single_record_comment_mentioned":"8f41773b6eb54d6bba9d82392956dea1","dingtalk_isv_staging_single_record_comment_mentioned":"d81ea943488b41ebb42fdeacfb42d0ef","dingtalk_single_record_member_comment_title":"评论通知","direction_above":"上方","direction_below":"下方","direction_left":"左边","direction_right":"右边","disable":"停用","disabled_file_shared":"已禁止公开链接分享","disabled_file_shared_desc":"管理员已禁止公开链接，已开启分享的链接将失效","disabled_link_subtitle":"分享者已失去分享权限，因此公开链接无法访问","disagree_and_exit":"不同意并退出应用","disconnect_from_the_server":"与服务器断开连接","display_member_by_count":"${memberCount} 人","display_person_count":"${count} 人","display_success_and_error_count":"导入成功 ${successCount} 条，导入失败 ${errorCount} 条","distribute_a_team":"分配小组","divider":"分割线","djibouti":"吉布提","do_not_bind":"暂不绑定","document_detail":"详细文档","does_not_contains":"不包含","dominica":"多米尼加","dominican_republic":"多米尼加共和国","donut_chart":"环形图","down":"向下移动一个单元格","downgrade":"Downgrade","download":"下载","download_all":"下载全部","download_client":"下载客户端","download_image":"下载图片","duplicate":"复制\\n","duplicate_cell_data":"复制","duplicate_datasheet":"复制一份","duplicate_field":"复制列","duplicate_record":"复制行","e_commerce":"电子商务","e_commerce_operations":"电商运营","early_bird":"早鸟特权","ecuador":"厄瓜多尔","edit":"编辑","edit_cell_data":"激活单元格编辑状态","edit_member":"编辑成员","edit_member_add_button":"添加","edit_member_email":"邮箱","edit_member_fail":"编辑成员信息失败","edit_member_name":"成员昵称","edit_member_success":"编辑成员信息成功","edit_member_team":"小组","edit_node_desc":"点击此处，添加一段说明","edit_selected_field":"更改所选字段","edit_space_name":"修改空间站名称","editing_field_desc":"编辑列描述","editing_group":"编辑分组","editor_placeholder":"输入 / 试试","education":"教育","egypt":"埃及","el_salvador":"萨尔瓦多","email":"电子邮件","email_bound":"你已经完成了邮箱绑定","email_err":"邮箱格式不正确","email_invite":"邮箱邀请","email_placeholder":"请输入邮箱","email_verify_warning_button_back":"注销","email_verify_warning_button_resend":"重新发送","email_verify_warning_desc":"带有确认链接的消息已发送至 ${email_address}。请点击链接激活您的帐户。","email_verify_warning_title":"请验证你的电子邮件","embed_error_page_help":"点击了解失效原因","emoji_activity":"活动和事件","emoji_custom":"自定义","emoji_flags":"旗帜","emoji_foods":"食物和饮料","emoji_nature":"动物与自然","emoji_not_found":"未找到表情","emoji_objects":"物体","emoji_people":"人","emoji_places":"旅行和地点","emoji_recent":"最近","emoji_search_result":"搜索结果","emoji_smileys":"表情符号","emoji_symbols":"符号","empty":"无","empty_dashboard_list":"暂无仪表盘，${action}","empty_data":"空数据","empty_email_tip":"上方邮箱信息不存在，你可以邀请此邮箱的人加入空间站","empty_nodes":"还没有创建任何东西呢","empty_record":"暂时没有记录","empty_trash":"回收舱空空如也，这里只会显示最近 ${day} 天内删除的文件（夹）哦～","enable":"启用","enabled_view_lock_success":"锁定视图成功","enabled_view_lock_tip":"锁定此视图可以防止任何人编辑视图配置，具有管理权限的成员可以将其解锁","encounter_problems":"遇到问题了？","encounter_problems_message":"我来帮助你解决","end":"我是有底线的～","end_day":"天内","end_time":"结束时间","enjoy":"期待～","ensure":"确定","enter_names_or_emails":"请输入需要添加的成员昵称/邮箱","enter_official_website":"进入官网","enter_template_name":"请输入模板名称","enter_unactive_space_err_message":"当前空间站处于未激活状态，暂时无法访问。","enter_workspace_name":"请输入空间站名称","enterprise_edition":"企业版","enterprise_third_app":"旗舰版","entry_space":"进入空间站","equal":"等于","equatorial_guinea":"赤道几内亚","eritrea":"厄立特里亚","error":"错误","error_add_row_failed_wrong_length_of_value":"创建记录失败，因为未指定 records 参数","error_an_unsynchronized_changeset_is_detected":"localStorage 检测到未同步的 changeset，尝试进行同步","error_atta_type":"暂不支持上传该格式附件","error_boundary_back":"返回空间站","error_boundary_crashed":"抱歉，发生了一些问题导致页面崩溃，我们正在努力修复中。","error_code":"错误码 ${code}: ${message}","error_configuration_and_invalid_filter_option":"该字段存在配置错误，筛选失效！","error_create_view_failed_duplicate_view_id":"创建视图失败：检测到重复的视图 ID","error_data_consistency_and_check_the_snapshot":"数据一致性错误！请检查 snapshot","error_del_view_failed_not_found_target":"删除视图失败：未找到要删除的目标","error_detail":"错误详情","error_email_empty":"邮箱不能为空","error_filter_failed_wrong_target_view":"筛选失败：目标视图错误","error_group_failed_wrong_target_view":"分组失败：目标视图错误","error_local_changeset_is_null_while_status_is_pending":"没有 localChangeset 但是 status 居然是 pending","error_modify_cell_failed_unmatched_data_type":"修改单元格失败：数据类型不匹配","error_modify_column_failed_column_not_exist":"调整列属性失败：列不存在","error_modify_column_failed_wrong_target_view":"调整列属性失败：目标视图错误","error_modify_view_failed_duplicate_name":"修改视图失败：视图名称重复","error_modify_view_failed_not_found_target":"修改视图失败：未找到目标视图","error_move_row_failed_invalid_params":"移动行失败：参数错误","error_move_view_failed_not_found_target":"移动视图失败：未找到目标视图","error_not_exist_id":"id 为 ${id} 的列不存在，需要验证数据是否正确","error_not_found_the_source_of_view":"未找到源视图","error_not_initialized_datasheet_instance":"操作的 datasheet 实例未初始化","error_occurred_while_requesting_the_missing_version":"请求缺失版本的过程中出错","error_please_bind_message_after_connected":"请在建立连接后再绑定消息","error_please_close_sharing_page":"当前分享链接已被关闭","error_record_not_exist_now":"你编辑的记录已被删除或隐藏","error_revision_does_not_exist":"revision 不存在","error_scan_qrcode_tips":"请检查应用是否被停用","error_set_row_height_failed_wrong_target_view":"行高设置失败：目标视图错误","error_something_wrong":"有错误发生","error_sorted_failed_the_field_not_exist":"排序失败：排序的字段不存在","error_sorted_failed_wrong_target_view":"排序失败：目标视图错误","error_the_field_dragged_has_been_deleted_or_hidden":"拖动的字段已被删除或隐藏","error_the_length_of_changeset_is_inconsistent":"获取到的 ChangesetLength revisions 不一致","error_the_version_is_inconsistent_while_preparing_to_merge":"待合并的关联表数据版本不一致","error_wrong_conjunction_type":"错误的 conjunction 类型: ${conjunction}","error_wrong_data_in_current_column":"当前列数据错误","escape":"退出编辑或关闭窗口","essential_features":"核心功能","estonia":"爱沙尼亚","ethiopia":"埃塞俄比亚","event_planning":"活动策划","everyday_life":"日常生活","everyone_visible":"全员可见","exact_date":"指定日期","example_value":"示例值","excel":"Excel 文件 (.xlsx)","exception_form_foreign_datasheet_not_exist":"神奇表单映射的数表不存在","exception_network_exception":"网络异常","exclusive_consultant":"专属 V+ 顾问","exits_space":"退出空间","expand":"展开","expand_activity":"展开动态","expand_all_field_desc":"显示本表的列描述","expand_all_group":"展开所有分组","expand_current_record":"展开当前记录 (Space)","expand_pane":"展开面板","expand_record":"展开行","expand_record_attachment_empty":"该附件内容为空","expand_record_vision_btn_tooltip_center":"居中展示","expand_record_vision_btn_tooltip_full_screen":"全屏展示","expand_record_vision_btn_tooltip_side":"侧边展示","expand_record_vision_setting":"记录卡片样式","expand_record_vision_setting_center":"居中","expand_record_vision_setting_side":"侧边","expand_rest_records_by_count":"展开剩余的 ${record_count} 条记录","expand_subgroup":"展开该组的子分组","expiration":"到期时间：${date}","expiration_time":"删除时间","expiration_time_of_space":"空间站等级到期时间","expire":"到期","expired":"已过期","export":"正在导出…","export_brand_desc":"提供技术支持","export_current_preview_view_data":"导出当前视图数据","export_gantt_button_tips":"导出为图片","export_gantt_chart":"导出甘特图","export_to_excel":"导出为 Excel 文件","export_view_data":"导出视图数据","export_view_image_warning":"请点击切换到视图内再导出","extra_tip":"特别提示","fail":"失败","failed_in_file_parsing":"文件解析出现异常","failed_list":"失败列表","failed_list_file_download":"下载失败列表","faq":"常见问题","faroe_islands":"法罗群岛","fashion_and_style":"时尚潮流","favorite":"星标","favorite_empty_tip1":"将常用的文件设为星标","favorite_empty_tip2":"星标文件仅对个人可见","feedback":"意见反馈","field_circular_err":"选择的引用列会导致循环引用，请修改。","field_configuration_err":"本列有配置错误，请检查公式、引用的列或筛选条件。","field_configuration_numerical_value_format":"数值格式","field_configuration_optional":"选填","field_desc":"列描述","field_desc_attachment":"你可以在单元格内添加多种类型的附件","field_desc_autonumber":"你可以为每一行记录添加一个唯一且自增的数字","field_desc_checkbox":"你可以在单元格内标记勾选状态","field_desc_created_by":"显示每一行记录的创建人，且创建人不可被修改。","field_desc_created_time":"显示每一行记录的创建时间，且创建时间不可被修改。","field_desc_currency":"你可以设置货币符号，单元格内的数字会自动填充符号","field_desc_datetime":"你可以在单元格内输入或者从日历面板选择日期","field_desc_email":"你可以在单元格内添加邮箱","field_desc_formula":"你可以使用函数和运算符对单元格的数据进行运算。","field_desc_last_modified_by":"显示一条记录或某些列的最后修改人，且修改人不可被编辑。","field_desc_last_modified_time":"显示一条记录或某些列的最后修改时间，且修改时间不可被编辑。","field_desc_length_exceeded":"列描述请保持在 200 字以内","field_desc_link":"你可以在单元格内引用关联表的记录","field_desc_lookup":"你可以快捷的跨表查找数据，并对数据进行简单的计算。","field_desc_member":"你可以在单元格内选择并通知站内的成员","field_desc_multi_select":"你可以在单元格内添加单个或多个预设选项","field_desc_number":"你可以输入数字并设置显示精度","field_desc_percent":"你可以在单元格内输入数字，数字会自动填充百分比符号","field_desc_phone":"你可以在单元格内添加电话号码","field_desc_rating":"你可以在单元格内标记评分","field_desc_single_select":"你可以在单元格内添加单个预设选项","field_desc_single_text":"单元格适合存放简短、独特的文本，不支持换行。","field_desc_text":"你可以输入长篇文字和进行换行操作","field_desc_tree_select":"你可以按照层级关系选择内容填写进单元格里","field_desc_url":"你可以在单元格内添加网址","field_display_time_zone":"显示时区标识","field_head_setting":"列头配置","field_help_attachment":"https://help.apitable.com/docs/guide/manual-field-attachment","field_help_autonumber":"https://help.apitable.com/docs/guide/manual-autonumber","field_help_checkbox":"https://help.apitable.com/docs/guide/manual-field-checkbox","field_help_created_by":"https://help.apitable.com/docs/guide/manual-createdby","field_help_created_time":"https://help.apitable.com/docs/guide/manual-createdtime","field_help_currency":"https://help.apitable.com/docs/guide/manual-field-currency","field_help_datetime":"https://help.apitable.com/docs/guide/manual-field-datetime","field_help_email":"https://help.apitable.com/docs/guide/manual-field-email","field_help_formula":"https://help.apitable.com/docs/guide/manual-formula-field-overview","field_help_last_modified_by":"https://help.apitable.com/docs/guide/manual-lastmodifiedby","field_help_last_modified_time":"https://help.apitable.com/docs/guide/manual-lastmodifiedtime","field_help_link":"https://help.apitable.com/docs/guide/manual-field-link","field_help_lookup":"https://help.apitable.com/docs/guide/manual-field-lookup","field_help_member":"https://help.apitable.com/docs/guide/manual-filed-member","field_help_multi_select":"https://help.apitable.com/docs/guide/manual-field-select","field_help_number":"https://help.apitable.com/docs/guide/manual-field-number","field_help_percent":"https://help.apitable.com/docs/guide/manual-field-percent","field_help_phone":"https://help.apitable.com/docs/guide/manual-field-phone","field_help_rating":"https://help.apitable.com/docs/guide/manual-field-rating","field_help_single_select":"https://help.apitable.com/docs/guide/manual-field-select","field_help_single_text":"https://help.apitable.com/docs/guide/manual-field-single-line-text","field_help_text":"https://help.apitable.com/docs/guide/manual-field-text","field_help_url":"https://help.apitable.com/docs/guide/manual-field-url","field_incluede_time_and_time_zone_title":"显示时间与时区","field_member_property_multi":"允许添加多个成员","field_member_property_notify":"选择成员后发送消息通知","field_name_formula":"公式","field_name_setting":"列名配置","field_permission":"列权限","field_range":"指定范围","field_required":"请填写该字段","field_select_time_zone_current":"当前时区","field_select_time_zone_other":"其他时区","field_title_attachment":"附件","field_title_autonumber":"自增数字","field_title_checkbox":"勾选","field_title_created_by":"创建人","field_title_created_time":"创建时间","field_title_currency":"货币","field_title_datetime":"日期","field_title_email":"邮箱","field_title_formula":"智能公式","field_title_last_modified_by":"修改人","field_title_last_modified_time":"修改时间","field_title_link":"神奇关联","field_title_lookup":"神奇引用","field_title_member":"成员","field_title_multi_select":"多选","field_title_number":"数字","field_title_percent":"百分比","field_title_phone":"电话","field_title_rating":"评分","field_title_single_select":"单选","field_title_single_text":"单行文本","field_title_text":"多行文本","field_title_tree_select":"多级联动","field_title_url":"网址","field_type_attachment_select_cell":"拖文件到这里上传","fiji":"斐济","file":"文件","file_limits":"空间站文件上限 ${limit}","file_name_with_bulk_download":"${fileName} 等 ${count} 个文件.zip","file_notification":"文件提示","file_of_rest":"剩余数量：${nodeRest} 个","file_sharing":"文件正在分享中","file_summary":"文件描述","file_upper_bound":"数量上限：${nodeMax} 个","fill_in_completed":"填写完毕","filter":"筛选","filter_delete_tip":"筛选条件选择的列被删除","filter_fields":"按「${field_name}」筛选","filter_link_data":"筛选引用的数据","filtering_conditions_setting":"设置筛选条件","filters_amount":"${amount} 个筛选","find":"查找","find_next":"下一个 Enter","find_prev":"上一个 Shift+Enter","finish":"完成","finish_editing_cell_left":"完成编辑并向左一个单元格","finish_editing_cell_right":"完成编辑并向右一个单元格","finland":"芬兰","folder":"文件夹","folder_banner_desc":"推荐使用宽度大于 800Px 的图片以达到更好的视觉体验","folder_contains":"${folders} 个文件夹，${files} 个文件","folder_content_empty":"当前文件夹为空","folder_desc_title_placeholder":"请输入标题","folder_level_2_limit_tips":"哟，你的文件夹层级已经达到了 2 级的限制","folds_hidden_fields_by_count":"收起 ${count} 个隐藏字段","follow_system_time_zone":"跟随系统时区","food_and_drink":"饮食","foreign_filed":"关联的列","form":"神奇表单","form_back_workspace":"回到空间站","form_brand_visible":"显示品牌标识","form_compact_option_desc":"单选/多选字段的选项将不会平铺在页面上","form_compact_option_mode":"收纳单多选的选项","form_cover_crop_desc":"支持JPG、PNG 和 GIF 格式，图片大小需在 5MB 以内","form_cover_crop_tip":"建议尺寸 1440*480","form_cover_img_desc":"推荐使用宽高比为3:1的方形图片以达到更好的视觉体验","form_cover_visible":"显示封面","form_desc_placeholder":"请输入描述","form_editor_label":"在「只可更新」基础上，还可以设置和分享神奇表单","form_empty_tip":"你还未填写内容，请填写后再提交","form_error_tip":"神奇表单结构发生更改，请刷新页面","form_field_add_btn":"添加","form_fill_again":"再填一份","form_fill_anonymous":"匿名提交","form_fill_anonymous_desc":"无需登录，通过公开链接进行匿名收集","form_fill_listed":"登录后提交","form_fill_listed_desc":"他人需要登录后才能填写该表单","form_fill_open_desc":"发布一个所有人都可以见的链接","form_fill_setting":"填写设置（以下设置仅对公开链接方式填写的表单生效）","form_full_screen":"全屏宽度","form_help_desc":"帮助文档","form_index_visible":"显示序号","form_link_field_empty":"引用的列无内容","form_logo_visible":"显示 Logo","form_manager_label":"在「可以编辑」基础上，还可以删除神奇表单","form_network_error_tip":"当前网络存在异常，请稍后再试","form_not_configure_options":"该字段没有设置选项，管理员需要在对应视图进行配置","form_only_read_tip":"当前文件夹没有被设置为允许编辑，所以该表单无法填写","form_reader_label":"只可查看该神奇表单，不允许提交","form_setting":"神奇表单设置","form_share_closed_desc":"公开链接","form_share_closed_popconfirm_content":"公开链接将会暂时失效","form_share_closed_popconfirm_title":"关闭公开链接","form_share_opened_desc":"打开公开链接","form_share_title":"通过公开链接收集表单数据","form_source_text":"表单的数据存放至","form_space_capacity_over_limit":"空间站附件容量已满，无法提交带附件的表单","form_submit":"提交","form_submit_anonymous_tooltip":"匿名下无法更改此配置","form_submit_fail":"无法提交","form_submit_loading":"提交中","form_submit_no_limit":"无提交次数限制","form_submit_once":"只允许提交一次","form_submit_success":"提交成功","form_submit_times_limit":"次数限制","form_tab_setting":"设置","form_tab_share":"分享","form_thank_text":"数据提交成功，感谢你的填写","form_the_full":"表格全文","form_title_placeholder":"请输入标题","form_to_datasheet_view":"点击跳转至对应的视图","form_tour_desc":"使用教程","form_updater_label":"在「只可阅读」基础上，还可以提交神奇表单","form_view":"神奇表单","format":"格式设置","format_date":"格式化日期","formula_check_info":"当前单元格的数据来自公式计算结果，不能编辑","formula_example_desc":"填写变量、运算符和函数来组成公式进行运算","formula_example_sub_title":"举个例子","formula_example_title":"公式样例","formula_how_to_use":"用法","formula_learn_more":"学习更多公式使用技巧","france":"法国","free":"免费","free_edition":"免费版","free_trial":"立即体验","freeze_click_when_windows_too_narrow":"调整列宽","freeze_current_column":"冻结至此列","freeze_line_tips":"冻结区域暂不支持拖拽，可在列头处调整冻结范围","freeze_tips_when_windows_too_narrow":"当前窗口过小，无法正常滚动","freeze_tips_when_windows_too_narrow_in_gantt":"左侧列表区域宽度太小，无法正常滚动","freeze_warning_cant_freeze_field":"当前窗口过小，无法冻结这一列","french_guiana":"法属圭亚那","french_polynesia":"法属波利尼西亚","fresh_order_status_action":"刷新状态","friend":"好友","from_datasheet_associated":"来自「${datasheetName}」","from_select_link_column":"从${name}选择想要引用的列","front_version_error_desc":"检测到系统版本已更新，需要您刷新后才能使用","front_version_error_title":"版本更新","full_memory_tip":"容量已满，无法继续上传附件","full_screen":"全屏查看","function":"功能","function_abs_example":"// value > 0\\n公式：ABS(1.5)\\n运算结果：1.50\\n\\n//value = 0\\n公式：ABS(0)\\n运算结果：0.00\\n\\n// value < 0\\n公式：ABS(-1.5)\\n运算结果：1.50","function_abs_summary":"简介\\n取数值的绝对值。\\n\\n参数说明\\nvalue：是要对其求绝对值的数值。\\n绝对值：正数的绝对值是本身，负数的绝对值是去掉负号。","function_and_example":"AND(3>2, 4>3)\\n=> true","function_arraycompact_example":"ARRAYCOMPACT([1,2,\\"\\",3,false,\\" \\", null])\\n=> [1,2,3,false,\\" \\"]","function_arrayflatten_example":"ARRAYFLATTEN([1, 2, \\" \\", 3, ],[false])\\n=> [1, 2, 3 ,false]","function_arrayjoin_example":"ARRAYJOIN({兴趣爱好} , \\"; \\")","function_arrayunique_example":"ARRAYUNIQUE([1,2,3,3,1])\\n=> \\"[1,2,3]\\"","function_associate_sheet":"关联表${datasheetname}的记录","function_average_example":"AVERAGE(2, 4, \\"6\\", \\"八\\")\\n=>(2 + 4 + 6 + 0) /4 =3\\n\\nAVERAGE({数学成绩}, {英语成绩}, {语文成绩})         ","function_average_summary":"返回多个数值的算术平均数。\\n\\n【number...】是进行运算的数值参数，可以输入数字或引用数值类型的列。数值类型的列包括数字、货币、百分比、评分等。\\n\\n如果其中某个参数是文本值，比如\\"八\\"，在运算时会被当做0。","function_blank_example":"IF({开始时间} = BLANK(), \\"尚未确定时间\\", \\"已确定开始时间\\")\\n\\nIF({数学成绩} ≥ 60, BLANK(), \\"需要补考\\")","function_blank_summary":"返回一个空值。\\n\\n可以用来判断单元格是否为空，见例子一；\\n可以在单元格内填入空值，见例子二；","function_ceiling_example":"CEILING(1.99)\\n=> 2\\n\\nCEILING(-1.99, 0.1)\\n=> -1.9","function_ceiling_summary":"将数值向上舍入为最接近的指定基数的倍数。\\n\\n【value】是要向上舍入的值。\\n【significance】非必填，是用于向上舍入的基数，返回值为基数的倍数。如果未提供，默认取1。\\n【向上舍入】即它返回值是大于或等于原数值,且为最接近的基数的倍数。","function_concatenate_example":"CONCATENATE({姓名}, {年纪}, \\"岁\\")\\n\\nCONCATENATE(\\"\\\\\\"\\", {年纪}, \\"\\\\\\"\\")","function_concatenate_summary":"将多个文本值串联成单个文本值。（其效果等同于 &）\\n\\n【text1..】是要串联的多个值，可以输入文本、数字、日期参数或者引用列数据。\\n\\n请用双引号将你要串联的文本值引起来，数字和引用列除外。\\n特例：如果要串联双引号，你需要使用反斜杠（\\\\）作为转义字符。","function_content_empty":"公式内容为空","function_count_example":"COUNT(1, 3, 5, \\"\\", \\"七\\") \\n=> 3","function_count_summary":"统计「数字」类型值的数量。\\n\\n【number】可以是输入的参数或引用的列。\\n\\n本函数可以计算输入的参数或单元格内包含了多少个数值（数字、货币、百分比、评分都为数值）。","function_counta_example":"COUNTA(1, 3, 5, \\"\\", \\"七\\") \\n=> 4","function_counta_summary":"统计非空值的数量。 \\n\\n【textOrNumber】可以是输入的参数或引用的列。\\n\\n本函数可以计算输入的参数或单元格内包含了多少个非空值。\\n比如，可以统计一个单元格内有多少个选项，多少个图片。多少个成员等。\\n还可以统计神奇引用的单元格内的数组非空值。","function_countall_example":"COUNTALL(1, 3, 5, \\"\\", \\"七\\") \\n=> 5","function_countall_summary":"统计所有值的数量，包括空值。\\n\\n【textOrNumber】可以是输入的参数或引用的列。\\n\\n本函数可以计算输入的参数和单元格内包含了多少个值，包括空值。","function_countif_summary":"在values中统计keyword出现的次数。\\n\\nvalues：指定从哪里查找数据。支持数组类型或文本类型的数据。\\nkeyword：要查找并统计的关键词。\\noperation：比较符，非必填项。你可以填入条件符号大于\\">\\"，小于\\"<\\"，等于\\"=\\"，不等于\\"!=\\"，如果不填写默认为等于。\\n例子一中没有填写比较符，默认统计等于\\"A\\"的值出现的次数。\\n例子二中填写了比较符\\">\\"，意味统计大于\\"2\\"的值出现的次数。\\n\\n使用场景：\\n1）可以统计一串文本数组[A, B , C , D, A]中，字符\\"A\\"出现的数量为2，见例子一。\\n2）可以统计一串数字数组[1, 2, 3, 4, 5]中，大于3的数字数量为2，见例子二。\\n3)可以统计一串文本字符串\\"吃葡萄不吐葡萄皮\\"中，\\"葡萄\\"出现的次数为2，见例子三。","function_created_time_example":"CREATED_TIME()\\n=> \\"2020-06-10\\"\\n\\n\\"创建于 ：\\" & CREATED_TIME()","function_created_time_summary":"返回当前记录的创建时间。","function_current_sheet":"「${datasheetName}」的记录","function_date_time_after":"晚于","function_date_time_before":"早于","function_dateadd_example":"// 为 2021/03/25 增加 1 天的时间间隔。计时单位 \\"days\\" 表示按 “天” 计算。\\n公式：DATEADD(\\"2021/03/25\\", 1, \\"days\\")\\n运算结果：2021/03/26\\n\\n// 为 2021/03/25 减少 1 天的时间间隔。计时单位 \\"days\\" 表示按 “天” 计算。\\n公式：DATEADD(\\"2021/03/25\\", -1, \\"days\\")\\n运算结果：2021/03/24\\n\\n// 为 {启动时间} 增加 10 天的时间间隔。下列字段 {启动时间} 是日期类型且单元格值 2021/03/25 。计时单位 \\"days\\" 表示按 “天” 计算。\\n公式：DATEADD({启动时间}, 10, \\"days\\")\\n运算结果：2021/04/04","function_dateadd_summary":"简介\\n为指定的日期增加固定的时间间隔。\\n\\n参数说明\\ndate：是你指定的日期。本函数将在该日期基础上增加一定的时间间隔。\\ncount：是时间间隔，支持输入带正负号的数字。如果为正数，即表示增加几天（可自定义计时单位），见例子一；如果为负数，即表示减少几天，见例子二；\\nunits：是计时单位，即增加时间间隔的单位。比如按 “天” 计算也可以转换为按 “年” 计算。\\n\\n计时单位包括以下符号，两种格式都可以使用：「单位说明符 」→ 「缩写」\\n毫秒：「milliseconds」 → 「ms」\\n秒：「seconds」 → 「s」\\n分钟：「minutes」 → 「m」\\n小时：“hours” → “h”\\n天：“days” → “d”\\n周：“weeks” → “w”\\n月：“months” → “M”\\n季度：“quarters” → “Q”\\n年：“years” → “y”\\n\\n点击下方链接可查看全部计时单位。","function_datetime_diff_example":"DATETIME_DIFF( \\"2020-08-11\\"  ,\\"2020-08-10\\", \\"days\\")\\n=> 1\\n\\nDATETIME_DIFF( \\"2020-08-9\\" ,\\"2020-08-10\\", \\"days\\")\\n=> -1      \\n\\nDATETIME_DIFF( {截止时间} , TODAY(), \\"hours\\")\\n=> 48","function_datetime_diff_summary":"返回两个日期之间的差值（有正负），即日期1减去日期2。\\n\\n【date1】日期1\\n【date2】日期2\\n【units】计时单位，日期1与日期2差值的计算单位。比如按“天”计算也可以转换为按“年”计算。\\n\\n计时单位包括以下符号，两种格式都可以使用：「单位说明符 」→ 「缩写」\\n毫秒：\\"milliseconds\\" → \\"ms\\"\\n秒：\\"seconds\\" → \\"s\\"\\n分钟：\\"minutes\\" → \\"m\\"\\n小时：\\"hours\\" → \\"h\\"\\n天：\\"days\\" → \\"d\\"\\n周：\\"weeks\\" → \\"w\\"\\n月：\\"months\\" → \\"M\\"\\n季度：\\"quarters\\" → \\"Q\\"\\n年：\\"years\\" → \\"y\\"\\n\\n点击下方链接可查看全部计时单位。","function_datetime_format_example":"DATETIME_FORMAT(\\"2020-10-01\\", \\"DD-MM-YYYY\\")\\n=> 01-10-2020\\n\\nDATETIME_FORMAT(\\"2020-10-01\\", \\"YYYY / MM / DD\\")\\n=>2020/10/01\\n\\nDATETIME_FORMAT(\\"2020-10-01\\", \\"MM.DD\\")\\n=>10.01\\n\\nDATETIME_FORMAT(TODAY(), \\"DD-MM-YYYY\\")\\n=> 01-10-2020","function_datetime_format_summary":"将日期以自定义的形式格式化为文本。\\n\\n【date】是需要被格式化的日期。\\n【output_specifier】是选择的格式化说明符。比如说明符可以是：\\n\\"DD-MM-YYYY\\"表示\\"日-月-年\\"，见例子一；\\n\\" YYYY / MM / DD\\"表示\\"年/月/日\\"，见例子二；\\n\\"MM.DD\\"表示\\"月.日\\"，见例子三。\\n\\n日期经过格式化后，将变为一串文本。\\n\\n本函数支持的日期格式化说明符请看下方链接。","function_datetime_parse_example":"DATETIME_PARSE(\\"20201001\\")\\n=> \\"2020/10/01\\"\\n\\nDATETIME_PARSE(\\"01 10 2020 18:00\\", \\"DD MM YYYY HH:mm\\")\\n=> \\"2020/10/01 18:00\\"\\n\\nDATETIME_PARSE(\\"01号10月2020年18:00时\\", \\"DD号MM月YYYY年HH:mm时\\")\\n=> \\"2020/10/01 18:00\\"","function_datetime_parse_summary":"将文本转换为结构化日期类型。\\n\\n【date】是要被格式化为日期的文本。\\n【input_format】非必填，本参数是日期格式化说明符。对于系统无法识别的文本日期内容，你可以自己解释为结构化的日期。见例子二。\\n\\n本函数支持的日期格式化说明符和语言环境请查看下方链接。","function_day_example":"DAY(\\"2020.10.01\\")\\n=>1\\n\\nDAY({完成日期})\\n=>5","function_day_summary":"返回指定日期属于当月的第几号，输出格式为1-31之间的整数。\\n\\n【date】是指定的日期。\\n比如，数字1表示日期属于当月的第1号。","function_encode_url_component_summary":"把文本编码为 URL的格式。\\n\\n【component_string】是需要被编码的文本。不编码以下字符：- _ . ~\\n\\n比如将第一个例子的输出值复制到浏览器地址栏，就相当于在百度里搜索”苹果“的URL","function_err_end_of_right_bracket":"函数需要以 ) 结尾","function_err_no_left_bracket":"函数名右侧缺少 (","function_err_no_ref_self_column":"公式列中的函数不可以引用当前公式列","function_err_not_definition":"未定义的函数：{name}","function_err_not_found_function_name_as":"未找到名称为：${fnName} 的函数实现","function_err_unable_parse_char":"无法解析字符 {value}","function_err_unknown_operator":"未知运算符：{type}","function_err_unrecognized_char":"未识别的字符: ${value}","function_err_unrecognized_operator":"未能识别的操作符: ${token}","function_err_wrong_function_suffix":"错误的公式结尾\\b","function_err_wrong_unit_str":"错误的 unit 参数值：${unitStr}","function_error_example":"IF({年纪}< 0, ERROR(\\"统计错误\\"), \\"正常\\")\\n=>  #Error: 统计错误","function_error_summary":"在单元格内显示错误提示和原因。\\n\\n可以在函数内输入文本说明错误原因，比如例子中的”统计错误“就是你定义的错误原因。","function_even_example":"EVEN(1.5)\\n=> 2\\n\\nEVEN(-1.8)\\n=> -2","function_even_summary":"返回沿绝对值增大方向最接近的偶数。\\n\\n【value】是要取偶的数值。\\n【绝对值增大】即它返回值是远离0（零）方向。","function_example_example":"{单价} * {数量}\\n{姓名} & \\"-\\" & {年纪} \\nAVERAGE({数学}, {语文}, {英语})\\nIF({平均分} > 60, \\"👍合格\\", \\"❗不合格\\")","function_example_summary":"填写变量、运算符和函数来组成公式进行运算","function_exp_example":"EXP(1)\\n=> 2.72\\n\\nEXP(2)\\n=> 7.40","function_exp_summary":"返回e的指定次方。\\n\\n【e】是自然数，约为2.718282\\n【power】是幂。即指定e的多少次方。","function_false_example":"IF({完成状态(勾选)}= FALSE(), \\"未完成\\"， \\"已完成\\")\\n\\nIF({平均成绩} >60, TRUE(), FALSE())","function_find_example":"FIND(\\"苹果\\", \\"这个苹果又大又圆，要买两斤苹果吗？\\")\\n=> 3\\n\\nFIND(\\"香蕉\\", \\"这个苹果又大又圆，要买两斤苹果吗？\\")\\n=> 0\\n\\nFIND(\\"苹果\\", \\"这个苹果又大又圆，买两斤苹果吗？\\"，10)\\n=> 13","function_floor_example":"FLOOR(1.01, 0.1)\\n=> 1.0\\n\\nFLOOR(-1.99, 0.1)\\n=> -2.0","function_floor_summary":"将数值向下舍入为最接近的指定基数的倍数。\\n\\n【value】是要向下舍入的值。\\n【significance】非必填，是用于向下舍入的基数，返回值为基数的倍数。如果未提供，默认取1。\\n【向下舍入】即它返回值是小于或等于原数值,且为最接近基数的倍数。","function_fromnow_example":"FRONOW(\\"2019-08-10\\", \\"y\\")\\n=> 1        \\n\\nFROMNOW({开始日期}, \\"days\\")\\n=> 25","function_fromnow_summary":"返回当前日期和指定日期之间的差值（无正负）。\\n\\n【date】是指定日期，即用指定日期减去当前日期，计算两个日期相差的多少天（自定义计时单位），无正负。\\n【units】计时单位，即指定日期与当前日期差值的计算单位，比如按”天“计算也可以转换为按”年“计算。\\n\\n计时单位包括以下符号，两种格式都可以使用：\\n「单位说明符 」→ 「缩写」\\n毫秒：\\"milliseconds\\" → \\"ms\\"\\n秒：\\"seconds\\" → \\"s\\"\\n分钟：\\"minutes\\" → \\"m\\"\\n小时：\\"hours\\" → \\"h\\"\\n天：\\"days\\" → \\"d\\"\\n周：\\"weeks\\" → \\"w\\"\\n月：\\"months\\" → \\"M\\"\\n季度：\\"quarters\\" → \\"Q\\"\\n年：\\"years\\" → \\"y\\"\\n点击下方链接可查看全部计时单位。","function_guidance":"智能引导","function_hour_example":"HOUR({打卡时间})\\n=> 9","function_hour_summary":"返回指定日期的对应的时刻，输出格式为0（12:00 am）到23（11:00 pm）之间的整数。\\n\\n【date】是指定的日期。\\n比如，18表示18:00","function_if_example":"IF({分数} > 60, \\"及格\\", \\"不及格\\")\\n\\nIF({水温} >  40, IF({水温} < 60, \\"刚刚好\\", \\"太热\\"), \\"太冷\\")\\n\\nIF({Date} = BLANK(), \\"请输入日期\\", \\"日期已经输入\\")","function_if_summary":"判断是否满足某个条件，如果满足则返回第一个值，如果不满足则返回第二个值。\\n\\n【logical】是逻辑条件，表示计算结果为真（true）和假（false）的表达式。\\n【value1】是当逻辑条件为真时的返回值。\\n【value2】是当逻辑条件为假时的返回值。\\n\\nIF支持嵌套使用，并且可以用于检查单元格是否为空白/为空。","function_int_example":"INT(1.99)\\n=> 1\\n\\nINT(-1.99)\\n=> -2","function_int_summary":"将数值向下舍入为最接近的整数。\\n\\n【value】是要向下舍入的值。\\n【向下舍入】即它返回值是小于或等于原数值。","function_is_after_example":"IS_AFTER(\\"2020-10-02\\" , \\"2020-10-01\\")\\n=> TRUE\\n\\nIS_AFTER({截止时间}, TODAY())\\n=> TRUE\\n\\nIS_AFTER({截止时间}, \\"2020-10-01\\")\\n=> TRUE","function_is_before_example":"IS_BEFORE(\\"2020-10-01\\" , \\"2020-10-02\\")\\n=> TRUE\\n\\nIS_BEFORE({截止时间}, TODAY())\\n=> TRUE\\n\\nIS_BEFORE({截止时间}, \\"2020-10-01\\")\\n=> TRUE","function_is_error_example":"IS_ERROR(2/0)\\n=> TRUE\\n\\nIS_ERROR(\\"哈哈\\"*2)\\n=> TRUE","function_is_error_summary":"检查一个公式运行是否错误，如果错误则返回真（true）。\\n\\n【expr】是需要检查的值。检测值可以是算术运算、逻辑判断等类型的公式。","function_is_same_example":"IS_SAME(\\"2020-10-01\\" , \\"2020-10-01\\")\\n=> TRUE\\n\\nIS_SAME(\\"2020-10-01\\" , \\"2020-11-11\\", \\"years\\")\\n=> TRUE\\n\\nIS_SAME(\\"2020-10-01\\" , \\"2020-11-11\\", \\"months\\")\\n=> FALSE\\n\\nIS_SAME({截止时间}, {完工时间}, \\"days\\")\\n=> TRUE\\n\\nIS_SAME(\\"2020-10-01\\", {完工时间}, \\"days\\")\\n=> TRUE","function_iserror_example":"ISERROR(2/0)\\n=> TRUE\\n\\nISERROR(\\"哈哈\\"*2)\\n=> TRUE","function_iserror_summary":"检查一个公式运行是否错误，如果错误则返回真（true）。\\n\\n【expr】是需要检查的值。检测值可以是算术运算、逻辑判断等类型的公式。","function_last_modified_time_example":"LAST_MODIFIED_TIME()\\n=> \\"2020-06-10 6:27 下午.\\"\\n\\nLAST_MODIFIED_TIME({项目进度})\\n=> \\"2020-06-09 1:27 上午\\"\\n\\nLAST_MODIFIED_TIME({项目进度}, {任务分配})\\n=> \\"2020-06-09 1:27 上午\\"","function_left_summary":"从文本的开头提取多个字符。\\n\\n【string】是要被提取字符的文本。\\n【howMany】是提取的字符数量。用数字表示，比如\\"3\\"，代表从左到右提取3个字符。","function_len_example":"LEN(\\"你猜猜我有多长？\\")\\n=> 8\\n\\nLEN(\\"a blank\\")\\n=> 7","function_len_summary":"统计一段文本的字符长度。\\n\\n【string】是要计算长度的文本；标点符号、空格等也会占一个字符。","function_log_example":"LOG(1024, 2)\\n=> 10\\n\\nLOG(10000)\\n=> 4","function_log_summary":"以指定基数为底，返回数值的对数。\\n\\n【number】是想要计算其对数的数值。\\n【base】是对数的基数（底数），如果未指定基数，则默认为10。","function_lower_example":"LOWER(\\"Hello!\\")\\n=> hello!","function_lower_summary":"将文本中所有大写字符全部转换为小写字符。\\n\\n【string】是被转换的文本。","function_max_example":"MAX(5, -5, 555, -55)\\n=> 555\\n\\nMAX({数学成绩}, {英语成绩}, {语文成绩})","function_max_summary":"返回最大的数值。\\n\\n【number...】是进行运算的数值参数，可以输入数字或引用数值类型的列。数值类型的列包括数字、货币、百分比、评分等。\\n\\n另外，本函数的输入值都为日期格式时，可以比较多个日期中最晚的日期。","function_mid_example":"MID(\\"这个苹果又大又圆\\", 3, 2)\\n=> 苹果\\n\\nMID(\\"这个苹果又大又圆\\", 99, 2)\\n=> 空值\\n\\nMID(\\"这个苹果又大又圆\\", 3, 99)\\n=> 苹果又大又圆\\n\\nMID({嘉宾姓名}, 2, 99)\\n=> 彦祖","function_min_example":"MIN({数学成绩}, {英语成绩}, {语文成绩})","function_min_summary":"返回最小的数值。\\n\\n【number…】是进行运算的数值参数，可以输入数字或引用数值类型的列。数值类型的列包括数字、货币、百分比、评分等。\\n\\n另外，本函数的输入值都为日期格式时，可以比较多个日期中最晚的日期。","function_minute_example":"MINUTE({打卡时间})\\n=>30","function_minute_summary":"返回指定日期的分钟数，输出格式为0到59之间的整数。\\n\\n【date】是指定的日期。","function_mod_example":"MOD(7, 2)\\n=> 1","function_mod_summary":"返回两数值相除的余数。\\n\\n【value】是被除数。\\n【divisor】是除数。\\n\\n返回结果的符号与除数的符号相同。","function_month_example":"MONTH(\\"2020.10.01\\")\\n=> 10\\n\\nMONTH({毕业时间})\\n=> 6","function_month_summary":"返回指定日期对应的月份。\\n\\n【date】是指定的日期。\\n\\n本函数输出值为1（一月）至12（十二月）之间的整数。","function_not_example":"NOT({年纪} > 18)","function_not_summary":"反转其参数的逻辑值。\\n\\n【boolean】是布尔参数，意味着你的输入值必须是逻辑判断且输出值只有真和假，比如比较两个值谁大谁小。\\n当你参数的逻辑判断为真（true）时函数返回假（false）；\\n当你参数的逻辑判断为假（false）时函数返回真（true）；\\n\\n如例子一：2>3输出值是假，但经过反转后函数输出值的是真。\\n如例子二：NOT({年纪} > 18)经过NOT函数反转后，其实相当于判断{年纪} ≤ 18","function_now_example":"NOW()\\n=> \\"2020/06/02 07:12\\"\\n\\nDATETIME_DIFF( {截止时间} , NOW(),\\"days\\")\\n=> 15","function_now_summary":"返回今天的日期和时间，会精确到时分秒。 \\n\\n可以直接使用此函数返回年月日，见例子一；\\n\\n也可以和DATEADD或DATETIME_DIFF等函数一起使用，比如用{截止时间}减去当前时间，来显示项目的倒计时，见例子二。\\n\\n 注意：仅当重新刷新计算公式或刷新表格时，这个函数返回的结果才会更新。","function_odd_example":"ODD(1.5)\\n=> 3\\n\\nODD(-2.1)\\n=> -3","function_odd_summary":"返回沿绝对值增大方向最接近的奇数。\\n\\n【value】是要取奇的数值。\\n【绝对值增大】即它返回值是远离0（零）方向。","function_or_example":"OR(3>2, 2>3)\\n=>  true","function_power_example":"POWER(2, 5)\\n=> 32\\n\\nPOWER(-5, 3)\\n=> -125","function_power_summary":"返回指定基数的幂。即指定基数的多少次方。\\n\\n【base】是基数。\\n【power】是幂。","function_quarter_example":"QUARTER({毕业时间})\\n=> 2","function_quarter_summary":"返回指定日期对应的季度，输出格式为1（第一季度）至4（第四季度）之间的整数。","function_record_id_example":"\\"https://awesomeservice.com/view?recordId=\\" & RECORD_ID()","function_record_id_summary":"返回当前记录的ID。","function_replace_example":"REPLACE(\\"这个苹果又大又圆\\", 3, 2, \\"桃子\\")\\n=> 这个桃子又大又圆\\n\\nREPLACE(\\"这个苹果又大又圆\\", 3, 99, \\"榴莲又香又甜\\")\\n=> 这个榴莲又香又甜\\n\\nREPLACE({嘉宾姓名}, 1, 1, \\"X\\")\\n=> X彦祖","function_rept_example":"REPT(\\"哈\\", 2)\\n=> 哈哈","function_rept_summary":"根据指定次数重复文本。\\n\\n【string】是需要重复的文本。\\n【mumber】是指定的重复次数。用数字表示，比如”2“，表示重复2次。","function_right_summary":"从文本的末尾提取出多个字符。\\n\\n【string】是要被提取字符的文本。\\n【howMany】是提取的字符数量。用数字表示，比如\\"5\\"，代表从右到左提取5个字符。","function_round_example":"ROUND(1.99, 0)\\n=> 2\\n\\nROUND(18.8, -1)\\n=> 20","function_round_summary":"按指定的位数对数值进行四舍五入。\\n\\n【value】是要四舍五入的值\\n【precision】非必填，要进行四舍五入运算的位数。未填写时默认为1。\\n\\n如果位数大于 0，则四舍五入到指定的小数位。\\n如果位数等于 0，则四舍五入到最接近的整数。　\\n如果位数小于 0，则在小数点左侧进行四舍五入。","function_rounddown_example":"ROUNDDOWN(1.9, 0)\\n=> 1\\n\\nROUNDDOWN(-1.9, 0)\\n=> -1","function_rounddown_summary":"按指定的位数将数值延绝对值减小方向舍入。\\n\\n【value】是要舍入的值。\\n【precision】非必填，要将数字舍入到的位数。未填写时默认为1。\\n【绝对值减小】即它返回值是靠近0（零）方向。\\n\\n如果位数大于 0，则四舍五入到指定的小数位。\\n如果位数等于 0，则四舍五入到最接近的整数。　\\n如果位数小于 0，则在小数点左侧进行四舍五入。","function_roundup_example":"ROUNDUP(1.1, 0)\\n=> 2\\n\\nROUNDUP(-1.1, 0)\\n=> -2","function_roundup_summary":"按指定的位数将数值延绝对值增大方向舍入。\\n\\n【value】是要舍入的值。\\n【precision】非必填，要将数字舍入到的位数。未填写时默认为1。\\n【绝对值增大】即它返回值是远离0（零）方向。\\n\\n如果位数大于 0，则四舍五入到指定的小数位。\\n如果位数等于 0，则四舍五入到最接近的整数。　\\n如果位数小于 0，则在小数点左侧进行四舍五入。","function_search_example":"SEARCH(\\"苹果\\", \\"这个苹果又大又圆，要买两斤苹果吗？\\") \\n=> 3\\n\\nSEARCH(\\"香蕉\\", \\"这个苹果又大又圆，要买两斤苹果吗？\\")\\n=> 空值\\n\\nSEARCH(\\"苹果\\", \\"这个苹果又大又圆，买两斤苹果吗？\\"，10)\\n=> 13","function_second_example":"SECOND({打卡时间})\\n=> 1","function_second_summary":"返回指定日期的秒种，输出格式为0到59之间的整数。\\n\\n【date】是指定的日期。","function_set_locale_example":"DATETIME_FORMAT(SET_LOCALE(NOW(), \\"zh-cn\\"), \\"lll\\")\\n=> 2020年6月2日上午11点04分","function_set_locale_summary":"为指定日期时间设置特定的语言环境。 \\n\\n【date】是指定日期。\\n【ocale_modifier】是语言环境说明符。\\n\\n本函数必须与DATETIME_FORMAT结合使用。可以点击下方链接查看支持的语言环境说明符。","function_set_timezone_example":"DATETIME_FORMAT(SET_TIMEZONE(NOW(), -8), \\"M/D/YYYY h:mm\\")\\n=> 9/20/2021 2:30","function_set_timezone_summary":"为指定日期设置特定的时区。\\n\\n【date】是指定日期。\\n【tz_identifier】是时区说明符。比如\\"8\\"代表东8区，\\"-2\\"代表西2区。\\n\\n本函数必须与DATETIME_FORMAT结合使用。","function_sqrt_example":"SQRT(10000)\\n=> 100","function_sqrt_summary":"返回数值的平方根。\\n\\n【value】是要对其求平方根的数值。\\n\\n如果数值为负数，则 SQRT 返回 Nan","function_substitute_example":"SUBSTITUTE(\\"小胡，小张，小王\\", \\"小\\", \\"老\\")\\n=> 老胡，老张，老王\\n\\nSUBSTITUTE(\\"小胡，小张，小王\\", \\"小\\", \\"老\\", 3)\\n=> 小胡，老张，小王","function_sum_example":"SUM(1, 2, \\"3\\", \\"四\\")\\n=> 1 + 2 + 3 =6\\n\\nSUM({数学成绩}, {英语成绩}, {语文成绩})","function_sum_summary":"将所有数值相加。\\n\\n【number...】是进行运算的数值参数，可以输入数字或引用数值类型的列。数值类型的列包括数字、货币、百分比、评分等。","function_switch_example":"SWITCH({国家}, \\"中国\\", \\"中文\\", \\"俄国\\", \\"俄语\\", \\"法国\\", \\"法语\\", \\"日本\\", \\"日语\\", \\"通用英语\\")\\n\\nSWITCH(\\"C\\", \\"A\\", \\"优秀\\", \\"B\\", \\"中等\\", \\"C\\", \\"普通\\", \\"D\\", \\"较差\\", \\"没有成绩\\")\\n=>普通","function_switch_summary":"本函数为多分支选择函数，它由表达式和多个分支+返回值组成，如果表达式等于某个分支值，则函数输出该分支对应的返回值。\\n\\n【expression】是表达式，其运算的结果会与每个分支进行匹配。\\n【pattern】是分支，每个分支代表表达式的可能运算结果。每一个分支都有对应的返回值。\\n【result】是返回值，如果表达式的运算结果匹配了一个分支，则输出对应的返回值。\\n【default】是默认值，如果运算结果没有匹配任何一个分支，则函数输出默认值。默认值未填写时为空值。\\n\\n比如例子一，{国家}是引用的一列数据，其输出值可能是成千上万个国家名称，它是该函数中的表达式。“中国”和“中文”分别为其中一条分支和返回值，它表示如果{国家}的输出值为“中国”时，则返回“中文”。而“通用英语”为默认值，它表示{国家}的输出值没有匹配任何分支时，则输出“通用英语”","function_timestr_example":"TIMESTR(NOW())\\n=> \\"04:52:12\\"","function_timestr_summary":"将日期格式化为\\"时:分:秒\\"形式的文本(固定格式为HH:mm:ss)\\n\\n【date】是被格式化的日期\\n\\n日期经过格式化后，将变为一串文本，不再具有日期数据的属性。","function_today_example":"TODAY()\\n=> \\"2020/06/02 00:00\\"\\n\\nDATETIME_DIFF( {截止时间} , TODAY(),\\"days\\")\\n=> 15","function_today_summary":"返回今天的日期（年月日），但不会精确到时分秒（默认为00:00:00）。如果想要精确到时分秒，请使用函数NOW。\\n\\n可以直接使用此函数返回年月日，见例子一；\\n也可以和DATEADD或DATETIME_DIFF等函数一起使用，比如用{截止时间}减去当前时间，来显示项目的倒计时，见例子二。\\n\\n注意：仅当重新刷新计算公式或刷新表格时，这个函数返回的结果才会更新。","function_tonow_example":"TONOW(\\"2019-08-10\\", \\"y\\")\\n=> 1\\n\\nTONOW({开始日期}, \\"days\\")\\n=> 25","function_tonow_summary":"返回当前日期和指定日期之间的差值（无正负）。\\n\\n【date】是指定日期，即用指定日期减去当前日期，计算两个日期相差的多少天（自定义计时单位），无正负。\\n【units】计时单位，即指定日期与当前日期差值的计算单位，比如按”天“计算也可以转换为按”年“计算。\\n\\n计时单位包括以下符号，两种格式都可以使用：\\n「单位说明符 」→ 「缩写」\\n毫秒：\\"milliseconds\\" → \\"ms\\"\\n秒：\\"seconds\\" → \\"s\\"\\n分钟：\\"minutes\\" → \\"m\\"\\n小时：\\"hours\\" → \\"h\\"\\n天：\\"days\\" → \\"d\\"\\n周：\\"weeks\\" → \\"w\\"\\n月：\\"months\\" → \\"M\\"\\n季度：\\"quarters\\" → \\"Q\\"\\n年：\\"years\\" → \\"y\\"\\n点击下方链接可查看全部计时单位。","function_trim_example":"TRIM(\\" 两边空格会被清除! \\")\\n=>两边空格会被清除!","function_trim_summary":"清除文本开头和结尾的空格。\\n\\n【value】是需要被处理的文本。","function_true_example":"// 判断勾选类型的字段的状态。例如下列 {是否完成} 字段为勾选类型且单元格值为 \\"已勾选\\"时：\\n公式：IF({是否完成} = TRUE(), \\"已完成\\"， \\"未完成\\")\\n运算结果：\\"已完成\\"\\n\\n// TRUE() 和 FALSE() 一起使用输出布尔值。例如下列 {成绩} 字段为数字类型且单元格值为 70 时：\\n公式：IF({成绩} > 60, TRUE(), FALSE())\\n运算结果：true","function_upper_example":"UPPER(\\"Hello!\\")\\n=> HELLO!","function_upper_summary":"将文本中所有小写字符全部转换为大写字符。\\n\\n【string】是被转换的文本。","function_validate_params_count":"${name} 函数需要 ${count} 个参数","function_validate_params_count_at_least":"${name} 函数至少需要 ${count} 个参数","function_value_example":"VALUE(\\"$10000\\")\\n=> 10000","function_value_summary":"将文本字符串转换为数字。\\n\\n【text】表示要转换的文本值。\\n\\n本函数可以将文本内的数字提取出来。","function_view_url":"说明符介绍","function_weekday_example":"WEEKDAY(\\"2020.10.01\\")\\n=>4\\n\\nWEEKDAY(\\"2020.10.01\\", \\"Monday\\")\\n=>3\\n\\nWEEKDAY(TODAY())","function_weekday_summary":"返回指定日期对应一周中的星期几。\\n\\n【date】是指定的日期。\\n【startDayOfWeek】非必填，是一周的开始时间，默认情况下每周从星期日开始（即周日为0）。 你还可以将开始时间设置为\\"Monday\\"(星期一，见例子二)\\n\\n本函数输出值为0到6之间的整数。 ","function_weeknum_example":"WEEKNUM(\\"2020.10.01\\")\\n=>40\\n\\nWEEKNUM(\\"2020.10.01\\", \\"Sunday\\") \\n=>40 \\n\\nWEEKNUM(TODAY())\\n=>33","function_weeknum_summary":"返回指定日期对应为一年中的第几个星期。\\n\\n【date】是指定的日期。\\n【startDayOfWeek】非必填，是一周的开始时间，默认情况下每周从星期日开始（即周日为0）。 你还可以将开始时间设置为\\"Monday\\"(星期一)\\n\\n本函数输出值为整数。比如6，代表该日期属于一年中的第6个星期。","function_workday_diff_example":"WORKDAY_DIFF(\\"2020-10-01\\", \\"2020-10-02\\")\\n=> 2\\n\\nWORKDAY_DIFF(\\"2020-10-02\\", \\"2020-10-01\\")\\n=> -2\\n\\nWORKDAY_DIFF(\\"2020-10-01\\", \\"2020-10-05\\")\\n=> 3\\n\\nWORKDAY_DIFF({产品启动日期}, {产品上线日期} , \\"2020-06-25, 2020-06-26, 2020-06-27\\")\\n=> 100","function_workday_diff_summary":"统计两个日期之间相隔多少个工作日（有正负）。\\n\\n【startDate】起始日期。\\n【endDate】截止日期。如果起始日期比截止日期晚，则会出现负数。\\n【holidays】非必填。是要从工作日历中去除的日期，例如节假日。其输入格式为「yyyy-mm-dd」，多个日期以逗号分隔的。\\n\\n本函数统计起止日期之间的工作日，不包括周末和你指定的特定日期。","function_workday_example":"WORKDAY(\\"2020/10/01\\" , 1)\\n=> 2020/10/02\\n\\nWORKDAY(\\"2020/10/01\\" , 1，\\"2020-10-02\\")\\n=> 2020/10/05\\n\\nWORKDAY({启动日期}, 100, \\"2020-10-01, 2020-10-02, 2020-10-03, 2020-10-04, 2020-10-05, 2020-10-06, 2020-10-07, 2020-10-08\\")\\n=> 2020-11-11","function_workday_summary":"返回起始日期若干个工作日之后的日期。\\n\\n【startDate】是你指定的起始日期。\\n【numDays】是你指定的起始日期之后的工作日天数，用正数表示。比如，数字“1”代表起始日期一个工作日之后的日期，见例子一；\\n【holidays】非必填。是要从日历中去除的特定日期，例如节假日。其输入格式为「yyyy-mm-dd」，多个日期以逗号分隔的，见例子三。\\n\\n本函数的工作日不包括周末和你指定的特定日期。","function_xor_example":"XOR(3>2, 2>3, 4>3)\\n=> false","function_year_example":"YEAR(\\"2020/10/01\\")\\n=> 2020\\n\\nYEAR({毕业时间})\\n=> 2020","function_year_summary":"返回指定日期对应的四位数年份。\\n\\n【date】是指定的日期。","functions":"函数","gabon":"加蓬","gallery_arrange_mode":"排列模式","gallery_img_stretch":"拉伸","gallery_view":"相册视图","gallery_view_copy_record":"复制记录","gallery_view_delete_record":"删除记录","gallery_view_expand_record":"展开记录","gallery_view_insert_left":"向左边插入记录","gallery_view_insert_right":"向右边插入记录","gallery_view_shortcuts":"相册视图快捷键","gambia":"冈比亚","gantt_add_date_time_field":"创建日期","gantt_add_record":"插入任务","gantt_add_task_text":"新增任务","gantt_back_to_now_button":"返回今天","gantt_by_unit_type":"按${unitType}查看","gantt_cant_connect_when_computed_field":"当前设置中的开始和结束日期字段中含有计算字段（不允许用户主动写入值的字段类型），请尝试调整字段后再试。","gantt_check_connection":"查看关联关系","gantt_color_more":"更多颜色","gantt_color_setting":"设置任务条颜色","gantt_config_color_by_custom":"自定义颜色","gantt_config_color_by_single_select":"按单选着色","gantt_config_color_by_single_select_field":"与单选字段的颜色一致","gantt_config_color_by_single_select_pleaseholder":"选择单选字段","gantt_config_color_help":"如何设置","gantt_config_friday":"周五","gantt_config_friday_in_bar":"五","gantt_config_friday_in_select":"周五","gantt_config_monday":"周一","gantt_config_monday_in_bar":"一","gantt_config_monday_in_select":"周一","gantt_config_only_count_workdays":"任务天数统计只计算工作日","gantt_config_saturday":"周六","gantt_config_saturday_in_bar":"六","gantt_config_saturday_in_select":"周六","gantt_config_sunday":"周日","gantt_config_sunday_in_bar":"日","gantt_config_sunday_in_select":"周日","gantt_config_thursday":"周四","gantt_config_thursday_in_bar":"四","gantt_config_thursday_in_select":"周四","gantt_config_tuesday":"周二","gantt_config_tuesday_in_bar":"二","gantt_config_tuesday_in_select":"周二","gantt_config_wednesday":"周三","gantt_config_wednesday_in_bar":"三","gantt_config_wednesday_in_select":"周三","gantt_config_weekdays_range":"${weekday} 至 ${weekday}","gantt_config_workdays_a_week":"自定义一周的工作日","gantt_cycle_connection_warning":"任务依赖关系无效，存在循环关联","gantt_date_form_start_time_year":"YYYY年","gantt_date_form_start_time_year_month":"YYYY年M月","gantt_date_time_setting":"选择开始和结束日期字段","gantt_dependency_setting":"设置依赖关系","gantt_disconnect":"断开连线","gantt_end_field_name":"结束时间","gantt_error_date_tip":"该任务日期设置有误，请展开手动调整日期","gantt_field_config_tip":"该字段未配置","gantt_historical_data_warning":"是否要处理历史数据","gantt_init_fields_button":"创建日期字段","gantt_init_fields_desc":"点击下方按钮会在表格内创建两列日期字段，来生成甘特图","gantt_init_fields_title":"请先创建日期字段","gantt_invalid_fs_dependency_warning":"任务依赖关系无效，后置任务开始日期早于前置任务结束日期","gantt_month":"月","gantt_no_dependency":"不设置依赖关系","gantt_not_allow_link_multuble_records_gantt_warning":"当前依赖关系字段的配置不允许多选记录，请在字段配置中修改后再试","gantt_open_auto_schedule_switch":"任务自动编排","gantt_open_auto_schedule_warning":"是否要根据依赖关系对目前已有的任务进行自动编排？编排后部分后置任务的开始和结束日期会被自动修改","gantt_open_auto_schedule_warning_no":"不修改历史数据","gantt_pick_dates_tips":"请选择日期字段","gantt_pick_end_time":"选择结束日期","gantt_pick_start_time":"选择开始日期","gantt_pick_two_dates_tips":"请选择开始和结束日期字段","gantt_quarter":"季","gantt_set_depedency_field_description":"需要一个关联本表的神奇关联字段，该字段关联前置任务","gantt_set_depedency_field_tips":"请选择依赖关系字段","gantt_setting":"视图设置","gantt_setting_help_tips":"配置教程","gantt_start_field_name":"开始时间","gantt_task":"任务","gantt_task_group_tooltip":"共计 ${count} 个任务","gantt_task_total_date":"共计 ${count} 天","gantt_task_total_workdays":"共计 ${count} 个工作日","gantt_view":"甘特视图","gantt_week":"周","gantt_workdays_setting":"设置工作日","gantt_year":"年","generating_token_value":"生成令牌","generation_fail":"生成失败","generation_success":"生成成功","georgia":"格鲁吉亚","germany":"德国","get_link_person_on_internet":"互联网上获得链接的人","get_verification_code_err_button":"确定","get_verification_code_err_title":"温馨提示","ghana":"加纳","gibraltar":"直布罗陀","give_up_edit":"放弃编辑","global":"常规快捷键","global_earth":"全球","global_search":"全局搜索","global_shortcuts":"常规快捷键","go_login":"去登录","go_to":"前往","go_to_here_now":"立即前往","got_it":"知道了","goto_datasheet_record":"前往源表","government_and_politics":"政府事务","greece":"希腊","greenland":"格陵兰岛","grenada":"格林纳达","grit_keep_sort_disable_drag":"开启了自动排序功能，手动排序功能不可用","group":"分组","group_amount":"${amount} 个分组","group_blank":"[无]","group_by_field":"按下方字段分组","group_field_error_tips":"分组条件出错，请重新设置","group_fields":"按「${field_name}」分组","groups_clubs_hobbies":"兴趣社群","gt_person":"> 5 位","guadeloupe":"瓜德罗普岛","guam":"关岛","guatemala":"瓜地马拉","guests_per_space":"外部访客","guinea":"几内亚","guinea_bissau":"几内亚比绍共和国","guyana":"圭亚那","haiti":"海地","handbook":"产品手册","handed_over_workspace":"新的主管理员所在的团队","heading_five":"五级标题","heading_four":"四级标题","heading_one":"一级标题","heading_six":"六级标题","heading_three":"三级标题","heading_two":"二级标题","health_and_self_improvement":"健康与自我提升","help":"帮助","help_center":"帮助中心","help_resources":"畅游帮助中心","hidden":"折叠","hidden_field_calendar_tips":"日历视图最多显示 10 列","hidden_field_calendar_toast_tips":"无法显示更多列","hidden_field_desc":"不显示列描述","hidden_fields_amount":"${amount} 列隐藏","hidden_graphic_fields_amount":"${amount} 图示隐藏","hidden_groups_by_count":"${count} 分组隐藏","hidden_n_fields":" 隐藏 ${count} 列","hide_all_fields":"隐藏所有","hide_field_tips_in_gantt":"点击即可自定义左侧列表区的显示字段","hide_fields":"隐藏列","hide_fields_not_go":"该列被隐藏，无法前往","hide_graphic_field_tips_in_gantt":"点击即可自定义右侧图形区任务条上的显示字段","hide_kanban_grouping":"隐藏分组","hide_one_field":"隐藏列","hide_one_graphic_field":"隐藏图示","hide_pane":"隐藏面板","highlight":"高亮","hint":"提示","history_view_more":"查看更多历史","history_view_tip":"可查看 ${day} 天的修改历史，","honduras":"洪都拉斯","hong_kong":"中国香港","how_many_seconds":"${seconds} 秒","hr_and_recruiting":"人力资源","hungary":"匈牙利","i_knew_it":"我知道了","iceland":"冰岛","icon_setting":"图标设置","if_it_is_successful":"是否成功","image":"图片","image_limit":"图片大小请保持在 ${number} MB 内","image_uploading":"图片上传中...","import":"导入","import_canceled":"取消导入","import_excel":"从 Excel 导入","import_failed":"导入失败","import_failed_list":"导入失败列表","import_file":"导入文件","import_file_data_succeed":"导出文件数据成功","import_file_outside_limit":"上传文件大小请不要超过 20 MB","import_view_data_succeed":"导出视图数据成功","import_widget":"导入小程序","import_widget_success":"导入小程序成功","improving_info":"完善个人信息","improving_info_tip":"可绑定已有帐号或注册新帐号","include_time":"显示时间","inclusion_plan_button_value":"申请加入计划","income_expenditure_records":"收支记录","india":"印度","indonesia":"印度尼西亚","inform":"举报","init_roles":"财务,市场,IT,人事,法务","initial_size":"原始尺寸","inline_code":"行内代码","input_formula":"请输入公式","insert_above":"上方插入","insert_below":"下方插入","insert_field_above":"向上插入字段","insert_field_after":"向右插入列","insert_field_before":"向左插入列","insert_field_below":"向下插入字段","insert_new_field_below":"向下插入新字段","insert_record":"插入行","insert_record_above":"向上插入行","insert_record_below":"向下插入行","insert_record_left":"向左方插入${record_tip}","insert_record_right":"向右方插入${record_tip}","install_widget":"安装","installation":"安装","integer":"整数（2）","internet":"互联网行业","intrant_space_empty_tip":"你还没有加入任何空间站哦","intrant_space_list":"我受邀的空间站","intro_widget_tips":"什么是小程序？","introduction":"简介","invalid_action_sort_tip":"该字段作为分组项已被设置排序，当前设置的排序不会生效","invalid_field_type":"非法的字段类型","invalid_option_sort_tip":"该字段作为分组项已被设置排序","invitation_link_old":"已创建的邀请链接","invitation_to_join":"邀请加入空间站","invitation_to_join_desc":"与他人在空间站内一起协作","invite_by_qr_code":"二维码邀请","invite_code_tab_mine_way_1_tip":"如果好友还没注册，可以复制下方链接给对方","invite_email_already_exist":"该邮箱已被邀请，无需重复操作","invite_empty_tip":"找不到上述用户，你可以在上方输入他的邮箱邀请他加入当前空间站","invite_exist_mail_failed":"邮箱已存在，不能重复邀请","invite_friends":"邀请成员","invite_invite_title_desc":"被邀请帐号${invitee}，请登录帐号确认加入","invite_member":"邀请成员","invite_member_join":"邀请成员加入","invite_member_toadmin":"<a class=\\"involveMemberArr\\"></a>通过<a class=\\"memberName\\"></a>的邀请加入空间站「<a class=\\"spaceName\\"></a>」","invite_member_tomyself":"<a class=\\"involveMemberArr\\"></a>通过你的邀请加入空间站「<a class=\\"spaceName\\"></a>」","invite_member_touser":"<a class=\\"memberName\\"></a>邀请你加入空间站「<a class=\\"spaceName\\"></a>」","invite_members":"邀请成员","invite_ousider_import_file_tip1":"将文件拖拽到这里或者点击此区域开始导入","invite_ousider_import_file_tip2":"一次最多支持导入500名成员","invite_ousider_import_file_tip3":"支持上传 .xlsx/.csv 文件","invite_ousider_template_click_to_download":"点击下载员工信息模板.xlsx","invite_ousider_template_file_name":"员工信息模板.xlsx","invite_outsider_import_cancel":"取消导入","invite_outsider_invite_btn_tip":"受邀新成员的「工作台」权限当前默认为「可以管理」","invite_outsider_keep_on":"继续邀请","invite_outsider_send_invitation":"发送邀请","invite_qr_code_download":"下载二维码","invite_qr_code_introduction":"扫一扫，快速加入团队","invite_reward":"邀请有礼","invite_success":"邀请成功","invite_team_and_collaborating":"邀请你的团队并开始协作","invite_via_link":"链接邀请","invite_your_join":"邀请您加入","invitee":"被邀请人","inviter":"邀请人","iran":"伊朗","iraq":"伊拉克","ireland":"爱尔兰","is_empty":"为空","is_empty_widget_panel_mobile":"小程序面板暂未添加小程序，请前往 PC 端添加","is_empty_widget_panel_pc":"小程序面板暂未添加小程序","is_not_empty":"不为空","is_repeat":"有重复","is_repeat_disable_tip":"目前已存在一个「有重复」类型的筛选条件，暂不支持添加第二个","israel":"以色列","italic":"斜体","italy":"意大利","ivory_coast":"象牙海岸","jamaica":"牙买加","japan":"日本","join":"提交申请","join_the_community":"加入社群","joined_members":"已激活的成员","jordan":"约旦","journalism_and_publishing":"新闻出版业","jump_link_url":"跳转到关联表","jump_official_website":"返回到官网","just_now":"刚刚","kaban_not_group":"未指定分组","kanban_add_new_group":"增加一个分组","kanban_copy_record_url":"复制该记录的 URL","kanban_exit_member_group":"该成员已作为分组，请重新选择","kanban_group_tip":"按${kanban_field_id}分组","kanban_insert_record_above":"向上插入记录","kanban_insert_record_below":"向下插入记录","kanban_keep_sort_sub_tip":"放入此区域将会自动排序","kanban_keep_sort_tip":"自动排序中","kanban_new_option_group":"未完成,进行中,已完成","kanban_no_data":"暂无数据","kanban_setting_title":"选择或创建一列作为分组条件","kanban_view":"看板视图","kazakhstan":"哈萨克斯坦","keep_sort":"自动排序","kenya":"肯尼亚","key_of_adjective":"的","keybinding_show_keyboard_shortcuts_panel":"快捷键面板","keyboard_shortcuts":"键盘快捷键","kindly_reminder":"温馨提示","kiribati":"基里巴斯","know_more":"了解更多","known":"知道啦","kuwait":"科威特","kyrgyzstan":"吉尔吉斯斯坦","lab":"实验室","label_account":"帐号","label_bind_email":"邮箱绑定","label_format_day":" 日","label_format_day_month_and_year_split_by_slash":"日/月/年","label_format_month":" 月","label_format_month_and_day_split_by_dash":"月-日","label_format_year":"年","label_format_year_and_month_split_by_dash":"年-月","label_format_year_month_and_day_split_by_dash":"年-月-日","label_format_year_month_and_day_split_by_slash":"年/月/日","language_setting":"设置语言","language_setting_tip":"当前设置会影响你登录后查看的所有空间站的语言设置","laos":"老挝","lark_single_record_comment_mentioned":"**维格表: **{nodeName}\\n**记录: **{recordTitle}\\n\\n\\"{commentContent}\\"\\n","lark_single_record_comment_mentioned_title":"**有人在评论中提及你**","last_step":"上一步","last_update_time":"最近修改时间","latvia":"拉脱维亚","layout":"布局","learn_about_us":"了解我们，","lebanon":"黎巴嫩","left":"向左移动一个单元格","legal":"法律","lesotho":"莱索托","levels_per_folder":"文件夹层级限制","liberia":"利比里亚","libya":"利比亚","liechtenstein":"列支敦士登","limit_chart_values":"当前图形分类项过多，仅展示前 300 项数据的图形","line_chart":"折线图","link":"链接","link_common_err":"咦，这好像不是正确的链接～","link_copy_success":"链接复制成功","link_data_error":"关联表的数据错误","link_delete_succeed":"链接删除成功","link_failed":"公开链接已失效，有可能分享者已关闭链接或者管理员已禁止分享","link_failed_after_close_share_link":"关闭后已发布的公开链接将会失效","link_failure":"链接失效","link_input_placeholder":"输入或者粘贴一个链接地址","link_invite":"创建邀请链接","link_other_datasheet":"关联的其他表格的内容","link_permanently_valid":"永久有效","link_to_multi_records":"允许多选记录","link_to_specific_view":"从视图筛选记录","list":"列表","list_how_many_folders_and_files":"${folderNumber} 个文件夹，${fileNumber} 个文件","list_of_attachments":"附件列表","lithuania":"立陶宛","load_tree_failed":"加载树资源失败","loading":"加载中","loading_file":"正在加载文件，请稍等…","local_business":"本地商业","local_data_conflict":"资源在初始化的过程中出现数据错误，请刷新重试","local_drag_upload":"本地上传","lock":"锁定","lock_view":"锁定视图","log_out_succeed":"我们已收到你的申请","logical_functions":"逻辑函数","login":"登录","login_failed":"登录失败","login_frequent_operation_reminder_button":"确定","login_frequent_operation_reminder_title":"温馨提示","login_logo_slogan":"多维表格首创者，面向API的易用低代码平台","login_logo_slogan_mobile":"多维表格首创者","login_register":"登录","login_slogan":"面向API的易用低代码平台","login_status_expired_button":"确定","login_status_expired_content":"当前登录状态已过期，请重新登录。","login_status_expired_title":"温馨提示","login_sub_slogan":"支持 API 的智能多维表格，项目/协作/数据/运营一站式团队工作平台","logo":"Logo","logout":"退出登录","long_time_not_editor":"数据加载中...","lookup":"神奇引用","lookup_and":"和运算","lookup_and_example":"AND(1, 1, 1, 1) => 1 ","lookup_and_summary":"「原样引用」所有值都为真（即全为非空值），则返回真。","lookup_arraycompact":"过滤所有空值","lookup_arraycompact_example":"ARRAYCOMPACT([1, 2, \\"\\", 3, false, \\" \\", null]) => [1, 2, 3, false, \\" \\"]","lookup_arraycompact_summary":"将删除「原样引用」中的空字符串和空值。但是保留“ false”值和空白字符值的字符串。","lookup_arrayjoin":"逗号连接","lookup_arrayjoin_example":"ARRAYJOIN(2020/01/21, 121, apple) => 2020/01/21,121,apple","lookup_arrayjoin_summary":"将「原样引用」的数据连接到一个逗号分隔的字符串中。","lookup_arrayunique":"去重","lookup_arrayunique_example":"ARRAYUNIQUE([1, 2, 3, 3, 1]) => [1, 2, 3]","lookup_arrayunique_summary":"将「原样引用」中的数据去重。","lookup_average":"平均数","lookup_average_example":"AVERAGE(2, 4, 6, 8, 10) => 6","lookup_average_summary":"计算「原样引用」的算术平均数。","lookup_check_info":"当前单元格的数据来自关联表的引用结果，不能编辑","lookup_concatenate":"连接成文本","lookup_concatenate_example":"CONCATENATE(\\"姓名\\", \\"年纪\\", \\"岁\\", 1) => 姓名年纪岁1","lookup_concatenate_summary":"将「原样引用」的数据合并为一个多行文本。","lookup_count":"非空数值计数","lookup_count_example":"COUNT(1, 3, 5, \\"\\", \\"七\\") => 3","lookup_count_summary":"计算「原样引用」中非空「数字」类型。 如果要计算所有记录，请使用COUNTALL。","lookup_counta":"非空值计数","lookup_counta_example":"COUNTA(1, 3, 5, \\"\\", \\"七\\") => 4","lookup_counta_summary":"计算「原样引用」中非空值的数量。这个函数既计算数值，也计算文本值。","lookup_countall":"全计数","lookup_countall_example":"COUNTALL(1, 3, 5, \\"\\", \\"七\\") => 5","lookup_countall_summary":"计算「原样引用」中记录的数量。本引用方式计数所有的值，包括空白记录。","lookup_filter_condition_tip":"列类型被转换过，请重新配置筛选条件","lookup_filter_waring":"本列的筛选列发生了类型转换，请检查。","lookup_link":"选择本表的神奇关联列","lookup_max":"最大值","lookup_max_example":"MAX(1, 3, 5, \\"\\", \\"七\\") => 5, MAX(2020/01/12, 1993/06/08, 2021/12/12, \\"\\", \\"七\\") => 2021/12/12","lookup_max_summary":"返回「原样引用」中的最大值。","lookup_min":"最小值","lookup_min_example":"MIN(1, 3, 5, \\"\\", \\"七\\") => 1, MIN(2020/01/12, 1993/06/08, 2021/12/12, \\"\\", \\"七\\") => 1993/06/08","lookup_min_summary":"返回「原样引用」中的最小值。","lookup_modal_subtitle":"神奇关联列与其它表建立了关联关系","lookup_or":"或运算","lookup_or_example":"OR(1, 0, 1, 1) => 1","lookup_or_summary":"「原样引用」只要有一个值为真，则返回真。","lookup_sum":"总和","lookup_sum_summary":"将「原样引用」的数值相加。","lookup_values":"原样引用","lookup_xor":"异或运算","lookup_xor_example":"XOR(1, 0, 1, 1) => 1","lookup_xor_summary":"「原样引用」当且仅当奇数个值为真，则返回真。","loopkup_filter_pane_tip":"筛选条件选择的列类型变化","lt_person":"≦ 5 位","luxembourg":"卢森堡","macau":"中国澳门","macedonia":"马其顿","madagascar":"马达加斯加","mail":"邮箱","mail_invite_fail":"邀请成员失败","mail_invite_success":"邀请成员成功","main_admin_name":"主管理员名称","main_contain":"主要包含内容","malawi":"马拉维","malaysia":"马来西亚","maldives":"马尔代夫","mali":"马里","malta":"马耳他","managable_space_empty_tip":"这里好空啊~先创建一个空间站试试吧","managable_space_list":"我管理的空间站","manage_members":"成员设置","manage_role_empty_btn":"开始使用","manage_role_empty_desc1":"你可以自由创建角色，并将任意部门/成员添加到一个或多个角色内。<a target=\\"_blank\\" href=\\"${url}\\">帮助文档</a>","manage_role_empty_desc2":"例如：你可以创建一个“项目经理”的角色，把组织架构中项目经理岗位的成员都添加进去，这样就可以实现在成员列或者在记录的评论中直接选择“项目经理”这个角色并通知到他们了","manage_role_empty_title":"欢迎使用角色","manage_role_header_desc":"你可以自由创建角色，并将任意部门/成员添加到一个或多个角色内。<a target=\\"_blank\\" href=\\"${url}\\">帮助文档</a>","manage_team":"小组设置","manage_template_center":"模板中心管理","manage_widget_center":"小程序中心管理","manage_workbench":"工作台设置","manual_save_view":"保存所有修改","manual_save_view_error":"哎呀，数据同步出了点问题，麻烦刷新一下","manufacturing":"制造业","map_select_data":"选择一个视图来读取地理位置","map_select_label_field":"选择一个字段作为地址名称","map_select_location_field":"选择一个包含地址或者经纬度的字段","map_select_location_type":"切换地址的数据类型","map_select_location_type_dd":"经纬度坐标","map_select_location_type_text":"详细地址","map_select_location_type_url":"数据类型说明","map_setting":"地图配置","mark_all_as_processed":"一键处理","mark_notification_as_processed":"处理","marketing":"市场营销","marketing_and_sales":"市场销售","marketplace_app_disable_succeed":" 停用成功","marketplace_app_enable_succeed":" 启用成功","martinique":"马提尼克","massive_template":"海量模板，前往体验","matters_needing_attention":"注意事项","mauritania":"毛里塔尼亚","mauritius":"毛里求斯","max_record_num_per_dst":"当前支持的单表上限为 5w 行","max_records":"记录数上限：${count}条","max_value":"最大值","maximum_concurrent_volume":"空间站每秒最大并发量","maybe_later":"跳过","mayotte":"马约特","mbile_manual_setting_tip":"你修改的视图配置仅会对自己临时生效","media_element":"媒体元素","member":"成员","member_data_desc_of_dept_number":"组织架构中所有小组的数量统计，包括子小组。","member_data_desc_of_field_number":"工作目录中所有文件（表格、仪表盘、神奇表单、镜像）的数量统计","member_data_desc_of_member_number":"通讯录中“已加入”和“未加入”成员的数量合计","member_err":"昵称不能超过32个字","member_family_name":"成员姓名","member_info":"成员数据","member_information_configuration":"成员信息","member_list_review":"预览成员列表","member_name":"成员昵称","member_not_exist":"成员不存在","member_per_space":"空间站成员","member_preview_list":"预览成员列表","member_quit_space":"<a class=\\"memberName\\"></a>退出空间站「<a class=\\"spaceName\\"></a>」","member_status_removed":"已退出","members_setting":"成员与小组","mention":"提及","menu_copy_record_url":"复制该${recordShowName} URL","menu_delete_multi_records":"删除这 ${count} ${unit}${recordShowName}","menu_delete_record":"删除${recordShowName}","menu_duplicate_record":"复制${recordShowName}","menu_expand_record":"展开${recordShowName}","menu_insert_record":"向${direction}插入${recordShowName}","menu_insert_record_above":"向上插入${lineCount}行","menu_insert_record_below":"向下插入${lineCount}行","message_bind_email_succeed":"邮箱绑定成功","message_call_sharing_function_with_browser":"请调用浏览器的分享功能","message_coping":"正在粘贴...","message_copy_failed":"粘贴失败","message_copy_failed_reasoned_by_wrong_type":"粘贴的内容无法填入该类型单元格","message_copy_link_successfully":"复制成功","message_copy_succeed":"粘贴成功","message_delete_template_successfully":"删除模板成功","message_display_count":"${count}条新消息","message_exit_space_failed":"退出空间失败","message_exit_space_successfully":"退出空间成功","message_file_size_out_of_upperbound":"单个文件的大小不能超过1G","message_get_node_share_setting_failed":"获取节点分享设置失败","message_hidden_field_desc":"已取消显示列描述","message_img_size_limit":"图片请勿超过${size}","message_invalid_url":"无效的地址","message_member_name_modified_failed":"站内昵称修改失败","message_member_name_modified_successfully":"站内昵称修改成功","message_node_data_sync_failed":"节点数据同步失败","message_preparing_to_download":"正在准备下载资源...","message_send_invitation_email_to_member":"已成功向 ${invitedCount} 名成员发送邮件邀请","message_shown_field_desc":"已显示列描述","message_upload_img_failed":"上传图片失败","mexico":"墨西哥","miniprogram_code_fail":"小程序码失效\\n请点击刷新","minute":"分钟","minutes_of_count":"${count}分钟前","mirror":"镜像","mirror_editor_label":"在「只可更新」基础上，还可以删除记录和增删视图","mirror_from":"镜像来自：","mirror_manager_label":"在「可以编辑」基础上，还可以删除和配置镜像","mirror_reader_label":"只可查看该镜像内容或进行评论","mirror_resource_dst_been_deleted":"生成当前镜像的原表已被删除，无法继续访问","mirror_resource_view_been_deleted":"生成该镜像的视图已被删除，无法访问镜像","mirror_show_hidden_checkbox":"镜像中允许查看隐藏字段","mirror_uploader_label":"在「只可阅读」基础上，还可以新增和编辑记录","mobile_space_list_tip":"更多「空间站管理」的功能请前往电脑网页端操作","modal_normal_err_text":"错误信息，可不传","modal_normal_title":"普通操作框","modal_res_title":"结果提示框","modal_restore_space":"恢复成功后，该空间站所有的数据将恢复到被删除前的状态","modal_select_title":"选择模态窗","modal_sub_title":"我是子标题","modal_title":"模态窗","modal_title_bind_email":"绑定新邮箱","modal_title_modify_nickname":"修改昵称","modify":"修改","modify_field":"修改列名称/列类型","moldova":"摩尔多瓦","monaco":"摩纳哥","mongolia":"蒙古","montenegro":"黑山","month":"月","month_day":"月-日","montserrat":"蒙特塞拉特岛","more_color":"更多颜色","more_data_to_come":"更多数据敬请期待……","more_invite_ways":"更多邀请方式","more_login_mode":"其他登录/注册方式","more_member_count":"+ ${count}","more_template":"更多模板","more_tips":"更多详情","more_widget":"更多小程序","morocco":"摩洛哥","move":"移动","move_favorite_node_fail":"移动节点失败，系统将会自动更新列表","move_node_modal_content":"移动后，文件的可见性可能会受到上级文件夹的影响","move_to":"移动至","move_to_error_equal_parent":"文件已在当前文件夹下方，请选择其他文件夹","move_to_modal_title":"将「${name}」移动至当前文件夹下","move_to_success":"移动成功","mozambique":"莫桑比克","multilingual_mail":"中英文邮件","must_one_date":"至少选择一个日期字段","myanmar":"缅甸","name":"名称","name_length_err":"名称要求 1~100 字符以内","name_not_rule":"名称包含特殊字符\\"/ \\\\ : ? * [ ]\\"","name_repeat":"名称重复","namibia":"纳米比亚","nav_me":"我的","nav_space_settings":"空间站管理","nav_team":"通讯录","nav_templates":"模板中心","nav_workbench":"工作台","nepal":"尼泊尔","netherlands":"荷兰","network_icon_hover_connected":"网络已连接","network_icon_hover_data_synchronization":"数据同步中...","network_icon_hover_disconnected":"网络异常","network_icon_hover_reconnection":"重新连接中...","network_state_disconnection":"网络状态异常","new_a_line":"Shift+Enter 换行","new_caledonia":"新喀里多尼亚","new_folder":"新建文件夹","new_from_template":"从模板创建","new_mian_admin":"新的主管理员","new_mirror":"新建镜像方式","new_something":"新建","new_space":"新建空间站","new_space_is_unactived":"你的空间站数量已达10个上限。当前受邀的空间站将处于未激活状态，且暂时无法访问。","new_space_tips":" ","new_view":"创建视图","new_zealand":"新西兰","next_page":"下一页","next_record":"卡片翻到下一条记录","next_record_plain":"下一条记录","next_record_tips":"下一条记录 (${next_record})","next_step":"下一步","nicaragua":"尼加拉瓜","nickname":"昵称","nickname_in_space":"空间站内的昵称 ","nickname_in_space_short":"站内昵称","nickname_modified_successfully":"昵称修改成功","niger":"尼日尔","nigeria":"尼日利亚","no_access_node":"你访问的文件已经被隐藏","no_access_record":"无权访问","no_access_space_descirption":"无法访问该空间站，可能是因为你无权访问或者该空间站不存在🤒","no_access_space_title":"温馨提示","no_access_view":"无权访问对应的表格和视图","no_and_thanks":"不用了，谢谢","no_comment_tip":"当前记录没有动态","no_cover":"无封面","no_data":"暂无数据","no_foreignDstId":"请选择关联表","no_lookup_field":"请设置需要查询的字段","no_match_tip":"抱歉，我们没有找到您查找的网页。","no_more":"已经到底","no_next_record_tips":"没有下一条记录","no_notification":"暂无通知","no_numerical_field":"无数值类的字段","No_open_functionality":"暂未开放","no_option":"暂无选项","no_previous_record_tips":"没有上一条记录","no_sapce_save":"暂无可转存的空间站","no_search_field":"没有找到包含「${keyword}」的字段","no_search_result":"暂无搜索结果","no_selected_record":"暂无已选记录","no_support_pc_desc":"诶呦抱歉，暂不支持当前浏览器~","no_support_pc_sub_desc":"推荐使用以下四款浏览器：Chrome（谷歌）、Firefox（火狐）、Safari 、Microsoft Edge。","no_view_find":"暂无查找结果","node_info":"文件信息","node_info_created_time":"创建时间：","node_info_createdby":"创建人：","node_info_last_modified_by":"最近修改人：","node_info_last_modified_time":"最近修改时间：","node_name":"文件（夹）名称","node_not_exist_content":"您访问的文件无权限或者已被删除","node_not_exist_title":"温馨提示","node_number_err_content":"你所在的空间站超出了 1000 个文件数量上限，本次新建操作无效","node_permission":"文件权限","nodes_per_space":"文件数量","nonprofit":"非盈利组织","nonprofits_and_volunteering":"非营利机构和志愿者","nonsupport_video":"抱歉，您的浏览器不支持内嵌视频","norway":"挪威","not_available":"暂无","not_equal":"不等于","not_found_field_the_name_as":"未找到名称为“${value}”的字段","not_found_record_contains_value":"没有找到包含“${searchValueSpan}”的记录","not_found_this_file":"找不到你想访问的文件","not_joined_members":"未激活的成员","not_mail_invitee_page_tip":"当前登录帐号非被邀请的帐号（${text}），<br/>请选择对应的帐号进入空间站","not_shared":"未开启分享","not_shared_tip":"开启后，空间站外的用户可以通过公开链接查看你分享的内容","not_support_yet":"暂不支持","notes_delete_the_view_linked_to_form":"当前视图下生成了神奇表单，继续删除将会使对应的神奇表单失效，确定要删除视图「${view_name}」吗？","notes_delete_the_view_linked_to_mirror":"当前视图下生成了镜像，继续删除将会使对应的镜像失效，确定要删除视图「${view_name}」吗？","notification_center":"通知中心","notification_center_tab_all":"全部 (${count} )","notification_center_tab_comment":"评论被 @ (${count} )","notification_center_tab_member_field":"记录被 @ (${count} )","notification_center_tab_unread":"未处理 (${count} )","notification_delete_record_by_count":"已删除 ${count} 条记录","notification_record_mention":"${user}在${record}提及了你","notification_space_name_changed":"空间站「<a class=\\"oldSpaceName\\"></a>」的名称变更为「<a class=\\"newSpaceName\\"></a>」","notify_time_zone_change_desc":"已更新时区为 ${time_zone}","notify_time_zone_change_title":"检测到当前时区已更新","notify_type_datasheet":"表格通知","notify_type_member":"成员通知","notify_type_node":"节点通知","notify_type_space":"空间通知","notify_type_system":"系统通知","null":"[空]","number_cell_input_tips":"数字单元格内只允许输入数字、小数点、负号和 e","number_field_configuration_symbol":"自定义单位","number_field_format":"精度","number_field_symbol_placeholder":"请输入单位名称","number_of_records":"${number}${span}","number_of_records_unit":"条","number_of_rows":"行数","number_of_something":"${count}${span}","number_of_something_unit":"个","number_of_team":"现有小组数","numeric_functions":"数值函数","nvc_err_300":"哎呀，出错了，点击<a href=\\"javascript:__nc.reset()\\">刷新</a>再来一次","nvc_err_network":"网络不给力，请<a href=\\"javascript:__nc.reset()\\">点击刷新</a>","nvc_start_text":"请按住滑块，拖动到最右边","official_adjustment":"官方调整","official_template":"官方模板","official_website":"官网","official_website_without_abbr":"官方网站","okay":"好的","old_user_turn_to_home":"已有帐号？<a href=\\"/login\\">去登录</a>","oman":"阿曼","online_custome_service":"在线客服","online_edition":"在线版","online_video_training":"在线视频培训","open":"开启","open_api_panel":"打开 API 示例面板","open_failed":"查看失败","open_in_new_tab":"新标签页打开","open_keyboard_shortcuts_panel":"打开快捷键面板","open_public_link":"打开公开链接","open_quickgo_panel":"打开工作台的搜索栏","open_share_edit":"开启分享可编辑","open_view_filter":"打开筛选工具","open_view_group":"打开分组工具","open_view_hidden":"打开隐藏列工具","open_view_sort":"打开排序工具","open_view_sync_tip":"开启视图配置协同","open_workbench":"打开工作目录","operate":"操作","operate_fail":"操作失败","operate_info":"操作提示","operate_success":"操作成功","operate_warning":"操作警告","operated":"操作了","operation":"操作","operation_log_allow_other_save":"开启了允许他人转存","operation_log_closed_share":"关闭了分享","operation_log_not_allow_other_save":"关闭了允许他人转存","operation_log_open_share":"开启了分享","operation_log_update_share":"更新了分享链接","operations":"运营","operator_and":"并且","operator_or":"或者","option_configuration_basic_palette":"基础色板","option_configuration_limited_time_free":"限免","option_name_repeat":"选项名称重复","or":"或","ordered_list":"有序列表","ordinary_members":"普通成员","ordinary_members_setting":"普通成员设置","org_chart_can_not_drop":"不能拖拽到该记录卡片","org_chart_choose_a_link_field":"选择作为子级的关联列","org_chart_choose_a_self_link_field":"只能选择关联本表的神奇关联列","org_chart_collapse_node":"收起下方记录卡片","org_chart_collapse_node_disabled":"不能执行该操作","org_chart_controls_close_menu":"关闭待处理记录列表","org_chart_controls_fit_view":"自适应页面","org_chart_controls_open_menu":"打开待处理记录列表","org_chart_controls_toggle_full":"全屏查看","org_chart_controls_zoom_in":"放大","org_chart_controls_zoom_out":" 缩小","org_chart_controls_zoom_reset":"点击可快速缩放至 100%","org_chart_copy_record_url":"复制该记录卡片的 URL","org_chart_create_a_node_copy":"创建记录卡片的副本","org_chart_create_a_node_copy_disabled":"不能执行该操作","org_chart_cycle_button_tip":"点击以断开记录之间的循环关联","org_chart_del_link_relationship":"删除连接","org_chart_delete_disabled":"不能执行该操作","org_chart_drag_clear_link":"拖动至待处理记录区将会清除原有的关联关系","org_chart_err_head":"架构视图无法继续渲染","org_chart_err_title":"这些记录产生了循环关系，这种情况下架构视图无法继续渲染，请修改","org_chart_expand_node":"展示下方记录卡片","org_chart_expand_record":"展开记录卡片","org_chart_init_fields_button":"创建「神奇关联」列","org_chart_init_fields_desc":"该列内的关联记录都会成为当前记录的子级（即下级）","org_chart_init_fields_title":"你需要一个关联列去确定层级关系","org_chart_insert_into_child":"向下方插入记录卡片","org_chart_insert_into_child_disabled":"不能执行该操作","org_chart_insert_into_parent":"向上方插入记录卡片","org_chart_insert_into_parent_disabled":"不能执行该操作","org_chart_layout_horizontal":"横向布局","org_chart_must_have_a_link_field":"选择一个关联本表的神奇关联列","org_chart_pick_link_field":"选择神奇关联","org_chart_please_click_button_to_create_a_node":"当前表格暂无记录，点击下方按钮快速创建","org_chart_please_drag_a_node_into_canvas":"请从右侧拖动一条记录至图形区以生成第一个记录卡片","org_chart_please_drag_a_node_into_canvas_if_list_closed":"打开记录列表，从右侧拖动一条记录至图形区以生成第一个记录卡片","org_chart_record_list":"待处理记录","org_chart_setting":"视图设置","org_chart_setting_field_deleted":"关联列被删除","org_chart_setting_field_invalid":"该神奇关联字段配置不可用，请选择或创建新的神奇关联","org_chart_tip_drag_node_insert":"松开鼠标节点「${dragRecordName}」将插入到节点「${targetRecordName}」的${direction}","org_chart_tip_drag_node_merge":"松开鼠标节点「${dragRecordName}」将成为节点「${targetRecordName}」的子节点","org_chart_view":" 架构视图","organization_and_role":"组织架构","other_equitys":"其他权益","other_invitation_rule":"其他方式邀请成员","other_login":"其他登录","other_views":"高级视图","owner":"${node_type}管理员","page_not_found_tip":"抱歉，我们没有找到您查找的网页。","page_timeout":"页面已超时，请刷新","page_to_down_edge":"滚动到页面底部","page_to_up_edge":"滚动到页面顶部","pakistan":"巴基斯坦","palau":"帕劳","palestine":"巴勒斯坦","panama":"巴拿马","papua_new_guinea":"巴布亚新几内亚","paragraph":"正文","paraguay":"巴拉圭","partner":"分享者","paste":"粘贴","paste_attachment":" ${keyboardShortcut} 粘贴图片","paste_attachment_error":"请粘贴在附件类型的单元格内","paste_cell_data":"粘贴","paste_tip_add_field":"该粘贴操作会在表格中新增列，确定执行吗","paste_tip_for_add_record":"该粘贴操作会在表格中新增行，确定执行吗?","paste_tip_for_add_record_field":"该粘贴操作会在表格中新增列和行，确定执行吗?","paste_upload":"粘贴上传","path":"原路径","pending_invite":"待邀请","people":"人","percent_bar_chart":"百分比条形图","percent_cell_input_tips":"百分比单元格只允许输入数字格式的内容","percent_column_chart":"百分比柱状图","percent_line_chart":"百分比折线图","percent_stacked_bar_chart":"百分比堆叠条形图","percent_stacked_by_field":"按下方字段百分比堆叠","percent_stacked_column_chart":"百分比堆叠柱状图","percent_stacked_line_chart":"百分比堆叠折线图","permission_template_visitor":"体验中","permisson_model_field_owner":"列管理员","person":"人","person_of_rest":"剩余成员数：${count}人","person_upper_bound":"成员数上限：${maxMemberNumber}人","personal":"个人","personal_info":"个人信息","personal_invitation_code_desc1":"进入空间站并点击左下方头像可以看到${text}","personal_nickname":"个人昵称","personalized_setting":"个性化","personalized_setting_tip":"请根据个人喜好选择合适的设置项，以下设置仅对自己的帐号生效。","peru":"秘鲁","philippines":"菲律宾","pick_one_option":"请选择一个选项","pie_chart":"饼状图","placeholder_add_record_default_complete":"新增记录时默认填写该值","placeholder_choose_group":"请选择小组","placeholder_enter_here":"在这里输入","placeholder_enter_your_description":"请输入描述","placeholder_input":"请输入","placeholder_input_email":"请输入邮箱地址","placeholder_input_member_email":"在这里输入邮箱","placeholder_input_member_name":"输入成员昵称","placeholder_input_new_nickname":"请输入新的昵称","placeholder_input_nickname_with_rules":"请输入 ${minCount}-${maxCount} 字的昵称","placeholder_input_password":"请输入密码","placeholder_input_team_name":"请输入小组名称","placeholder_input_workspace_name":"请输入空间站名称","placeholder_input_workspace_new_name":"请输入新的空间站名称（${minCount}~${maxCount}个字）","placeholder_modal_normal":"aaa文字溢出会气泡显示","placeholder_search_team":"搜索小组","placeholder_select_report_reason":"请选择举报的原因","platform_synchronization":"全平台同步","player_contact_us_confirm_btn":"已完成添加","player_step_ui_config_165":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2023/03/16/8374ca1295664675bd1155b077555113\\",\\n    \\"readMoreUrl\\": \\"https://help.vika.cn/changelog/23-03-16-updates\\",\\n    \\"children\\": \\"<h3>🚀 新功能介绍</h3>\\\\n<ul><li>镜像功能再次升级，可禁止查看已隐藏的字段</li><li>个人设置追加时区信息，日期字段可指定时区</li><li>「全局搜索」优化，新增搜索结果分类</li><li>神奇表单支持隐藏官方标识</li><li>API 性能优化，大幅提高请求速度</li></ul>\\"\\n}","player_step_ui_config_166":"{\\n  \\"title\\": \\"现在订阅 Pro 方案，立享 5 折！\\",\\n  \\"description\\": \\"只需要简单几步升级到 APITable Pro，你就可以享受低至五折的早鸟优惠价\\",\\n  \\"listHeader\\": \\"升级权益：\\",\\n  \\"listContent\\": [\\n    \\"空间站记录总数上限提高至 2,000,000 行\\",\\n    \\"空间站附件容量数提高至 140 GB\\",\\n    \\"支持调用所有高级 API\\"\\n  ],\\n  \\"listFooter\\": \\"更多权益\\",\\n  \\"url\\": \\"https://apitable.com/pricing/\\"\\n}","player_step_ui_config_167":"{\\n  \\"config\\": [\\n    {\\n      \\"key\\": 1,\\n      \\"name\\": \\"answer1\\",\\n      \\"title\\": \\"您希望通过 APITable 解决哪些问题？\\",\\n      \\"type\\": \\"multiButton\\",\\n      \\"answers\\": [\\n        \\"IT 运维支持\\",\\n        \\"教育\\",\\n        \\"项目管理\\",\\n        \\"市场营销\\",\\n        \\"产品管理\\",\\n        \\"招聘管理\\",\\n        \\"运营\\",\\n        \\"金融财务\\",\\n        \\"销售 & 客户管理\\",\\n        \\"软件开发\\",\\n        \\"人力资源 & 合规\\",\\n        \\"设计 & 创意\\",\\n        \\"非盈利组织\\",\\n        \\"制造业\\",\\n        \\"其他\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 2,\\n      \\"name\\": \\"answer2\\",\\n      \\"title\\": \\"您的工作岗位是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"企业主\\",\\n        \\"团队负责人\\",\\n        \\"团队成员\\",\\n        \\"自由职业者\\",\\n        \\"主管\\",\\n        \\"高管层\\",\\n        \\"副总裁\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 3,\\n      \\"name\\": \\"answer3\\",\\n      \\"title\\": \\"您的团队规模是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"只有我\\",\\n        \\"2-5\\",\\n        \\"6-10\\",\\n        \\"11-15\\",\\n        \\"16-25\\",\\n        \\"25-50\\",\\n        \\"51-100\\",\\n        \\"101-500\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 4,\\n      \\"name\\": \\"answer4\\",\\n      \\"title\\": \\"您的公司规模是？\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"1-19\\",\\n        \\"20-49\\",\\n        \\"50-99\\",\\n        \\"100-250\\",\\n        \\"251-500\\",\\n        \\"501-1500\\",\\n        \\"1500+\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 5,\\n      \\"name\\": \\"answer5\\",\\n      \\"title\\": \\"您从哪种途径了解到我们？\\",\\n      \\"type\\": \\"checkbox\\",\\n      \\"answers\\": [\\n        \\"搜索引擎\\",\\n        \\"YouTube\\",\\n        \\"Product Hunt\\",\\n        \\"Github\\",\\n        \\"推特\\",\\n        \\"领英\\",\\n        \\"朋友推荐\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 6,\\n      \\"name\\": \\"answer6\\",\\n      \\"title\\": \\"加入我们的Discord社区，和全世界 APITable 的使用者一起讨论使用心得吧！在使用过程中如果遇到任何问题，可以随时在社区获得解答和帮助。\\",\\n      \\"type\\": \\"joinUs\\",\\n      \\"url\\": \\"https://discord.gg/2UXAbDTJTX\\",\\n      \\"confirmText\\": \\"加入社区\\",\\n      \\"skipText\\": \\"跳过\\",\\n      \\"submit\\": true\\n    }\\n  ]\\n}","player_step_ui_config_168":"{\\n\\"templateKey\\":\\"createMirrorTip\\"\\n}","please":"请","please_check":"请检查","please_choose":"请选择","please_contact_admin_if_you_have_any_problem":"如有问题请联系空间站管理员","please_download_to_view_locally":"建议下载至本地查看","please_note":"温馨提示","please_read_carefully":"请仔细阅读","please_select_org":"请选择小组","plus_edition":"Plus","png":"PNG 图片","poc_sync_members":"通过组织架构添加人员","poland":"波兰","portugal":"葡萄牙","pr_and_communications":"传播与公共关系","precision":"精度","press_again_to_exit":"再次点击退出!","preview":"预览","preview_cannot_preview":"文件类型无法预览","preview_click_reset_image_size":"点击回到原始尺寸","preview_copy_attach_url":"复制附件 URL","preview_copy_attach_url_succeed":"附件地址复制成功","preview_doc_type_attachment_loading":"正在加载中，请耐心等待","preview_fail_title":"预览失败","preview_form_title":"神奇表单","preview_form_title_desc":"基于所选视图生成的预览","preview_not_support_video_codecs":"当前仅支持预览编码为H.264的MP4视频","preview_revision":"预览此版本","preview_the_image_not_support_yet":"当前格式图片暂不支持预览","preview_widget":"预览小程序","previous_month":"上月","previous_page":"上一页","previous_record":"卡片翻到上一条记录","previous_record_plain":"上一条记录","previous_record_tips":"上一条记录 (${previous_record})","previous_week":"上周","price_bottom_secction_desc":"让普通人都能随意 DIY 出业务软件系统​的黑科技","primary":"主要","primary_admin":"主管理员","primary_admin_email":"主管理员邮箱","primary_admin_new_nickname":"新的主管理员昵称","primary_admin_nickname":"主管理员昵称","pro_edition":"Pro","process":"处理","processed":"已处理","product_design_and_ux":"产品设计与交互","product_roadmap":"产品路线图","products_and_consumer_reviews":"产品和消费评论","profession":"专业版","professional":"专业","project_management":"项目管理","proportion":"占比","Public_Beta_Period":"公测期","public_cloud":"公有云","public_link":"公开链接","public_link_desc":"任何人可见的链接","publish_link_tip":"发布一个所有人都可见的链接","publish_share_link_with_anyone":"通过公开链接分享内容给他人","publishing":"出版业","puerto_rico":"波多黎各","put_away_record_comments":"折叠记录评论面板","put_away_record_history":"折叠修改历史面板","qatar":"卡塔尔","QR_code_invalid":"二维码已失效","quick_close_public_link":"快速关闭公开链接","quick_free_trial":"立即开启免费体验","quick_import_widget":"快速导入已有的小程序","quick_login":"快捷登录方式","quick_login_bind":"快速安全<%= type %> ","quick_search_intro":"输入关键词可快速找到相关搜索结果。点击分类项可过滤文件类型，包括维格表、文件夹、神奇表单、镜像和仪表盘","quick_search_loading":"正在搜索...","quick_search_not_found":"我们找不到你要搜索的内容","quick_search_placeholder":"搜索文件","quick_search_shortcut_esc":"关闭窗口","quick_search_shortcut_open":"打开","quick_search_shortcut_select":"选择","quick_search_shortcut_tab":"使用 Tab 键可切换筛选项","quick_search_title":"全局搜索","quick_tour":"快速教程","quickly_create_space":"快速创建空间站","quit_space":"退出空间站","quote":"引用","rating":"评分","re_typing_email_err":"该邮箱好像输入重复了～","reach_dashboard_installed_limit":"仪表盘最多允许安装 ${count} 个小程序","reach_limit_installed_widget":"小程序安装数量已达到上限30个","real_estate":"房地产","rebuild_token_value":"重新生成令牌","receive_new_folder":"收到一个新文件夹","received_a_new_doc":"收到一个新文档","recent_installed_widget":"最近添加的小程序（${count} 个）","recently_used_files":"最近访问的文件夹","recommend":"推荐","reconciled_data":"正在核对数据……","record":"记录","record_activity_experience_tips":"可查看  ${day}  天的修改历史","record_comment":"仅评论","record_comments":"评论","record_fail_data":"数据已失效","record_filter_tips":"此记录已被筛选条件过滤","record_functions":"记录（行）函数","record_history":"仅修改历史","record_history_title":"修改历史","record_pre_filtered":"此记录已被筛选过滤，点击本记录以外区域它将被隐藏","record_pre_move":"此记录不属于当前位置，点击本记录以外区域它将被移动","record_unnamed":"未命名记录","records_of_count":"${count} 条记录","records_per_space":"空间站总行数","recover_node":"恢复文件（夹）","recover_node_fail":"恢复文件（夹）失败","recover_node_success":"恢复文件（夹）成功","redo":"重做","refresh":"刷新","refresh_manually":"刷新","register_immediately":"立即注册","register_means_to_agree":"注册即代表同意","register_regulations":"/service-agreement/","register_time":"注册时间","registration_completed":"完成注册","reject":"拒绝","rejected":"已拒绝","reload_page_later_msg":"同步成功，5秒后页面将自动刷新","remain":"剩余：","remain_capacity":"剩余容量","remaining_records":"剩余记录数：${count}条","remaining_time":"剩余时间","remarks":"备注","remove":"移除","remove_cover":"移除封面","remove_favorite":"取消星标","remove_from_group":"<a class=\\"memberName\\"></a>将你移出空间站「<a class=\\"spaceName\\"></a>」的「<a class=\\"teamName\\"></a>」小组","remove_from_role":"<a class=\\"memberName\\"></a>将你移出空间站「<a class=\\"spaceName\\"></a>」的「<a class=\\"roleName\\"></a>」小组","remove_from_space":"移出空间","remove_from_space_confirm_tip":"确认是否将该成员彻底移出此空间","remove_from_team":"移出小组","remove_from_team_confirm_tip":"确认是否将该成员移出此小组","remove_from_the_team":"移出小组","remove_member_fail":"移除成员失败","remove_member_from_space_confirm_content":"将选中的人员从组织架构彻底移除？","remove_member_from_space_or_team_select_content":"将选中的人员从本小组移除还是从组织架构彻底移除？","remove_member_in_sub_team_err":"该成员属于当前小组的下级小组，请在其所属小组移除。","remove_member_success":"移除成员成功","remove_members_button":"彻底移除","remove_members_content":"将选中的成员从组织架构彻底移除？","remove_members_title":"移除成员","removed_member_tomyself":"<a class=\\"involveMemberArr\\"></a> 被你移出空间站「<a class=\\"spaceName\\"></a>」","rename":"重命名","rename_role_success_message":"角色重命名成功","rename_role_title":"修改名称","rename_team":"重命名小组","rename_team_fail":"重命名小组失败","rename_team_success":"重命名小组成功","rename_view":"重命名视图","render_normal":"常规模式","render_prompt":"渲染优化","reopen":"重新打开","report_issues":"反馈问题","report_issues_github_url":"https://github.com/apitable/apitable/issues","report_success_tip":"举报成功","republic_of_the_congo":"刚果共和国","request":"API 请求","request_in_api_panel":"在线调试","request_in_api_panel_body_warning":"由于本表示例请求数据较多，无法自动带入 Body 参数跳转调试，跳转后需手动填写，是否继续？","request_in_api_panel_curl":"调试","request_tree_node_error_tips":"请求失败，请点击重试","require_login_tip":"需要登录后才能进行此操作哦","reselect":"重新选择","reset":"重置","reset_password_via_emai_failed":"发送失败：${error_message}","reset_password_via_emai_success":"发送成功","reset_password_via_email":"通过电子邮件重置密码","resource_load_failed":"资源加载失败，请刷新后再试","response_status_code":"响应状态码","response_status_code_desc":"响应状态码描述","rest":"剩余","rest_consumption":"剩余用量：${count} 次","rest_storage":"剩余空间站容量：${memory}","restore":"取消归档","restore_space":"恢复空间站","restore_space_confirm_delete":"此空间站将正式删除","restore_success":"还原成功","retail":"零售业","reunion_island":"留尼汪","right":"向右移动一个单元格","robot":"机器人","robot_action_config":"操作配置","robot_action_delete":"删除操作","robot_action_delete_confirm_desc":"该操作可能会造成机器人无法运行，确定删除吗？","robot_action_delete_confirm_title":"删除操作","robot_action_send_web_request_add_formdata_button":"添加键值对","robot_action_send_web_request_add_header_button":"添加","robot_action_send_web_request_body_formdata":"form-data","robot_action_send_web_request_body_formdata_desc":"通过请求体发送一段 form-data 键值对（输入英文斜杠「/」可插入变量）","robot_action_send_web_request_body_json":"JSON","robot_action_send_web_request_body_json_desc":"通过请求体发送一段 JSON 文本（输入英文斜杠「/」可插入变量）","robot_action_send_web_request_body_raw":"raw","robot_action_send_web_request_body_raw_desc":"通过请求体发送一段 raw 文本（输入英文斜杠「/」可插入变量）","robot_action_send_web_request_body_text":"Text","robot_action_send_web_request_config_1":"请求方法","robot_action_send_web_request_config_1_desc":"通过 GET 或 POST 等方式向指定地址发送网络请求","robot_action_send_web_request_config_2":"请求地址","robot_action_send_web_request_config_2_desc":"输入一个地址，机器人将向其发送网络请求","robot_action_send_web_request_config_3":"请求头","robot_action_send_web_request_config_3_desc":"在请求头中可以添加多个键值对","robot_action_send_web_request_config_4":"请求体","robot_action_send_web_request_desc":"机器人开始运行后，会自动向指定地址发送网络请求","robot_action_send_web_request_method_1":"GET","robot_action_send_web_request_method_2":"POST","robot_action_send_web_request_method_3":"PATCH","robot_action_send_web_request_method_4":"DELETE","robot_action_send_web_request_title":"发送网络请求","robot_action_type":"操作类型","robot_auto_desc":"机器人描述：","robot_cancel_save_step_button":"取消","robot_change_action_tip_content":"该操作会清空已有操作的配置，确定更换吗？","robot_change_action_tip_title":"更换机器人操作","robot_change_trigger_tip_content":"该操作会清空已有触发条件的配置，确定更换吗？","robot_change_trigger_tip_title":"更换机器人触发条件","robot_config_empty_warning":"请填写必填项","robot_config_incomplete_tooltip":"请先完成配置","robot_config_panel_help_tooltip":"查看文档","robot_config_panel_title":"配置机器人","robot_create_wizard_next":"下一步","robot_create_wizard_step_1":"编辑机器人名称","robot_create_wizard_step_1_desc":"Hi，我是你的机器人，请给我起个名字吧~","robot_create_wizard_step_2":"选择触发条件","robot_create_wizard_step_2_desc":"我应该什么时候开始工作呢？请在下列触发条件中选择一项～","robot_create_wizard_step_3":"选择操作","robot_create_wizard_step_3_desc":"开始工作后我应该做什么呢？请在下列操作中选择一项～","robot_create_wizard_step_4":"查看机器人","robot_create_wizard_step_4_button":"查看机器人","robot_create_wizard_step_4_desc":"恭喜，你的机器人创建成功！现在可以查看并配置它了~","robot_delete":"删除机器人","robot_delete_confirm_desc":"机器人删除后将无法恢复，确定删除吗？","robot_delete_confirm_title":"删除机器人","robot_disable_create_tooltip":"请先申请开通机器人功能","robot_edit_desc":"编辑机器人描述","robot_enable_config_incomplete_error":"请先完成机器人配置，再启用机器人","robot_enter_body_text_placeholder":"请输入要发送的文本","robot_enter_key_placeholder":"请输入 key","robot_enter_message_content_placeholder":"请输入消息内容","robot_enter_request_address_placeholder":"请输入请求地址","robot_enter_value_placeholder":"请输入 value","robot_enter_webhook_placeholder":"请输入 webhook 地址","robot_feature_entry":"机器人","robot_inserted_variable_invalid":"该变量已失效","robot_inserted_variable_part_1":"第 ${number} 步","robot_more_operations_tooltip":"更多操作","robot_new_action":"新的操作","robot_new_action_tooltip":"添加操作","robot_no_step_config_1":"选择触发条件","robot_option_invalid_error":"选项已失效，请重新选择","robot_panel_create_tab":"创建机器人","robot_panel_help_tooltip":"查看文档","robot_panel_no_robot_tip":"机器人自动化，让你的工作流极致高效～","robot_panel_title":"机器人","robot_reach_count_limit":"本表的机器人数量已达上限","robot_rename":"重命名机器人","robot_required_error":"请填写必填项","robot_return":"返回","robot_run_history_bottom_tip":"没有更多了","robot_run_history_desc":"你可以看到该机器人所有的运行历史 <a href=\'https://help.apitable.com/docs/guide/manual-automation-robot#how-to-check-the-question\' target=\\\\\\"_blank\\\\\\">如何排查问题</a>","robot_run_history_error":"错误","robot_run_history_fail":"运行失败","robot_run_history_fail_tooltip":"此步骤运行失败，请查看「错误」详情进行排查","robot_run_history_fail_unknown_error":"抱歉，机器人程序发生未知错误，请检查机器人配置后再运行试试","robot_run_history_input":"输入","robot_run_history_no_data":"暂无运行历史","robot_run_history_no_output":"无","robot_run_history_output":"输出","robot_run_history_returned_data":"返回数据","robot_run_history_running":"运行中","robot_run_history_status_code":"状态码","robot_run_history_success":"运行成功","robot_run_history_title":"运行历史","robot_run_history_tooltip":"运行历史","robot_save_step_button":"保存","robot_save_step_success":"步骤保存成功","robot_select_option":"请选择一个选项","robot_select_option_invalid":"你选择的选项已失效，请重新选择","robot_trigger_add_match_condition_button":"添加匹配条件","robot_trigger_config":"触发条件配置","robot_trigger_form_submitted_config_1":"选择神奇表单","robot_trigger_form_submitted_config_1_desc":"指定哪张神奇表单有新的提交时，触发机器人开始运行（目前只支持选择本表生成的表单）","robot_trigger_form_submitted_desc":"当指定表单收到新的提交时，机器人会开始运行","robot_trigger_form_submitted_title":"有新的表单提交时","robot_trigger_match_condition_and":"并且","robot_trigger_match_condition_or":"或者","robot_trigger_match_condition_when":"当","robot_trigger_record_created_desc":"当表中有新的记录创建（比如手动创建记录、API 创建记录、收到表单提交），机器人会开始运行","robot_trigger_record_created_title":"有新的记录创建时","robot_trigger_record_matches_condition_config_2":"选择匹配条件","robot_trigger_record_matches_condition_desc":"当表中有记录满足指定条件时，机器人会开始运行","robot_trigger_record_matches_condition_invalid_field":"由于列被删除或列类型改变，此匹配条件已失效","robot_trigger_record_matches_condition_title":"有记录满足条件时","robot_trigger_type":"触发条件类型","robot_unnamed":"未命名的机器人","robot_variables_array_flatten":"转为一维数组","robot_variables_array_length":"计算数组长度","robot_variables_breadcrumb_column_type":"${column_type}列","robot_variables_breadcrumb_record":"记录","robot_variables_breadcrumb_selecting":"（请选择）","robot_variables_cant_view_field":"无权查看该列","robot_variables_creator_avatar":"创建人头像","robot_variables_creator_ID":"创建人 ID","robot_variables_creator_name":"创建人名称","robot_variables_date_to_timstamp":"日期转时间戳","robot_variables_editor_avatar":"修改人头像","robot_variables_editor_ID":"修改人 ID","robot_variables_editor_name":"修改人名称","robot_variables_insert_button":"插入","robot_variables_join_array_item_property":"拼接数组元素属性","robot_variables_join_attachment_heights":"拼接附件高","robot_variables_join_attachment_IDs":"拼接附件 ID","robot_variables_join_attachment_mime_types":"拼接附件 MIME 类型","robot_variables_join_attachment_names":"拼接附件名称","robot_variables_join_attachment_preview_image_token":"拼接附件预览图 token","robot_variables_join_attachment_sizes":"拼接附件大小","robot_variables_join_attachment_storage_locations":"拼接附件存储位置","robot_variables_join_attachment_thumbnail_URLs":"拼接附件缩略图 URL","robot_variables_join_attachment_types":"拼接附件类型","robot_variables_join_attachment_upload_token":"拼接附件上传 token","robot_variables_join_attachment_URLs":"拼接附件 URL","robot_variables_join_attachment_widths":"拼接附件宽","robot_variables_join_color_names":"拼接颜色名称","robot_variables_join_color_values":"拼接颜色色值","robot_variables_join_linked_record_IDs":"拼接关联记录 ID","robot_variables_join_linked_record_titles":"拼接关联记录的主列值","robot_variables_join_member_avatars":"拼接成员头像","robot_variables_join_member_IDs":"拼接成员 ID","robot_variables_join_member_names":"拼接成员名称","robot_variables_join_member_types":"拼接成员类型","robot_variables_join_option_color_names":"颜色名称","robot_variables_join_option_color_values":"颜色色值","robot_variables_join_option_colors":"拼接选项颜色","robot_variables_join_option_IDs":"拼接选项 ID","robot_variables_join_option_names":"拼接选项名称","robot_variables_more_operations":"更多操作","robot_variables_option_color":"选项颜色","robot_variables_option_ID":"选项 ID","robot_variables_option_name":"选项名称","robot_variables_record_ID":"记录 ID","robot_variables_record_URL":"记录 URL","robot_variables_select_basics":"基础信息","robot_variables_select_column_property":"列属性","robot_variables_select_step":"前置步骤","robot_variables_select_step_no_output_type":"无输出（第 ${number} 步：${step}）","robot_variables_select_step_record_type":"记录（第 ${number} 步：${step}）","robot_variables_stringify_json":"转为 JSON 字符串","robot_variables_unsupported_column_type":"此类型的列暂不支持插入","robot_variables_user_icon":"${column_type} icon","robot_variables_user_ID":"${column_type} ID","robot_variables_user_name":"${column_type} name","role_context_item_delete":"删除","role_context_item_rename":"重命名","role_item":"${count} 人 / 组","role_member_table_empty":"该角色暂无成员，你可以","role_member_table_header_name":"成员/小组","role_member_table_header_team":"小组","role_name_input_placeholder":"请输入角色的名称","role_permission_manage_template":"模板中心管理","rollup_choose_field":"选择要引用的字段","rollup_choose_table":"选择已关联的表","rollup_choose_table_description":"可以选择本表「神奇关联」列关联的表格；如果引用字段所在的表并没有关联，请先新建一个「神奇关联」列，并关联到对应表格","rollup_conditions_num":"${ORDER_BY_NUM} 个排序条件和 ${FILTER_NUM} 个筛选条件","rollup_filter_sort":"对引用字段进行筛选和排序","rollup_filter_sort_description":"添加条件","rollup_filter_sort_popup_setting":"设置排序条件","rollup_formula":"引用方式","rollup_limit":"引用数量","rollup_limit_option_1":"全部","rollup_limit_option_2":"第一个","rollup_sort_description":"可以为引用的数据指定字段进行排序（暂时只支持设置一个字段）","romania":"罗马尼亚","rotate":"旋转","row":"行","row_height":"行高","row_height_extra_tall":"极高","row_height_medium":"中等","row_height_setting":"行高配置","row_height_short":" 默认","row_height_tall":" 高","russia":"俄罗斯","rwanda":"卢旺达","safety_tip":"安全提示","safety_verification_tip":"请拖动下方滑块完成验证","saint_kitts_and_nevis":"圣基茨和尼维斯","saint_lucia":"圣露西亚","saint_maarten_dutch_part":"圣马丁岛（荷兰部分）","saint_pierre_and_miquelon":"圣彼埃尔和密克隆岛","saint_vincent_and_the_grenadines":"圣文森特和格林纳丁斯","sales_and_customers":"客户销售","samoa":"萨摩亚","san_marino":"圣马力诺","sao_tome_and_principe":"圣多美和普林西比","saudi_arabia":"沙特阿拉伯","save":"保存","save_action_desc":"当前文件支持另存副本","save_as_template":"保存为模板","save_document":"另存为副本","save_template_disabled":"无法保存为模板","save_this_modified":"保存修改","save_to_space":"另存到我的空间","scan_to_login":"扫码登录","scatter_chart":"散点图","science_and_technology":"科学技术","scroll_screen_down":"向下滚动一屏","scroll_screen_left":"向左滚动一屏","scroll_screen_right":"向右滚动一屏","scroll_screen_up":"向上滚动一屏","search":"搜索","search_associate_record":"搜索你想关联的记录","search_field":"搜索","search_new_admin":"搜索成员昵称，选择移交的主管理员","search_node_pleaseholder":"搜索文件 (${shortcutKey})","search_or_add":"查找或添加","search_role_placeholder":"搜索角色","seats":"席位数量","section1_tip":"空间成员越多，空间容量越大","section2_title_highligh":"“友”福同享，邀请赢大礼","section3_step1":"分享链接给好友","section3_step2":"好友点击注册","section3_step3":"一起赢取奖品","section4_nickname":"个人昵称","section4_title":"邀请荣誉榜","section6_list_item1":"20 余种数据类型的存储与编辑，多维视图随心变化","section6_list_item2":"类 Excel 的表格界面，随意拖拽，上手简单易用","section6_list_item3":"多人实时协同，1000 人同时编辑一个格子也不会出错","section6_list_item4":"开放 API ，节点通知、跨平台同步、信息及时达","section6_list_item5":"模板应用场景丰富，一键即可保存，可内置到任意工作场景中","see_more":"查看更多","select":"选择","select_all":"全选","select_all_fields":"全选","select_axis_sort":"选择一个坐标轴排序","select_bar_chart_x_axis":"数值（X轴）","select_bar_chart_y_axis":"维度（Y轴）","select_chart_category":"维度","select_chart_type":"选择图表类型","select_chart_values":"数值","select_column_chart_x_axis":"维度（X 轴）","select_column_chart_y_axis":"数值（Y 轴）","select_data_source":"功能配置","select_end_date":"选择结束时间","select_layout":"选择布局","select_link_data_number":"设置引用数据的数量","select_link_data_number_all":"引用全部数据","select_link_data_number_first":"只引用第一条数据","select_local_file":"将文件拖拽或点击此处进行上传","select_one_field":"字段类型","select_phone_code":"选择国家和地区","select_sort_rule":"设置排序规则","select_space_save":"选择要转存的空间站","select_start_date":"选择开始时间","select_theme_color":"选择配色方案","select_view":"从下方视图读取数据","select_y_axis_field":"统计指定字段","selected":"已选","selection_to_down":"单元格选区向下","selection_to_down_edge":"单元格选区向下至底部","selection_to_left":"单元格选区向左","selection_to_left_edge":"单元格选区向左到边缘","selection_to_right":"单元格选区向右","selection_to_right_edge":"单元格选区向右至边缘","selection_to_up":"单元格选区向上","selection_to_up_edge":"单元格选区向上至顶部","send":"发送","send_again_toast":"当前用户未完成注册，再次发送邮箱邀请？","send_code_again":"重新发送","send_comment_tip":"Enter 发送","send_widget_to_dashboard_success":"小程序发送到仪表盘成功","send_widget_to_dashboard_success_link":"send_widget_to_dashboard_success","senegal":"塞内加尔","senior_field":"高级列类型","serbia":"塞尔维亚","server_error_page_bg":"/space/2022/05/26/3764e311c29c4adf8f53eded12d77a9e?attname=500_ch%402x.png","server_error_tip":"哎呀，服务器开小差了，请刷新页面重试","set_alarm_fail_tips":"记录被删除，设置失败","set_alarm_field_delete_tips":"当前列被删除","set_as_the_template":"设为模板","set_field":"设置列","set_field_required":"设置为神奇表单必填项","set_field_required_tip_1":"1. 展开记录，会在对应字段有必填项提示","set_field_required_tip_2":"2. 必须填写该字段后才能提交对应的神奇表单","set_field_required_tip_title":"设置必填项之后：","set_filter":"设置筛选","set_gallery_card_style":"设置卡片样式","set_graphic_field":"设置图示","set_grouping":"设置分组","set_nickname":"设置昵称","set_record":"编辑记录","set_sort":"设置排序","setting_nickname_sub_title":"你想为自己取什么昵称呢？","seychelles":"塞舌尔","share":"分享","share_and_collaboration":"分享与协作","share_and_editable_desc":"他人可以在分享页面下协作编辑表格的内容","share_and_editable_title":"分享给他人进行协作编辑","share_and_save_desc":"他人可以查看你的表格并将它另存为副本","share_and_save_title":"分享给他人另存为副本","share_card_tips":"使用手机扫码，马上查看内容","share_code_desc":"更 简 单 ，却 更 强 大","share_configuration":"分享页面配置","share_edit_exist_member_tip":"当前表格存在${content}，选择此项他人可查看到该空间的组织架构","share_edit_tip":"未登录状态只能查看文件，请登录后再试","share_editor":"登录后可编辑","share_editor_label":"该分享内容需要登录后才能编辑","share_email_invite":"邀请更多人加入协作","share_exist_something_tip":"当前的分享存在${content}，他人可以在分享页面看到关联数据，请确认数据的保密性，以下是关联的表格名字：\\n","share_fail_og_description_content":"该分享的公开链接已被关闭，暂时无法访问","share_failed":"分享失败","share_field_shortcut_link_tip":"想要开启公开分享？点击这里","share_file":"分享给站外用户","share_file_desc":"通过公开链接在站外进行分享","share_form_edit_tip":"当前神奇表单需要登录填写","share_form_login_tip":"点击登录","share_form_title":"通过公开链接填写神奇表单","share_login_tip":"登录后可编辑此文件","share_mobile_friendly_tip":"88%的人通过电脑编辑获更佳体验","share_modal_title":"分享","share_node_number_err_content":"您将要转存的空间站超出了500个文件数量上限，本次转存操作无效","share_only_desc":"他人在空间站外只有查看表格的权限","share_only_title":"仅分享给他人查看","share_permisson_model_link_datasheet_label":"有关联的外部文件","share_permisson_model_node_owner":"文件管理员","share_permisson_model_open_share_false_1":"开启分享失败，其他成员已开启分享","share_permisson_model_open_share_label":"已开启分享","share_permisson_model_open_share_label_desc":"「${member_name}」开启了分享，收到链接的外部用户可以访问","share_permisson_model_setting_role_label":"指定可见","share_permisson_model_setting_role_label_desc":"除了指定的成员外，其他成员无法访问","share_permisson_model_space_admin":"空间站管理员","share_permisson_model_space_admin_desc":"本空间站拥有「工作台管理」权限的管理员","share_qr_code_tips":"通过二维码分享","share_reader":"只可阅读","share_reader_label":"该分享内容仅可查看","share_save":"可另存副本","share_save_label":"该分享内容支持另存为副本","share_setting":"分享至站外","share_settings_tip":"分享设置${status}","share_succeed":"分享成功","share_title":"分享「${node}」","share_with_offsite_users":"分享给站外用户","shared_link_copied":"该模板的分享链接已复制","shelf_manage":"上架管理","shortcut_key":"快捷键","shortcut_key_redo":"已重做到上一步","shortcut_key_redo_nothing":"没有需要重做的数据","shortcut_key_undo":"已撤销到上一步","shortcut_key_undo_nothing":"没有需要撤销的数据","show_all_fields":"显示所有","show_data_tips":"显示数值标签","show_data_tips_describle":"显示数值标签","show_empty_values":"显示维度空值","show_empty_values_describle":"显示维度空值","show_field_desc":"显示列描述","show_hidden_field_within_mirror":"镜像中显示隐藏字段","show_hidden_fields_by_count":"显示 ${count} 个隐藏字段","show_name":"显示列名称","show_record_history":"显示本表的修改历史","show_smooth_line":"开启平滑曲线","sierra_leone":"塞拉利昂","sign_up":"注册","silver_img":"URL","singapore":"新加坡","single_color_gradient_theme":"单色渐变主题","siwtch_to_invite_tab":"想要邀请成员？点击这里","skip":"跳过","slider_verification_tips":"请按住滑块，拖动到最右边","slovakia":"斯洛伐克","slovenia":"斯洛文尼亚","social_dingtalk_single_record_comment_mention":"### 🔔有人在评论中提及你\\n\\n**所在表:** {nodeName}\\n\\n**记录:** {recordTitle}\\n\\n“${commentContent}”","social_media":"新媒体运营","social_notification_url_title":"进入查看","social_open_card_btn_text":"详情","social_plat_space_list_item_seats_msg":"（最多${max}人）","socket_error_network":"糟糕，网络突然中断了，请刷新浏览器进行恢复","socket_error_server":"刚遇到一些程序运行异动，请刷新浏览器进行恢复","software_development":"软件开发","solomon_islands":"所罗门群岛","solution":"解决方案","somalia":"索马里","some_day_after":"多少天后","some_day_before":"多少天前","some_one_lock_view":"${uer_name}已锁定视图配置","something_went_wrong":"发生了未知错误","something_wrong":"出错了，请稍后再试～","sort":"排序","sort_apply":"应用","sort_by_option_order":"按选项顺序排列","sort_by_option_reverse":"按选项倒序排列","sort_count_tip":"${count} 个排序","sort_desc":"按 ${from} → ${to} 排列","sort_link_data":"排序引用的数据","sort_rules":"排序条件","sorting_conditions_setting_description":"可以添加引用字段或引用字段所在表任意字段作为排序条件","south_africa":"南非","south_korea":"韩国","space":"空间站","space_add_primary_admin":"添加你为空间站「<a class=\\"spaceName\\"></a>」的主管理员","space_admin":"空间站管理员","space_admin_level":"空间站等级","space_admins_3_up":"哟，你的空间站管理员已经达到 3 人上限","space_assigned_to_group":"<a class=\\"memberName\\"></a>将你分配到空间站「<a class=\\"spaceName\\"></a>」的小组「<a class=\\"teamName\\"></a>」","space_assigned_to_role":"<a class=\\"memberName\\"></a>将你分配到空间站「<a class=\\"spaceName\\"></a>」的角色「<a class=\\"roleName\\"></a>」","space_capacity":"附件容量","space_changed_ordinary_user":"<a class=\\"memberName\\"></a>将你在空间站「<a class=\\"spaceName\\"></a>」的权限变更为普通成员","space_configuration":"空间站配置","space_exist_dashboard":"将小程序发送至仪表盘","space_has_been_deleted":"空间站「<a class=\\"spaceName\\"></a>」已被删除","space_has_been_recover":"空间站「<a class=\\"spaceName\\"></a>」已被恢复","space_id":"空间站 ID","space_info":"空间站驾驶舱","space_info_del_confirm1":"1. 删除空间站后，以下数据将被全部清除：","space_info_del_confirm2":"2. 空间站将会在七天后自动彻底删除。在此之前，你可以随时撤销删除操作","space_join_apply":"<a class=\\"userName\\"></a>申请加入空间站「<a class=\\"spaceName\\"></a>」","space_join_apply_approved":"你加入空间站「<a class=\\"spaceName\\"></a>」的申请已被同意","space_join_apply_refused":"你加入空间站「<a class=\\"spaceName\\"></a>」的申请已被拒绝","space_list":"空间站列表","space_logo":"空间站LOGO图标","space_manage_choose_new_primary_admin":"选择新的主管理员","space_manage_infomation_text":"你的身份已转变为「普通成员」， 将无法再进行空间站管理","space_members_limit_email_title":"「{SPACE_NAME}」空间站的成员数已超出上限（{USAGE}/{SPECIFICATION}）","space_name":"空间站名称","space_name_length_err":"填写的空间名称请保持在2-100字符以内","space_not_access":"你不是该空间站的成员，无法进入该空间站，请先联系空间管理员将你加入到该空间站内","space_origin":"来源空间站","space_overview":"空间站驾驶舱","space_seat_info":"空间站人数：${num} 人","space_setting":"空间站管理","space_template":"空间站模板","space_time_machine_limit_email_title":"「{SPACE_NAME}」空间站支持查看 「{{SPECIFICATION}}」 天内的历史记录","space_trash_limit_email_title":"「{SPACE_NAME}」空间站支持查看 「{SPECIFICATION}」 天内的历史文件","spain":"西班牙","specifical_member":"指定成员","specifical_member_field":"指定成员字段的人","split_multiple_values":"分离多选值","sports_and_games":"体育与游戏","sri_lanka":"斯里兰卡","stacked_bar_chart":"堆叠条形图","stacked_by_field":"按下方字段堆叠","stacked_column_chart":"堆叠柱状图","stacked_line_chart":"堆叠折线图","standard":"标准版","start_field_name":"开始时间","start_onfiguration":"开始配置","start_time":"起始时间","start_use":"开始使用","stat_average":"平均值","stat_checked":"已勾选","stat_count_all":"记录总数","stat_date_range_of_days":"时间范围（日）","stat_date_range_of_months":"时间范围（月）","stat_empty":"未填写","stat_fill":"已填写","stat_max":"最大值","stat_max_date":"最晚时间","stat_min":"最小值","stat_min_date":"最早时间","stat_none":"不展示","stat_percent_checked":"已选中占比","stat_percent_empty":"未填写占比","stat_percent_filled":"已填写占比","stat_percent_un_checked":"未选中占比","stat_percent_unique":"唯一值占比","stat_sum":"求和","stat_un_checked":"未勾选","stat_uniqe":"唯一值","statistical_link_data":"对引用数据进行统计","statistics":"统计","status_code_inviter_space_member_limit":"邀请人的空间人数达到上限，暂时无法加入","status_code_link_invalid":"邀请链接已失效","status_code_nvc_fail":"当前环境存在风险，请稍后再试！","status_code_phone_validation":"你的网络环境出现异常（比如IP地址频繁变动等等），建议你刷新页面后再尝试","status_code_space_limit":"你的空间站数量已达上限，暂时无法加入新的空间站","status_code_space_not_exist":"被邀请的空间不存在","stay_tuned_for_more_features":"更多功能敬请期待…","steps_choose_reset_mode":"选择重置方式","storage_per_seats":"增值附件容量","storage_per_space":"附件容量","strikethrough":"删除线","subject_capacity_full":"空间站容量已满","subject_change_admin":"主管理员更换","subject_invite_notify":"{USER_NAME}邀请您加入空间站「{SPACE_NAME}」","subject_record_comment":"你有一条新动态","subject_remove_member":"你已离开空间站「{SPACE_NAME}」","subject_space_apply":"{USER_NAME}申请加入空间站「{SPACE_NAME}」","subject_transfer_widget_notify":"你已被移除小程序「{WIDGET_NAME}」的发布权","subject_unpublish_widget_notify":"你发布的小程序「{WIDGET_NAME}」已下架","submit":"确定","submit_filter_success":"筛选条件保存成功","submit_questionnaire_success":"感谢你的填写！","submit_requirements":"提交需求","subscribe_grade_free":"Free","subscribe_grade_plus":"Plus","subscribe_grade_pro":"Pro","success":"成功","success_invite_number":"成功邀请 ${count} 人","success_invite_person_number":"成功邀请好友数","sudan":"苏丹","summary_return_field_value_of_row":"返回 ${name} 列单元格内的值","summary_widget_add_describle":"添加统计值的说明","summary_widget_add_target":"添加目标值","summary_widget_select_field":"选择一种统计方式","summary_widget_select_view":"从下方视图读取数据","summary_widget_setting":"配置小程序","summary_widget_setting_help_tips":"配置教程","superior_team":"上级小组","support":"帮助支持","support_access_to_editors":"当前空间站支持进入编辑","support_attachment_formats":"支持 jpg、png、gif 格式；单个文件大小不超过 1 GB","support_features":"服务支持","support_image_formats":"支持 jpg、png、gif 格式","support_image_formats_limits":"支持 JPG、PNG 和 GIF 格式，图片大小需在 ${number} MB 以内","suriname":"苏里南","swaziland":"斯威士兰","sweden":"瑞典","switch_avatar":"更换头像","switch_to_catalog":"切换到目录树","switch_view_next":"视图标签向后切换视图","switch_view_prev":"视图标签向前切换视图","switzerland":"瑞士","sync_failed":"同步失败","sync_success":"同步成功","syncing":"正在同步","syria":"叙利亚","system_message":"系统消息","system_theme":"跟随系统","tab_add_view_datasheet":"想要新建表？点击这里","tab_org":"组织架构","tab_role":"角色","table":"表格","tag":"标签","taiwan":"中国台湾","tajikistan":"塔吉克斯坦","take_photos_or_upload":"拍照或从手机上传","tanzania":"坦桑尼亚","task_completed":"任务完成","task_list":"待办列表","task_progress":"任务进度","task_reminder_notify_column_member":"列的成员","task_reminder_notify_date_option_1_hour_before":"提前 1 小时","task_reminder_notify_date_option_15_minutes_before":"提前 15 分钟","task_reminder_notify_date_option_2_hours_before":"提前 2 小时","task_reminder_notify_date_option_30_minutes_before":"提前 30 分钟","task_reminder_notify_date_option_5_minutes_before":"提前 5 分钟","task_reminder_notify_date_option_exact":"到达当前日期","task_reminder_notify_date_option_one_day_before":"当前日期的前 1 天","task_reminder_notify_date_option_one_month_before":"当前日期的前 1 个月","task_reminder_notify_date_option_one_week_before":"当前日期的前 1 周","task_reminder_notify_date_option_six_months_before":"当前日期的前 6 个月","task_reminder_notify_date_option_three_month_before":"当前日期的前 3 个月","task_reminder_notify_date_option_two_day_before":"当前日期的前 2 天","task_reminder_notify_date_option_two_months_before":"当前日期的前 2 个月","task_reminder_notify_date_option_two_weeks_before":"当前日期的前 2 周","task_reminder_notify_member":"成员 ${member}","task_reminder_notify_who_error_not_exist":"成员字段不存在","task_reminder_tips":"到达当前日期里设置的是 ${timezone} 的时间，此处会显示根据用户所在时区转换的时间","team":"小组","team_is_exist_err":"同层级的小组已存在该名称，请使用其他名称","team_length_err":"填写的小组名称请保持在1-100字符以内","teamwork":"团队协作","teamwork_click_here":"想要内容公开？点击这里","teamwork_desc":"邀请更多人加入协作","teamwork_number_tip":"正在与 ${number} 人协作中 ","template":"模板","template_advise_tip":"没有想要的模板？欢迎向我们提出建议和吐槽！","template_centre_using_template_data":"使用模板里的数据","template_centre_using_template_tip":"选择位置","template_created_successfully":"模板创建成功","template_creation_failed":"模板创建失败","template_detail_tip":"当前处于模板体验中，需要使用模板才能正常写入数据","template_feedback":"点击反馈","template_go_back":"模板中心 - ${category}","template_has_been_deleted":"当前模板不存在或已被删除","template_has_been_deleted_title":"温馨提示","template_management":"模板管理","template_name":"模板名称","template_name_limit":"模板名称不能超过 100 个字符","template_name_repetition_content":"空间站模板中已有相同名称的文件，替换它将覆盖其当前内容","template_name_repetition_title":"“${templateName}”已存在，确定要替换它吗？","template_no_template":"暂无模板","template_not_found":"找不到想要的模板? 请告诉我们~","template_recommend_title":"热门推荐","template_type":"模板","text":"文本","text_editor_tip_end":"Enter 结束编辑","text_functions":"文本函数","thailand":"泰国","the_last_7_days":"过去 7 天","the_last_month":"过去 30 天","the_last_week":"过去 7 天","the_next_month":"未来 30 天","the_next_week":"未来 7 天","theme_blue":"蓝色","theme_brown":"棕色","theme_color":"配色","theme_color_1":"配色一","theme_color_2":"配色二","theme_color_3":"配色三","theme_color_4":"配色四","theme_deepPurple":"深紫色","theme_green":"绿色","theme_indigo":"靛青","theme_orange":"橙色","theme_pink":"粉色","theme_purple":"紫色","theme_red":"红色","theme_setting":"主题","theme_tangerine":"橘色","theme_teal":"蓝绿色","theme_yellow":"黄色","there_are_attachments_being_uploaded":"还有正在上传的附件","this_feature_is_not_yet_available":"该功能暂未开放","this_field_no_reference_data_yet":"该字段暂无引用数据","this_month":"本月","this_week":"本周","this_year":"今年","tile":"平铺","time":"时间","time_format":"时间格式","time_format_month_and_day":"MM[月]DD[日] HH:mm","time_format_today":"[今天] HH:mm","time_format_year_month_and_day":"YYYY[年]MM[月]DD[日] HH:mm","time_format_year_month_and_day_for_dayjs":"YYYY年MM月DD日","time_format_yesterday":"[昨天] HH:mm","time_zone_inconsistent_tips":"当时区不一致时，默认取开始时间的时区","times_per_month_unit":"次/月","times_unit":"次","timor_leste":"东帝汶","tip_del_success":"我们将对您的空间站数据保留七天，七天内可随时撤销删除操作。","tip_primary_field_frozen":"首列在所有视图中都会作为“标题”来展示。${tag}因此不支持隐藏、拖动和删除","tip_setting_nickname":"如果你愿意，我更想知道你会为自己取什么昵称呢？","tip_shift_scroll":"左右滑动：Shift + 鼠标滚轮","title_select_sorting_fields":"选择排序字段","to_filter_link_data":"被筛选过滤的记录不会被引用","to_old_main_admin_tip_after_change":"移除所有管理权限，成为普通成员","to_select_tip":"此列的值将会转换成以下的选项","to_view_dashboard":"前往查看","toast_cell_fill_success":"填充单元格成功","toast_change_option_success":"修改选项名成功","toast_copy_cell_by_count":"已复制 ${count} 个单元格","toast_copy_record_by_count":"已复制 ${count} 条记录","toast_ctrl_s":"你的修改数据会实时保存到云端，无需手动保存","toast_cut_cell_by_count":"已剪切 ${count} 个单元格","toast_cut_record_by_count":"已剪切 ${count} 条记录","toast_delete_option_success":"删除选项成功","toast_field_configuration_success":"修改列配置成功","today":"今天","toggle_catalog_panel":"展开折叠目录面板","toggle_comment_pane":"${status}动态","toggle_widget_dev_mode":"切换开发模式","toggle_widget_panel":"展开小程序","togo":"多哥","token_value":"API Token","tomorrow":"明天","tonga":"汤加","tool_bar_hidden":"隐藏","tooltip_edit_form_formula_field":"当前字段的数据来自公式计算结果，不能编辑","tooltip_edit_form_lookup_field":"当前字段的数据来自关联表的引用结果，不能编辑","tooltip_primary_field_type_select":"为保证首列内容的唯一性，仅支持部分列类型","tooltip_workspace_up_to_bound_no_new":"空间站数量已达 ${count} 个上限，暂时无法新建空间站","total":"总计","total_capacity":"总容量","total_error_records_count":"共 ${errorCount} 条记录","total_import_employee_by_count":"本次共导入${rowCount}条员工信息","total_records":"空间站记录数","total_storage":"空间站容量上限：${memory}","trash":"回收舱","trash_tip":"回收舱会显示最近 ${day} 天内删除的文件，你仅可查看具有「可以管理」权限的文件","travel_and_outdoors":"户外旅游","tree_level":"${level}级","trinidad_and_tobago":"特立尼达和多巴哥","try_my_best_effort_to_reconnect":"正在努力重连中...","tunisia":"突尼斯","turkey":"土耳其","turkmenistan":"土库曼斯坦","turks_and_caicos_islands":"特克斯和凯科斯群岛","twelve_hour_clock":"12 小时","twenty_four_hour_clock":"24 小时","type":"类型","uganda":"乌干达","ukraine":"乌克兰","un_bind_email":"解绑邮箱","un_bind_success":"解绑成功","un_lock":"解锁","un_lock_view":"视图已锁定","unactive_space":"未激活空间","unavailable_og_title_content":"暂时无法访问","unbind":"解绑","unbound":"未绑定","under_line":"下划线","under_use_restrictions":"体验中","understand_and_accept":"我已了解并接受","undo":"撤销","unit_ge":"个","unit_piece":"张","united_arab_emirates":"阿拉伯联合酋长国","united_kingdom":"英国","united_states":"美国","unlimited":"无限","unlink":"解除链接","unnamed":"匿名用户","unordered_list":"无序列表","unprocessed":"未处理","unresolved_message":"无法解析的消息","unshow_record_history":"本表记录的修改历史已被隐藏","up":"向上移动一个单元格","update_description_fail":"网络错误，保存失败","update_invitation_link_content":"更新后已生成的邀请链接将会失效","update_invitation_link_title":"更新邀请链接","update_node_share_link_content":"更新后已生成的分享链接将会失效","update_node_share_link_title":"更新链接","update_rate_error_notify":"当前输入的数值超过了评分的最大值","update_space_fail":"编辑空间信息失败","update_space_success":"编辑空间信息成功","upload_again":"重新上传","upload_avatar":"上传头像","upload_canceled":"取消上传成功","upload_fail":"上传失败","upload_later":"稍后上传","upload_on_your_phone":" 从手机上传","upload_success":"上传成功","url_batch_recog_failure_message":"部分网址未能识别","url_preview_limit_message":"最高支持同时识别 300 个网址","url_preview_setting":"新增记录自动识别网址内容","url_recog_failure_message":"未能识别网址","uruguay":"乌拉圭","use_the_template":"使用该模板","used":"已用：","used_space_capacity":"已用空间站容量","used_storage":"已用：${memory}","user_avatar":"头像","user_center":"个人设置","user_feedback":"反馈问题","user_mentioned_in_record":"在{{record_primary_field}}里的评论里提及了你","user_menu_tooltip_member_name":"我在空间站「${spaceName}」内的昵称","user_profile":"基本信息","user_profile_setting":"基本信息","user_removed_by_space_toadmin":"<a class=\\"involveMemberArr\\"></a> 被<a class=\\"memberName\\"></a>移出空间站「<a class=\\"spaceName\\"></a>」","user_removed_by_space_touser":"<a class=\\"memberName\\"></a>将你移出空间站「<a class=\\"spaceName\\"></a>」","user_setting":"个人设置","user_setting_time_zone_title":"时区","user_token":"用户 token","using_btn":"立即使用","using_templates_successful":"成功使用模板","uzbekistan":"乌兹别克斯坦","vanuatu":"瓦努阿图","venezuela":"委内瑞拉","venture_capital":"风险投资","video_not_support_play":"当前视频格式不支持在线播放","vietnam":"越南","view":"视图","view_by_person":"按人查看","view_collaborative_members":"查看${number}位协作成员","view_configuration_tooltips":"视图配置未保存仅对你自己生效","view_count":"${count} 个视图","view_count_over_limit":"单表视图数量已达到 ${count} 个上限","view_export_to_excel":"导出视图数据","view_find":"查找一个视图","view_foreign_form":"当前视图的神奇表单","view_foreign_form_count":"${count} 个神奇表单","view_foreign_form_empty":"想要规范化录入数据？使用神奇表单试试","view_form":"神奇表单","view_form_field_changed_tip":"当前表单有字段新增/类型变更","view_full_catalog":"查看完整工作目录","view_has_locked_not_deletes":"该视图被锁定，无法被删除","view_list":"视图列表","view_lock":"视图锁","view_lock_command_error":"当前视图被锁定，无法进行操作","view_lock_desc_placeholder":"向其他人说明锁定此视图的原因","view_lock_note":"“可以管理”权限的成员解锁视图后才可修改和保存视图配置","view_mirror_count":"${count} 个镜像","view_name_length_err":"名称要求 1~${maxCount} 字符以内","view_name_repetition":"已存在该视图名称","view_property_sync_success":"视图配置已保存并同步给其他成员","view_property_sync_title":"你修改了视图配置","view_record_comments":"查看该记录的评论","view_record_history":"查看该记录的修改历史","view_record_history_mobile":"查看修改历史","view_sort_and_group_disabled":"该字段暂不支持设置为分组/排序","view_sync_property_close_tip":"视图配置协同已关闭，配置不会同步给其他成员，刷新后清除","view_sync_property_tip":"视图配置处于协同中，你的操作也会同步给其他成员","view_sync_property_tip_short":"你的操作会同步给其他成员","view_un_lock_success":"解锁视图成功","viewers_per_space":"只读成员","virgin_islands_british":"英属处女群岛","virgin_islands_us":"美属维尔京群岛","visit":"访问","vomit_a_slot":"吐个槽","waiting_for_upload":"等待上传","waring_coloring_when_filter_empty":"请添加条件后再保存","warning":"警告","warning_can_not_remove_yourself_or_primary_admin":"不能从组织架构中移除自己或主管理员","warning_coloring_records_when_no_single_field":"当前视图无单选字段，请创建后再试","warning_confirm_to_del_option":"确定要删除此选项吗？","warning_exists_sub_team_or_member":"当前小组存在下级小组或成员，请先删除下级小组和成员后，再删除该小组。","warning_filter_limit":"最多可添加 10 个条件","warning_rule_limit":"最多可添加 10 个规则","watch_out":"注意","watermark_content":"所有访问本空间站的成员的页面上都将显示水印","watermark_title":"显示全局水印","way_to_create_dashboard":"如何创建仪表盘","web_publish_refresh":"点击这里更新","wecom_single_record_comment_mentioned":"维格表：{nodeName}\\n记录：{recordTitle}\\n\\n\\"{commentContent}\\"","wecom_single_record_comment_mentioned_title":"有人在评论中提及你","WEEKS":"周","welcome_interface":"欢迎界面","welcome_module4":"内容日历","welcome_module6":"房地产客户关系管理","welcome_module7":"常见问题","welcome_module8":"产品手册","welcome_module9":"开发者指南","welcome_more_help":"更多帮助","welcome_sub_title2":"从模板学习，激发创作灵感","welcome_sub_title3":"前往帮助中心，学习更多使用技巧","welcome_use":"欢迎使用","when_meet_the_following_filters":"当满足以下条件","where":"当","whether_bind_with_invited_email":"是否与被邀请帐号${inviteEmail}绑定","who_shares":"${userName}给你分享了","widget":"数据挂件","widget_center":"小程序中心","widget_center_create_modal_desc":"首先为你的小程序取个名字，然后选择从哪个小程序模板开始开发 <a href=\\"\\">了解更多</a>","widget_center_create_modal_title":"创建一个新的小程序","widget_center_create_modal_widget_name":"小程序名称","widget_center_create_modal_widget_name_placeholder":"请输入小程序的名字","widget_center_create_modal_widget_template":"选择小程序模板","widget_center_create_modal_widget_template_link":"查看源码","widget_center_help_tooltip":"帮助文档","widget_center_menu_transfer":"移交小程序的发布权","widget_center_menu_unpublish":"下架小程序","widget_center_official_introduction":"官方推荐的小程序由官方认证的开发者发布，所有空间站皆可安装使用","widget_center_publisher":"发布者：","widget_center_tab_official":"官方推荐","widget_collapse_tooltip":"折叠小程序","widget_connect_error":"无法连接到你的本地小程序，请确认地址无误，或者确认 widget-cli 工具已是最新版","widget_continue_develop":"进入开发模式","widget_cret_invalid_error_content":"<p>1. 在浏览器中打开 chrome://flags/#allow-insecure-localhost</p><p>2. 将高亮选项的设置从 Disabled 改为 Enabled</p><p>3. 重启浏览器，使新的配置生效</p>","widget_cret_invalid_error_title":"请先解除浏览器对于加载本地代码的安全限制","widget_datasheet_has_delete":"绑定的关联表被删除","widget_dev_config_content":"请先前往你的小程序文件夹，执行${startCmd}命令，将返回的小程序开发地址粘贴到下方","widget_dev_url":"开发地址：","widget_dev_url_input_placeholder":"请填写本地服务的 URL 地址","widget_disable_fullscreen":"退出全屏","widget_enable_fullscreen":"进入全屏","widget_env_error":"该小程序不支持在${errorEnv}使用，请前往${expectEnv}使用","widget_expand_tooltip":"展开小程序","widget_filter_add_filter":"添加筛选条件","widget_filter_condition_numbers":"{FILTER_NUM} 个筛选条件","widget_filter_tips":"被筛选过滤的数据不会被小程序读取","widget_has_be_delete":"该小程序已被删除，无法查看","widget_hide_settings_tooltip":"隐藏设置面板","widget_homepage_tooltip":"小程序主页","widget_import_from_airtable_done":"导入成功，本次共导入 ${ROW_NUM} 行数据","widget_import_from_airtable_done_button":"重新导入","widget_import_from_airtable_start_import":"开始导入","widget_import_from_airtable_step_1_viewid":"View ID（可选）","widget_import_from_airtable_step_1_warning_content":"请确认填写内容正确后重试","widget_import_from_airtable_step_2_fields":"待导入的字段名","widget_import_from_airtable_step_2_fields_type":"字段类型","widget_import_from_airtable_step_2_title":"2. 请选择字段类型","widget_import_from_airtable_step_2_waring_file_upload":"检测到正在导入附件列，当前小程序仅支持导入不超过 10MB 的文件，超出的文件将被跳过，是否继续？","widget_import_from_airtable_step_3_button":"中止导入","widget_import_from_airtable_step_3_import_num":"已导入 ${ROW_NUM} 行数据","widget_import_from_airtable_tutorial":"查看教程","widget_import_from_airtable_wrong_button":"修改配置","widget_install_error_env":"该小程序不支持在表内${errorEnv}安装使用，请前往${expectEnv}安装使用","widget_install_error_title":"安装失败","widget_item_developing":"开发模式","widget_load_error":"⁣已与服务器断开连接，请重新执行 widget-cli start 命令，点击右上角的刷新后，即可继续开发","widget_load_error_ban_content":"该小程序违反相关条约已被封禁暂时无法使用","widget_load_error_ban_title":"该小程序已被封禁","widget_load_error_load_error":"已与服务器断开连接，请重新执行 widget-cli start 命令，刷新后即可继续开发","widget_load_error_not_match":"本地小程序包 ID 与当前小程序面板的小程序包 ID 不一致，请确认你没有修改本地代码中的 packageId 参数值","widget_load_error_published":"请联系该小程序发布者 @${authorName} 排查问题","widget_load_error_title":"运行小程序时出错","widget_load_url_error_not_match":"无法连接到本地小程序，请排查代码是否有错误，或者确认代码中的 packageId 与当前小程序的包 ID (${widgetPackageId}) 保持一致","widget_loader_developing_content":"你可以点击下面按钮继续开发","widget_loader_developing_title":"此小程序未发布","widget_loader_error_cret_invalid":"请先解除浏览器对于加载本地代码的安全限制，否则小程序无法顺利加载","widget_loader_error_cret_invalid_action_text":"如何解除","widget_more_settings":"更多设置","widget_more_settings_tooltip":"更多设置","widget_name_length_error":"小程序的名称在 1~30 个字符之间","widget_num":"${count} 个小程序","widget_operate_delete":"删除小程序","widget_operate_enter_dev":"进入开发模式","widget_operate_exit_dev":"退出开发模式","widget_operate_publish_help":"如何发布小程序","widget_operate_refresh":"刷新小程序","widget_operate_rename":"重命名小程序","widget_operate_send_dashboard":"发送到仪表盘","widget_operate_setting":"配置小程序","widget_panel":"小程序面板","widget_panel_count_limit":"小程序面板数量达到上限","widget_panel_title":"小程序面板 ${count}","widget_publish_help_desc":"发布成功后，空间站成员即可在小程序中心安装此小程序","widget_publish_help_step1":"1、开发完成并预览无误后，先在终端输入 ${cmd} 退出运行状态","widget_publish_help_step2":"2、再执行下列命令进行发布：","widget_publish_modal_content":"在终端执行完 release 命令后的结果 + 在小程序中心出现发布后的小程序","widget_publish_modal_title":"如何发布小程序","widget_reference":"来源「${dst_name}」","widget_scripting_edit_code":"折叠编辑器","widget_scripting_edit_console":"控制台","widget_scripting_edit_examples":"示例","widget_scripting_edit_finish":"展开编辑器","widget_scripting_edit_stop":"停止","widget_scripting_run":"开始运行","widget_scripting_start":"开始使用","widget_show_settings_tooltip":"显示设置面板","widget_something_went_wrong":"发生了未知错误，请刷新重试","widget_start_dev":"去预览","widget_step_dev":"预览","widget_step_dev_content_label":"输入小程序开发地址：","widget_step_dev_desc":"通过本地服务的 URL 地址，你可以动态查看小程序的效果","widget_step_dev_title":"实时预览","widget_step_init":"初始化","widget_step_init_content_desc":"注意：该命令会要求输入你的 API Token 和空间站 ID <a>如何获取</a> ","widget_step_init_content_label":"在终端中继续执行下列命令：","widget_step_init_title":"初始化小程序","widget_step_install":"安装","widget_step_install_content_label1":"1、打开你电脑上的终端","widget_step_install_content_label2":"2、在终端中执行下列命令","widget_step_install_desc":"小程序开发工具可以用来初始化、运行、发布、下架小程序","widget_step_install_title":"安装小程序开发工具","widget_step_start":"启动","widget_step_start_content_desc2":"注意：该命令会生成一个 URL，供下一步使用","widget_step_start_content_label1":"1、前往小程序的项目文件夹，开始开发","widget_step_start_content_label2":"2、开发完毕后，在终端中执行下列命令，运行小程序","widget_step_start_desc":"跟随下列步骤，启动小程序的本地服务，进入开发模式","widget_step_start_title":"启动小程序","widget_tip":"小程序","widget_transfer_modal_content":"<ul><li><p>当前发布者：${oldOwner}</p><p>该成员不能再通过命令行工具进行小程序的发布、下架等操作</p></li><li> <p>新的发布者：${newOwner}</p> <p>该成员能够通过命令行工具进行该小程序的发布、下架等操作</p></li></ul>","widget_transfer_modal_title":"移交「${widgetPackageName}」小程序的发布权","widget_transfer_success":"移交成功","widget_unknow_err":"未知错误 ${info}","widget_unpublish_modal_content":"确定下架小程序？","widget_website":"小程序网址","widgets_per_dashboard":"数据报表图版数","width_limit_waring":"已超过首列最大列宽限制，此次列宽调整不会生效","without_day":"无期限","work_data":"工作数据","workbench_setting":"工作台权限","workbench_setting_all":"全员设置","workbench_side_space_template":"空间站模版","workbenck_shortcuts":"工作台快捷键","workspace_data":"空间站数据","workspace_files":"工作台数据","workspace_list":"空间站列表","wrap_text":"自动换行","wrong_url":"错误的URL","x_axis_field_date_range":"调整日期范围","x_axis_field_date_range_by_day":"按天","x_axis_field_date_range_by_quarter":"按季度","x_axis_field_date_range_by_week":"按周","x_axis_field_date_range_by_year":"按年","y_axis_field_average":"平均值","y_axis_field_max":"最大值","y_axis_field_min":"最小值","y_axis_field_sum":"求和","year":"年","year_month_day_hh_mm":"年/月/日 时:分","year_month_day_hyphen":"年-月-日","year_month_day_slash":"年/月/日","year_season_hyphen":"年-季度","year_week_hyphen":"年-周","yemen":"也门","yesterday":"昨天","you":"你","zambia":"赞比亚","zimbabwe":"津巴布韦","zoom_in":"放大","zoom_out":"缩小","og_page_title":" APITable ","dashboard_access_denied_help_link":"https://help.apitable.com/docs/guide/intro-dashboard#access-denied","robot_config_help_url":"https://help.apitable.com/docs/guide/manual-automation-robot/#how-to-config-robot","robot_help_url":"https://help.apitable.com/docs/guide/manual-automation-robot","timemachine_help_url":"https://help.apitable.com/docs/guide/manual-timemachine","help_questions_url":"https://help.apitable.com/docs/guide/questions","help_product_manual_url":"https://help.apitable.com/docs/guide/manual/","space_setting_social_ad_decs":"了解更多精彩功能","space_setting_social_ad_btn":"了解更多","help_help_center_url":"https://help.apitable.com/","help_quick_start_url":"https://help.apitable.com/docs/guide/tutorial-1-quick-start/","client_meta_label_desc":"APITable, 积木式多媒体数据表格, 多维表格技术首创者, 数据整理神器, 让人人都是数据设计师","client_meta_label_title":"APITable - 积木式多媒体数据表格","api_panel_md_js_example":"## 初始化 SDK [![github]({{ githubIcon }})](https://github.com/apitable/apitable-sdks)\\n\\n```js\\n// 如果不能使用 es6 import，可用 const APITable = require(\'apitable\').default; 代替\\nimport { APITable } from \\"apitable\\";\\n\\nconst apitable = new APITable({ token: \\"{{ apiToken }}\\", fieldKey: \\"{{ fieldKey }}\\" });\\n// 通过 datasheetId 来指定要从哪张表格操作数据。\\nconst datasheet = apitable.datasheet(\\"{{ datasheetId }}\\");\\n```\\n\\n<!--split-->\\n\\n## 获取记录\\n\\n```js\\n\\n// 获取 {{ viewId }} 视图下的记录, 默认返回第一页。\\ndatasheet.records.query({ viewId: \\"{{ viewId }}\\"}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n});\\n\\n```\\n\\n### 示例返回值\\n\\n```json\\n{{ response }}\\n```\\n\\n### 其他参数或提示\\n```js\\n/**\\n * 全局参数配置\\n */\\nnew APITable({\\n  /**\\n   * (必填) string 你的 API Token，用于鉴权\\n   */\\n  token: \'YOUR_API_TOKEN\',\\n  /**\\n   * （选填）全局指定 field 的查询和返回的 key。默认使用列名  \'name\' 。指定为 \'id\' 时将以 fieldId 作为查询和返回方式（使用 id 可以避免列名的修改导致代码失效问题）\\n   */\\n  fieldKey: \'name\', // 默认值\\n  /**\\n   * （选填）请求失效时间\\n   */\\n  requestTimeout: 60000, // 默认 60000ms (10 秒)\\n  /**\\n   * （选填）目标服务器地址\\n   */\\n  host: \'https://api.apitable.com/fusion/v1\', // 默认值\\n});\\n\\n/*******************************/\\n\\n// 获取记录\\ndatasheet.record.query({\\n  /**\\n   * （选填）视图ID。默认为表格中第一个视图。请求会返回视图中经过视图中筛选/排序后的结果，可以搭配使用fields参数过滤不需要的字段数据\\n   */\\n  viewId: \'viewId1\',\\n  /**\\n   *（选填）对返回的记录进行排序。sort 是由多个排序对象 (sort object) 组成的数组。单个排序对象的结构为 {\\"order\\":\\"asc 或 desc\\", \\"field\\":\\"字段名称或字段 ID\\"}。查询示例：sort[][field]=客户名称&sort[][order]=asc，即按照「客户名称」列的字母升序来排列返回的记录。如果 sort 与 viewId 同时使用，则 sort 指定的排序条件将会覆盖视图里的排序条件。\\n   */\\n  sort: [{ field: \'field1\': order: \'desc\' }],\\n  /**\\n   * （选填）recordIds 数组。如果附带此参数，则返回参数中指定的records数组。 返回值按照传入数组的顺序排序。此时无视筛选、排序。无分页，每次最多查询 1000 条\\n   */\\n  recordIds: [\'recordId1\', \'recordId2\'],\\n  /**\\n   * （选填）指定要返回的字段（默认为字段名, 也可以通过 fieldKey 指定为字段 Id）。如果附带此参数，则返回的记录合集将会被过滤，只有指定的字段会返回。\\n   */\\n  fields: [\'标题\', \'详情\', \'引用次数\'],\\n  /**\\n   * （选填）使用公式作为筛选条件，返回匹配的记录，访问 https://help.apitable.com/docs/guide/tutorial-getting-started-with-formulas 了解公式使用方式\\n   */\\n  filterByFormula: \'{引用次数} >  0\',\\n  /**\\n   * （选填）限制返回记录的总数量。如果该值小于表中实际的记录总数，则返回的记录总数会被限制为该值。\\n   */\\n  maxRecords: 5000,\\n  /**\\n   * （选填）单元格值类型，默认为 \'json\'，指定为 \'string\' 时所有值都将被自动转换为 string 格式。\\n   */\\n  cellFormat: \'json\',\\n  /**\\n   * （选填）指定 field 的查询和返回的 key。默认使用列名  \'name\' 。指定为 \'id\' 时将以 fieldId 作为查询和返回方式（使用 id 可以避免列名的修改导致代码失效问题）\\n   */\\n  fieldKey: \'name\',\\n});\\n\\n/*******************************/\\n\\n/**\\n * 和 query 获取记录参数相同，自动处理分页。直到获取到所有数据为止。\\n */\\nconst allRecordsIter = datasheet.records.queryAll()\\nfor await (const eachPageRecords of allRecordsIter) {\\n  console.log(eachPageRecords)\\n}\\n```\\n\\n<!--split-->\\n\\n## 新增记录\\n```js\\n// add 方法接收一个数组值，可以同时创建多条 record，单次请求可最多创建10条 record\\ndatasheet.records.create({{ records }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n\\n### 示例返回值\\n\\n```json\\n{{ response }}\\n```\\n\\n\\n### 其他参数或提示\\n\\nadd 接口接收一个数组值，可以同时创建多条 record，单次请求可最多创建10条 record\\n\\n<!--split-->\\n\\n## 更新记录\\n```js\\n/**\\n * update 接收一个数组值，可以同时更新多条 record，单次请求可最多更新10条 record\\n * 特别注意： update 只会更新你传入的 fields 下的数据，未传入的不会影响，如果需要清空值，请显式传入 null\\n */\\ndatasheet.records.update({{ records }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n### 示例返回值\\n```json\\n{{ response }}\\n```\\n\\n\\n### 其他参数或提示\\n\\nupdate 接口接收一个数组值，可以同时更新多条 record，单次请求可最多更新10条 record\\n特别注意： update 只会更新你传入的 fields 下的数据，未传入的不会影响，如果需要清空值，请显式传入 null\\n  \\n<!--split-->\\n\\n## 删除记录\\n```js\\n// del 方法接收一个数组值，可以同时删除多条 record，单次请求可最多删除10条 record\\ndatasheet.records.delete({{ recordIds }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n### 示例返回值\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"请求成功\\"\\n}\\n```\\n### 其他参数或提示\\ndelete 接口接收一个数组值，可以同时删除多条 record，单次请求可最多删除10条 record\\n\\n<!--split-->\\n\\n## 上传文件\\n\\n```js\\n/*\\n * 从 file input 中获取文件\\n * <input id=\\"input\\" name=\\"file\\" type=\\"file\\" accept=\\"*\\" >\\n * 或者在 NodeJs 中使用流读取文件\\n * const file = fs.createReadStream(/your/file/path)\\n *\\n * 下方以浏览器环境作为示例\\n */\\nconst input = document.getElementById(\'input\');\\n\\ninput.onchange = function () {\\n  const file = this.files[0];\\n  datasheet.upload(file).then(response => {\\n    /**\\n     * response 数据包括\\n     *   success: boolean\\n     *   code: number\\n     *   message: string\\n     *   data: IAttachment\\n     */\\n    if (response.success) {\\n      console.log(response.data);\\n    } else {\\n      console.error(response);\\n    }\\n  });\\n};\\n\\n```\\n### 示例返回值\\n\\n*Tips:上传完毕后，请尽快写入data 中的数据到附件单元格里，否则附件链接可能失效*\\n\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"请求成功\\",\\n  \\"data\\": {\\n    \\"id\\": \\"atcPtxnvqti5M\\",\\n    \\"name\\": \\"6.gif\\",\\n    \\"size\\": 33914,\\n    \\"mimeType\\": \\"image/gif\\",\\n    \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n    \\"width\\": 240,\\n    \\"height\\": 240,\\n    \\"url\\": \\"https://s1.apitable.com/space/2023/02/09/ed97d84948c648498f6b36b1b769071f\\"\\n  }\\n}\\n```\\n\\n### 其他参数或提示\\ndelete 接口接收一个数组值，可以同时删除多条 record，单次请求可最多删除10条 record","api_panel_md_python_example":"## 初始化 SDK [![github]({{ githubIcon }})](https://github.com/apitable/apitable-sdks)\\n\\n```python\\nfrom apitable import Apitable\\napitable = Apitable(\\"{{ apiToken }}\\")\\n# 通过 datasheetId 来指定要从哪张表格操作数据。\\ndatasheet = apitable.datasheet(\\"{{ datasheetId }}\\", field_key=\\"{{ fieldKey }}\\")\\n```\\n\\n{{ fieldNameTips }}\\n<!--split-->\\n\\n## 获取记录\\n\\n```python\\n# 返回所有记录的集合\\nrecords = datasheet.records.all()\\nfor record in records:\\n  print(record.json())\\n\\n# 指定视图id，只返回该视图的记录\\nrecords_via_view = datasheet.records.all(viewId=\\"{{ viewId }}\\")\\n# 查找并返回一条记录（如果存在多条，则返回第一条），一般通过唯一标识获取单条记录。\\none_record = datasheet.records.get({{ pyGetParams }})\\n# 查询并返回符合条件的记录数组，不加条件效果和 all 相同\\nrecords = datasheet.records.filter({{ pyGetParams }})\\n```\\n<!--split-->\\n\\n## 新增记录\\n```python\\n# 创建单条记录\\nrow = datasheet.records.create({{ addParams }})\\n# 创建多条记录\\nrecords = datasheet.records.bulk_create({{  bulkAddParams }})\\n\\n```\\n<!--split-->\\n\\n## 更新记录\\n```python\\nrow = datasheet.records.get({{ pyGetParams }})\\n\\n# 更新单个字段\\nrow.{{ oneFieldKey }} = {{ oneFieldValue }}\\n## row.save()\\n\\n# 更新多个字段\\nrow.update({{ updateParams }})\\n\\n```\\n<!--split-->\\n\\n## 删除记录\\n```python\\nrecord = datasheet.records.get({{ pyGetParams }})\\n# 删除单条记录\\nrecord.delete()\\n# 删除符合查询条件的一批记录\\ndatasheet.records.filter({{ pyGetParams }}).delete()\\n# 通过 recordId 删除记录\\ndatasheet.delete_records({{ recordIds }})\\n```\\n<!--split-->\\n\\n## 上传文件\\n\\n```python\\n_file = datasheet.upload_file(<本地/网络文件路径>)\\nrecord.{{ attachFieldName }} = [_file]\\n```","api_panel_md_curl_example":"<!--split-->\\n\\n## 获取记录\\n\\n```shell\\ncurl \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\"\\n\\n```\\n\\n### 示例返回值\\n\\n```json\\n\\n{{ response }}\\n\\n```\\n\\n### 其他参数或提示\\n```js\\n/**\\n * 注意：每张表格获取数据最大并发量限制为 1 秒钟 5 次\\n * 全部可配置的参数，可通过 URL Query Params 发送，\\n */\\n{\\n  /**\\n   * （选填）视图ID。默认为表格中第一个视图。请求会返回视图中经过视图中筛选/排序后的结果，可以搭配使用fields参数过滤不需要的字段数据\\n   */\\n  viewId: \'viewId1\',\\n  /**\\n   * （选填）指定分页的页码，默认为 1，与参数pageSize配合使用。\\n   */\\n  pageNum: 1,\\n  /**\\n   * （选填）指定每页返回的记录总数，默认为100。此参数只接受1-1000的整数。\\n   */\\n  pageSize: 100,\\n  /**\\n   * （选填）对返回的记录进行排序。sort 是由多个排序对象 (sort object) 组成的数组。单个排序对象的结构为 {\\"order\\":\\"asc 或 desc\\", \\"field\\":\\"字段名称或字段 ID\\"}。查询示例：sort[][field]=客户名称&sort[][order]=asc，即按照「客户名称」列的字母升序来排列返回的记录。如果 sort 与 viewId 同时使用，则 sort 指定的排序条件将会覆盖视图里的排序条件。\\n   */\\n  sort: [{ field: \'field1\', order: \'desc\' }],\\n  /**\\n   * （选填）recordIds 数组。如果附带此参数，则返回参数中指定的records数组。 返回值按照传入数组的顺序排序。此时无视筛选、排序。无分页，每次最多查询 1000 条\\n   */\\n  recordIds: [\'recordId1\', \'recordId2\'],\\n  /**\\n   * （选填）指定要返回的字段（默认为字段名, 也可以通过 fieldKey 指定为字段 Id）。如果附带此参数，则返回的记录合集将会被过滤，只有指定的字段会返回。\\n   */\\n  fields: [\'标题\', \'详情\', \'引用次数\'],\\n  /**\\n   * （选填）使用公式作为筛选条件，返回匹配的记录，访问 https://help.apitable.com/docs/guide/tutorial-getting-started-with-formulas 了解公式使用方式\\n   */\\n  filterByFormula: \'{引用次数} >  0\',\\n  /**\\n   * （选填）限制返回记录的总数量。如果该值小于表中实际的记录总数，则返回的记录总数会被限制为该值。\\n   */\\n  maxRecords: 5000,\\n  /**\\n   * （选填）单元格值类型，默认为 \'json\'，指定为 \'string\' 时所有值都将被自动转换为 string 格式。\\n   */\\n  cellFormat: \'json\',\\n  /**\\n   * （选填）指定 field 的查询和返回的 key。默认使用列名  \'name\' 。指定为 \'id\' 时将以 fieldId 作为查询和返回方式（使用 id 可以避免列名的修改导致代码失效问题）\\n   */\\n  fieldKey: \'name\',\\n}\\n```\\n\\n<!--split-->\\n\\n## 新增记录\\n```shell\\ncurl -X POST \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\"  \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  --data \'{\\n  \\"records\\": {{ records }},\\n  \\"fieldKey\\": \\"{{ fieldKey }}\\"\\n}\'\\n\\n```\\n\\n### 示例返回值\\n\\n```json\\n{{ response }}\\n```\\n\\n### 其他参数或提示\\n\\nadd 接口接收一个数组值，可以同时创建多条 record，单次请求可最多创建10条 record\\n\\n<!--split-->\\n\\n## 更新记录\\n```shell\\ncurl -X PATCH \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  --data \'{\\n  \\"records\\": {{ records }},\\n  \\"fieldKey\\": \\"{{ fieldKey }}\\"\\n}\'\\n```\\n### 示例返回值\\n\\n```json\\n{{ response }}\\n```\\n\\n\\n### 其他参数或提示\\n\\nupdate 接口接收一个数组值，可以同时更新多条 record，单次请求可最多更新10条 record\\n特别注意： update 只会更新你传入的 fields 下的数据，未传入的不会影响，如果需要清空值，请显式传入 null\\n\\n\\n<!--split-->\\n\\n## 删除记录\\n```shell\\ncurl -X DELETE \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?{{ deleteParams }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\"\\n\\n```\\n\\n### 示例返回值\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"请求成功\\"\\n}\\n```\\n\\n### 其他参数或提示\\n\\ndelete 接口接收一个数组值，可以同时删除多条 record，单次请求可最多删除10条 record\\n<!--split-->\\n\\n## 上传文件\\n\\n```shell\\ncurl -X POST \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/attachments\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: multipart/form-data\\" \\\\\\n  -F \\"file=@{你的 文件路径};\\"\\n```\\n### 示例返回值\\n\\n*Tips:上传完毕后，请尽快写入data 中的数据到附件单元格里，否则附件链接可能失效*\\n\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"请求成功\\",\\n  \\"data\\": {\\n    \\"id\\": \\"atcPtxnvqti5M\\",\\n    \\"name\\": \\"6.gif\\",\\n    \\"size\\": 33914,\\n    \\"mimeType\\": \\"image/gif\\",\\n    \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n    \\"width\\": 240,\\n    \\"height\\": 240,\\n    \\"url\\": \\"https://s1.apitable.com/space/2023/02/09/ed97d84948c648498f6b36b1b769071f\\"\\n  }\\n}\\n```","workbench_share_link_template":"【APITable】- ${nickName}给你分享了《${nodeName}》","contacts_invite_link_template":"【APITable】- ${nickName}邀请你加入「${spaceName}」空间站","robot_create_name_placeholder":"罗伯特","welcome_module2":"一分钟快速入门","assistant_beginner_task_2_quick_start":"一分钟快速入门","section6_title":"什么是 APITable？","assistant_beginner_task_1_what_is_datasheet":"什么是 APITable","welcome_module1":"什么是 APITable","robot_run_history_old_version_tip":"抱歉，此为旧版本下的运行历史，不支持查看输入输出","system_configuration_product_name":"APITable","official_name":"APITable","login_title":"进入 APITable","assistant_beginner_task_title2":"跟着指引开始你的 APITable 之旅吧～","official_account_qrcode":"APITable","test_function_card_info_robot":"使用机器人，将 APITable 中的重复性操作自动化，解放员工生产力","robot_trigger_record_matches_condition_config_2_desc":"注意：不支持在匹配条件中添加日期列或者包含日期函数的公式列来实现定时触发或到期触发 [FAQ 参考](https://help.apitable.com/docs/guide/manual-automation-robot#robot-scene-related-faq)","api_panel_type_default_example_email":"support@apitable.com","api_panel_type_default_example_member":"[\\n    {\\n        \\"id\\": \\"1291258301781176321\\",\\n        \\"type\\": 3,\\n        \\"name\\": \\"小葵\\",\\n        \\"avatar\\": \\"https://s1.apitable.com/space/2023/02/09/79e112dd10424ac7842256736e4f5568\\"\\n    }\\n]","api_panel_type_default_example_url":"https://apitable.com","share_modal_desc":"复制下方专属链接~ <br/>邀请好友使用 APITable <br/>与朋友一起“友”福同享","help_user_community":"加入社区","intro_dashboard":"https://help.apitable.com/docs/guide/intro-dashboard","welcome_workspace_tip2":"欢迎来到 APITable，开始体验「积木式多媒体数据表格」","mirror_help_url":"https://help.apitable.com/docs/guide/manual-mirror","welcome_title":"感谢使用 APITable","social_plat_bind_space_seats_err":"当前空间站成员数上限为${count}人，如想提高上限， 请<a href=\'https://help.apitable.com/docs/guide/how-contact-service\' target=\\"_blank\\">联系我们</a>","how_create_template":"目前还没有空间站模板 <a href=\'https://help.apitable.com/docs/guide/faq-how-create-template\' target=\\"_blank\\">如何创建</a>","assistant":"小助手","view_restrictions":"<a href=\\"https://apitable.com/pricing/\\">查看限制</a>","assistant_hide":"取消悬浮","system_configuration_company_name_short":"APITable","official_template_centre_description":"官方模板中心","marketing_sub_title":"由 APITable 官方集成的第三方应用","assistant_beginner_task_title1":"欢迎来到 APITable","setting_nickname_title":"恭喜你拿到 APITable 的居民身份证","gallery_group_hlep_url":"https://help.apitable.com/docs/guide/manual-gallery-view","group_help_url":"https://help.apitable.com/docs/guide/manual-group","sort_help_url":"https://help.apitable.com/docs/guide/manual-sort","filter_help_url":"https://help.apitable.com/docs/guide/manual-filter","kanban_style_setting_url":"https://help.apitable.com/docs/guide/manual-kanban-view","gallery_style_setting_url":"https://help.apitable.com/docs/guide/manual-gallery-view#set-style","how_to_report_issues":"https://help.apitable.com/docs/guide/how-to-report-issues","how_contact_service":"https://help.apitable.com/docs/guide/how-contact-service","record_history_help_url":"https://help.apitable.com/docs/guide/manual-record-history","field_permission_help_url":"https://help.apitable.com/docs/guide/manual-field-permission","gantt_setting_help_url":"https://help.apitable.com/docs/guide/manual-gantt-view","intro_widget":"https://help.apitable.com/docs/guide/intro-widget","summary_widget_setting_help_url":"https://help.apitable.com/docs/guide/intro-widget-summary","chart_widget_setting_help_url":"https://help.apitable.com/docs/guide/intro-widget-chart","form_tour_link":"https://help.apitable.com/docs/guide/magic-form","form_help_link":"https://help.apitable.com/docs/guide/magic-form","set_permission_modal_help":"https://help.apitable.com/docs/guide/faq-permission-settings","view_sort_help":"https://help.apitable.com/docs/guide/manual-sort","lookup_help":"https://help.apitable.com/docs/guide/manual-field-lookup","formula_learn_more_url":"https://help.apitable.com/docs/guide/manual-summary-of-formula-functions-and-operators","function_dateadd_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_datetime_diff_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_datetime_format_url":"https://help.apitable.com/docs/guide/datetime-format-specified-output-format","function_datetime_parse_url":"https://help.apitable.com/docs/guide/set-locale-specified-output-format","function_fromnow_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_is_same_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_set_locale_url":"https://help.apitable.com/docs/guide/set-locale-specified-output-format","function_tonow_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","price_title1":"APITable","new_user_welcom_notify":"欢迎加入 APITable，我们为你准备了一份免费学习 APITable 的见面礼，点击这条消息即可跳转了解详情。","private_product_point":"一键拥有自己的 APITable 平台","widget_import_from_airtable_step_2_description":"请为下面待导入的 Airtable 字段选择字段类型，导入完成后将在表格中创建相应的字段并填充对应的数据","security_setting_export_data_title":"指定成员可导出表格和视图","inclusion_plan_title":"APITable 创业扶持与教育普惠计划","subscribed_record_commented":"<a class=\\"memberName\\"></a>在「<a class=\\"nodeName\\"></a>」表格「<a class=\\"recordTitle\\"></a>」的记录进行了评论：「<a class=\\"content\\"></a>」","subscribed_record_cell_updated":"<a class=\\"memberName\\"></a>修改了「<a class=\\"nodeName\\"></a>」表格「<a class=\\"recordTitle\\"></a>」的记录：\\n由 \\"<a class=\\"oldDisplayValue\\"></a>\\" 修改为了 \\"<a class=\\"newDisplayValue\\"></a>\\"","member_type_field":"成员类型的字段","error_move_column_failed_invalid_params":"移动字段失败：参数错误","error_set_column_failed_no_support_unknown_column":"设置字段属性失败：不支持修改未知列","error_group_failed_the_column_not_exist":"分组失败：目标字段不存在","message_fields_count_up_to_bound":"该表格已达字段上限，无法创建关联关系","view_field_search_not_found_tip":"未找到名称为“${value}”的字段","welcome_workspace_tip1":"你可以快速创建一个表格，开启 APITable 旅程","error_set_column_failed_bad_property":"设置字段属性失败：字段属性异常","lookup_field":"从下方表格中选择字段","delete_field_tips_title":"删除字段","audit_add_field_role_detail":"<a class=\\"memberName\\"></a>在「<a class=\\"nodeName\\"></a>」表格<a class=\\"times\\"></a>中，对字段 [<a class=\\"fieldName\\"></a>]添加 [<a class=\\"unitName\\"></a>]的角色为 [<a class=\\"role\\"></a>]","section6_desc":"APITable，不是电子表格，是新一代的数据生产力平台。多维表格的首创者，无需代码技术即可完成企业/团队系统的深度定制。作为「下一个职场必备技能」，比 Excel 更好上手，比 Python 更具实用性，APITable 可以实现：","bronze_grade_desc":"适用于刚上手 APITable 的个人或团队","function_t_summary":"如果输入值为文本类型，则返回原文本，如果非文本类型则返回空值。\\n\\n【value】是被检查是否为文本的值。\\n\\n比如，输入值引用数字、日期等类型的字段，那么将会返回空值。","function_substitute_summary":"将内容中特定的文本全部替换为新文本。\\n\\n【string】是你输入的一段内容，其中包含了被替换的文本。该内容可以是输入的文本或者引用的字段数据。\\n【old_text】要被替换的原文本。\\n【new_text】替换原文本的新文本。\\n【index】非必填，是索引号，指定索引号后系统仅会替换特定位置的原文本。\\n\\n本函数将文本中的原字符替换为新字符，在没有特别声明的情况下，新字符将替换所有出现的原字符。\\n\\n（如果你想替换指定起点位置和终点位置之间的字符，请参见REPLACE。）","function_search_summary":"搜索特定的文本在内容中第一次出现的位置。\\n\\n【stringToFind】是要搜索到的特定文本。\\n【whereToSearch】指定从哪段内容搜索文本。可以输入文本参数或者引用字段。\\n【startFromPosition】非必填，指定从内容的哪个位置开始搜索（用数字表示第几个字符）。\\n\\n本函数可以在一大段内容中快速搜索特定文本出现的位置。 \\n如果返回数字3，表示文本出现在该内容的第3个字符。\\n如果未找到匹配的文本，则结果将为空值。\\n\\n其效果与FIND()类似，但是未找到匹配项时，FIND()返回值为0而不是空值。","function_replace_summary":"将内容中特定位置的一段文本替换为新文本。\\n\\n【string】是你输入的一段内容，其中包含了被替换的文本。该内容可以是输入的文本或者引用的字段数据。\\n【start_character】是你指定从哪儿替换文本，用数字表示。比如数字\\"3\\"表示从内容的第3个字符开始替换。\\n【number_of_characters】是你指定要替换掉多少个字符，用数字表示。比如数字\\"2\\"表示替换掉指定位置的2个字符。\\n【replacement】是替换原文本的新文本。\\n\\n（如果你想将内容中所有出现的原文本替换为新文本，请参见SUBSTITUTE。）","function_mid_summary":"从内容中特定位置提取一段固定长度的文本。\\n\\n【string】是你输入的一段内容，其中包含了被提取的文本。该内容可以是输入的文本或者引用的字段数据。\\n【whereToSearch】是你指定从哪儿提取文本，用数字表示。比如数字\\"3\\"表示从内容的第3个字符开始提取。\\n【count】是提取的文本长度，用数字表示。比如数字\\"2\\"表示从指定位置提取2个字符。","function_find_summary":"查找特定的文本在内容中第一次出现的位置。\\n\\n【stringToFind】是要查找到的特定文本。\\n【whereToSearch】指定从哪段内容内查找文本。可以输入文本参数或者引用字段。\\n【startFromPosition】非必填，指定从内容的哪个位置开始查找（用数字表示第几个字符）。\\n\\n本函数可以在一大段内容中快速查找特定文本出现的位置。\\n如果返回数字3，表示文本出现在该内容的第3个字符。\\n如果未找到匹配的文本，则结果将为0。\\n\\n其效果与SEARCH()类似，但是未找到匹配项时，SEARCH()返回值为空而不是0。","empty_datasheet":"新建空白表格","datasheet":"表格","current_datasheet":"当前表格","views_per_datasheet":"表格视图数","template_center_use_to_create_datasheets":"使用模板创建表格","node_with_link_share_view_reminder":"温馨提示：当前已开启分享的表格存在关联其他表格的内容","folder_with_link_share_view_reminder":"温馨提示：当前文件夹下存在关联了本文件夹内容外的表格","function_last_modified_time_summary":"返回每一行的单元格中进行最后一次修改的时间 。\\n注意：系统只会返回计算类型列的单元格的修改。\\n\\n如果你只关心特定字段的单元格的更新时间，你可以指定一个或多个列，见例子二和三。","function_false_summary":"返回逻辑值false\\n\\n可以判断勾选类型的字段中单元格是否为”未选中状态“，见例子一； \\n\\n可以和FALSE一起使用输出为真和假的布尔值，见例子二；","columns_count_limit_tips":"哟，你的表格已经超过了 ${column_limit} 列的限制","user_space_member_limited_tips":"哟，你的 ${space} 空间站，已经达到上限 ${spec} 张表格了\\n","placeholder_input_datasheet_name":"请输入表格名称","template_centre":"APITable 模板中心","activity_login_desc":"你的好友「${nickname}」邀请你注册使用 APITable","unbind_third_party_accounts_desc":"解绑后 APITable 仍可正常使用，但会影响使用${mode}帐号登录 APITable","error_page_feedback_text":"👉   向 APITable 报告问题，帮助 APITable 解决技术问题","field_title":"字段名","field_type":"字段类型","error_set_column_failed_duplicate_column_name":"设置字段属性失败：列名称重复","kanban_new_member_field":"请输入该字段名","kanban_new_option_field":"请输入该字段名","is_repeat_column_name":"存在重复的字段名","these_columns_you_chose_would_be_deleted":"你所选中的 ${count} 个字段将会被删除","toast_add_field_success":"添加字段成功","toast_duplicate_field_success":"复制字段成功","toast_insert_field_success":"插入字段成功","err_filter_field":"该字段存在配置错误，暂不支持设置为筛选","datasheet_1000_rows_limited_tips":"抱歉，你的表格超过了 1000 行的限制","records_per_datasheet":"单表格行数","rows_limit_5000_limit_tips":"抱歉，你的表格超过了 5000 行的限制","rows_per_datasheet":"单个表格行数限制","delete_field_success":"删除字段成功","confirm_change_field":"转换字段类型","linked_datasheet":"关联的表格","choose_datasheet_to_link":"请选择要关联的表格","check_link_table":"请选择要关联的表格","search_folder_or_sheet":"搜索文件夹或表格","del_field_content":"确定删除字段「${fieldname}」吗？","lookup_not_found_search_keyword":"没有找到包含\\"${notFoundSearchKeywordSpan}\\"的字段","pick_field_or_function":"选择字段或函数","field":"字段","uneditable_check_info":"该字段不允许被编辑","all_editable_fields":"所有可编辑的字段","specified_fields":"指定字段","delete_field_tips_content":"确定删除字段「${field_title}」吗？","view_field":"字段","kanban_setting_create_member":"创建一个成员类型的字段","form_view_desc":"连接表格视图，收集数据更规范","lookup_values_summary":"从关联表中原样引用选定字段的数据。","lookup_field_err":"请先在当前表格添加一个「神奇关联」列","table_link_err":"请先在当前表格添加一个「神奇关联」列","check_table_link_field":"请选择「神奇关联」字段","no_view_create_form":"当前没有表格视图，无法生成表单","add_gallery_view_success_guide":"对于带有图片的表格，相册视图可以很直观的展示你的数据。另外，APITable 还有更多有趣的功能正在迭代，敬请期待～","del_field_tip":"删除字段","folder_with_link_share_reminder":"当前文件夹下存在关联了本文件夹内容外的表格，继续开启分享？","follow_up_guidelines":"使用电脑打开 APITable 可获更佳体验","guide_2":"花费几分钟跟随我们的指引，学习一下 APITable 的常规功能，可以让您事半功倍哦！","guide_flow_of_catalog_step2":"工作目录里面，除了可以单独创建表格，也可以单独创建文件夹","guide_flow_of_click_add_view_step1":"除了基本的表格视图之外，我们支持创建相册视图，如果你有图片附件的话，我建议你创建个相册视图试试","guide_flow_of_datasheet_step2":"这是视图工具栏，在这里你可以对表格的数据进行筛选排序等操作","guide_flow_of_datasheet_step3":"这就是你的表格内容啦，里面都是你的数据哦～","invitation_validation_title":"Oops~ 当前大量用户涌入 APITable","long_time_no_operate":"该表格已经很久未操作，请刷新页面保持数据为最新~","new_something_tips":"点击创建新的文件夹、表格","node_with_link_share_reminder":"当前分享的表格存在关联其他表格的内容，继续开启分享？","personal_invite_code_tip":"个人邀请码：可以寻找已成为 APITable 的用户获取个人邀请码。","rollup_field":"关联表中被引用的字段","search_fields":"搜索字段","swagger_constants_desc":"APITable 融合开放 API 文档，帮助你基于强大的 APITable 数据库快速构建应用","tip_setting_nickname_distribute":"「${nickname}」是 APITable 为你分配的随机昵称～","using_template_title":"通过该模板来创建表格","err_field_group_tip":"字段配置错误，暂不支持分组","error_field_not_exist":"字段不存在","field_had_deleted":"该字段已被删除","function_arrayjoin_summary":"将汇总数组中的所有值拼接成一个带分隔符的字符串。\\n\\n【item】表示数组值，比如多选、附件、神奇关联和神奇引用字段类型的单元格值。","function_arrayflatten_summary":"通过删除任何数组嵌套来平铺数组。 所有数据都成为同一个数组的元素。\\n\\n【item】表示数组值，比如多选、附件、神奇关联和神奇引用字段类型的单元格值。","function_arraycompact_summary":"从数组中删除空字符串和空值。\\n\\n【item】表示数组值，比如多选、附件、神奇关联和神奇引用字段类型的单元格值。\\n\\n本函数会保留“ false”值和空白字符的字符串","function_and_summary":"如果所有参数均为真（true），则返回真（true），否则返回假（false）。\\n\\n【logical】是逻辑参数，可以是逻辑值、数组或引用的字段","function_arrayunique_summary":"仅返回数组中的唯一项。\\n\\n【item】表示数组值，比如多选、附件、神奇关联和神奇引用字段类型的单元格值。","function_err_invalid_field_name":"无效的字段或函数名称：${fieldId}","function_example_usage":"引用字段：{列名}\\n使用运算符：2 * 5\\n使用函数：AVERAGE({数字列1}, {数字列2})\\n使用IF语句：IF(逻辑条件, \\"值1\\", \\"值2\\")","function_left_example":"LEFT(\\"APITable：支持API，随意DIY\\", 8)\\n=> APITable \\n\\nLEFT({出生年月}, 4)\\n=> 1994","function_is_same_summary":"确定日期1是否等于日期2，如果等于则返回真（true），否则返回假（false）。\\n\\n【date1】是日期1。\\n【date2】是日期2。\\n【units】非必填， 是比较的时间单位。比如比较两个日期是否相等，一直对比到分钟单位。\\n\\n日期可以是输入的参数，见用例一；\\n日期也可以是引用日期类型的字段，见用例四。\\n在单元格内真和假用\\"已勾选\\"和\\"未勾选\\"表示。\\n\\n点击下方链接可查看全部计时单位。","function_is_before_summary":"比较日期1是否早于日期2，如果早于则返回真（true），否则返回假（false）。\\n\\n【date1】是日期1。\\n【date2】是日期2。\\n\\n日期可以是输入的参数，见用例一；\\n日期也可以是引用日期类型的字段，见用例二。\\n在单元格内真和假用\\"已勾选\\"和\\"未勾选\\"表示。","function_is_after_summary":"比较日期1是否晚于日期2，如果晚于则返回真（true），否则返回假（false）。\\n\\n【date1】是日期1。\\n【date2】是日期2。\\n\\n日期可以是输入的参数，见用例一；\\n日期也可以是引用日期类型的字段，见用例二。\\n\\n在单元格内真和假用\\"已勾选\\"和\\"未勾选\\"表示。","function_right_example":"RIGHT(\\"APITable：支持API，随意DIY\\", 5)\\n=> 随意DIY\\n\\nRIGHT({出生年月}, 5)\\n=> 07-13","function_or_summary":"如果任何一个参数为真（true），则返回真（true），否则返回假（false）。\\n\\n【logical】是逻辑参数，可以是逻辑值、数组或引用的字段。","function_t_example":"T(\\"APITable\\")\\n=> APITable \\n\\nT(\\"55\\")\\n=> 55 \\n\\nT(55)\\n=> 空值\\n\\nT({数学成绩})\\n=> 空值","function_xor_summary":"如果奇数个参数为真（true），则返回真（true），否则返回假（false）。\\n\\n【logical】是逻辑参数，可以是逻辑值、数组或引用的字段。","function_true_summary":"【简介】\\n返回逻辑值真（ true ）。\\n\\n【参数说明】\\n该函数不需要填写参数。\\n该函数可以判断勾选类型的字段是否为 “已选中状态” ，见例子一；\\n该函数和 FALSE() 一起使用可以输出为真和假的布尔值，见例子二。","kanban_setting_create_option":"创建一个单选类型的字段","kanban_setting_tip":"你只能选择类型为「单选」或者「成员(单选)」的字段，我们会以该字段下的选项进行分组","field_select_modal_title":"选择指定的字段","last_modified_time_select_modal_desc":"由于该字段类型的特殊性，下方只展示可编辑的列，每当有人在指定的列进行过修改，则会更新当前的修改时间","last_modified_by_select_modal_desc":"由于该字段类型的特殊性，下方只展示可编辑的列，每当有人在指定的列进行过修改，则会更新当前的修改人","field_select_modal_desc":"由于该字段类型的特殊性，下方只展示可编辑的列，每当有人在指定的列进行过修改，则会更新当前的修改人","security_disabled_copy_cell_date_tip":"禁止成员复制表格的数据到 Execl 等其他软件","gird_view_shortcuts":"表格视图快捷键","workbench_setting_cannot_export_datasheet_title":"全员允许导出表格","new_datasheet":"新建表格","datasheet_choose_field_type":"选择字段类型","member_data_desc_of_record_number":"工作目录中所有表格中记录的数量统计，包括空白记录","robot_trigger_record_created_config_1":"选择表格","robot_trigger_record_matches_condition_config_1_desc":"指定在哪张表格有记录满足条件时，触发机器人开始运行（目前只支持选择当前表）","robot_trigger_record_created_config_1_desc":"指定在哪张表格有记录创建时，触发机器人开始运行（目前只支持选择当前表）","robot_trigger_record_matches_condition_config_1":"选择表格","robot_variables_datasheet_URL":"表格 URL","robot_variables_datasheet_ID":"表格 ID","robot_variables_datasheet_name":"表格名称","security_disabled_export_data":"禁止导出表格和视图","security_disabled_export_data_describle":"成员无法将工作目录中的表格或者视图数据导出到本地","select_wdget_Import_widget":"选择你要导入小程序的表格","select_widget_Import_widget":"从下方表格导入小程序","grid_view":"表格视图","welcome_module3":"玩转一张表格","assistant_beginner_task_3_how_to_use_datasheet":"玩转一张表格","member_data_desc_of_appendix":"工作目录中所有表格内上传附件的大小统计，如果上传附件达到容量上限将无法上传新的附件。","bind_resource":"请选择要关联的表格","single_record_member_mention":"<a class=\\"memberName\\"></a>在「<a class=\\"nodeName\\"></a>」表格「<a class=\\"recordTitle\\"></a>」记录「<a class=\\"fieldName\\"></a>」中提及了你","field_set_you_by_user":"<a class=\\"memberName\\"></a>在表格「<a class=\\"nodeName\\"></a>」的<a class=\\"times\\"></a>提及了你","single_record_comment_mentioned":"<a class=\\"memberName\\"></a>在「<a class=\\"nodeName\\"></a>」表格「<a class=\\"recordTitle\\"></a>」记录的评论内提及了你","comment_mentioned":"<a class=\\"memberName\\"></a>在「<a class=\\"nodeName\\"></a>」表格<a class=\\"times\\"></a>的评论内提及了你","default_view":"表格视图","default_create_datasheet":"新建表格","datasheet_reach_limit":"空间站「<a class=\\"spaceName\\"></a>」的表格数量已达上限","function_countif_example":"COUNTIF({评级}, \\"A\\")\\n=> 2\\n// 其中{评级}为”神奇引用“类型的字段，数据格式为数组。\\n\\nCOUNTIF({得分}, 3, \\">\\")\\n=> 2\\n// 其中{得分}为”神奇引用“类型的字段，数据格式为数组。\\n\\nCOUNTIF({顺口溜}, \\"葡萄\\")\\n=> 2\\n// 其中{顺口溜}为”文本“类型的字段，数据格式为文本字符串。","robot_variables_select_columns":"字段","api_panel_type_desc_member":"由若干「组织单元（unit）」组成的数组  「组织单元」是 APITable 中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  id (string) : 组织单元的ID type (number) : 组织单元的类型，1是小组，3是成员 name (string) : 组织单元的名称，如果 type 是1，此值为小组名称；如果 type 是3，此值为成员站内昵称","api_panel_type_desc_last_modified_by":"最近一次编辑记录/指定字段的成员（unit），以数组形式返回  「组织单元」是 APITable 中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  *修改人必须为成员（member） unitId (string) : 组织单元的ID unitType (number) : 组织单元的类型，1是小组，3是成员 unitName (string) : 组织单元的名称，如果unitType是1，此值为小组名称；如果unitType是3，此值为成员站内昵称","api_panel_type_desc_created_by":"创建此记录的成员（unit），以数组形式返回  「组织单元」是 APITable 中描述“空间站”与“成员”之间的关系的一个抽象概念。成员（member）、小组（team）都是一种组织单元。  *创建人必须为成员（member） unitId (string) : 组织单元的ID unitType (number) : 组织单元的类型，1是小组，3是成员 unitName (string) : 组织单元的名称，如果unitType是1，此值为小组名称；如果unitType是3，此值为成员站内昵称","subject_datasheet_remind":"{MEMBER_NAME}在表格内提及了你","tooltip_cannot_create_widget_from_dashboard":"无法从仪表盘创建小程序，请前往一张表格创建小程序","api_datasheet_not_exist":"找不到指定的表格","api_datasheet_not_visible":"表格不可见","share_permisson_model_link_datasheet_label_desc":"当前文件（夹）关联了外部的表格","task_reminder":"你在「<a class=\\"nodeName\\"></a>」表格中的事项「<a class=\\"recordTitle\\"></a>」的到期时间为<a class=\\"taskExpireAt\\"></a>，请及时处理","app_launch_guide_text_1":"千人同时操作一张表格，高效实时协同","edit_field_name":"编辑字段名","cascader_no_datasheet_error":"请选择一张表格","og_site_name_content":"APITable","og_product_description_content":"APITable, 积木式多媒体数据表格, 多维表格技术首创者, 数据整理神器, 让人人都是数据设计师","og_keywords_content":"APITable,大数据,数字化,数字化转型,数据中台,业务中台,数据资产,数字化智能办公,远程办公,数据工作台,区块链,人工智能,多维表格,aPaaS,hpaPaaS,RAD,数据库应用,快速开发工具","auth_server_extensions_login_description_content":"APITable 统一登录页","initialization_failed_message":"页面在加载的过程中有未初始化成功的数据，请刷新重试","welcome_module5":"项目管理","player_contact_us":"联系我们","verification_code":"验证码","placeholder_message_code":"请输入验证码","placeholder_enter_your_verification_code":"请输入验证码","get_verification_code":"获取验证码","message_code":"获取验证码","password_not_identical_err":"两次输入的密码不一致","password_length_err":"密码长度必须在 8-24 位之间","placeholder_set_password":"请设置 8-24 位字母数字组合密码","password_rules":"密码为 8-24 位，包含字母和数字","login_frequent_operation_reminder_content":"帐号密码错误频繁，请20分钟后再试","account_password_incorrect":"帐号或密码错误","reset_password":"重置密码","password_pattern_err":"密码必须同时存在数字和字母","password":"密码","confirmation_password_reminder":"再次输入新密码","change_password_fail":"修改密码失败","set_new_password":"设置新密码","message_set_password_succeed":"设置密码成功","placeholder_input_password_again":"请再次输入密码","label_set_password":"请设置密码","label_password":"密码","placeholder_input_new_password_with_given_rules":"请输入 8-24 位字母加数字组合的新密码","change_password":"修改密码","retrieve_password":"忘记密码","set_password":"设置密码","change_password_success":"修改密码成功","input_confirmation_password":"确认密码","input_new_password":"新密码","placeholder_input_new_password_again":"请再次输入新密码","obtain_verification_code":"未获取验证码或已过期，请重新获取","phone_email_login":"邮箱登录"},"en-US":{"access_to_space_station_editors":"Enter the space to edit","account_ass_manage":"Account binding","account_format_err":"Account format error","account_manager_invalid_subtip":"Account binding can\'t be managed here for the \\"${spaceName}\\" Space","account_nickname":"Account name: ","account_wallet":"Wallet","activate_space":"Activate Space","active_record_hidden":"The record has been hidden","active_space":"Activate Space","activity":"Activity","activity_marker":"Click to view the record\'s comments","activity_no_rank_number":"未上榜","activity_rank":"当前排名：","activity_rank_number":"第 ${rank} 名","activity_register_tip1":"By signing up you agree to ","activity_share_btn":"立即参与","activity_tip":"When you\'re mentioned in a record, you will be notified","adaptive":"Adaptive","add":"Add","add_an_option":"Add an option","add_attachment":"Add attachment","add_cover":"Add cover","add_dashboard":"New dashboard","add_datasheet_editor":"In addition to \\"Update-only\\", can also add or delete views and delete records","add_datasheet_manager":"Can perform all actions on the file","add_datasheet_reader":"Can read data or comment on the datasheet","add_datasheet_updater":"Can read, add and edit records except deleting records","add_favorite_success":"Pinned to top successfully","add_filter":"Add filter","add_filter_condition_tips":"Pick a field to Filter","add_filter_empty":"Pick another field to Filter","add_folder_editor":"In addition to \\"Update-only\\", can also edit and share files","add_folder_manager":"Can perform all actions to the file","add_folder_reader":"Can read files in the folder","add_folder_updater":"Can read, add and edit records except deleting records","add_form":"New form","add_form_logo":"Add logo","add_gantt_group_card":"New record in the group","add_grouping":"Pick another field to Grouping","add_grouping_empty":"Pick a field to Grouping","add_image":"Add image","add_kanban_group_card":"New record","add_link_record_button":"Link to record(s) from ${datasheetname}","add_link_record_button_disable":"Link Record Empty","add_manager":"Manager","add_mark_line":"Add mark line","add_member":"Add member","add_member_fail":"Failed to add members","add_member_or_group":"Add member / team","add_member_or_unit":"Add member or team","add_member_success":"Member added successfully","add_new_record_by_name":"New record ${span}","add_new_view_success":"View named \\"${viewName}\\" added","add_on_api_call":"Increase API capacity","add_or_cancel_favorite_fail":"Failed to pin/unpin","add_record":"New record","add_record_out_of_limit_by_api_notify":"You failed to add new record(s) via API in the <a class=\\"nodeName\\"></a> datasheet.The maximum number of records per datasheet is <a class=\\"count\\"></a>. To continue to add records via API, please clean up your outdated data or write data into another datasheet.","add_record_soon_to_be_limit_by_api_notify":"Your datasheet <a class=\\"nodeName\\"></a> has <a class=\\"usage\\"></a> records and will reach the maximum limit (<a class=\\"count\\"></a> records) soon. To continue to add records via API, please clean up your outdated data or write data into another datasheet before you reach the limit.","add_role_btn":"New role","add_role_error_empty":"Role name cannot be empty","add_role_error_exists":"The role name already exists, please modify","add_role_error_limit":"The name of the role cannot exceed ${max} characters","add_role_success_message":"Role created successfully","add_role_title":"Add role","add_row_button_tip":"Insert a record","add_sort":"Pick another field to Sort","add_sort_current_user":"Me","add_sort_current_user_tips":"Current visitor","add_sort_empty":"Pick a field to Sort","add_space":"Create Space","add_sub_admin_contacts_configuration":"Managing teams means that the sub-admins can add, delete, or modify teams; Managing members means that the sub-admins can add, delete, or modify members；Managing roles means that the sub-admins can add, delete, or modify roles.","add_sub_admin_template_configuration":"The sub-admin can delete the Space templates","add_sub_admin_title_member_team":"Members and teams ","add_sub_admin_title_workbench":"Workbench","add_summry_describle":"Add summary describe","add_target_values":"Add target value","add_team":"Add team","add_widget":"New widget","add_widget_panel":"New widget board","add_widget_success":"Widget added","added_not_yet":"Pending","additional_styling_options":"Additional color and styling options","admin":"Admin","admin_cannot_quit_space":"You are the Space admin so you can\'t exit. You can transfer or delete this Space on \\"Space Management\\".","admins_per_space":"Admins per space","advanced":"Advanced","advanced_features":"Advanced","advanced_mode":"Advanced option","afghanistan":"Afghanistan","aggregate_values":"Aggregate values","aggregate_values_describle":"Aggregate values by summary","agree":"Agree","agreed":"Approved","alarm_no_member_field_tips":"Please create a new member field first","albania":"Albania","algeria":"Algeria","alien":"Anonymous","alien_tip_in_user_card":"This user does not belong to the current Space","align_center":"Align Center","align_left":"Align Left","align_right":"Align Right","all":"All","all_record":"All","allow_apply_join_space":"Allow requests to join the Space","allow_apply_join_space_desc":"Allow visitors to request for joining the Space from the sharing page (After the admin approves the request, they can automatically join in)","already_know_that":"I already know that","american_samoa":"American Samoa","and":"and","andorra":"Andorra","angola":"Angola","anguilla":"Anguilla","anonymous":"Anonymous","antigua_and_barbuda":"Antigua and Barbuda","api_add":"Add records","api_call":"Maximum number of API requests per month","api_cumulative_usage_info":"Excessive use is allowed during the public beta","api_delete":"Delete records","api_delete_error":"Failed to delete data","api_delete_error_foreign_datasheet_deleted":"Failed to delete record because the linked datasheet was deleted","api_example_request":"Sample request","api_example_response":"Returned value example","api_excess":"API overused","api_favicon_value_error":"Please make sure your favicon.ico value conforms to the URL standard, such as: https://www.example.com/favicon.ico","api_fieldid_empty_error":"fieldId should not be empty","api_fields":"Fields","api_forbidden":"Access forbidden","api_forbidden_because_of_not_in_space":"The API token user does not belong to the space, please adjust spaceId or API token and try again","api_frequently_error":"API requests are sent too frequently","api_get":"Get records","api_insert_error":"Failed to create data","api_more_params":"Other parameters or tips","api_not_exists":"The API does not exist","api_panel_add_records":"Add records","api_panel_delete_records":"Delete records","api_panel_get_records":"Get records","api_panel_init_sdk":"Initialize SDK","api_panel_other_params_and_tips":"Description","api_panel_return_example":"Returned value example","api_panel_title":"API panel","api_panel_type_default_example_attachment":"[\\n    {\\n        \\"id\\": \\"atcPtxnvqti5M\\",\\n        \\"name\\": \\"6.gif\\",\\n        \\"size\\": 33914,\\n        \\"mimeType\\": \\"image/gif\\",\\n        \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n        \\"width\\": 240,\\n        \\"height\\": 240,\\n        \\"url\\": \\"__host__/space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\"\\n    }\\n]","api_panel_type_default_example_auto_number":"10001","api_panel_type_default_example_checkbox":"true","api_panel_type_default_example_created_by":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","api_panel_type_default_example_created_time":"1600777860000","api_panel_type_default_example_currency":"8.88","api_panel_type_default_example_date_time":"1600777860000","api_panel_type_default_example_formula":"Fill in this field first, and you can check example value","api_panel_type_default_example_last_modified_by":"{\\n    \\"uuid\\": \\"aa3e6af7041c4907ba03889acc0b0cd1\\",\\n    \\"name\\": \\"Kelvin\\",\\n    \\"avatar\\": \\"__host__/public/2020/08/03/574bcee4cfc54f6fbb7d686bb237f6f3\\"\\n}","api_panel_type_default_example_last_modified_time":"1600777860000","api_panel_type_default_example_link":"[\\n    \\"rec8116cdd76088af\\",\\n    \\"rec245db9343f55e8\\",\\n    \\"rec4f3bade67ff565\\"\\n]","api_panel_type_default_example_look_up":"Fill in this field first, and you can check example value","api_panel_type_default_example_multi_select":"[ \\"Option A\\", \\"Option B\\" ]","api_panel_type_default_example_number":"8","api_panel_type_default_example_percent":"0.88","api_panel_type_default_example_phone":"138xxxx7240","api_panel_type_default_example_rating":"1","api_panel_type_default_example_single_select":"Option A","api_panel_type_default_example_single_text":"This is text in single line","api_panel_type_default_example_text":"This is text\\nin two lines","api_panel_type_desc_attachment":"Returns an array of attachment objects. Each object includes the following properties: 1. mimeType (string): the media type of the attachment; 2. name (string): the name of the attachment; 3. size (number): the size of the attachment (byte); 4. width (number): the width of the image (px), if the attachment is an image; 5. height (number): the height of the image (px), if the attachment is an image; 6. token (string): the access path of the attachment; 7. preview (string): the preview image URL that you can open in a browser, if the attachment is a PDF","api_panel_type_desc_autonumber":"Returns a positive number. The system automatically generates the numbers so you can\'t write into the field by API.","api_panel_type_desc_checkbox":"Returns true as boolean format if the checkbox is checked. Otherwise the return result will not include this Checkbox field.  ","api_panel_type_desc_created_time":"Returns a timestamp in milliseconds","api_panel_type_desc_currency":"Returns a positive or negative number. The return result will not include the precision or symbol given in the field settings.","api_panel_type_desc_date_time":"Returns a timestamp in milliseconds","api_panel_type_desc_email":"Returns an email address as a string","api_panel_type_desc_formula":"Returns a number, string, or boolean result. The formula result is calculated by the system. You can\'t write into the Formula field by API. ","api_panel_type_desc_last_modified_time":"Returns a timestamp in milliseconds","api_panel_type_desc_link":"Returns an array of strings. Each string is the ID of a record that is added into the Magic Link field.","api_panel_type_desc_look_up":"Returns a number, string, or array. The Lookup result is calculated by the system. You can\'t write into the Lookup field by API. ","api_panel_type_desc_multi_select":"Returns the selected options as an array of strings","api_panel_type_desc_number":"Returns a positive or negative number. The return result will not include the precision or symbol given in the field settings.","api_panel_type_desc_percent":"Returns a positive or negative number. The return result will not include the precision or symbol given in the field settings.","api_panel_type_desc_phone":"Returns a phone number as a string","api_panel_type_desc_rating":"Returns a positive number between 1 and 10. The return result will not include this field if the value is empty.","api_panel_type_desc_single_select":"Returns the selected option as a string","api_panel_type_desc_single_text":"Returns a string without \\"\\\\n\\" line breaks","api_panel_type_desc_text":"Returns a string with \\"\\\\n\\" line breaks","api_panel_type_desc_url":"Returns URL address (string)","api_panel_update_records":"Update records","api_panel_upload_file":"Upload attachments","api_param_add_widget_btn_type_error":"the parameter addWidgetBtn must be a boolean type","api_param_api_btn_type_error":"the parameter apiBtn must be a boolean type","api_param_attachment_array_type_error":"Attachment type must be array","api_param_attachment_name_type_error":"Attachment name must be string","api_param_attachment_not_exists":"The file specified by the token does not exist","api_param_attachment_token_type_error":"Attachment token must be string","api_param_basic_tools_type_error":"the parameter bannerLogo must be a boolean type","api_param_checkbox_field_type_error":"field:{field} Checkbox field value must be boolean","api_param_collaborator_status_bar_type_error":"the parameter collaboratorStatusBar must be a boolean type","api_param_collapsed_type_error":"the parameter collapsed must be a boolean type","api_param_currency_field_type_error":"field:{field} Currency field value must be a number","api_param_datetime_field_type_error":"field:{field} Date field value must be a UTC or timestamp","api_param_default_error":"Parameter error","api_param_email_field_type_error":"field:{field} Email field value must be string","api_param_embed_link_id_not_empty":"the parameter linkId is required","api_param_form_btn_type_error":"the parameter formBtn must be a boolean type","api_param_formula_error":"{value}","api_param_full_screen_btn_type_error":"the parameter fullScreenBtn must be a boolean type","api_param_history_btn_type_error":"the parameter historyBtn must be a boolean type","api_param_invailid_datasheet_name":"datasheet name cannot be empty\\n","api_param_invalid_rating_field":"Rating field value can\'t be smaller than 0 (only supports 0, 1, 2, 3, 4, or 5)","api_param_invalid_record_id_value":"The record specified by the recordId does not exist","api_param_invalid_space_id_value":"Space doesn\'t exist, please adjust the spaceId and try again","api_param_link_field_type_error":"field:{field} Magic Link field value must be array","api_param_member_field_type_error":"field:{field} Member field value must be array","api_param_member_id_type_error":"field:{field} Member ID must be string\\n","api_param_multiselect_field_type_error":"field:{field} Multiple Select field value must be array","api_param_multiselect_field_value_type_error":"field:{field} Multiple Select field value must be string","api_param_node_id_not_empty_key":"the parameter nodeId is required","api_param_node_info_bar_type_error":"the parameter titleBar must be a boolean type","api_param_number_field_type_error":"field:{field} Number field value must be a number","api_param_payload_banner_logo_type_error":"the parameter bannerLogo must be a boolean type","api_param_payload_editable_type_error":"the parameter editable must be a boolean type","api_param_percent_field_type_error":"field:{field} Percent field value must be a number","api_param_phone_field_type_error":"field:{field} Phone field value must be string","api_param_property_error":"Invalid [${property}]","api_param_rating_field_type_error":"field:{field} Rating field value must be a number","api_param_record_not_exists":"The record specified by the recordId does not exist","api_param_robot_btn_type_error":"the parameter robotBtn must be a boolean type","api_param_select_field_value_type_error":"field:{field} Single Select field value must be string","api_param_share_btn_type_error":"the parameter shareBtn must be a boolean type","api_param_singletext_field_type_error":"field:{field} Single Select field value must be string","api_param_sort_field_not_exists":"The sorted field does not exist","api_param_tabbar_type_error":"the parameter tabBar must be a boolean type","api_param_text_field_type_error":"field:{field} Text field value must be string","api_param_theme_type_error":"the parameter theme must be one of the following values: dark, light","api_param_toolbar_type_error":"the parameter toolBar must be a boolean type","api_param_type_error":"{property} must be the \\"{value}\\" type","api_param_unit_name_type_not_exists":"The unit specified by the unit Name does not exist","api_param_unit_not_exists":"The unit specified by the unit ID does not exist","api_param_url_field_type_error":"field:{field} URL field value must be string","api_param_view_not_exists":"The specified view does not exist","api_param_viewid_empty_error":"the parameter viewId should not be empty","api_param_viewid_type_error":"the parameter toolBar must be a string type","api_param_viewids_empty_error":"viewIds should not be empty","api_param_widget_btn_type_error":"the parameter widgetBtn must be a boolean type","api_params_automumber_can_not_operate":"Autonumber field can\'t be edited","api_params_can_not_operate":"{field} could not create or update","api_params_cellformat_error":"cellFormat value only supports \\"string\\" or \\"id\\"","api_params_created_time_can_not_operate":"Created Time field can\'t be edited","api_params_createdby_can_not_operate":"Created By field can\'t be edited","api_params_empty_error":"{property} should not be empty","api_params_formula_can_not_operate":"Formula field can\'t be edited","api_params_instance_attachment_name_error":"Attachment name can\'t be null","api_params_instance_attachment_token_error":"Attachment token can\'t be null","api_params_instance_error":"{property} must contain {value} keys","api_params_instance_fields_error":"fields value can\'t be null","api_params_instance_member_name_error":"Member name can\'t be null","api_params_instance_member_type_error":"Member type can\'t be null","api_params_instance_recordid_error":"recordId value can\'t be null","api_params_instance_sort_error":"sort value can\'t be null","api_params_instance_space_id_error":"the parameter nodeId is required","api_params_invalid_field_key":"Invalid fieldKey (only supports \\"id\\" or \\"name\\")","api_params_invalid_field_type":"The given field type is not supported","api_params_invalid_fields_value":"The format of the fields parameter value is wrong","api_params_invalid_order_sort":"Sort value invalid (only supports \\"desc\\" or \\"asc\\")","api_params_invalid_primary_field_type_error":"The primary field type can\'t be {value}","api_params_invalid_value":"Invalid value for ${property}","api_params_link_field_recordids_empty_error":"field:{field} recordId value can\'t be empty array or null","api_params_link_field_recordids_not_exists":"The linked field specifies a record ({recordId}) that does not exist","api_params_link_field_records_max_count_error":"field:{field} The Magic Link field was set to receive one recordId only","api_params_lookup_can_not_operate":"Rollup field can\'t be edited","api_params_max_count_error":"{property} must contain no more than {value} elements","api_params_max_error":"{property} must not be greater than {value}","api_params_max_length_error":"${property}\'s length must not be greater than ${value}","api_params_maxrecords_min_error":"maxRecords value can\'t be smaller than 1","api_params_member_field_records_max_count_error":"The Member field was set to receive one unit only","api_params_min_error":"{property} should not be equal to {value}, and {property} must not be less than 1","api_params_must_unique":"{property} must be unique","api_params_not_exists":"{property} \\"{value}\\" does not exist","api_params_pagenum_min_error":"pageNum value can\'t be smaller than 1","api_params_pagesize_max_error":"pagesize value can\'t be greater than 1000","api_params_pagesize_min_error":"pagesize value can\'t be smaller than 1","api_params_primary_field_not_allowed_to_delete":"The primary field can\'t be deleted","api_params_rating_field_max_error":"Rating field value can\'t be greater than 5 (only supports 0, 1, 2, 3, 4, or 5)","api_params_recordids_empty_error":"recordId value can\'t be empty array or null ","api_params_records_empty_error":"records value can\'t be empty array or null ","api_params_records_max_count_error":"Can\'t update/delete/create more than {count}  records in one single request","api_params_updated_time_can_not_operate":"Last Edited Time field can\'t be edited","api_params_updatedby_can_not_operate":"Last Edited By field can\'t be edited","api_params_views_max_count_error":"单次请求删除的视图不能超过 {count} 条","api_query_params_invalid_fields":"Invalid fields","api_query_params_view_id_not_exists":"View ({viewId}) does not exist","api_request_success":"Success","api_sdk":"Developer center","api_server_error":"SERVER_ERROR ({value})","api_set_view_lock_error":"Failed to update view lock info","api_show_token":"Show API Token","api_space_capacity_over_limit":"The Space has reached its maximum attachment capacity","api_token_generate_tip":"You don\'t have an API Token. Generate one by clicking on \\"+\\".","api_update":"Update records","api_update_error":"Failed to update data","api_upload":"Upload attachments","api_upload_attachment_error":"Failed to upload attachment ","api_upload_attachment_exceed_limit":"You have uploaded the maximum number of attachments","api_upload_attachment_oversize":"The attachment size exceeds 1 GB","api_upload_invalid_file":"Attachment can\'t be empty ","api_upload_invalid_file_name":"Attachment name can\'t be empty ","api_upload_tip":"(After uploading, write the data to the attachment cells as soon as possible, otherwise the link of the attachment might get invalid)","api_usage":"API Usage","api_view_fieldid_not_exist":"the field corresponding to fieldId does not exist","api_view_filter_conditions_empty_error":"conditions should not be empty","api_view_filter_operator_not_support":"the value of operator does not match the field","api_view_filter_operator_value_error":"operator must be one of the following values: is, isNot, contains, doesNotContain, isEmpty, isNotEmpty, isGreater, isGreaterEqual, isLess, isLessEqual, isRepeat","api_view_rules_empty_error":"rules should not be empty","api_view_type_error":"type must be one of the following values: Grid, Gallery, Gantt, Kanban, Calendar, Architecture","api_your_token":"_Paste_Your_API_Token_","apitable_choose_basic":"Start Now","apitable_choose_community":"Download","apitable_choose_custom":"Request Trial","apitable_choose_enterprise":"Contact Us","apitable_choose_plus":"Choose Plus","apitable_choose_pro":"Choose Pro","apitable_confirm_password":"Confirm password","apitable_forget_password_button":"Forgot your password?","apitable_forget_password_done":"Done","apitable_forget_password_text":"I already remembered","apitable_no_account":"No account?","apitable_og_product_description_content":"APITable is an API-first, embed-friendly no-code database, the best Airtable open-source alternative. Get your data and projects managed magically.","apitable_og_site_name_content":"APITable | Open source no-code database and Airtable alternative","apitable_origin_price_by_month":"{\\n    \\"plus\\": \\"$8\\",\\n    \\"pro\\": \\"$16\\"\\n}","apitable_origin_price_by_year":"{\\n    \\"plus\\": \\"$6\\",\\n    \\"pro\\": \\"$14\\"\\n}","apitable_password_input_placeholder":"Password between 8 and 24 characters","apitable_price_sub_title":"Early Bird Offer ${discount} Ends March 7,2023","apitable_privatized_deployment_desc":"Manage it yourself","apitable_public_cloud_desc":"APITable as a service","apitable_sign_in":"Sign in","apitable_sign_up":"Sign up","apitable_sign_up_text":"Already have an account?","app_closed":"Recommended integrations","app_load_failed":"Loading failed, please refresh and try again","app_modal_content_policy_suffix":"Click agree to start receiving our service.","app_opening":"Installed application","app_reload":"Try loading again","app_timeout_to_refresh":"The network connection timed out, please refresh and try again","apply_join_space":"Apply to join the Space","apply_join_space_alert_text":"You can apply to join this Space","apply_join_space_modal_content":"The Space admin of \\"${spaceName}\\" will receive your application","apply_join_space_modal_title":"Apply to join this Space","apply_template":"Use template","apps_support":"All-platform client support","archive_record_in_menu":"Archive record","archive_record_success":"Successfully archived records","archive_records_in_menu":"Archive ${chose_num} records","archive_records_success":"${chose_num} record(s) successfully archived","archived_failure":"Transferring failed","archived_operator_description":"${archived_operator} archived ${archived_num} record(s)","archived_records":"Archived records","archived_successfully":"Transferred","argentina":"Argentina","armenia":"Armenia","array_functions":"Array Function","arts_and_culture":"Arts and culture","aruba":"Aruba","asc_sort":"Descending","assistant_beginner_task":"Beginner tasks","assistant_beginner_task_4_share_and_invite":"Share and invite friends","assistant_beginner_task_5_onboarding":"Smart onboarding","assistant_beginner_task_6_bind_email":"Bind email","assistant_release_history":"Update history","associated_element":"Associated element","association_table":"Linked datasheet","async_compute":"Async computing","at_least_select_one":"Select at least one member","at_least_select_one_field":"Select at least one member field","attachment_data":"Attachments","attachment_preview_exit_fullscreen":"Exit Full Screen","attachment_preview_fullscreen":"Full Screen","attachment_upload_fail":"Failed to upload ${count} attachment(s)","augmented_views":"Augmented Views","australia":"Australia","austria":"Austria","authorize":"authorize","auto":"Auto","auto_cover":"Auto","autofill_createtime":"Autofill creation time when record created","autonumber_check_info":"To configure the field of self-incrementing ID, operate in the drop-down menu of the field.","avatar_modified_successfully":"Avatar changed successfully","azerbaijan":"Azerbaijan","back":"Return","back_login":"Back to log in","back_login_page":"Back to login page","back_prev_step":"Go back to the previous step","back_to_space":"Back to my Space","back_to_workbench":"Return to workbench","back_workbench":"Workbench","background_purple":"Purple background","bahamas":"Bahamas","bahrain":"Bahrain","bangladesh":"Bangladesh","bar_chart":"Bar Chart","barbados":"Barbados","basis":"Basic","batch_import":"Batch Import","batch_remove":"Remove","behavior_type":"Activity","belarus":"Belarus","belgium":"Belgium","belize":"Belize","benchs_per_space":"Benchs per Space","benin":"Benin","bermuda":"Bermuda","bhutan":"Bhutan","bind":"Bind","bind_email":"Bind email ","bind_email_same":"Please change to a different email address","bind_state":"Status: ","bind_time":"Binding date: ","binding_account":"Bind ${mode} account","binding_account_failure_tip":"This ${mode} has been bound to another account, please change a new one.","binding_failure":"Binding failed","binding_success":"Bound","black_mirror_list_tip":"Want to get quick access to a view from the Explorer? Mirror is your shortcut to a view","bold":"Bold","bolivia":"Bolivia","bosnia_and_herzegovina":"Bosnia and Herzegovina","botswana":"Botswana","bound":"Bound","brand_desc":"Powered by ${logo}","brazil":"Brazil","bronze_btn_text":"Start now","bronze_grade":"Community","bronze_img":"URL","brunei":"Brunei","bulgaria":"Bulgaria","burkina_faso":"Burkina Faso","burundi":"Burundi","button":"Button","button_add":"Add","button_bind_confirmed":"Confirm binding","button_bind_now":"Bind now","button_combine":"Buttons combination","button_come_on":"Let\'s go!","button_sub_team":"Subordinate","button_submit":"Submit","button_submit_anonymous":"Submit","by_field_id":"Use field ID","calendar_add_date_time_field":"Create Date field","calendar_color_more":"More colors","calendar_create_img_alt":"Create Date fields in Calendar View","calendar_date_time_setting":"Select Date fields","calendar_drag_clear_time":"Dragging a record back to the list will clear the dates","calendar_end_field_name":"End date","calendar_error_record":"End date earlier than start date","calendar_init_fields_button":"Create Date field","calendar_init_fields_desc":"To generate a calendar, please create a Date field in your datasheet by clicking the button below","calendar_list_search_placeholder":"Search","calendar_list_toggle_btn":"Record list","calendar_mobile_preparing":"Stay tuned","calendar_mobile_preparing_desc":"Calendar View on mobile phones is coming","calendar_mobile_preparing_text":"You can use Calendar View  on a computer for better experience","calendar_pick_end_time":"End date","calendar_pick_start_time":"Start date","calendar_pre_record_list":"Unassigned records","calendar_record":"Record","calendar_setting":"Settings","calendar_setting_clear_end_time":"None","calendar_setting_field_deleted":"Date field is deleted","calendar_setting_help_tips":"Help manual","calendar_start_field_name":"Start date","calendar_view":"Calendar","calendar_view_all_records":"Expand all records","calendar_view_all_records_mobile":"All records","calendar_view_desc":"Use a calendar to arrange tasks and view the project schedule","cambodia":"Cambodia","cameroon":"Cameroon","can_control":"Manager","can_duplicate":"can save as copy","can_edit":"can edit","can_manage":"can manage","can_not_un_bind_title":"Can\'t unbind","can_read":"Read-only","can_updater":"Update-only","can_view":"can view","canada":"Canada","cancel":"Cancel","cancel_favorite_success":"Unpinned successfully","cancel_market_app_closing":"Cancel Close App","cannot_access":"Can Access","cannot_activate_space_by_space_limit":"cannot_activate_space_by_space_limit","cannot_join_space":"You can\'t join a new space station because you\'ve exceeded the maximum quota of 10 space stations.","capacity_from_participation":"By invited ${user} join the space","capacity_reach_limit":"The \\"<a class=\\"spaceName\\"></a>\\" Space has reached its maximum capacity.","cape_verde":"Cape Verde","catalog":"Explorer","category_blank":"[Blank]","catering":"Catering","cayman_islands":"Cayman Islands","cell_find_member":"Find a member or team","cell_find_option":"Find or add an option","cell_not_exist_content":"The the cell you are editing has been deleted","cell_not_find_member":"Member unfound","cell_not_find_member_or_team":"Member or team unfound","cell_to_down_edge":"Move to the bottom cell","cell_to_left_edge":"Move to the left-most cell","cell_to_right_edge":"Move to the right-most cell","cell_to_up_edge":"Move to the top cell","central_african_republic":"Central African Republic","chad":"Chad","change":"Edit","change_avatar":"Edit","change_email":"Edit email","change_field_to_multi_text_field":"Convert the \\"${b}\\" field to a Long Text field","change_main_admin":"Change","change_member_team_fail":"Change member\'s team failed.","change_member_team_level":"Adjust team level","change_member_team_success":"Change member\'s team success.","change_name":"Edit","change_nickname_tips":"Tip: You can edit your name later in \\"My Settings\\".","change_phone":"Confirm","change_primary_admin":"Change","change_primary_admin_succeed":"New admin assigned successfully","change_space_logo_success":"Space logo changed","change_space_name_tip":"Note: You can edit your Space name in \\"Settings\\".","changeset_diff_big_tip":"Current content has been updated, please refresh to view","chart_option_field_had_been_deleted":"The field is invalid, please select again","chart_option_view_had_been_deleted":"The view is invalid, please select again","chart_settings":"Chart settings","chart_sort":"Sort by","chart_sort_by_ascending":"Ascending","chart_sort_by_descending":"Descending","chart_sort_by_x_axis":"Sort by X axis","chart_sort_by_y_axis":"Sort by Y axis","chart_widget_setting_help_tips":"Manual","check_detail":"Details","check_failed_list":"Check failed list","check_field":"Select a field","check_network_status":"Please check the network connection","check_save_space":"Please select a Space to save","check_selected_record":"Show selected only","chile":"Chile","china":"Chinese Mainland","choose_a_member":"Select members","choose_a_team":"Select team","choose_picture":"Select image","choose_share_mode":"Select the way of sharing","choose_your_own_space":"（Only supports saving to your own space  as creator）","chose_new_primary_admin_button":"Assign","claim_special_offer":"Claim This Special Offer!","clear":"Clear","clear_all_fields":"Clear all","clear_cell_by_count":"${count} cell(s) emptied","clear_date":"Clear dates","clear_record":"Clean cell data","click_here":"Please click here","click_load_more":"Load more","click_refresh":"Please click to refresh","click_to_activate_space":"click_to_activate_space","click_to_agree":"Click to agree ","click_to_compare_with_detail":"Detail","click_to_view":"Click to view","click_to_view_instructions":"See documentation","click_top_right_to_share":"Click on the top right to share","click_upload_tip":"Click here to paste an attachment","client_meta_label_file_deleted_desc":"The shared file is deleted, so the public share link is invalid","client_meta_label_file_deleted_title":"Invalid shared file","client_meta_label_share_disable_desc":"The shared public link is disabled so you can\'t access the file","client_meta_label_share_disable_title":"Can\'t access","client_meta_label_template_deleted_desc":"The template does not exist or is deleted, so the share link is invalid","client_meta_label_template_deleted_title":"Invalid shared template","close":"Close","close_card":"Press \\"Esc\\" to close the card","close_menu":"关闭菜单","close_node_share_modal_content":"After disabling the sharing, the generated share link will become invalid","close_node_share_modal_title":"Close the sharing of this node","close_public_link_success":"Disable public link successfully","close_share_link":"Disable public link","close_share_tip":"Disable sharing ${status}","close_view_sync_success":"The view configuration is no longer syncing with other members","close_view_sync_tip":"Turn off view configuration synchronization","CNY":"CNY","code_block":"Code block","code_sweep":"Scan code to join","collaborate_and_share":"Collaborate and share","collaborator_number":"${number} Collaborator(s)","collapse":"Collapse","collapse_all_group":"Collapse all groups","collapse_full_screen":"Exit fullscreen","collapse_kanban_group":"Collapse group","collapse_subgroup":"Collapse group/subgroup","colombia":"Colombia","color":"Color","color_add":"Add color","color_condition_add":"Add condition","color_description_when_sync_open":"Coloring records based on following options, ","color_records_based_on_conditions":"Color records based on conditions","color_rules_description":"When {RULE_DESCRIPTION} then color records","color_setting":"Color setting","colord_in_record":"Define color in records","colorful_theme":"Multi-color theme","coloring_based_on_conditions":"Coloring based on conditions","column":"field","column_chart":"Column Chart","comfirm_close_filter_switch":"If turning off the filter, the filter conditions will be cleared afterwards","comma":",","comma_style":"Separator","command_add_record":" added record","command_delete_field":" deleted field","command_delete_record":" deleted record","command_fix_consistency":" fixed data consistency","command_insert_comment":" commented","command_move_row":" moved row","command_paste_set_record":" pasted record","command_set_field_attr":" modified field settings","command_set_record":" edited record","command_undo_add_record":" canceled adding record","command_undo_delete_field":" restored the deleted field","command_undo_delete_records":" restored the deleted record","command_undo_move_row":" canceled moving row","command_undo_paste_set_record":" canceled pasting","command_undo_set_field_attr":" canceled editing field settings","command_undo_set_record":" canceled editing record","comment_editor_default_tip":"Comment or mention a member...","comment_from_who":"${who}\'s comments","comment_is_deleted":"The comment was deleted","comment_too_long":"The character length in the comment section shouldn\'t exceed ${word_count} .","comments_per_record":"Comments per Record","common_format":"CommonFormat","communication_group_qrcode":"Forum","community":"Community","community_and_local_interest":"Community and local interest","community_edition":"Community","comoros":"Comoros","components_checkbox":"Checkbox","components_popconfirm":"Bubble confirmation box","config":"Config","configuration_available_range":"Configuration available range","confirm":"Confirm","confirm_activate_space_tips":"Please activate the \\"${spaceName}\\" Space first before you enter it","confirm_activate_space_title":"confirm_activate_title","confirm_and_continue":"OK","confirm_cancel":"Your edits have not been saved. Are you sure to leave?","confirm_del_current_team":"Are you sure you want to delete the team?","confirm_delete":"Confirm and delete","confirm_delete_node_name_as":"Are you sure you want to delete \\"${nodeNameDiv}\\"?","confirm_delete_space_btn":"Confirm and delete Space","confirm_exit":"Confirm to exit","confirm_exit_space_with_name":"Confirm whether to exit the \\"${spaceNameDiv}\\" Space","confirm_import":"Import","confirm_join":"Confirm to join","confirm_join_space":"Confirm to join the Space","confirm_link_inconsistency_detected":"Abnormal data have been found in link cells, fix them automatically?","confirm_link_toggle_clear_filter":"Please make sure to switch the related column. After switching, the filter condition will be cleared","confirm_logout_title":"Please confirm again","confirm_market_app_closing":"Confirm close","confirm_open_apply":"Confirm to turn on \\"allow applications to join the Space\\"","confirm_open_invite":"Confirm to turn on \\"Inviting members\\"","confirm_the_system_has_detected_a_conflict_in_document":"A data conflict was detected in this datasheet. Fix it automatically?","confirm_unbind":"Confirm to unbind","connect_us":"Contact us","contact_data":"Contacts","contact_us":"Contact us","contacts":"Contacts","contacts_configuration":"Contacts","contacts_management":"Contacts","contain_filter_count":"Contains ${count} filters\\n","contains":"contains...","content_is_empty":"Empty","content_operations":"Content Operations","content_production":"Content production","convert":"Convert","convert_tip":"This action may clear up data in some cells. You can undo the action if anything unexpected happens.","cook_islands":"Cook Islands","copy":" Copy","copy_card_link":"Copy record URL","copy_dashboard_url":"Copy URL","copy_datasheet_url":"Copy URL","copy_elink_share":"Copy the elink sharing link","copy_failed":"Copy failed","copy_folder_url":"Copy URL","copy_form_url":"Copy URL","copy_from_cell":"Copy cell","copy_link":"Copy","copy_link_success":"Copied","copy_mirror_url":"Copy mirror URL","copy_record_data":"Copy recorded data","copy_success":"Copied","copy_template_share_link":"Copy template link","copy_the_cell":"Copy cell","copy_token":"Copy","copy_token_toast":"Token copied to the clipboard","copy_url":"Copy","copy_url_line":"Copy record URL","copy_view":"Duplicate view","costa_rica":"Costa Rica","count_records":"Count records","cout_records":"All records","cover":"Cover image","cover_field":"Cover","creat_mirror_templete":"Failed to create a template because the mirror was linked to a datasheet outside the folder","create":"Create","create_and_save":"Create and save","create_date":"Creation date","create_file_and_folder":"Create a new file or folder","create_form":"Create form","create_form_panel_title":"Select a datasheet to store form data","create_invitation_link":"Create Invitation Link","create_link_succeed":"Link created","create_mirror":"Create mirror from this view","create_mirror_by_view":"Create mirror from this view","create_mirror_guide_content":"The mirror function has the ability to hide certain data. You can set \\"filter conditions\\" and \\"hidden fields\\" in the original datasheet view to control which records and fields are displayed in the mirror.\\n</br>\\n</br>\\nIf used in conjunction with the \\"view lock\\" function, it can prevent others from making modifications.\\n</br>\\n</br>\\nIn addition, you can go to \\"Original Table>Hidden Fields\\" to modify the configuration for \\"Show all fields in Mirrors\\".","create_mirror_guide_title":"Mirror hides some records and fields","create_public_invitation_link":"Create public invitation link(s)","create_space_sub_title":"Hi, please give a name to your Space~","create_team_fail":"Create team failed","create_team_success":"Create team success.","create_token_tip":"To receive the latest news from the API service, please bind your email first","create_view_first":"New view","create_view_form":"Create form from this view","create_widget":"Create widget","create_widget_step_tooltip":"See documentation","create_widget_success":"Create widget success","create_workspace":"Create a Space","creative":"Creative","creative_production":"Creative production","creator":"Creator","croatia":"Croatia","crypto_field":"You have no access to the field","csv":"As .csv format","cuba":"Cuba","cumulative_consumption":"Cumulative consumption:${count}","cur_import_member_count":"${count} members will be imported","curacao":"Curacao","currency_cell_input_tips":" Enter only numeric 、\'/\'、\'-\' in date cell\\n","currency_field_configuration_default_placeholder":"Prefill new cells with this value","currency_field_configuration_precision":"Precision","currency_field_configuration_symbol":"Symbol","currency_field_symbol_align":"Align symbol","currency_field_symbol_align_default":"Default","currency_field_symbol_align_left":"Left","currency_field_symbol_align_right":"Right","currency_field_symbol_placeholder":"Enter a currency symbol","current_column_been_deleted":"The current column is deleted or hidden","current_count_of_person":"Total Members","current_field_fail":"The data went wrong in this field","current_file_may_be_changed":"Status of current file has changed","current_form_is_invalid":"The form is invalid because  the original view has been deleted","current_main_admin":"Current admin","current_team":"Current team","current_view_add_form":"Create form from this view","custom":"Custom ","custom_function_development":"Custom feature development","custom_picture":"Customized picture","custom_style":"Style","custom_upload":"Customized upload","custom_upload_tip":"A 1:1 square size image is recommended for the better visual experience","cut_cell_data":"Cut cell(s)","cyprus":"Cyprus","czech":"Czech","dark_theme":"Dark","dashboard":"Dashboard","dashboard_editor_label":"In addition to \\"Read-only\\", can also edit widget and share dashboard","dashboard_manager_label":"In addition to \\"Editor\\",  can also  add or delete dashboard","dashboard_reader_label":"Can read widget in the dashboard","dashboard_updater_label":"Same as \\"Read-only\\"","data_calculating":"Computing...","data_error":"Data error","data_loading":"Loading...","datasheet_count":"Total Files","datasheet_editor_label":"In addition to \\"Update-only\\", can also add or delete views and delete records","datasheet_exist_widget":"The datasheet has installed these widgets:","datasheet_experience_label":"Use the template first, then you can modify or write data","datasheet_is_loading":"There is data being loaded currently, please wait to proceed.","datasheet_manager_label":"In addition to \\"Editor\\",  can also configure datasheet and fields","datasheet_reader_label":" You can only view the datasheet but cannot edit it.\\n","date_after_or_equal":"is on or after…","date_before_or_equal":"is on or before…","date_cell_input_tips":" Enter only numeric 、\'/\'、\'-\' in date cell\\n","date_day":"day","date_functions":"date functions","date_range":"custom range","date_setting_time_zone_tooltips":"Changing the time zone will affect the display of the time, thereby affecting the time of the record that displayed in other views","datetime_format":"Date format","dating_back_to":"go back","day":" day(s)","day_month_year":"day/month/year","DAYS":"Day","db_click_to_edit_field_desc":"Double-click to edit the field description","decimal":"decimal (1.0)","default":"Default","default_create_dashboard":"New dashboard","default_create_file":"New file","default_create_folder":"New folder","default_create_form":"New form","default_create_mirror":"New mirror","default_datasheet_attachments":"Attachments","default_datasheet_options":"Options","default_datasheet_title":"Title","default_file_copy":"${file_name} copy","default_picture":"Default picture","default_theme":"Light","default_value":"Default","del_invitation_link":"Delete invitation link","del_invitation_link_desc":"The link will be invalid after deletion","del_space_now":"Delete Space forever","del_space_now_tip":"The Space can\'t be restored after deletion. All files and attachments will be deleted.","del_space_res_tip":"The Space deleted","del_team_success":"Delete Team Success","del_view_content":"Are you sure you want to delete the ${view_name} view?","delete":"Delete","delete_archived_records_warning_description":"Record(s) will be permanently deleted and can\'t be restored to datasheet. Do you want to continue?","delete_comment_tip_content":"The comment can\'t be restored after deletion. Continue?","delete_comment_tip_title":"Delete comment","delete_completey":"Delete forever","delete_completey_fail":"Failed to delete file (folder) forever","delete_field":"Delete field","delete_file_message_content":"The file has been deleted and you can no longer access it.","delete_kanban_group":"Delete group","delete_kanban_tip_content":"All records in this group will be moved to the uncategorized group","delete_kanban_tip_title":"Delete group","delete_n_columns":"Delete ${count} fields","delete_now":"Delete now","delete_person":"Operator","delete_record":"Delete this Record","delete_records_count":"Delete ${count} records","delete_role_member_content":"After confirmation, the member will be removed from the current role","delete_role_member_success":"Removed successfully","delete_role_member_title":"Remove","delete_role_success_message":"Role deleted successfully","delete_role_warning_content":"You need to move all members in this role out of the teams before deleting","delete_role_warning_title":"Cannot delete","delete_row":"Delete record","delete_row_count":"Delete selected ${count} records","delete_sort":"Delete the sort condition","delete_space":"Delete space","delete_succeed":"Deleted","delete_team":"Delete team","delete_team_fail":"Failed to delete team","delete_template_content":"The template will be deleted.","delete_template_title":"Delete this template","delete_view":"Delete view","delete_view_success":"View deleted","delete_widget_content":"The widget can\'t be restored after deletion. Continue?","delete_widget_panel_content":"All the widgets in the widget board will be deleted and can\'t be restored. Continue?","delete_widget_panel_title":"Delete widget board","delete_widget_title":"Delete widget","delete_workspace_succeed":"Space deleted","deleted_in_curspace_tip":"You are removed by the admin and can no longer access the Space.","democratic_republic_of_the_congo":"Democratic Republic of the Congo","denmark":"Denmark","desc_sort":"Ascending","description":"Description","description_save_error":"A network error has occurred, this time it was not saved successfully and you need to save it again.","deselect":"Deselect","design_chart_structure":"Design chart structure","design_chart_style":"More settings","dev_tools_opening_tip":"继续点击 ${count} 次打开调试工具","developer_configuration":"Developer","developer_token":"Developer token","developer_token_placeholder":"Click \\"+\\" to generate the token ","dingtalk_isv_integration_single_record_comment_mentioned":"b4ac28623fd5493dbc5f995bb1cc17c7","dingtalk_isv_production_single_record_comment_mentioned":"8f41773b6eb54d6bba9d82392956dea1","dingtalk_isv_staging_single_record_comment_mentioned":"d81ea943488b41ebb42fdeacfb42d0ef","dingtalk_single_record_member_comment_title":"评论通知","direction_above":"above","direction_below":"below","direction_left":"left","direction_right":"right","disable":"Disable","disabled_file_shared":"Public link sharing disabled","disabled_file_shared_desc":"The admin has disabled the public link. All public links will be invalid.","disabled_link_subtitle":"The sharer has no permission to continue sharing, so the public link will be invalid","disagree_and_exit":"Cancel & Exit","disconnect_from_the_server":"Can\'t connect to the server","display_member_by_count":"${memberCount} members","display_person_count":"${count} members","display_success_and_error_count":" ${successCount} items imported; ${errorCount} items failed.","distribute_a_team":"Assign to team","divider":"Divider","djibouti":"Djibouti","do_not_bind":"Not now","document_detail":"Documentation","does_not_contains":"does not contain...","dominica":"Dominica","dominican_republic":"Dominican Republic","donut_chart":"Donut Chart","down":"Move to the cell below","downgrade":"Downgrade","download":"Download","download_all":"Download all","download_client":"Download app","download_image":"Download image","duplicate":"Duplicate","duplicate_cell_data":"Copy cell(s)","duplicate_datasheet":"Duplicate","duplicate_field":"Duplicate field","duplicate_record":"Duplicate record","e_commerce":"e Commerce","e_commerce_operations":"e-Commerce Operations","early_bird":"Early Bird","ecuador":"Ecuador","edit":"Edit","edit_cell_data":"Activate cell to start editing","edit_member":"Edit member","edit_member_add_button":"Add","edit_member_email":"Email address","edit_member_fail":"Failed to edit member","edit_member_name":"Name","edit_member_success":"Edit Member Success","edit_member_team":"Team","edit_node_desc":"Add a description","edit_selected_field":"Reselect","edit_space_name":"Edit space name","editing_field_desc":"Edit field description","editing_group":"Edit group","editor_placeholder":"Type \\"/\\" to start","education":"Education","egypt":"Egypt","el_salvador":"El Salvador","email":"Email","email_bound":"You have bound your email","email_err":"Invalid email","email_invite":"Invite via email","email_placeholder":"Enter email address","email_verify_warning_button_back":"Logout","email_verify_warning_button_resend":"Resend email","email_verify_warning_desc":"A message with a confirmation link has been sent to ${email_address}. Please follow the link to activate your account.","email_verify_warning_title":"Please confirm your email","embed_error_page_help":"Learn more","emoji_activity":"Activities","emoji_custom":"Custom","emoji_flags":"Flags","emoji_foods":"Food and drink","emoji_nature":"Animals and nature","emoji_not_found":"Emoji not found","emoji_objects":"Objects","emoji_people":"People","emoji_places":"Travel","emoji_recent":"Recently used","emoji_search_result":"Search results","emoji_smileys":"Emoji","emoji_symbols":"Symbols","empty":"Empty","empty_dashboard_list":"No dashboards. ${action}","empty_data":"Empty data","empty_email_tip":"No results, invite a new member via email","empty_nodes":"Empty","empty_record":"No records","empty_trash":"No files were deleted in the past ${day} days","enable":"Enable","enabled_view_lock_success":"View Locked","enabled_view_lock_tip":"Once the view is locked, it can\'t be edited until a member who can manage the datasheet unlocks it","encounter_problems":"Having problems?","encounter_problems_message":"Let me help you","end":"The end","end_day":"days","end_time":"End time","enjoy":"Stay tuned","ensure":"Confirm","enter_names_or_emails":"Enter names or emails","enter_official_website":"Website","enter_template_name":"Name the template","enter_unactive_space_err_message":"Your space has reached the maximum of 10 spaces. This space will be in the inactive state. The space in this state is temporarily inaccessible.","enter_workspace_name":"Name your Space","enterprise_edition":"Enterprise","enterprise_third_app":"Ultimate","entry_space":"Enter Space","equal":"is...","equatorial_guinea":"Equatorial Guinea","eritrea":"Eritrea","error":"Error","error_add_row_failed_wrong_length_of_value":"Records parameter not specified","error_an_unsynchronized_changeset_is_detected":"localStorage detects unsynchronized changeset. Trying to synchronize...","error_atta_type":"No support for uploading attachments in this format","error_boundary_back":"Return to Space","error_boundary_crashed":"Sorry, something went wrong and the page crashed. We will fix it soon.","error_code":"Error Code: ${code}","error_configuration_and_invalid_filter_option":"A configuration error exists in this field. Filter failed.","error_create_view_failed_duplicate_view_id":"Fail to create view: repetitive view ID detected.","error_data_consistency_and_check_the_snapshot":"An error occurred in data consistency. Please check the snapshot.","error_del_view_failed_not_found_target":"Failed to delete view: target to be deleted unfound.","error_detail":"Details of error","error_email_empty":"Enter email address","error_filter_failed_wrong_target_view":"Filtering failed: targeted view went wrong","error_group_failed_wrong_target_view":"Grouping failed: targeted view went wrong.","error_local_changeset_is_null_while_status_is_pending":"中英文都没看懂","error_modify_cell_failed_unmatched_data_type":"Failed to modify cells: field type does not match.","error_modify_column_failed_column_not_exist":"Failed to adjust column properties: column doesn\'t exist.","error_modify_column_failed_wrong_target_view":"Failed to adjust column properties: targeted view error.","error_modify_view_failed_duplicate_name":"Failed to modify view: duplicate view name\\n","error_modify_view_failed_not_found_target":"Failed to modify view: targeted view unfound.","error_move_row_failed_invalid_params":"Failed to move record(s) due to parameter errors","error_move_view_failed_not_found_target":"Failed to move view: targeted view unfound.","error_not_exist_id":"The column of id named ${id} does not exist, please verify the data.","error_not_found_the_source_of_view":"Source view unfound.","error_not_initialized_datasheet_instance":"The instance of operating datasheet has not initialized.","error_occurred_while_requesting_the_missing_version":"An error occurred while requesting the missing version.","error_please_bind_message_after_connected":"Please establish the connection before binding the message.","error_please_close_sharing_page":"Sharing disabled","error_record_not_exist_now":"The record you\'re editing is deleted or hidden.","error_revision_does_not_exist":"Revision does not exist","error_scan_qrcode_tips":"Please check whether the application is deactivated","error_set_row_height_failed_wrong_target_view":"Failed to set row height due to targeted view errors","error_something_wrong":"Error occurred","error_sorted_failed_the_field_not_exist":"Failed to sort: field operated does not exist","error_sorted_failed_wrong_target_view":"Failed to sort: targeted view error","error_the_field_dragged_has_been_deleted_or_hidden":"The field you\'re dragging is deleted or hidden","error_the_length_of_changeset_is_inconsistent":"The obtained ChangesetLength revisions are inconsistent","error_the_version_is_inconsistent_while_preparing_to_merge":"Inconsistent data versions of related tables to be merged","error_wrong_conjunction_type":"Wrong conjunction type: ${conjunction}","error_wrong_data_in_current_column":"Wrong field data","escape":"Exit","essential_features":"Essentials","estonia":"Estonia","ethiopia":"Ethiopia","event_planning":"Event Planning","everyday_life":"Everyday Life","everyone_visible":"Visible for Everyone","exact_date":"exact date","example_value":"Example value","excel":"As .xlsx format","exception_form_foreign_datasheet_not_exist":"The datasheet for form mapping does not exist","exception_network_exception":"Network anomaly","exclusive_consultant":"Exclusive V+ consultant","exits_space":"Exit space","expand":"Expand","expand_activity":"Expand activity","expand_all_field_desc":"Show field description","expand_all_group":"Expand all groups","expand_current_record":"Expand record (Space)","expand_pane":"Expand panel","expand_record":"Expand record","expand_record_attachment_empty":"expand record attachment empty\\n","expand_record_vision_btn_tooltip_center":"Centered display","expand_record_vision_btn_tooltip_full_screen":"Full screen","expand_record_vision_btn_tooltip_side":"Side display","expand_record_vision_setting":"Style of the record card","expand_record_vision_setting_center":"Center","expand_record_vision_setting_side":"Side","expand_rest_records_by_count":"Expand the remaining ${record_count} records","expand_subgroup":"Expand group/subgroup","expiration":" Expiration date: ${date}","expiration_time":"Deletion date","expiration_time_of_space":"Expiration","expire":"End","expired":"Expired","export":"Exporting...","export_brand_desc":"Powered by","export_current_preview_view_data":"导出当前视图数据","export_gantt_button_tips":"Export to a .png file","export_gantt_chart":"Export the gantt chart","export_to_excel":"Export data","export_view_data":"Export view data","export_view_image_warning":"Please click to switch to the view and export again","extra_tip":"Special tips","fail":"Failed","failed_in_file_parsing":"File parsing error","failed_list":"Failed List","failed_list_file_download":"Download the failed list","faq":"FAQs","faroe_islands":"Faroe Islands","fashion_and_style":"Fashion and style","favorite":"Pin","favorite_empty_tip1":"Pin files here for quick access.","favorite_empty_tip2":"Pinned files are only visible to you","feedback":"Feedback","field_circular_err":"The selected field will cause a circular reference. Please correct.","field_configuration_err":"There is a configuration error in this field. Please check the formula or the configuration used by the field.","field_configuration_numerical_value_format":"Format","field_configuration_optional":"Optional","field_desc":"Field description","field_desc_attachment":"Add files such as documents, images, and videos, and preview or download them","field_desc_autonumber":"Add a unique and self-increasing number for each record","field_desc_checkbox":"Select a single checkbox, and quickly assign a status to a record","field_desc_created_by":"Show the member who created the record, and this field can\'t be edited","field_desc_created_time":"Show the date when the record was created, and this field can\'t be edited","field_desc_currency":"Enter a number, and define its currency symbol and the layout","field_desc_datetime":"Enter a date or pick one from the calendar, and define its format (such as Year/Month/Day) and whether to include time","field_desc_email":"Enter an email address, and click on it to send an email","field_desc_formula":"Use functions and operational characters to perform the data on the cells.","field_desc_last_modified_by":"Show the member who edited any field or specified fields most recently, and this field can\'t be edited","field_desc_last_modified_time":"Show the date when a record was most recently edited in any editable field or in specified editable fields, and this field can\'t be edited","field_desc_length_exceeded":"Please keep the field description within 200 words","field_desc_link":"Link to record(s) in the same or another datasheet","field_desc_lookup":"Look up data across datasheets and perform simple calculations using the data.","field_desc_member":"Select members from the Space and optionally notify them ","field_desc_multi_select":"Select one or more options from a predefined option list","field_desc_number":"Enter a number, and define its precision and units of measurement","field_desc_percent":"Enter a number that will be formatted as a percent","field_desc_phone":"Enter a phone number, and click on it to make a phone call","field_desc_rating":"Add a rating with a custom symbol","field_desc_single_select":"Select a single option from a predefined option list","field_desc_single_text":"Enter short and unique texts in one single line","field_desc_text":"Enter long texts that can span multiple lines","field_desc_tree_select":"You can fill in the cells by selecting the content according to the hierarchy","field_desc_url":"Enter a URL, and click on it to open the web page","field_display_time_zone":"Display time zone","field_head_setting":"Field head setting","field_help_attachment":"https://help.apitable.com/docs/guide/manual-field-attachment","field_help_autonumber":"https://help.apitable.com/docs/guide/manual-autonumber","field_help_checkbox":"https://help.apitable.com/docs/guide/manual-field-checkbox","field_help_created_by":"https://help.apitable.com/docs/guide/manual-createdby","field_help_created_time":"https://help.apitable.com/docs/guide/manual-createdtime","field_help_currency":"https://help.apitable.com/docs/guide/manual-field-currency","field_help_datetime":"https://help.apitable.com/docs/guide/manual-field-datetime","field_help_email":"https://help.apitable.com/docs/guide/manual-field-email","field_help_formula":"https://help.apitable.com/docs/guide/manual-formula-field-overview","field_help_last_modified_by":"https://help.apitable.com/docs/guide/manual-lastmodifiedby","field_help_last_modified_time":"https://help.apitable.com/docs/guide/manual-lastmodifiedtime","field_help_link":"https://help.apitable.com/docs/guide/manual-field-link","field_help_lookup":"https://help.apitable.com/docs/guide/manual-field-lookup","field_help_member":"https://help.apitable.com/docs/guide/manual-filed-member","field_help_multi_select":"https://help.apitable.com/docs/guide/manual-field-select","field_help_number":"https://help.apitable.com/docs/guide/manual-field-number","field_help_percent":"https://help.apitable.com/docs/guide/manual-field-percent","field_help_phone":"https://help.apitable.com/docs/guide/manual-field-phone","field_help_rating":"https://help.apitable.com/docs/guide/manual-field-rating","field_help_single_select":"https://help.apitable.com/docs/guide/manual-field-select","field_help_single_text":"https://help.apitable.com/docs/guide/manual-field-single-line-text","field_help_text":"https://help.apitable.com/docs/guide/manual-field-text","field_help_url":"https://help.apitable.com/docs/guide/manual-field-url","field_incluede_time_and_time_zone_title":"Include time and time zone","field_member_property_multi":"Allow adding multiple members","field_member_property_notify":"Notify members once they\'re selected","field_name_formula":"Formula","field_name_setting":"Field name setting","field_permission":"Field permissions","field_range":"Specify fields","field_required":"Please fill in this field","field_select_time_zone_current":"Current time zone","field_select_time_zone_other":"Other time zones","field_title_attachment":"Attachment","field_title_autonumber":"Autonumber","field_title_checkbox":"Checkbox","field_title_created_by":"Created by ","field_title_created_time":"Created time","field_title_currency":"Currency","field_title_datetime":"Date","field_title_email":"Email","field_title_formula":"Formula","field_title_last_modified_by":"Last edited by","field_title_last_modified_time":"Last edited time","field_title_link":"Magic link","field_title_lookup":"Rollup","field_title_member":"Member","field_title_multi_select":"Multi-select","field_title_number":"Number","field_title_percent":"Percent","field_title_phone":"Phone","field_title_rating":"Rating","field_title_single_select":"Select","field_title_single_text":"Single line text","field_title_text":"Long text","field_title_tree_select":"Tree select","field_title_url":"URL","field_type_attachment_select_cell":"Drop files here","fiji":"Fiji","file":"file","file_limits":"${limit} file limits in one space","file_name_with_bulk_download":"${fileName}, etc. ${count} files. Zip","file_notification":"Tips","file_of_rest":"Remaining: ${nodeRest}","file_sharing":"File sharing processing...","file_summary":"Description","file_upper_bound":"Maximum: ${nodeMax}","fill_in_completed":"Completed","filter":"Filter","filter_delete_tip":"The column selected by the filter is deleted","filter_fields":"Add \\"${field_name}\\" as filter","filter_link_data":"Filter linked records","filtering_conditions_setting":"Filter setting","filters_amount":"${amount} filter(s)","find":"Find","find_next":"Next","find_prev":"Previous","finish":"Finish","finish_editing_cell_left":"Finish editing and move to the left cell","finish_editing_cell_right":"Finish editing and move to the right cell","finland":"Finland","folder":"Folder","folder_banner_desc":"It is recommended to use pictures with a width larger than 800 px to achieve a better visual experience.","folder_contains":"${folders} folders and ${files} files","folder_content_empty":"Empty folder","folder_desc_title_placeholder":"Enter a title","folder_level_2_limit_tips":"Hey, the level of your folder has reached the limit of level-2.","folds_hidden_fields_by_count":"Collapse ${count} hidden field(s)","follow_system_time_zone":"Local time zone","food_and_drink":"Food and drink","foreign_filed":"Linked field","form":"Form","form_back_workspace":"Back to my Space","form_brand_visible":"Show branding","form_compact_option_desc":"Options for radio/multi-select fields will not be tiled on the page","form_compact_option_mode":"Collapse options","form_cover_crop_desc":"Support JPG, PNG, and GIF images under 5 MB","form_cover_crop_tip":"Recommended size: 1440*480","form_cover_img_desc":"A square image with an aspect ratio 3:1 is recommended for a better visual experience","form_cover_visible":"Show cover","form_desc_placeholder":"Enter a description","form_editor_label":"In addition to \\"Update-only\\", can also configure or share form","form_empty_tip":"Please fill in the form first","form_error_tip":"The form structure has been updated. Please refresh the page.","form_field_add_btn":"Add","form_fill_again":"Submit another response","form_fill_anonymous":"Submit anonymously","form_fill_anonymous_desc":"Allow submitting without login","form_fill_listed":"Need login to submit","form_fill_listed_desc":"Need to log in to submit the form","form_fill_open_desc":"Publish a form link that everyone can see","form_fill_setting":"Submit requirement","form_full_screen":"Full screen width","form_help_desc":"See documentation","form_index_visible":"Show index","form_link_field_empty":"The referenced field has no content","form_logo_visible":"Show logo","form_manager_label":"In addition to \\"Editor\\", can also configure form","form_network_error_tip":"Network disconnected. Please try again later.","form_not_configure_options":"No options. Please add options in the original view.","form_only_read_tip":"The form can\'t be filled because its folder is not editable","form_reader_label":"Can read the form,not submit it","form_setting":"Form settings","form_share_closed_desc":"Public link","form_share_closed_popconfirm_content":"After disabled, the public form link will be invalid","form_share_closed_popconfirm_title":"Disable the public form link","form_share_opened_desc":"Create public link","form_share_title":"Collect data via the form","form_source_text":"Collected data to","form_space_capacity_over_limit":"The attachment capacity of space has reached the limit, and the form with attachment cannot be submitted","form_submit":"Submit","form_submit_anonymous_tooltip":"You can\'t change the settings in the \\"Submit anonymously\\" mode","form_submit_fail":"Failed to submit","form_submit_loading":"Submitting...","form_submit_no_limit":"No limit","form_submit_once":"Submit once only","form_submit_success":"Submitted","form_submit_times_limit":"Submit limit","form_tab_setting":"Settings","form_tab_share":"Share","form_thank_text":"Thank you for your submission","form_the_full":"Full context of the datasheet","form_title_placeholder":"Enter a title","form_to_datasheet_view":"Go to the original view","form_tour_desc":"User guide","form_updater_label":"Can read, can also submit form","form_view":"Form","format":"Format","format_date":"Format date","formula_check_info":"The field value can\'t be edited because it\'s a formula result","formula_example_desc":"To calculate, fill in variables, operational character, and function\\n to form formulas.","formula_example_sub_title":"Examples","formula_example_title":"Sample formula","formula_how_to_use":"Usage","formula_learn_more":"More instructions","france":"France","free":"Free","free_edition":"Free","free_trial":"Start trial now","freeze_click_when_windows_too_narrow":"Adjust column width","freeze_current_column":"Freeze to the currtent column","freeze_line_tips":"You can\'t drag the frozen area. You can adjust the freezing range in field settings.","freeze_tips_when_windows_too_narrow":"The current window is too small so the frozen area can\'t scroll","freeze_tips_when_windows_too_narrow_in_gantt":"The task area is too small so the frozen area can\'t scroll","freeze_warning_cant_freeze_field":"The current window is too small so the column can\'t be frozen\\n","french_guiana":"French Guiana","french_polynesia":"French Polynesia","fresh_order_status_action":"Refresh Status","friend":"Friend","from_datasheet_associated":"Record from \\"${datasheetName}\\"","from_select_link_column":"Look up a field in ${name}","front_version_error_desc":"Detected that the system version has been updated, please refresh the page to use","front_version_error_title":"Version Updated","full_memory_tip":"Attachment uploading stopped processing because the capacity reaches its limit.","full_screen":"Full screen","function":"Actions","function_abs_example":"ABS(-5)","function_abs_summary":"Returns the absolute value.","function_and_example":"AND(3>2, 4>3)\\n=> true","function_arraycompact_example":"ARRAYCOMPACT([1,2,\\"\\",3,false,\\" \\", null])\\n=> [1,2,3,false,\\" \\"]","function_arrayflatten_example":"ARRAYFLATTEN([1, 2, \\" \\", 3, ],[false])\\n=> [1, 2, 3 ,false]","function_arrayjoin_example":"ARRAYJOIN(values, \\"; \\") ","function_arrayunique_example":"ARRAYUNIQUE([1,2,3,3,1])\\n=> \\"[1,2,3]\\"","function_associate_sheet":"Records from ${datasheetname}","function_average_example":"AVERAGE(2, 4, \\"6\\", \\"八\\")\\n=>(2 + 4 + 6) /4 =3","function_average_summary":"Returns the average of the numbers.","function_blank_example":"IF(Date = BLANK(), \\"Please enter date\\", \\"Date entered\\")","function_blank_summary":"Returns a blank value.","function_ceiling_example":"CEILING(1.01, 0.1) \\n=> 1.1\\n\\nCEILING(-1.99, 0.1)\\n=> -1.9","function_ceiling_summary":"Returns the nearest integer multiple of significance that is greater than or equal to the value. If no significance is provided, a significance of 1 is assumed.","function_concatenate_example":"CONCATENATE(Name, \\" - \\", Age)","function_concatenate_summary":"Joins together the text arguments into a single text value. To concatenate static text, surround it with double quotation marks. To concatenate double quotation marks, you need to use a backslash (\\\\) as an escape character.\\nEquivalent to using the & operator.","function_content_empty":"The formula can\'t be empty","function_count_example":"COUNT(1, 3, 5, \\"\\", \\"seven\\")\\n=> 3","function_count_summary":"Returns the number of numeric items","function_counta_example":"COUNTA(1, 3, 5, \\"\\", \\"seven\\")\\n=> 4","function_counta_summary":"Returns the number of non-empty values. This function counts both numeric and text values.","function_countall_example":"COUNTALL(1, 3, 5, \\"\\", \\"seven\\")\\n=> 5","function_countall_summary":"Returns the number of all elements including text and blanks.","function_countif_summary":"Count the number of keyword occurrences in values. \\n\\nValues: specify where to find the data from. Supports data of array type or text type. \\nKeyword: the keyword to be looked up and counted. \\nOperation: comparator, not required. You can fill in the condition symbols greater than \\">\\", less than \\"<\\", equal to \\"=\\", not equal to \\"! =\\", if not filled in the default is equal to. \\nExample 1 does not fill in the comparison character, the default count is equal to the number of times the value of \\"A\\" appears. \\nExample 2 is filled with the comparator \\">\\", which means that the number of occurrences of values greater than \\"2\\" is counted. \\n\\nUsage scenarios. \\n1) You can count the number of occurrences of the character \\"A\\" in a string of text arrays [A, B, C, D, A] as 2, see example 1. \\n2) You can count the number of numbers greater than 3 in an array of numbers [1, 2, 3, 4, 5] as 2, see example 2. \\n3) You can count the number of occurrences of \\"grape\\" in a string of text \\"eat grapes without spitting out the skin\\" as 2, see example 3.","function_created_time_example":"CREATED_TIME()\\n=> \\"2020-06-10 5:55\\"\\n\\n\\"Created time:\\" & CREATED_TIME()","function_created_time_summary":"Returns the creation time of the current record.","function_current_sheet":"Records from ${datasheetName}","function_date_time_after":"is after...","function_date_time_before":"is before...","function_dateadd_example":"DATEADD({date of begin}, 10, \\"days\\")","function_dateadd_summary":"Adds specified \\"count\\" units to a datetime.","function_datetime_diff_example":"DATETIME_DIFF( TODAY(), {date of begin},  \\"days\\")\\n=> 15","function_datetime_diff_summary":"Returns the difference between datetimes in specified units. Default units are seconds.\\nThe difference between datetimes is determined by subtracting [date2] from [date1]. This means that if [date2] is later than [date1], the resulting value will be negative.","function_datetime_format_example":"DATETIME_FORMAT(TODAY(), \\"DD-MM-YYYY\\")\\n=> 10-06-2020","function_datetime_format_summary":"Formats a datetime into a specified string. For a list of supported format specifiers, please click here.","function_datetime_parse_example":"DATETIME_PARSE(\\"10 Jan 2020 18:00\\", \\"D MMM YYYY HH:mm\\")\\n=> \\"2020/01/10 06:00\\"","function_datetime_parse_summary":"Interprets a text string as a structured date, with optional input format and locale parameters. The output format will always be formatted \'M/D/YYYY h:mm a\'.","function_day_example":"DAY({date of begin})\\n=> 8","function_day_summary":"Returns the day of the month of a datetime in the form of a number between 1-31.","function_encode_url_component_summary":"Replaces certain characters with encoded equivalents for use in constructing URLs or URIs. Does not encode the following characters: - _ . ~","function_err_end_of_right_bracket":"Function needs to end with \\")\\"","function_err_no_left_bracket":"( should be added to the right side of the function name","function_err_no_ref_self_column":"Can\'t add the current Formula field in a formula","function_err_not_definition":"Undefined function: {name}","function_err_not_found_function_name_as":"function implementation named: ${fnName} unfound.","function_err_unable_parse_char":"Parse character {value} failed","function_err_unknown_operator":"Unknown operational character: {type}","function_err_unrecognized_char":"Unidentified character$(value)","function_err_unrecognized_operator":"Unrecognized operational character: ${token}","function_err_wrong_function_suffix":"Wrong formula ending","function_err_wrong_unit_str":"Wrong unit parameter value: ${unitStr}","function_error_example":"IF({age}< 0, ERROR(\\"alien\\"), \\"normal\\")","function_error_summary":"Returns the error value.","function_even_example":"EVEN(1.5)\\n=> 2\\n\\nEVEN(-1.8)\\n=> -2","function_even_summary":"Returns the smallest even integer that is greater than or equal to the specified value.","function_example_example":"{Unit Price} * {Quantity} {Name} & \\"-\\" & {Year} AVERAGE({Mathematics}, {Language}, {English}) IF({Average Score}> 60, \\"👍Qualified\\", \\"❗Failed \\")","function_example_summary":"Fill in variables, operational characters, and functions to form formulas for calculations","function_exp_example":"EXP(1)\\n=> 2.72\\n\\nEXP(2)\\n=> 7.40","function_exp_summary":"Computes Euler\'s number (e) to the specified power.","function_false_example":"IF({average score} > 60, TRUE(), FALSE())","function_find_example":"FIND(\\"apple\\", \\"This is an apple\\")\\n=> 12","function_floor_example":"FLOOR(1.01, 0.1)\\n=> 1.0\\n\\nFLOOR(-1.99, 0.1)\\n=> -2.0","function_floor_summary":"Returns the nearest integer multiple of significance that is less than or equal to the value. If no significance is provided, a significance of 1 is assumed.","function_fromnow_example":"FROMNOW({Date}, \\"days\\")\\n=> 25","function_fromnow_summary":"Calculates the number of days between the current date and another date.","function_guidance":"Smart onboarding","function_hour_example":"HOUR({date of begin})\\n=> 9","function_hour_summary":"Returns the hour of a datetime as a number between 0 (12:00am) and 23 (11:00pm).","function_if_example":"IF(Score > 60, \\"Pass\\", \\"Fail\\")\\n\\nIF(WaterTemp > 100, IF(WaterTemp < 212, \\"just right\\", \\"too hot\\"), \\"too cold\\")\\n\\nIF(Date = BLANK(), \\"Please enter date\\", \\"Date entered\\")","function_if_summary":"Returns value1 if the logical argument is true, otherwise it returns value2. Can also be used to make nested IF statements.\\n\\nCan also be used to check if a cell is blank/is empty.","function_int_example":"INT(1.99)\\n=> 1\\n\\nINT(-1.99)\\n=> -2","function_int_summary":"Returns the greatest integer that is less than or equal to the specified value.","function_is_after_example":"IS_AFTER({deadline}, TODAY())\\n=> 0","function_is_before_example":"IS_BEFORE({deadline}, TODAY())\\n=> TRUE","function_is_error_example":"IS_ERROR(2/0)","function_is_error_summary":"Returns true if the expression causes an error.","function_is_same_example":"IS_SAME({Date 1}, {Date 2}, \\"hour\\")\\n=> 0","function_iserror_example":"ISERROR(2/0)","function_iserror_summary":"Returns true if the expression causes an error.","function_last_modified_time_example":"LAST_MODIFIED_TIME()\\n=> \\"2020-06-10 6:27 p.m.\\"\\n\\nLAST_MODIFIED_TIME({date of begin})\\n=> \\"2020-06-09 1:27 p.m.\\"","function_left_summary":"Extract howMany characters from the beginning of the string.","function_len_example":"LEN(\\"apple\\")\\n=> 5","function_len_summary":"Counts the character length of a  text.\\n\\n[string] is the text to calculate the length; Punctuation, spaces, etc. also account for one character.","function_log_example":"LOG(1024, 2)\\n=> 10\\n\\nLOG(10000)\\n=> 4","function_log_summary":"Computes the logarithm of the value in provided base. The base defaults to 10 if not specified.","function_lower_example":"LOWER(\\"Hello!\\")\\n=> hello!","function_lower_summary":"Makes a string lowercase.","function_max_example":"MAX(5, -5, 555, -55)\\n=> 555","function_max_summary":"Returns the largest of the given numbers.","function_mid_example":"MID(\\"This is an apple\\", 12, 5)\\n=> apple","function_min_example":"MIN(5, -5, 555, -55) \\n=> -55 \\n\\nMIN({数学成绩}, {英语成绩}, {语文成绩})","function_min_summary":"Returns the smallest of the given numbers.","function_minute_example":"MINUTE({date of begin})\\n=>30","function_minute_summary":"Returns the minute of a datetime as an integer between 0 and 59.","function_mod_example":"MOD(7, 2)\\n=> 1","function_mod_summary":"Returns the remainder after dividing the first argument by the second.","function_month_example":"MONTH({date of begin})\\n=> 6","function_month_summary":"Returns the month of a datetime as a number between 1 (January) and 12 (December).","function_not_example":"NOT({age} > 18)","function_not_summary":"Reverses the logical value of its argument.","function_now_example":"NOW()\\n=> \\"2020-06-02 07:12\\"","function_now_summary":"Returns the current date and time.","function_odd_example":"ODD(1.5)\\n=> 3\\n\\nODD(-2.1)\\n=> -3","function_odd_summary":"Rounds positive value up to the nearest odd number and negative value down to the nearest odd number.","function_or_example":"OR(3>2, 2>3)\\n=>  true","function_power_example":"POWER(2, 5)\\n=> 32\\n\\nPOWER(-5, 3)\\n=> -125","function_power_summary":"Computes the specified base to the specified power.","function_quarter_example":"QUARTER({date of begin})\\n=> 2","function_quarter_summary":"Returns the quater of a datetime as a number between 1  and 4.","function_record_id_example":"\\"https://awesomeservice.com/view?recordId=\\" & RECORD_ID()","function_record_id_summary":"Returns the ID of the current record.","function_replace_example":"REPLACE(\\"This is an apple\\", 12, 8, \\"elephant\\")\\n=> This is an elephant","function_rept_example":"REPT(\\"Hi! \\", 3)\\n\\n=> Hi! Hi! Hi!","function_rept_summary":"Repeats string by the specified number of times.","function_right_summary":"Extract howMany characters from the end of the string.","function_round_example":"ROUND(1.99, 0)\\n=> 2\\n\\nROUND(18.8, -1)\\n=> 20","function_round_summary":"Rounds the value to the number of decimal places given by \\"precision.\\" (Specifically, ROUND will round to the nearest integer at the specified precision, with ties broken by rounding half up toward positive infinity.)","function_rounddown_example":"ROUNDDOWN(1.9, 0)\\n=> 1\\n\\nROUNDDOWN(-1.9, 0)\\n=> -1","function_rounddown_summary":"Rounds the value to the number of decimal places given by \\"precision,\\" always rounding down, i.e., toward zero. (You must give a value for the precision or the function will not work.)","function_roundup_example":"ROUNDUP(1.1, 0)\\n=> 2\\n\\nROUNDUP(-1.1, 0)\\n=> -2","function_roundup_summary":"Rounds the value to the number of decimal places given by \\"precision,\\" always rounding up, i.e., away from zero. (You must give a value for the precision or the function will not work.)","function_search_example":"SEARCH(\\"apple\\", \\"This is an apple\\")\\n=> 12","function_second_example":"SECOND({date of begin})\\n=> 1","function_second_summary":"Returns the second of a datetime as an integer between 0 and 59.","function_set_locale_example":"DATETIME_FORMAT(SET_LOCALE(NOW(), \\"zh-cn\\"), \\"lll\\")\\n=> 2020年6月2日上午11点04分","function_set_locale_summary":"Sets a specific locale for a datetime. Must be used in conjunction with DATETIME_FORMAT.","function_set_timezone_example":"DATETIME_FORMAT(SET_TIMEZONE(NOW(), -8), \\"M/D/YYYY h:mm\\")\\n=> 9/20/2021 2:30","function_set_timezone_summary":"Sets a specific timezone for a datetime. Must be used in conjunction with DATETIME_FORMAT.","function_sqrt_example":"SQRT(10000)\\n=> 100","function_sqrt_summary":"Returns the square root of a nonnegative number.","function_substitute_example":"SUBSTITUTE(\\"gold mold\\", \\"old\\", \\"et\\")\\n=> get met\\n\\nSUBSTITUTE(\\"gold mold\\", \\"old\\", \\"et\\", 1)\\n=> get mold","function_sum_example":"SUM(1, 3, 5, \\"\\", \\"VI\\")\\n=> 1 + 3 + 5 = 9","function_sum_summary":"Sum together the numbers. Equivalent to number1 + number2 + ...","function_switch_example":"SWITCH(1, 1, \\"one\\", 2, \\"two\\", \\"many\\")\\n\\n=>one","function_switch_summary":"Takes an expression, a list of possible values for that expression, and for each one, a value that the expression should take in that case. It can also take a default value if the expression input doesn\'t match any of the defined patterns. In many cases, SWITCH() can be used instead of a nested IF() formula.","function_timestr_example":"TIMESTR(NOW())\\n=> \\"04:52:12\\"","function_timestr_summary":"Formats a datetime into a time-only string (HH:mm:ss).","function_today_example":"TODAY()\\n=> \\"2020-06-02 00:00\\"","function_today_summary":"Returns today\'s date (year, month, and day), but is not precise to hours, minutes, and seconds (default is 00:00:00). If you want to be precise to the hours, minutes, and seconds, use the function NOW.\\n\\nNote: The results returned by this function are updated only when the calculation formula is refreshed or the datasheet is refreshed.","function_tonow_example":"TONOW(\\"2019-08-10\\", \\"y\\")\\n=> 1\\n\\nTONOW({date}, \\"days\\")\\n=> 25","function_tonow_summary":"Calculates the number of days between the current date and another date.","function_trim_example":"TRIM(\\" Hello! \\")\\n\\n=> Hello!","function_trim_summary":"Removes whitespace at the beginning and end of the string.","function_true_example":"IF({average score} > 60, TRUE(), FALSE())","function_upper_example":"UPPER(\\"Hello!\\")\\n=> HELLO!","function_upper_summary":"Makes string uppercase.","function_validate_params_count":"${name} function requires ${count} parameters","function_validate_params_count_at_least":"${name} function requires ${count} parameters at least","function_value_example":"VALUE(\\"$10000\\")\\n=> 10000","function_value_summary":"Converts the text string to a number.","function_view_url":"Introduction of specifiers","function_weekday_example":"WEEKDAY(TODAY())","function_weekday_summary":"Returns the day of the week as an integer between 0 and 6, inclusive. You may optionally provide a second argument (either \\"Sunday\\" or \\"Monday\\") to start weeks on that day. If omitted, weeks start on Sunday by default. Example:\\nWEEKDAY(TODAY(), \\"Monday\\")","function_weeknum_example":"WEEKNUM(TODAY(), \\"Monday\\")","function_weeknum_summary":"Returns the week number in a year. You may optionally provide a second argument (either \\"Sunday\\" or \\"Monday\\") to start weeks on that day. If omitted, weeks start on Sunday by default. Example:\\nWEEKNUM(TODAY(), \\"Monday\\")","function_workday_diff_example":"WORKDAY_DIFF({Product begin date}, {Product launch date} , \\"2020-06-25, 2020-06-26, 2020-06-27\\")\\n=> 100","function_workday_diff_summary":"Returns the number of working days between startDate and endDate. Working days exclude weekends and an optional list of holidays, formatted as a comma-separated string of ISO-formatted dates.","function_workday_example":"WORKDAY({ Product launch date}, 100, \\"2020-06-25, 2020-06-26, 2020-06-27\\")\\n=> 2020-07-12","function_workday_summary":"Returns a date several workdays after the start date.\\n\\n[startDate] is the start date you specify.\\n[numDays] is the number of workdays after the start date you specify, expressed as a positive number. For example, the number \\"1\\" represents a date one workday after the start date;\\n[holidays] Is not required. It is specific dates that you want to remove from your calendar, such as a holiday. The input format is \\"yyyy-mm-dd\\", and multiple dates are separated by commas.\\n\\nThe workdays of this function do not include weekends and specific days that you specify.","function_xor_example":"XOR(3>2, 2>3, 4>3)\\n=> false","function_year_example":"YEAR({date of begin})\\n=> 2020","function_year_summary":"Returns the four-digit year of a datetime.","functions":"Functions","gabon":"Gabon","gallery_arrange_mode":"Arrange mode","gallery_img_stretch":"Fit","gallery_view":"Gallery","gallery_view_copy_record":"Duplicate record","gallery_view_delete_record":"Delete record","gallery_view_expand_record":"Expand record","gallery_view_insert_left":"Insert record before","gallery_view_insert_right":"Insert record after","gallery_view_shortcuts":"Gallery view","gambia":"Gambia","gantt_add_date_time_field":"Create Date field","gantt_add_record":"New task","gantt_add_task_text":"New task","gantt_back_to_now_button":"Today","gantt_by_unit_type":"${unitType}","gantt_cant_connect_when_computed_field":"The date fields contain computed field that is not allowed to write manually, please adjust the field and try again.","gantt_check_connection":"Check the connection","gantt_color_more":"More colors","gantt_color_setting":"Custom task bar color","gantt_config_color_by_custom":"Custom color","gantt_config_color_by_single_select":"By Select field","gantt_config_color_by_single_select_field":"By Single Select field","gantt_config_color_by_single_select_pleaseholder":"Choose Select field","gantt_config_color_help":"How to set up","gantt_config_friday":"Friday","gantt_config_friday_in_bar":"Fri","gantt_config_friday_in_select":"Fri","gantt_config_monday":"Monday","gantt_config_monday_in_bar":"Mon","gantt_config_monday_in_select":"Mon","gantt_config_only_count_workdays":"Duration only counts workdays.","gantt_config_saturday":"Saturday","gantt_config_saturday_in_bar":"Sat","gantt_config_saturday_in_select":"Sat","gantt_config_sunday":"Sunday","gantt_config_sunday_in_bar":"Sun","gantt_config_sunday_in_select":"Sun","gantt_config_thursday":"Thursday","gantt_config_thursday_in_bar":"Thu","gantt_config_thursday_in_select":"Thu","gantt_config_tuesday":"Tuesday","gantt_config_tuesday_in_bar":"Tue","gantt_config_tuesday_in_select":"Tue","gantt_config_wednesday":"Wednesday","gantt_config_wednesday_in_bar":"Wed","gantt_config_wednesday_in_select":"Wed","gantt_config_weekdays_range":"${weekday} to ${weekday}","gantt_config_workdays_a_week":"Custom standard workdays","gantt_cycle_connection_warning":"Invalid task dependency, there is a cycle connection\\n","gantt_date_form_start_time_year":"YYYY","gantt_date_form_start_time_year_month":"MMM, YYYY","gantt_date_time_setting":"Select Date fields","gantt_dependency_setting":"Custom dependency ","gantt_disconnect":"Disconnect","gantt_end_field_name":"End date","gantt_error_date_tip":"Something wrong about the dates. Please expand the record to edit.","gantt_field_config_tip":"This field is not configured","gantt_historical_data_warning":"How to handle old data?","gantt_init_fields_button":"Create Date field","gantt_init_fields_desc":"To generate a Gantt chart, please create two Date fields in your datasheet by clicking the button below","gantt_init_fields_title":"Create Date fields first","gantt_invalid_fs_dependency_warning":"Invalid task dependency, pre task start date is earlier than predecessor task end date","gantt_month":"Month","gantt_no_dependency":"No dependencies","gantt_not_allow_link_multuble_records_gantt_warning":"The dependent relationship field does not allow linking to multiple records. Please modify the field configuration and try it again","gantt_open_auto_schedule_switch":"Auto schedule","gantt_open_auto_schedule_warning":"Do you want tasks with dependencies to be automatically aligned when this feature is on? Some tasks\' dates will be changed.","gantt_open_auto_schedule_warning_no":"Don\'t change old data","gantt_pick_dates_tips":"Please select a date field","gantt_pick_end_time":"End date","gantt_pick_start_time":"Start date","gantt_pick_two_dates_tips":"Please select the start and end dates","gantt_quarter":"Quarter","gantt_set_depedency_field_description":"Need a Magic Link field with current table, which is associated with the front task","gantt_set_depedency_field_tips":"Please select the dependency field","gantt_setting":"Settings","gantt_setting_help_tips":"Help manual","gantt_start_field_name":"Start date","gantt_task":"Task","gantt_task_group_tooltip":"${count} task(s)","gantt_task_total_date":"${count} days","gantt_task_total_workdays":"${count} workdays","gantt_view":"Gantt","gantt_week":"Week","gantt_workdays_setting":"Custom workdays","gantt_year":"Year","generating_token_value":"Generate token","generation_fail":"Generation failed","generation_success":"Generated","georgia":"Georgia","germany":"Germany","get_link_person_on_internet":"Anyone with the link ","get_verification_code_err_button":"Confirm","get_verification_code_err_title":"Note","ghana":"Ghana","gibraltar":"Gibraltar","give_up_edit":"Discard edits","global":"General","global_earth":"Global","global_search":"Search","global_shortcuts":"General","go_login":"Log in ","go_to":"Go to","go_to_here_now":"Go","got_it":"Got it","goto_datasheet_record":"Go to the original datasheet","government_and_politics":"Government and politics","greece":"Greece","greenland":"Greenland","grenada":"Grenada","grit_keep_sort_disable_drag":"You\'ve enabled automatic sorting. Disable it before you can drag to move.","group":"Group","group_amount":"${amount} group(s)","group_blank":"[None]","group_by_field":"Group by","group_field_error_tips":"Grouping condition error, please reset","group_fields":"Group by \\"${field_name}\\"","groups_clubs_hobbies":"Groups, Clubs & Hobbies","gt_person":"> 5 位","guadeloupe":"Guadeloupe","guam":"Guam","guatemala":"Guatemala","guests_per_space":"Guests per Space","guinea":"Guinea","guinea_bissau":"Guinea-Bissau","guyana":"Guyana","haiti":"Haiti","handbook":"Product manual","handed_over_workspace":"New admin\'s team","heading_five":"Heading 5","heading_four":"Heading 4","heading_one":"Heading 1","heading_six":"Heading 6","heading_three":"Heading 3","heading_two":"Heading 2","health_and_self_improvement":"Health and self-improvement","help":"Help ","help_center":"Help center","help_resources":"Help Resources","hidden":"Hide","hidden_field_calendar_tips":"The Calendar view supports showing no more than 10 fields","hidden_field_calendar_toast_tips":"can\'t show more fields","hidden_field_desc":"Hidden field description","hidden_fields_amount":"${amount} hidden field(s)","hidden_graphic_fields_amount":"${amount} graphic field","hidden_groups_by_count":"${count} Group(s) Hidden","hidden_n_fields":"Hide ${count} fields","hide_all_fields":"Hide all","hide_field_tips_in_gantt":"Click to adjust the display fields in the task area","hide_fields":"Hide fields","hide_fields_not_go":"Can\'t go to the hidden field","hide_graphic_field_tips_in_gantt":"Click to adjust the display fields in the task item","hide_kanban_grouping":"Hide group","hide_one_field":"Hide field","hide_one_graphic_field":"Hide graphic field","hide_pane":"Hide panel","highlight":"Highlight","hint":"Tips","history_view_more":"Show more","history_view_tip":"You can view record activity in ${day} days. ","honduras":"Honduras","hong_kong":"Hong Kong, China","how_many_seconds":"${seconds}s","hr_and_recruiting":"HR & Recruiting","hungary":"Hungary","i_knew_it":"I knew it","iceland":"Iceland","icon_setting":"Custom icon","if_it_is_successful":"Succeed or not","image":"Image","image_limit":"The image size must be no larger than 2 MB","image_uploading":"Image uploading...","import":"Import","import_canceled":"Cancel import","import_excel":"Import from Excel","import_failed":"Import failed","import_failed_list":"Import failed list","import_file":"Import file","import_file_data_succeed":"File exported","import_file_outside_limit":"The uploaded file size should not exceed 20 MB","import_view_data_succeed":"View exported","import_widget":"Import widget","import_widget_success":"Widget imported","improving_info":"Complete personal information","improving_info_tip":"You can bind an existing account or get a new one","include_time":"Include time","inclusion_plan_button_value":"申请加入计划","income_expenditure_records":"Income and expenses","india":"India","indonesia":"Indonesia","inform":"Report abuse","init_roles":"Finance,Marketing,IT,HR,Legal","initial_size":"Original size","inline_code":"Inline code","input_formula":"Enter a formula","insert_above":"Insert above","insert_below":"Insert below","insert_field_above":"Insert field above","insert_field_after":"Insert right","insert_field_before":"Insert left","insert_field_below":"Insert field below","insert_new_field_below":"Insert new field below","insert_record":"Insert record","insert_record_above":"Insert record above","insert_record_below":"Insert record below","insert_record_left":"Insert ${record_tip} before","insert_record_right":"Insert ${record_tip} after","install_widget":"Install","installation":"Installation","integer":"Integer (2)","internet":"Internet","intrant_space_empty_tip":"Oops, you have not joined any Space yet","intrant_space_list":"Joined Spaces","intro_widget_tips":"What is widget?","introduction":"Introduction","invalid_action_sort_tip":"As a grouping field, the sorting of it has been set. The setting of the current order will not take effect.","invalid_field_type":"Invalid field type","invalid_option_sort_tip":"As a grouping field, the sorting of it has been set. ","invitation_link_old":"Created invitation link(s)","invitation_to_join":"Invite to join the Space","invitation_to_join_desc":"Collaborate with others on the Space ","invite_by_qr_code":"Invite QR Code","invite_code_tab_mine_way_1_tip":"If your friend hasn\'t registered yet, you can copy the link below to your friend","invite_email_already_exist":"This email has been invited. Repeated invitation is unnecessary. ","invite_empty_tip":"No result. Enter email to invite","invite_exist_mail_failed":"You can\'t send an invitation twice via the same email address","invite_friends":"Invite","invite_invite_title_desc":"Account ${invitee} is invited, please log in and confirm to join.","invite_member":"Invite","invite_member_join":"Invite member to join","invite_member_toadmin":"<a class=\\"involveMemberArr\\"></a> was invited by <a class=\\"memberName\\"></a> and joined the \\"<a class=\\"spaceName\\"></a>\\" Space.","invite_member_tomyself":"<a class=\\"involveMemberArr\\"></a> was invited by you and joined the \\"<a class=\\"spaceName\\"></a>\\" Space.","invite_member_touser":"<a class=\\"memberName\\"></a> invited you to join the \\"<a class=\\"spaceName\\"></a>\\" Space.","invite_members":"Invite members","invite_ousider_import_file_tip1":"Drag and drop files or click here to import","invite_ousider_import_file_tip2":"Maximum 500 members can be imported each time ","invite_ousider_import_file_tip3":"Support .xlsx/.csv files only","invite_ousider_template_click_to_download":"Download employee-information-template.xlsx","invite_ousider_template_file_name":"Employee information template.xlsx","invite_outsider_import_cancel":"Cancel import","invite_outsider_invite_btn_tip":"Invited members will be able to manage the workbench by default","invite_outsider_keep_on":"Invite more","invite_outsider_send_invitation":"Send invitation","invite_qr_code_download":"Download this QR code","invite_qr_code_introduction":"Scan code to join the team","invite_reward":"Invite to get rewarded","invite_success":"Invitation sent","invite_team_and_collaborating":"Invite your team and start collaborating","invite_via_link":"Invite link","invite_your_join":" invites you to join","invitee":"被邀请人","inviter":"邀请人","iran":"Iran","iraq":"Iraq","ireland":"Ireland","is_empty":"is empty","is_empty_widget_panel_mobile":"No widgets, please add widgets on the PC","is_empty_widget_panel_pc":"No widgets","is_not_empty":"is not empty","is_repeat":"has duplicates","is_repeat_disable_tip":"You can add only one \\"has duplicates\\" filter","israel":"Israel","italic":"Italic","italy":"Italy","ivory_coast":"Ivory Coast","jamaica":"Jamaica","japan":"Japan","join":"Submit Application","join_the_community":"Join community","joined_members":"Active members","jordan":"Jordan","journalism_and_publishing":"Journalism and publishing","jump_link_url":"Go to linked datasheet","jump_official_website":"Return to the official website","just_now":"Just now","kaban_not_group":"Uncategorized","kanban_add_new_group":"New group","kanban_copy_record_url":"Copy record URL","kanban_exit_member_group":"This member is already grouped. Please select again.","kanban_group_tip":"Grouped by ${kanban_field_id}","kanban_insert_record_above":"Insert record above","kanban_insert_record_below":"Insert record below","kanban_keep_sort_sub_tip":"Placement in this area will automatically sort","kanban_keep_sort_tip":"Processing auto sort","kanban_new_option_group":"undone, in progress, done","kanban_no_data":"No records","kanban_setting_title":"Choose or create a grouping field","kanban_view":"Kanban","kazakhstan":"Kazakhstan","keep_sort":"Auto sort","kenya":"Kenya","key_of_adjective":"\'s ","keybinding_show_keyboard_shortcuts_panel":"Shortcuts","keyboard_shortcuts":"Shortcuts","kindly_reminder":"Note","kiribati":"Kiribati","know_more":"Learn more","known":"I knew","kuwait":"Kuwait","kyrgyzstan":"Kyrgyzstan","lab":"Lab","label_account":"Account","label_bind_email":"Email","label_format_day":"Day","label_format_day_month_and_year_split_by_slash":"Day/Month/Year","label_format_month":"Month","label_format_month_and_day_split_by_dash":"Month-Day","label_format_year":"Year","label_format_year_and_month_split_by_dash":"Year-Month","label_format_year_month_and_day_split_by_dash":"Year-Month-Day","label_format_year_month_and_day_split_by_slash":"Year/Month/Day","language_setting":"Language","language_setting_tip":"Your language setting will affect all the Spaces that you log in","laos":"Laos","lark_single_record_comment_mentioned":"**维格表: **{nodeName}\\n**记录: **{recordTitle}\\n\\n\\"{commentContent}\\"\\n","lark_single_record_comment_mentioned_title":"**有人在评论中提及你**","last_step":"Back","last_update_time":"Last modified time","latvia":"Latvia","layout":"Layout","learn_about_us":"To understand us,","lebanon":"Lebanon","left":"Move to the left cell","legal":"Legal","lesotho":"Lesotho","levels_per_folder":"Levels per Folder","liberia":"Liberia","libya":"Libya","liechtenstein":"Liechtenstein","limit_chart_values":"There are currently too many graphic categories, showing only the first 300 types of data","line_chart":"Line Chart","link":"Link","link_common_err":"Oops, it seems the link is incorrect.","link_copy_success":"URL copied","link_data_error":"Data in the related datasheet error","link_delete_succeed":"Link deleted","link_failed":"The public share link is invalid probably because the sharer disabled the link or the admin forbade public sharing","link_failed_after_close_share_link":"After disabled, created public links will be invalid","link_failure":"Link invalided","link_input_placeholder":"Enter or paste a URL","link_invite":"Invite via link","link_other_datasheet":"content from other linked datasheet(s)","link_permanently_valid":"Valid permanently","link_to_multi_records":"Link to multiple records","link_to_specific_view":"Link to records from a view","list":"List","list_how_many_folders_and_files":"${folderNumber} Folder, ${fileNumber} files","list_of_attachments":"Attachments","lithuania":"Lithuania","load_tree_failed":"Failed to load tree resources","loading":"Loading...","loading_file":"Loading files, please wait...","local_business":"Local Business","local_data_conflict":"Resources in the process of initialization of data errors, please refresh and retry","local_drag_upload":"Upload local files","lock":"Lock","lock_view":"Lock view","log_out_succeed":"We have received your application","logical_functions":"Logical Function","login":"Log in","login_failed":"Login failed","login_frequent_operation_reminder_button":"Confirm","login_frequent_operation_reminder_title":"Note","login_logo_slogan":"Low-code platform with API-first Database-Spreadsheet","login_logo_slogan_mobile":"API-first Database-Spreadsheet","login_register":"Log in","login_slogan":"API-first Database-Spreadsheet","login_status_expired_button":"Confirm","login_status_expired_content":"Your session has expired, please log in again","login_status_expired_title":"Note","login_sub_slogan":"API-based database-spreadsheet hybrid, one-stop platform for project management and data operations","logo":"Logo","logout":"Log out","long_time_not_editor":"Loading...","lookup":"Rollup","lookup_and":"And operation","lookup_and_example":"AND(1, 1, 1, 1) => 1 ","lookup_and_summary":"Returns true if all the values are true, that is, not empty","lookup_arraycompact":"Remove nils","lookup_arraycompact_example":"ARRAYCOMPACT([1, 2, \\"\\", 3, false, \\" \\", null]) => [1, 2, 3, false, \\" \\"]","lookup_arraycompact_summary":"Removes all empty strings and null values. Keep \\"false\\" and strings that contain one or more blank characters.","lookup_arrayjoin":"Join values with commas","lookup_arrayjoin_example":"ARRAYJOIN(2020/01/21, 121, apple) => 2020/01/21,121,apple","lookup_arrayjoin_summary":"Joins all the values into a comma-separated string","lookup_arrayunique":"Remove duplicates","lookup_arrayunique_example":"ARRAYUNIQUE([1, 2, 3, 3, 1]) => [1, 2, 3]","lookup_arrayunique_summary":"Returns an array that includes only unique values","lookup_average":"AVERAGE","lookup_average_example":"AVERAGE(2, 4, 6, 8, 10) => 6","lookup_average_summary":"Returns the arithmetic mean of the values","lookup_check_info":"The field value can\'t be edited because it\'s a lookup result","lookup_concatenate":"CONCATENATE","lookup_concatenate_example":"CONCATENATE(\\"Name\\", \\"Year\\", \\"Age\\", 1) => NameYearAge1","lookup_concatenate_summary":"Joins all the values into a long string","lookup_count":"COUNT","lookup_count_example":"COUNT(1, 3, 5, \\"\\", \\"apple\\") => 3","lookup_count_summary":"Returns the number of numeric values. Use COUNTALL to count all records.","lookup_counta":"COUNTA","lookup_counta_example":"COUNTA(1, 3, 5, \\"\\", \\"Apple\\") => 4","lookup_counta_summary":"Returns the number of numeric and string values that are not empty","lookup_countall":"COUNTALL","lookup_countall_example":"COUNTALL(1, 3, 5, \\"\\", \\"apple\\") => 5","lookup_countall_summary":"Returns the number of all values, including empty ones","lookup_filter_condition_tip":"This field type has been converted. Please confirm the filter criteria","lookup_filter_waring":"The filter column of this field has type conversion, please check.","lookup_link":"Select a Magic Link field","lookup_max":"MAX","lookup_max_example":"MAX(1, 3, 5, \\"\\", \\"Apple\\") => 5; MAX(2020/01/12, 1993/06/08, 2021/12/12, \\"\\", \\"Apple\\") => 2021/12/12","lookup_max_summary":"Returns the largest value of all the values","lookup_min":"MIN","lookup_min_example":"MIN(1, 3, 5, \\", \\"apple\\") => 1, MIN(2020/01/12, 1993/06/08, 2021/12/12, \\", \\"apple\\") => 1993/06/08","lookup_min_summary":"Returns the smallest value of all the values","lookup_modal_subtitle":"The Magic Link field has linked this datasheet to another one","lookup_or":"Or operation","lookup_or_example":"OR(1, 0, 1, 1) => 1","lookup_or_summary":"Returns true if any of the values is true","lookup_sum":"SUM","lookup_sum_summary":"Returns the sum of all the values","lookup_values":"Original values","lookup_xor":"eXclusive OR operation","lookup_xor_example":"XOR(1, 0, 1, 1) => 1","lookup_xor_summary":"Returns true if an odd number of values are true","loopkup_filter_pane_tip":"Change of column type selected by filter condition","lt_person":"≦ 5 位","luxembourg":"Luxembourg","macau":"Macau, China","macedonia":"Macedonia","madagascar":"Madagascar","mail":"Email","mail_invite_fail":"Mail invite success.","mail_invite_success":"Mail invite success.","main_admin_name":"Admin name","main_contain":"Main contents","malawi":"Malawi","malaysia":"Malaysia","maldives":"Maldives","mali":"Mali","malta":"Malta","managable_space_empty_tip":"It seems so empty here~Try to create a Space first.","managable_space_list":"My Spaces","manage_members":"Manage members","manage_role_empty_btn":"Start using","manage_role_empty_desc1":"You can freely create roles and add any teams / members to one or more roles.<a target=\\"_blank\\" href=\\"${url}\\"> Learn more</a>","manage_role_empty_desc2":"For example, you can create a role named \\"project manager\\" and add all project managers in your organization to this role. In this way, you can directly select the role \\"project manager\\" in the member field or in the record comments and notify them.","manage_role_empty_title":"Welcome to the Role feature","manage_role_header_desc":"You can freely create roles and add any teams / members to one or more roles.<a target=\\"_blank\\" href=\\"${url}\\"> Learn more</a>","manage_team":"Manage teams","manage_template_center":"Manage templates","manage_widget_center":"Manage widgets","manage_workbench":"Manage workbench","manual_save_view":"Save","manual_save_view_error":"Oops, there\'s something wrong with the data synchronization, please refresh it","manufacturing":"Manufacturing","map_select_data":"Select a view as the data source","map_select_label_field":"选择一个字段作为地址名称","map_select_location_field":"选择一个包含地址或者经纬度的字段","map_select_location_type":"切换地址的数据类型","map_select_location_type_dd":"经纬度坐标","map_select_location_type_text":"详细地址","map_select_location_type_url":"数据类型说明","map_setting":"Map settings","mark_all_as_processed":"Read all","mark_notification_as_processed":"Read","marketing":"Marketing","marketing_and_sales":"Marketing and sales","marketplace_app_disable_succeed":"Disabled","marketplace_app_enable_succeed":"Enabled","martinique":"Martinique","massive_template":"Start with templates","matters_needing_attention":"Matters needing attention","mauritania":"Mauritania","mauritius":"Mauritius","max_record_num_per_dst":"The current limit for a single datasheet is 50000 rows","max_records":"Maximum: ${count}","max_value":"Maximum","maximum_concurrent_volume":"Maximum concurrent volume","maybe_later":"Maybe Later","mayotte":"Mayotte","mbile_manual_setting_tip":"The view changes will only take effect for you","media_element":"Media Element","member":"Member","member_data_desc_of_dept_number":"Quantity statistics of all teams in the organizational structure (including sub-teams)","member_data_desc_of_field_number":"Numbers of all files in the catalog","member_data_desc_of_member_number":"If the total number of \\"joined\\" and \\"not joined\\" members in the contact list has reached the limit, the new invitation will fail","member_err":"Nickname cannot exceed 32 characters","member_family_name":"Name","member_info":"Members","member_information_configuration":"Member setting","member_list_review":"Preview member list","member_name":"Name","member_not_exist":"Member does not exist","member_per_space":"Space members","member_preview_list":"Preview member list","member_quit_space":"<a class=\\"memberName\\"></a> left the \\"<a class=\\"spaceName\\"></a>\\" Space.","member_status_removed":"Removed","members_setting":"Members & Teams","mention":"Mention","menu_copy_record_url":"Copy record URL","menu_delete_multi_records":"Delete ${count} records","menu_delete_record":"Delete record","menu_duplicate_record":"Duplicate record","menu_expand_record":"Expand record","menu_insert_record":"Insert record ${direction}","menu_insert_record_above":"Insert${lineCount}above","menu_insert_record_below":"Insert${lineCount}below","message_bind_email_succeed":"Email address changed successfully","message_call_sharing_function_with_browser":"Please call the sharing function of your browser","message_coping":"Pasting...","message_copy_failed":"Paste failed","message_copy_failed_reasoned_by_wrong_type":"Can\'t fill the pasted content into this type of field","message_copy_link_successfully":"Copied","message_copy_succeed":"Pasted","message_delete_template_successfully":"Template deleted","message_display_count":"${count} new message(s)","message_exit_space_failed":"Failed to exit the space","message_exit_space_successfully":"You\'ve exited the space","message_file_size_out_of_upperbound":"The size of a single file cannot exceed 1G","message_get_node_share_setting_failed":"Failed to get the sharing settings of the file","message_hidden_field_desc":"Field descriptions have been hidden","message_img_size_limit":"The size of the picture should not exceed ${size}","message_invalid_url":"Invalid address","message_member_name_modified_failed":"Failed to edit member name","message_member_name_modified_successfully":"Member name edited","message_node_data_sync_failed":"Failed to synchronize node data","message_preparing_to_download":"Preparing to download resources...","message_send_invitation_email_to_member":"The invitation email has been sent to ${invitedCount} member(s).","message_shown_field_desc":"Field descriptions have been shown","message_upload_img_failed":"Image upload failed","mexico":"Mexico","miniprogram_code_fail":"Invalid mini-program code. Please click to refresh.","minute":"minute","minutes_of_count":"${count} minutes ago","mirror":"Mirror","mirror_editor_label":"In addition to \\"Update-only\\", can also add or delete views and delete records","mirror_from":"Mirror from: ","mirror_manager_label":"In addition to \\"Editor\\", can also configure mirror","mirror_reader_label":"Can read data or comment on the mirror","mirror_resource_dst_been_deleted":"The original datasheet from which the current mirror was generated has been deleted and cannot be accessed further","mirror_resource_view_been_deleted":"Failed to access this mirror because the original view was deleted","mirror_show_hidden_checkbox":"Show all fields in Mirrors","mirror_uploader_label":"Can read, add and edit records except deleting records","mobile_space_list_tip":"For more \\"Space Management\\" settings, please access the web app on a computer","modal_normal_err_text":"Message error, the transmission failed.","modal_normal_title":"Normal operation box","modal_res_title":"Result prompt box","modal_restore_space":"All data from this space will be restored to its previous state","modal_select_title":"Select modal window","modal_sub_title":"I am a subtitle","modal_title":"Modal window","modal_title_bind_email":"Update your email address","modal_title_modify_nickname":"Edit","modify":"Modify","modify_field":"Edit field settings","moldova":"Moldova","monaco":"Monaco","mongolia":"Mongolia","montenegro":"Montenegro","month":"Month","month_day":"Month-Day","montserrat":"Montserrat","more_color":"More color","more_data_to_come":"More statistics coming...","more_invite_ways":"Other ways to invite members","more_login_mode":"Other login options ","more_member_count":"+ ${count}","more_template":"More","more_tips":"More...","more_widget":"More widgets","morocco":"Morocco","move":"Move","move_favorite_node_fail":"Node moving failed. The system will update the list automatically. ","move_node_modal_content":"After moving, the visibility of the file may be affected by the parent folder.","move_to":"Move to","move_to_error_equal_parent":"The file is under the current folder. Please select another folder","move_to_modal_title":"Move [${name}] to","move_to_success":"Move succeeded","mozambique":"Mozambique","multilingual_mail":"Chinese and English mail","must_one_date":"Pick at least one Date field","myanmar":"Myanmar","name":"Name","name_length_err":"The name must be between 1 and 100 characters in length","name_not_rule":"name_not_rule","name_repeat":"Duplicate name","namibia":"Namibia","nav_me":"me","nav_space_settings":"Settings","nav_team":"Contacts","nav_templates":"Templates","nav_workbench":"Workbench","nepal":"Nepal","netherlands":"Netherlands","network_icon_hover_connected":"Online","network_icon_hover_data_synchronization":"Syncing data...","network_icon_hover_disconnected":"Network disconnected","network_icon_hover_reconnection":"Reconnecting...","network_state_disconnection":"Network disconnected","new_a_line":"Shift+Enter: break line","new_caledonia":"New Caledonia","new_folder":"New folder","new_from_template":"Create from template","new_mian_admin":"New admin","new_mirror":"New mirror","new_something":"New","new_space":"Create a New Space","new_space_is_unactived":"The amount of your Space has reached the maximum of 10. The current invited Space will remain in inactive status and unable to access.","new_space_tips":" ","new_view":"Add view","new_zealand":"New Zealand","next_page":"Next page","next_record":"Move to the next record","next_record_plain":"Next record","next_record_tips":"Next record (${next_record})","next_step":"Next","nicaragua":"Nicaragua","nickname":"Nickname","nickname_in_space":"Name","nickname_in_space_short":"Name","nickname_modified_successfully":"Name edited","niger":"Niger","nigeria":"Nigeria","no_access_node":"The file is hidden","no_access_record":"No access","no_access_space_descirption":"Unable to access the Space. You might not have the permission or the Space does not exist.","no_access_space_title":"Note","no_access_view":"You have no access to the original datasheet","no_and_thanks":"No, thanks","no_comment_tip":"This record has no activity yet","no_cover":"No cover","no_data":"No data","no_foreignDstId":"Please link to a datasheet","no_lookup_field":"Please select a field to look up","no_match_tip":"Sorry, we can\'t find the page you are looking for","no_more":"End","no_next_record_tips":"No next record","no_notification":"No notifications","no_numerical_field":"no numerical field","No_open_functionality":"Not available yet","no_option":"No options","no_previous_record_tips":"No previous record","no_sapce_save":"There is no space  to save","no_search_field":"No matches that contain \\"${keyword}\\"","no_search_result":"No results","no_selected_record":"No selected records","no_support_pc_desc":"Sorry, this browser is not supported yet.","no_support_pc_sub_desc":"These 4 browsers are recommended: Chrome, Firefox, Safari, and Microsoft Edge","no_view_find":"No results","node_info":"File information","node_info_created_time":"Created time:","node_info_createdby":"Created by:","node_info_last_modified_by":"Last modified by:","node_info_last_modified_time":"Last modified time:","node_name":"Node name","node_not_exist_content":"The file you are accessing has no permissions or has been deleted","node_not_exist_title":"Note","node_number_err_content":"Your action failed because the Space has reached the maximum number of files","node_permission":"File permissions","nodes_per_space":"Nodes per Space","nonprofit":"Nonprofit","nonprofits_and_volunteering":"Nonprofits and volunteering","nonsupport_video":"Sorry, your browser does not support embedded video.","norway":"Norway","not_available":"None","not_equal":"is not...","not_found_field_the_name_as":"Field named \\"${value}\\" unfound.","not_found_record_contains_value":"No matches that contain \\"${searchValueSpan}\\" ","not_found_this_file":"The file you are searching for is unfound","not_joined_members":"Unactive members","not_mail_invitee_page_tip":"The current login user is not invitee (${text}). <br/>Please select the corresponding account to enter the space station.","not_shared":"Sharing is disabled","not_shared_tip":"After turning this on, user(s) outside the Space can view content you shared via the public links.","not_support_yet":"Not supported for this moment","notes_delete_the_view_linked_to_form":"A form has been created from this view. Deleting it will make the form become invalid. Are you sure you want to delete \\"${view_name}\\"?","notes_delete_the_view_linked_to_mirror":"This view has mirrors that others might be working on. Deleting it will make the mirrors no longer available. Are you sure you want to continue?","notification_center":"Notifications","notification_center_tab_all":"All (${count} )","notification_center_tab_comment":"I was mentioned (${count} )","notification_center_tab_member_field":"Assigned to me (${count} )","notification_center_tab_unread":"Unread (${count} )","notification_delete_record_by_count":"${count} record(s) deleted","notification_record_mention":"${user} mentioned you in ${record}","notification_space_name_changed":"The \\"<a class=\\"oldSpaceName\\"></a>\\" Space\'s name was changed to \\"<a class=\\"newSpaceName\\"></a>\\".","notify_time_zone_change_desc":"The time zone has been updated to ${time_zone}","notify_time_zone_change_title":"Detected that the time zone has changed","notify_type_datasheet":"notify_type_datasheet","notify_type_member":"Member notification","notify_type_node":"node notification","notify_type_space":"space_notify","notify_type_system":"system_notify","null":"[None]","number_cell_input_tips":"Please enter a number (positive or negative), decimal, or e (mathematical constant)","number_field_configuration_symbol":"Custom unit","number_field_format":"Precision","number_field_symbol_placeholder":"Enter a unit of measurement","number_of_records":"${number}${span}","number_of_records_unit":" ","number_of_rows":"Number of record","number_of_something":"${count}${span}","number_of_something_unit":" ","number_of_team":"Total teams","numeric_functions":"Numeric Function","nvc_err_300":"Oops, something went wrong. Click <a href=\\"javascript:__nc.reset()\\"> to refresh </a> and try again.","nvc_err_network":"The network is unstable. Please <a href=\\"javascript:__nc.reset()\\">click to refresh</a>.","nvc_start_text":"Drag the bar to the right end","official_adjustment":"Official adjustment","official_template":"Recommended","official_website":"Official website","official_website_without_abbr":"Official website","okay":"OK","old_user_turn_to_home":"Already have an account? <a href=\\"/login\\">Log in</a>","oman":"Oman","online_custome_service":"Online customer service","online_edition":"Online","online_video_training":"Online video training","open":"Open","open_api_panel":"Open API panel","open_failed":"Open failed","open_in_new_tab":"open in a new tab","open_keyboard_shortcuts_panel":"Open shortcuts","open_public_link":"Create public link","open_quickgo_panel":"Open search bar in workbench","open_share_edit":"Turn on permission for sharing and editing","open_view_filter":"Open filter setting","open_view_group":"Open group setting","open_view_hidden":"Open field settings","open_view_sort":"Open sort setting","open_view_sync_tip":"开启视图配置协同","open_workbench":"Open working catalog","operate":"Operations","operate_fail":"Action failed","operate_info":"Note","operate_success":"Action done","operate_warning":"Action warning","operated":"Operated","operation":"Operations","operation_log_allow_other_save":"Others can save the file to their own Space","operation_log_closed_share":"Sharing disabled","operation_log_not_allow_other_save":"Others can\'t save the file to their own Space","operation_log_open_share":"Sharing enabled","operation_log_update_share":"Share link updated","operations":"Operations","operator_and":"And","operator_or":"Or","option_configuration_basic_palette":"Basic","option_configuration_limited_time_free":"Limited Free","option_name_repeat":"Duplicate option","or":"or","ordered_list":"Numbered list","ordinary_members":"Member","ordinary_members_setting":"Manage members","org_chart_can_not_drop":"Cannot drop to this record card","org_chart_choose_a_link_field":"Select a Magic Link field as a sublevel","org_chart_choose_a_self_link_field":"You can only select a Magic Link field that links to the current datasheet","org_chart_collapse_node":"Collapse all record cards below","org_chart_collapse_node_disabled":"The operation cannot be executed","org_chart_controls_close_menu":"Close pending record list","org_chart_controls_fit_view":"Adaptive","org_chart_controls_open_menu":"Open pending record list","org_chart_controls_toggle_full":"Full Screen","org_chart_controls_zoom_in":"Zoom in","org_chart_controls_zoom_out":"Zoom out","org_chart_controls_zoom_reset":"Reset to 100%","org_chart_copy_record_url":"Copy record URL","org_chart_create_a_node_copy":"Duplicate record card","org_chart_create_a_node_copy_disabled":"The operation cannot be executed","org_chart_cycle_button_tip":"Click to delete the link between records","org_chart_del_link_relationship":"Delete link","org_chart_delete_disabled":"The operation cannot be executed","org_chart_drag_clear_link":"Dragging to the pending records area will clear the original link","org_chart_err_head":"Failed to render","org_chart_err_title":"The following records create a circular link, in which case the architecture can\'t render successfully. Please change the link","org_chart_expand_node":"Expand all record cards below","org_chart_expand_record":"Expand the record card","org_chart_init_fields_button":"Create a Magic Link field","org_chart_init_fields_desc":"All records linked by the field will become children (i.e. subordinates) of the current record","org_chart_init_fields_title":"You need a Magic Link field to determine the hierarchy","org_chart_insert_into_child":"Insert record card below","org_chart_insert_into_child_disabled":"The operation cannot be executed","org_chart_insert_into_parent":"Insert record card above","org_chart_insert_into_parent_disabled":"The operation cannot be executed","org_chart_layout_horizontal":"Horizontal layout","org_chart_must_have_a_link_field":"Select a Magic Link field that links to the current datasheet","org_chart_pick_link_field":"Select a Magic Link field","org_chart_please_click_button_to_create_a_node":"No records yet. Click the button below to create one first","org_chart_please_drag_a_node_into_canvas":"Please drag a record from the right to the graphic area to create the first record card","org_chart_please_drag_a_node_into_canvas_if_list_closed":"Open the record list and drag a record from the right to the graphic area to create the first record card","org_chart_record_list":"Pending records","org_chart_setting":"Settings","org_chart_setting_field_deleted":"The field was deleted","org_chart_setting_field_invalid":"Please select a Magic Link field that links to the current datasheet","org_chart_tip_drag_node_insert":"Release the mouse node \\"${dragRecordName}\\" will be inserted to the ${direction} of the node \\"${targetRecordName}","org_chart_tip_drag_node_merge":"The node \\"${dragRecordName}\\" will become a child of the node \\"${targetRecordName}\\" when the mouse is released","org_chart_view":"Architecture","organization_and_role":"Organization","other_equitys":"Other","other_invitation_rule":"Other ways to invite members","other_login":"Other login options","other_views":"Advanced Views","owner":"${node_type} admin","page_not_found_tip":"Sorry, we can\'t find the page you are looking for","page_timeout":"The page is timeout. Please refresh.","page_to_down_edge":"Scroll to the bottom","page_to_up_edge":"Scroll to the top","pakistan":"Pakistan","palau":"Palau","palestine":"Palestine","panama":"Panama","papua_new_guinea":"Papua New Guinea","paragraph":"Paragraph","paraguay":"Paraguay","partner":"Sharer","paste":"Paste","paste_attachment":"${keyboardShortcut} Paste files here","paste_attachment_error":"Please paste the file into an attachment field","paste_cell_data":"Paste cell(s)","paste_tip_add_field":"One or more new fields will be added to this datasheet","paste_tip_for_add_record":"One or more records will be added to this datasheet","paste_tip_for_add_record_field":"New fields and records will be added to this datasheet","paste_upload":"Paste and upload","path":"Original path","pending_invite":"Pending invite","people":" member(s)","percent_bar_chart":"Percent Bar Chart","percent_cell_input_tips":"Please enter a number (positive or negative), decimal, or e (mathematical constant)","percent_column_chart":"Percent Column Chart","percent_line_chart":"Percent Line Chart","percent_stacked_bar_chart":"Percent Stacked Bar Chart","percent_stacked_by_field":"100% Stacked by","percent_stacked_column_chart":"Percent Stacked Column Chart","percent_stacked_line_chart":"Percent Stacked Line Chart","permission_template_visitor":"Experiencing","permisson_model_field_owner":"Field owner","person":" member(s)","person_of_rest":"Remaining: ${count}","person_upper_bound":"Maximum: ${maxMemberNumber}","personal":"Personal","personal_info":"Account information","personal_invitation_code_desc1":"You can see ${text} by entering the space and clicking on the avatar at the bottom left","personal_nickname":"Name","personalized_setting":"Preferences","personalized_setting_tip":"Configure your preferences, including language, appearance, and so on. The following settings only take effect on your account.","peru":"Peru","philippines":"Philippines","pick_one_option":"Pick a field","pie_chart":"Pie Chart","placeholder_add_record_default_complete":"Prefill new cells with this value","placeholder_choose_group":"Select a team","placeholder_enter_here":"Enter here","placeholder_enter_your_description":"Enter a description","placeholder_input":"Enter","placeholder_input_email":"Enter your email address","placeholder_input_member_email":"Enter an email address","placeholder_input_member_name":"Enter member nickname","placeholder_input_new_nickname":"Give yourself a new name","placeholder_input_nickname_with_rules":"Enter ${minCount}-${maxCount} characters","placeholder_input_password":"Enter a password","placeholder_input_team_name":"Name the team","placeholder_input_workspace_name":"Enter space name","placeholder_input_workspace_new_name":"Name the Space (within ${minCount}-${maxCount} characters)","placeholder_modal_normal":"Bubble format will be used if text-overflow happened","placeholder_search_team":"Search team","placeholder_select_report_reason":"Please select the reason for the report","platform_synchronization":"Synchronize in all platforms","player_contact_us_confirm_btn":"Done","player_step_ui_config_165":"{\\n    \\"headerImg\\": \\"https://s1.vika.cn/space/2023/03/16/8374ca1295664675bd1155b077555113\\",\\n    \\"readMoreUrl\\": \\"https://help.vika.cn/changelog/23-03-16-updates\\",\\n    \\"children\\": \\"<h3>🚀 Introduction of new functions</h3>\\\\n<ul><li>The mirror is upgraded again, hiding sensitive fields and collaborating with peace of mind</li><li>The time zone of the user account is online, and the time zone of the date list can be set independently, making cross-time zone cooperation smoother.</li><li>\\"Global Search\\" experience optimization, new search result categories</li><li>Gold-level space station benefits are increased, and the sharing form supports hiding official logos</li><li>API interface performance optimization, greatly improving call efficiency</li></ul>\\"\\n}","player_step_ui_config_166":"{\\n  \\"title\\": \\"Congratulations!\\",\\n  \\"description\\": \\"Your space get free trial 14 days. Click the button below to select a plan to start the trial.\\",\\n  \\"listHeader\\": \\"Included Features:\\",\\n  \\"listContent\\": [\\n    \\"Up to 2,000,000 records per space\\",\\n    \\"140GB of attachmens per space\\",\\n    \\"All APIs are accessible\\"\\n  ],\\n  \\"listFooter\\": \\"More details\\",\\n  \\"url\\": \\"https://apitable.com/management/upgrade\\"\\n}.","player_step_ui_config_167":"{\\n  \\"config\\": [\\n    {\\n      \\"key\\": 1,\\n      \\"name\\": \\"answer1\\",\\n      \\"title\\": \\"How do you want to use APITable?\\",\\n      \\"type\\": \\"multiButton\\",\\n      \\"answers\\": [\\n        \\"IT & Support\\",\\n        \\"Education\\",\\n        \\"Project Management\\",\\n        \\"Marketing\\",\\n        \\"Product Management\\",\\n        \\"HR & Recruiting\\",\\n        \\"Operations\\",\\n        \\"Finance\\",\\n        \\"Sales & CRM\\",\\n        \\"Software Development\\",\\n        \\"HR & Legal\\",\\n        \\"Design & Creative\\",\\n        \\"Nonprofit\\",\\n        \\"Manufacture\\",\\n        \\"Other Things\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 2,\\n      \\"name\\": \\"answer2\\",\\n      \\"title\\": \\"What best describes your current role?\\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"Business Owner\\",\\n        \\"Team Leader\\",\\n        \\"Team Member\\",\\n        \\"Freelancer\\",\\n        \\"Director\\",\\n        \\"C-level\\",\\n        \\"VP\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n        {\\n      \\"key\\": 3,\\n      \\"name\\": \\"answer3\\",\\n      \\"title\\": \\"How many people are on your team? \\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"Just me\\",\\n        \\"2-5\\",\\n        \\"6-10\\",\\n        \\"11-15\\",\\n        \\"16-25\\",\\n        \\"25-50\\",\\n        \\"51-100\\",\\n        \\"101-500\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 4,\\n      \\"name\\": \\"answer4\\",\\n      \\"title\\": \\"How many people work at your company?  \\",\\n      \\"type\\": \\"radio\\",\\n      \\"answers\\": [\\n        \\"1-19\\",\\n        \\"20-49\\",\\n        \\"50-99\\",\\n        \\"100-250\\",\\n        \\"251-500\\",\\n        \\"501-1500\\",\\n        \\"1500+\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 5,\\n      \\"name\\": \\"answer5\\",\\n      \\"title\\": \\"How did you hear about us? \\",\\n      \\"type\\": \\"checkbox\\",\\n      \\"answers\\": [\\n        \\"Search Engine\\",\\n        \\"YouTube\\",\\n        \\"Product Hunt\\",\\n        \\"Github\\",\\n        \\"Twitter\\",\\n        \\"LinkedIn\\",\\n        \\"Through a friend\\"\\n      ],\\n      \\"lastAllowInput\\": false\\n    },\\n    {\\n      \\"key\\": 6,\\n      \\"name\\": \\"answer6\\",\\n      \\"title\\": \\"We host a Discord channel as a place for discussion with APITable fans, come and join us!\\",\\n      \\"type\\": \\"joinUs\\",\\n      \\"url\\": \\"https://discord.gg/2UXAbDTJTX\\",\\n      \\"confirmText\\": \\"Join Our Community\\",\\n      \\"skipText\\": \\"skip\\",\\n      \\"submit\\": true\\n    }\\n  ]\\n}","player_step_ui_config_168":"{\\n\\"templateKey\\":\\"createMirrorTip\\"\\n}","please":"Please","please_check":"Please check","please_choose":"Please select","please_contact_admin_if_you_have_any_problem":"If you have any questions, contact the Space admin.","please_download_to_view_locally":"Please download to check","please_note":"Note","please_read_carefully":"Please read carefully","please_select_org":"Select a team","plus_edition":"Plus","png":"As .png format","poc_sync_members":"Add members through organizational structure","poland":"Poland","portugal":"Portugal","pr_and_communications":"PR & Communications","precision":"Precision","press_again_to_exit":"Press again to exit!","preview":"Preview","preview_cannot_preview":"This file can\'t be preview","preview_click_reset_image_size":"Click to return to the original size","preview_copy_attach_url":"Copy attachment URL","preview_copy_attach_url_succeed":"Copied","preview_doc_type_attachment_loading":"Loading\\b... please wait a sec","preview_fail_title":"Preview failed","preview_form_title":"Form","preview_form_title_desc":"Form preview","preview_not_support_video_codecs":"Only MP4 videos with H.264 video codecs can be preview","preview_revision":"Preview","preview_the_image_not_support_yet":"The file doesn\'t support reviewing","preview_widget":"Preview widget","previous_month":"last month","previous_page":"Previous page","previous_record":"Move to the previous record","previous_record_plain":"Previous record","previous_record_tips":"Previous record (${previous_record})","previous_week":"last week","price_bottom_secction_desc":"The black technology that allows everyone to DIY business software systems at will","primary":"Primary","primary_admin":"Admin","primary_admin_email":"Admin\'s email address","primary_admin_new_nickname":"New admin\'s account name","primary_admin_nickname":"Admin\'s account name","pro_edition":"Pro","process":"Process","processed":"Read","product_design_and_ux":"Product, design, and UX","product_roadmap":"Product roadmap","products_and_consumer_reviews":"Products and consumer reviews","profession":"Pro","professional":"Professional","project_management":"Project Management","proportion":"proportion","Public_Beta_Period":"Public Beta Period","public_cloud":"Cloud","public_link":"Share public link","public_link_desc":"A link that everyone can access","publish_link_tip":"Post a link that everyone can access","publish_share_link_with_anyone":"Publish and share the link with anyone","publishing":"Publishing Industry","puerto_rico":"Puerto Rico","put_away_record_comments":"Put away the record comments panel","put_away_record_history":"Put away the record history panel","qatar":"Qatar","QR_code_invalid":"QR code is invalid","quick_close_public_link":"Disable public link","quick_free_trial":"Start your free trial now","quick_import_widget":"Import installed widgets","quick_login":"Quick login options","quick_login_bind":"<%= type %>","quick_search_intro":"Quickly obtain relevant search results by entering a keyword. Filter by file type (e.g. datasheet, folder, form, mirror, dashboard) using category items","quick_search_loading":"Searching...","quick_search_not_found":"We couldn\'t find what you were searching for","quick_search_placeholder":"Search for files","quick_search_shortcut_esc":"Close","quick_search_shortcut_open":"Open","quick_search_shortcut_select":"Select","quick_search_shortcut_tab":"Use the Tab shortcut key to switch between filters","quick_search_title":"Quick Search","quick_tour":"Quick start","quickly_create_space":"Quickly creating a space","quit_space":"Leave Space","quote":"Quote","rating":"Rating","re_typing_email_err":"Re-typing email here!","reach_dashboard_installed_limit":"The maximum number of widgets has been installed","reach_limit_installed_widget":"You have installed the maximum number of widgets","real_estate":"Real estate","rebuild_token_value":"Generate New Token","receive_new_folder":"Received a new folder","received_a_new_doc":"Received a new document","recent_installed_widget":"Recently installed widgets (${count})","recently_used_files":"Recently visited folders","recommend":"Hot","reconciled_data":"Data is being reconciled","record":"Record","record_activity_experience_tips":"You are experiencing advanced space privileges, you can view record activity of  ${day}  days","record_comment":"Comments only","record_comments":"comments","record_fail_data":"data error","record_filter_tips":"This record has been filtered","record_functions":"Record Function","record_history":"Revision history only","record_history_title":"Record history","record_pre_filtered":"This record has been filtered and will be hidden once you click outside the record","record_pre_move":"This record will be moved elsewhere once you click outside the record","record_unnamed":"Unnamed record","records_of_count":"${count} records","records_per_space":"Total records of the Space","recover_node":"Restore file","recover_node_fail":"Failed to restore file","recover_node_success":"File restored ","redo":"Redo","refresh":"Refresh","refresh_manually":"Refresh","register_immediately":"Sign up now","register_means_to_agree":"By signing up you agree to ","register_regulations":"/service-agreement/","register_time":"Registration time","registration_completed":"Signed up successfully","reject":"Reject","rejected":"Rejected","reload_page_later_msg":"Synchronization is done. The page will refresh in 5 seconds.","remain":"remain:","remain_capacity":"Remaining capacity","remaining_records":"Remaining: ${count}","remaining_time":"Remaining day(s)","remarks":"V coins","remove":"Remove","remove_cover":"Remove cover","remove_favorite":"Unpin","remove_from_group":"You were removed from the \\"<a class=\\"teamName\\"></a>\\" team of the \\"<a class=\\"spaceName\\"></a>\\" Space by <a class=\\"memberName\\"></a>.","remove_from_role":"You were removed from the \\"<a class=\\"roleName\\"></a>\\" role of the \\"<a class=\\"spaceName\\"></a>\\" Space by <a class=\\"memberName\\"></a>.","remove_from_space":"Remove from Space","remove_from_space_confirm_tip":"Confirm to move the member out of this Space completely","remove_from_team":"Remove from team","remove_from_team_confirm_tip":"Confirm to remove the member from this team","remove_from_the_team":"Remove","remove_member_fail":"Remove member failed","remove_member_from_space_confirm_content":"Are you sure to remove the selected member from the organizational structure?","remove_member_from_space_or_team_select_content":"Do you want to remove the selected member from the group or from the organizational structure completely?","remove_member_in_sub_team_err":"This member belongs to the subordinate group of the current group. Please remove the member from that group.","remove_member_success":"Remove member success","remove_members_button":"Remove forever","remove_members_content":"Remove selected members from the organization?","remove_members_title":"Remove members","removed_member_tomyself":"You removed <a class=\\"involveMemberArr\\"></a> from the \\"<a class=\\"spaceName\\"></a>\\" Space.","rename":"Rename","rename_role_success_message":"Role renamed successfully","rename_role_title":"Modify name","rename_team":"Rename team","rename_team_fail":"Failed to rename the team","rename_team_success":"Team renamed","rename_view":"Rename view","render_normal":"Regular rendering","render_prompt":"Rendering optimization","reopen":"Reopen it","report_issues":"Report issues","report_issues_github_url":"https://github.com/apitable/apitable/issues","report_success_tip":"Reported successfully","republic_of_the_congo":"Republic Of The Congo","request":"API request","request_in_api_panel":"Make API requests ","request_in_api_panel_body_warning":"Request data is numerically intensive in this datasheet, the Body parameter can\'t be automatically brought, you need to fill in manually after forwarding. Do you continue?","request_in_api_panel_curl":"Make a request","request_tree_node_error_tips":"Request failed, please click retry","require_login_tip":"Editing a shared file requires login ","reselect":"Reselect","reset":"Reset","reset_password_via_emai_failed":"Failed to send: ${error_message}","reset_password_via_emai_success":"Sent successfully","reset_password_via_email":"Reset password via email","resource_load_failed":"Loading failed, please refresh and try again","response_status_code":"Response to status code ","response_status_code_desc":"Response to status code description","rest":"Remaining","rest_consumption":"Remaining: ${count}","rest_storage":"Remaining: ${memory}","restore":"Restore","restore_space":"Restore Space","restore_space_confirm_delete":"This Space will be deleted forever at this given time","restore_success":"Restored successfully","retail":"Retail","reunion_island":"Réunion Island","right":"Move to the right cell","robot":"Robot","robot_action_config":"Action configuration","robot_action_delete":"Delete action","robot_action_delete_confirm_desc":"This action may stop the robot from working. Continue?","robot_action_delete_confirm_title":"Delete action","robot_action_send_web_request_add_formdata_button":"New key-value pair","robot_action_send_web_request_add_header_button":"Add","robot_action_send_web_request_body_formdata":"form-data","robot_action_send_web_request_body_formdata_desc":"Add one or more key-value pairs in the body","robot_action_send_web_request_body_json":"JSON","robot_action_send_web_request_body_json_desc":"Enter JSON texts in the body","robot_action_send_web_request_body_raw":"raw","robot_action_send_web_request_body_raw_desc":"Enter raw texts in the body","robot_action_send_web_request_body_text":"Text","robot_action_send_web_request_config_1":"Request method","robot_action_send_web_request_config_1_desc":"Send web request via the GET, POST or other methods","robot_action_send_web_request_config_2":"Request address","robot_action_send_web_request_config_2_desc":"The robot will send web request to the following address","robot_action_send_web_request_config_3":"Header","robot_action_send_web_request_config_3_desc":"Add one or more key-value pairs in the header","robot_action_send_web_request_config_4":"Body","robot_action_send_web_request_desc":"When the robot starts working, it will automatically send a web request to a specific URL","robot_action_send_web_request_method_1":"GET","robot_action_send_web_request_method_2":"POST","robot_action_send_web_request_method_3":"PATCH","robot_action_send_web_request_method_4":"DELETE","robot_action_send_web_request_title":"Send a web request","robot_action_type":"Action type","robot_auto_desc":"Robot description: ","robot_cancel_save_step_button":"Cancel","robot_change_action_tip_content":"This action will clear up the current action configuration. Continue?","robot_change_action_tip_title":"Change action","robot_change_trigger_tip_content":"This action will clear up the current trigger configuration. Continue?","robot_change_trigger_tip_title":"Change trigger","robot_config_empty_warning":"Please fill in the required field","robot_config_incomplete_tooltip":"Please complete the configuration","robot_config_panel_help_tooltip":"See documentation ","robot_config_panel_title":"Configure Robot","robot_create_wizard_next":"Next","robot_create_wizard_step_1":"Edit robot name","robot_create_wizard_step_1_desc":"Hi, I\'m your robot. Please give me a name~","robot_create_wizard_step_2":"Select trigger","robot_create_wizard_step_2_desc":"When should I start working? Please select a trigger","robot_create_wizard_step_3":"Select action","robot_create_wizard_step_3_desc":"What should I do when I\'m started? Please select an action","robot_create_wizard_step_4":"View robot","robot_create_wizard_step_4_button":"View robot","robot_create_wizard_step_4_desc":"Congrats! You\'ve created a robot. Now you can view and configure your robot.","robot_delete":"Delete robot","robot_delete_confirm_desc":"You can\'t recover the robot after deletion. Continue?","robot_delete_confirm_title":"Delete robot","robot_disable_create_tooltip":"Please apply to enable the Robot feature first","robot_edit_desc":"Edit robot description","robot_enable_config_incomplete_error":"Please complete the robot configuration first ","robot_enter_body_text_placeholder":"Enter a text","robot_enter_key_placeholder":"Enter a key","robot_enter_message_content_placeholder":"Enter message content ","robot_enter_request_address_placeholder":"Enter request address","robot_enter_value_placeholder":"Enter a value","robot_enter_webhook_placeholder":"Enter a webhook URL ","robot_feature_entry":"Robot","robot_inserted_variable_invalid":"Invalid variable","robot_inserted_variable_part_1":"Step ${number}","robot_more_operations_tooltip":"More operations","robot_new_action":"Add an action","robot_new_action_tooltip":"Add an action","robot_no_step_config_1":"Select trigger","robot_option_invalid_error":"Invalid option","robot_panel_create_tab":"New Robot","robot_panel_help_tooltip":"See documentation ","robot_panel_no_robot_tip":"Robots are listening for data changes 24/7. Now unleash your creativity with automation.","robot_panel_title":"Robot","robot_reach_count_limit":"This datasheet has reached the maximum number of robots","robot_rename":"Rename robot","robot_required_error":"This field is required","robot_return":"Back","robot_run_history_bottom_tip":"The end","robot_run_history_desc":"You have access to all run history during the public beta <a href=\'https://help.apitable.com/docs/guide/manual-automation-robot#how-to-check-the-question\' target=\\\\\\"_blank\\\\\\">Trouble shooting</a>","robot_run_history_error":"Error","robot_run_history_fail":"Failed","robot_run_history_fail_tooltip":"This step failed. Please check details for troubleshooting.","robot_run_history_fail_unknown_error":"Sorry, an unknown error occurred, please check the robot configuration and try again","robot_run_history_input":"Input","robot_run_history_no_data":"No runs yet","robot_run_history_no_output":"No output","robot_run_history_output":"Output","robot_run_history_returned_data":"Returned data","robot_run_history_running":"Running","robot_run_history_status_code":"Status code","robot_run_history_success":"Success","robot_run_history_title":"Run history","robot_run_history_tooltip":"Run history","robot_save_step_button":"Save","robot_save_step_success":"Step saved","robot_select_option":"Select an option","robot_select_option_invalid":"Invalid option","robot_trigger_add_match_condition_button":"New match condition","robot_trigger_config":"Trigger configuration","robot_trigger_form_submitted_config_1":"Select a form","robot_trigger_form_submitted_config_1_desc":"Specify one form: When it receives a new response, the robot starts running","robot_trigger_form_submitted_desc":"When a form receives a new response, the robot will start working","robot_trigger_form_submitted_title":"Form is submitted","robot_trigger_match_condition_and":"And","robot_trigger_match_condition_or":"Or","robot_trigger_match_condition_when":"When","robot_trigger_record_created_desc":"Once a record is created, either by manual operation, API, or form collection, the robot will start working","robot_trigger_record_created_title":"Record is created","robot_trigger_record_matches_condition_config_2":"Select match conditions","robot_trigger_record_matches_condition_desc":"When a record matches predefined conditions, the robot will start working","robot_trigger_record_matches_condition_invalid_field":"Invalid match condition ","robot_trigger_record_matches_condition_title":"Record matches conditions","robot_trigger_type":"Trigger type","robot_unnamed":"Unnamed robot","robot_variables_array_flatten":"Convert to linear array","robot_variables_array_length":"Array length","robot_variables_breadcrumb_column_type":"${column_type} column","robot_variables_breadcrumb_record":"Record","robot_variables_breadcrumb_selecting":"(Please select)","robot_variables_cant_view_field":"No permission to view","robot_variables_creator_avatar":"Creator avatar","robot_variables_creator_ID":"Creator ID","robot_variables_creator_name":"Creator name","robot_variables_date_to_timstamp":"Convert date to timestamp","robot_variables_editor_avatar":"Editor avatar","robot_variables_editor_ID":"Editor ID","robot_variables_editor_name":"Editor name","robot_variables_insert_button":"Insert","robot_variables_join_array_item_property":"Join array items\' property","robot_variables_join_attachment_heights":"Join attachment heights","robot_variables_join_attachment_IDs":"Join attachment IDs","robot_variables_join_attachment_mime_types":"Join attachment MIME types","robot_variables_join_attachment_names":"Join attachment names","robot_variables_join_attachment_preview_image_token":"Join attachment preview image tokens","robot_variables_join_attachment_sizes":"Join attachment sizes","robot_variables_join_attachment_storage_locations":"Join attachment storage locations","robot_variables_join_attachment_thumbnail_URLs":"Join attachment thumbnail URLs","robot_variables_join_attachment_types":"Join attachment types","robot_variables_join_attachment_upload_token":"Join attachment upload tokens","robot_variables_join_attachment_URLs":"Join attachment URLs","robot_variables_join_attachment_widths":"Join attachment widths","robot_variables_join_color_names":"Join color names","robot_variables_join_color_values":"Join color values","robot_variables_join_linked_record_IDs":"Join linked record IDs","robot_variables_join_linked_record_titles":"Join linked record titles","robot_variables_join_member_avatars":"Join member avatars","robot_variables_join_member_IDs":"Join member IDs","robot_variables_join_member_names":"Join member names","robot_variables_join_member_types":"Join member types","robot_variables_join_option_color_names":"Join option color names","robot_variables_join_option_color_values":"Join option color values","robot_variables_join_option_colors":"Join option colors","robot_variables_join_option_IDs":"Join option IDs","robot_variables_join_option_names":"Join option names","robot_variables_more_operations":"More","robot_variables_option_color":"Option color","robot_variables_option_ID":"Option ID","robot_variables_option_name":"Option name","robot_variables_record_ID":"Record ID","robot_variables_record_URL":"Record URL","robot_variables_select_basics":"Basic info","robot_variables_select_column_property":"Column property","robot_variables_select_step":"Step","robot_variables_select_step_no_output_type":"No output (Step ${number}: ${step})","robot_variables_select_step_record_type":"Record (Step ${number}: ${step})","robot_variables_stringify_json":"Convert to JSON string","robot_variables_unsupported_column_type":"Unsupported column type","robot_variables_user_icon":"${column_type} icon","robot_variables_user_ID":"${column_type} ID","robot_variables_user_name":"${column_type} name","role_context_item_delete":"Delete","role_context_item_rename":"Rename","role_item":"${count} item(s)","role_member_table_empty":"There are no members in this role. You can ","role_member_table_header_name":"Member / Team","role_member_table_header_team":"Team","role_name_input_placeholder":"Please enter the name of the role","role_permission_manage_template":"Manage templates","rollup_choose_field":"Select a field from linked datasheet","rollup_choose_table":"Select a linked datasheet ","rollup_choose_table_description":"You can select the datasheet which linked by Magic link in current datasheet. If you couldn\'t find the datasheet that you want to link, please create a new Magic link field first.","rollup_conditions_num":"${ORDER_BY_NUM} sorting conditions and  ${FILTER_NUM} filtering conditions","rollup_filter_sort":"Filter and sort the linked field","rollup_filter_sort_description":"Add condition","rollup_filter_sort_popup_setting":"Sort setting","rollup_formula":"Reference method","rollup_limit":"How many records to roll up","rollup_limit_option_1":"All","rollup_limit_option_2":"First","rollup_sort_description":"You can sort data order by fields (Temporarily only supports setting one field)","romania":"Romania","rotate":"Spin","row":" Row(s)","row_height":"Row height","row_height_extra_tall":"Extra tall","row_height_medium":"Medium","row_height_setting":"Row height setting","row_height_short":"Short","row_height_tall":"Tall","russia":"Russia","rwanda":"Rwanda","safety_tip":"Security warning","safety_verification_tip":"Please drag the slider below to complete the verification","saint_kitts_and_nevis":"Saint Kitts and Nevis","saint_lucia":"Saint Lucia","saint_maarten_dutch_part":"Saint Maarten (Dutch Part)","saint_pierre_and_miquelon":"Saint Pierre and Miquelon","saint_vincent_and_the_grenadines":"Saint Vincent and The Grenadines","sales_and_customers":"Sales & Customers","samoa":"Samoa","san_marino":"San Marino","sao_tome_and_principe":"Sao Tome and Principe","saudi_arabia":"Saudi Arabia","save":"Save","save_action_desc":"You can save this file as a copy","save_as_template":"Save as template","save_document":"Save as copy","save_template_disabled":"Cannot save as template","save_this_modified":"Save changes","save_to_space":"Save to my Space","scan_to_login":"Scan to login","scatter_chart":"Scatter Chart","science_and_technology":"Science and technology","scroll_screen_down":"Scroll one screen down","scroll_screen_left":"Scroll one screen left","scroll_screen_right":"Scroll one screen right","scroll_screen_up":"Scroll one screen up","search":"Search","search_associate_record":"Find a record to link to","search_field":"Search","search_new_admin":"Search","search_node_pleaseholder":"Search for files (${shortcutKey})","search_or_add":"Find or add an option","search_role_placeholder":"Search roles","seats":"Seats","section1_tip":"空间成员越多，空间容量越大","section2_title_highligh":"“友”福同享，邀请赢大礼","section3_step1":"分享链接给好友","section3_step2":"好友点击注册","section3_step3":"一起赢取奖品","section4_nickname":"Name","section4_title":"邀请荣誉榜","section6_list_item1":"20 余种数据类型的存储与编辑，多维视图随心变化","section6_list_item2":"类 Excel 的表格界面，随意拖拽，上手简单易用","section6_list_item3":"多人实时协同，1000 人同时编辑一个格子也不会出错","section6_list_item4":"开放 API ，节点通知、跨平台同步、信息及时达","section6_list_item5":"模板应用场景丰富，一键即可保存，可内置到任意工作场景中","see_more":"See more","select":"Select","select_all":"Select all\\n","select_all_fields":"Select all\\n","select_axis_sort":"Select an axis to sort by","select_bar_chart_x_axis":"select X-axis","select_bar_chart_y_axis":"select X-axis","select_chart_category":"Dimension","select_chart_type":"Select chart type","select_chart_values":"Values","select_column_chart_x_axis":"Select X axis","select_column_chart_y_axis":"Select Y axis","select_data_source":"Function settings","select_end_date":"Select an end time","select_layout":"Choose layout","select_link_data_number":"Select the number of linked records","select_link_data_number_all":"Link all records","select_link_data_number_first":"Link the first record","select_local_file":"Drag and drop files or click here to upload","select_one_field":"Select field type","select_phone_code":"Select country and region","select_sort_rule":"Select sort rule","select_space_save":"Select the space to save","select_start_date":"Select a start time","select_theme_color":"Select theme color","select_view":"Select a view as the data source","select_y_axis_field":"Count a field","selected":"Selected","selection_to_down":"Select cells downwards","selection_to_down_edge":"Select cells downwards to the bottom","selection_to_left":"Select cells towards the left","selection_to_left_edge":"Select cells to the left-most","selection_to_right":"Select cells towards the right","selection_to_right_edge":"Select cells to the right-most","selection_to_up":"Select cells upwards","selection_to_up_edge":"Select cells upwards to the top","send":"Send","send_again_toast":"The user has not completed the registration. Resend the email invitation?","send_code_again":"Resend","send_comment_tip":"Enter: send","send_widget_to_dashboard_success":"Widget sent to the dashboard","send_widget_to_dashboard_success_link":"Widget sent to dashboard","senegal":"Senegal","senior_field":"Advanced column type","serbia":"Serbia","server_error_page_bg":"/space/2022/05/26/5c9cf8bc47074c8e95600147d818c11b?attname=500_en%402x.png","server_error_tip":"The server is under maintenance. Please wait for a few minutes and refresh again.","set_alarm_fail_tips":"Failed setting remiders because records were deleted","set_alarm_field_delete_tips":"Current field was deleted","set_as_the_template":"Set as template","set_field":"Field setting","set_field_required":"Set as required on forms","set_field_required_tip_1":"1. When you expand the record, the field will show \\"*\\" (means \\"required\\")","set_field_required_tip_2":"2. Forms must be submitted after the field is filled","set_field_required_tip_title":"Once set as required:","set_filter":"Filter setting","set_gallery_card_style":"Customize cards","set_graphic_field":"Graphic field settings","set_grouping":"Group setting","set_nickname":"Set nickname","set_record":"Set record","set_sort":"Sort setting","setting_nickname_sub_title":"Get yourself a name","seychelles":"Seychelles","share":"Share","share_and_collaboration":"Sharing and collaboration","share_and_editable_desc":"Others can edit the content of the datasheet within the shared page","share_and_editable_title":"Share with others for editing","share_and_save_desc":"Others can view your datasheet and save it as a copy","share_and_save_title":"Share and allow others to save as a copy","share_card_tips":"Scan the code to view content","share_code_desc":"Simpler, but more powerful","share_configuration":"Sharing setting","share_edit_exist_member_tip":"The current datasheet has ${content}. Confirm only if you allow others to view the organizational chart of the Space.","share_edit_tip":"The file is read-only before you log in. Please log in and try again.","share_editor":"Log in to edit","share_editor_label":"Log in to edit","share_email_invite":"Invite collaborators into your Space","share_exist_something_tip":"You\'re sharing a datasheet that contains ${content}. Others can view it via the sharing page. Please make sure you don\'t disclose any sensitive information. Linked datasheets are:\\n","share_fail_og_description_content":"The shared public link has been closed and is temporarily unavailable","share_failed":"Sharing failed","share_field_shortcut_link_tip":"Want to create a public link? Click here","share_file":"Share outside the Space","share_file_desc":"Share outside the Space via public links","share_form_edit_tip":"Please log in first to submit the form","share_form_login_tip":"Log in","share_form_title":"Fill in the form via the public link","share_login_tip":"Log in to edit file","share_mobile_friendly_tip":"88% of people get a better experience by editing on the computer","share_modal_title":"Share","share_node_number_err_content":"share_node_number_err_content","share_only_desc":"External users outside the space can only view the file","share_only_title":"Share with others for reading-only","share_permisson_model_link_datasheet_label":"Related external files","share_permisson_model_node_owner":"File owner","share_permisson_model_open_share_false_1":"Failed to share. Someone else has enabled the sharing.","share_permisson_model_open_share_label":"Sharing enabled","share_permisson_model_open_share_label_desc":"${member_name} enables sharing, and external users can access the content via the public link","share_permisson_model_setting_role_label":"Specify visible","share_permisson_model_setting_role_label_desc":"Except for the specified member(s), other member(s) cannot access","share_permisson_model_space_admin":"Space admin","share_permisson_model_space_admin_desc":"This Space has the admin(s) with the permission of \\"workbench management\\"","share_qr_code_tips":"Share via QR code","share_reader":"read-only","share_reader_label":"This shared content can be viewed only","share_save":"Save as copy","share_save_label":"This shared content can be saved as a copy","share_setting":"Share outside the Space","share_settings_tip":"Sharing settings updated ${status}","share_succeed":"File shared","share_title":"Share \\"${node}\\"","share_with_offsite_users":"Share with users outside the Space","shared_link_copied":"Template link copied","shelf_manage":"Shelf management","shortcut_key":"Shortcuts","shortcut_key_redo":"Action redone","shortcut_key_redo_nothing":"No action to redo","shortcut_key_undo":"Action undone","shortcut_key_undo_nothing":"No action to undo","show_all_fields":"Show all","show_data_tips":"Show data labels","show_data_tips_describle":"Show data labels","show_empty_values":"Show empty values","show_empty_values_describle":"Show empty values","show_field_desc":"Show field description","show_hidden_field_within_mirror":"镜像中显示隐藏字段","show_hidden_fields_by_count":"Expand ${count} hidden field(s)","show_name":"Show name","show_record_history":"Show revision history","show_smooth_line":"Show smooth curve","sierra_leone":"Sierra Leone","sign_up":"Sign up","silver_img":"URL","singapore":"Singapore","single_color_gradient_theme":"Monochrome gradient theme","siwtch_to_invite_tab":"Want to invite members? Click here","skip":"Skip","slider_verification_tips":"Please hold the slider and drag to the right","slovakia":"Slovakia","slovenia":"Slovenia","social_dingtalk_single_record_comment_mention":"### 🔔有人在评论中提及你\\n\\n**所在表:** {nodeName}\\n\\n**记录:** {recordTitle}\\n\\n“${commentContent}”","social_media":"New media operations","social_notification_url_title":"view","social_open_card_btn_text":"Detail","social_plat_space_list_item_seats_msg":"(oversize:${max}）","socket_error_network":"Oops! A network communication problem occurred, please refresh page","socket_error_server":"Oops! Something went wrong，please refresh page","software_development":"Software development","solomon_islands":"Solomon Islands","solution":"Solutions","somalia":"Somalia","some_day_after":"number of days from now…","some_day_before":"number of days ago","some_one_lock_view":"${uer_name}已锁定视图配置","something_went_wrong":"Something went wrong","something_wrong":"Please try again later.","sort":"Sort","sort_apply":"Apply","sort_by_option_order":"Sort ascending","sort_by_option_reverse":"Sort descending","sort_count_tip":"Sorted by ${count} field(s)","sort_desc":"Sort ${from} → ${to}","sort_link_data":"Sort linked records","sort_rules":"Sort condition","sorting_conditions_setting_description":"You can select a field in the linked datasheet as a sorting condition","south_africa":"South Africa","south_korea":"South Korea","space":"Space","space_add_primary_admin":"You become the admin of the \\"<a class=\\"spaceName\\"></a>\\" Space.","space_admin":"Space admin","space_admin_level":"Subscription plan","space_admins_3_up":"Your Space has the maximum number of admins","space_assigned_to_group":"<a class=\\"memberName\\"></a> assigned you to the \\"<a class=\\"teamName\\"></a>\\" team in the \\"<a class=\\"spaceName\\"></a>\\" Space.","space_assigned_to_role":"<a class=\\"memberName\\"></a> assigned you to the \\"<a class=\\"roleName\\"></a>\\" role in the \\"<a class=\\"spaceName\\"></a>\\" Space.","space_capacity":"Attachments Storage","space_changed_ordinary_user":"<a class=\\"memberName\\"></a> changed your role of the \\"<a class=\\"spaceName\\"></a>\\" Space to \\"Member\\".","space_configuration":"Space configuration","space_exist_dashboard":"Send widget to dashboard","space_has_been_deleted":"The \\"<a class=\\"spaceName\\"></a>\\" Space has been deleted.","space_has_been_recover":"The \\"<a class=\\"spaceName\\"></a>\\" Space has been restored.","space_id":"Space ID","space_info":"Overview","space_info_del_confirm1":"1. Deleting this Space will clean up the following data:","space_info_del_confirm2":"2. The Space will be deleted completely after 7 days. You can restore the Space before then.","space_join_apply":"<a class=\\"userName\\"></a> requested to join the \\"<a class=\\"spaceName\\"></a>\\" Space.","space_join_apply_approved":"Your request to join the \\"<a class=\\"spaceName\\"></a>\\" Space has been approved.","space_join_apply_refused":"Your request to join the \\"<a class=\\"spaceName\\"></a>\\" Space has been rejected.","space_list":"Spaces","space_logo":"space_logo","space_manage_choose_new_primary_admin":"Assign new admin","space_manage_infomation_text":"Your role has been changed to \\"Member\\", so you can\'t manage the Space now","space_members_limit_email_title":"「{SPACE_NAME}」空间站的成员数已超出上限（{USAGE}/{SPECIFICATION}）","space_name":"Space name","space_name_length_err":"Space name must be between 2 and 100 characters in length","space_not_access":"You are not a member of this Space, so you can\'t access it. Please contact the Space admin to join in.","space_origin":"Original space","space_overview":"Overview","space_seat_info":"Number of members in the space: ${num} ","space_setting":"Space settings","space_template":"Custom","space_time_machine_limit_email_title":"「{SPACE_NAME}」空间站支持查看 「{{SPECIFICATION}}」 天内的历史记录","space_trash_limit_email_title":"「{SPACE_NAME}」空间站支持查看 「{SPECIFICATION}」 天内的历史文件","spain":"Spain","specifical_member":"specific member","specifical_member_field":"specific member by field","split_multiple_values":"Split multiple values","sports_and_games":"Sports and games","sri_lanka":"Sri Lanka","stacked_bar_chart":"Stacked Bar Chart","stacked_by_field":"Stacked by","stacked_column_chart":"Stacked Column Chart","stacked_line_chart":"Stacked Line Chart","standard":"Standard","start_field_name":"Start time","start_onfiguration":"Start configuration","start_time":"Start time","start_use":"Start using","stat_average":"Average","stat_checked":"Checked","stat_count_all":"Total","stat_date_range_of_days":"Date range (days)","stat_date_range_of_months":"Date range (months)","stat_empty":"Empty","stat_fill":"Filled","stat_max":"Max","stat_max_date":"Latest date","stat_min":"Min","stat_min_date":"Earliest date","stat_none":"None","stat_percent_checked":"Percent Checked","stat_percent_empty":"Percent Empty","stat_percent_filled":"Percent Filled","stat_percent_un_checked":"Percent Unchecked","stat_percent_unique":"Percent Unique","stat_sum":"Sum","stat_un_checked":"Unchecked","stat_uniqe":"Unique","statistical_link_data":"Roll up values from the linked records","statistics":"Summary","status_code_inviter_space_member_limit":"The capacity of the inviter\'s space has reached the upper limit and can no longer add new member temporally.","status_code_link_invalid":"The invitation link has expired","status_code_nvc_fail":"The current environment is at risk, please try again later!","status_code_phone_validation":"The current operating environment is abnormal, please refresh the page and try again","status_code_space_limit":"Your number of Space has reached the upper limit. You cannot join any new Space temporarily.","status_code_space_not_exist":"The invited Space does not exist","stay_tuned_for_more_features":"Stay tuned for more features","steps_choose_reset_mode":"Select a reset method","storage_per_seats":"增值附件容量","storage_per_space":"Storage usage","strikethrough":"Strikethrough","subject_capacity_full":"Full Space Storage Reminder","subject_change_admin":"Space admin transfer","subject_invite_notify":"{USER_NAME} invited you to join the Space \\"{SPACE_NAME}\\"","subject_record_comment":"You\'re mentioned in a comment","subject_remove_member":"You left the Space \\"{SPACE_NAME}\\"","subject_space_apply":"{USER_NAME} is applying to join your Space \\"{SPACE_NAME}\\"","subject_transfer_widget_notify":"The ownership of your widget \\"{WIDGET_NAME}\\" has been transferred","subject_unpublish_widget_notify":"Your widget \\"{WIDGET_NAME}\\" has been unpublished","submit":"OK","submit_filter_success":"Filter conditions saved","submit_questionnaire_success":"You have successfully submitted the questionnaire!","submit_requirements":"Submit requirements","subscribe_grade_free":"Free","subscribe_grade_plus":"Plus","subscribe_grade_pro":"Pro","success":"Success","success_invite_number":"成功邀请 ${count} 人","success_invite_person_number":"成功邀请好友数","sudan":"Sudan","summary_return_field_value_of_row":"Returns the value to the cells of the ${name} columns.","summary_widget_add_describle":"Add summary description","summary_widget_add_target":"Add target value","summary_widget_select_field":"Select a way for summarizing","summary_widget_select_view":"Select a view as the data source","summary_widget_setting":"Widget settings","summary_widget_setting_help_tips":"Setting help","superior_team":"Superior team","support":"Help","support_access_to_editors":"You are allowed to access the current space to edit.","support_attachment_formats":"Support JPG, PNG, and GIF images under 1 GB","support_features":"Support","support_image_formats":"Support JPG, PNG, and GIF images","support_image_formats_limits":"Support JPG, PNG, and GIF images under ${number} MB","suriname":"Suriname","swaziland":"Swaziland","sweden":"Sweden","switch_avatar":"Change avatar","switch_to_catalog":"Focus on Catalog","switch_view_next":"Move to the next view","switch_view_prev":"Move to the previous view","switzerland":"Switzerland","sync_failed":"Synchronization failed","sync_success":"Synchronization succeeded","syncing":"Synchronizing","syria":"Syria","system_message":"System message","system_theme":"Use system setting","tab_add_view_datasheet":"Create a datasheet instead","tab_org":"Organization","tab_role":"Role","table":"Table","tag":"label","taiwan":"Taiwan, China","tajikistan":"Tajikistan","take_photos_or_upload":"Take photo or upload from Gallery","tanzania":"Tanzania","task_completed":"Task completed","task_list":"To-do list","task_progress":"Task progress","task_reminder_notify_column_member":"field member","task_reminder_notify_date_option_1_hour_before":"1 hour before","task_reminder_notify_date_option_15_minutes_before":"15 minutes before","task_reminder_notify_date_option_2_hours_before":"2 hours before","task_reminder_notify_date_option_30_minutes_before":"30 minutes before","task_reminder_notify_date_option_5_minutes_before":"5 minutes before","task_reminder_notify_date_option_exact":"Reach the exact date","task_reminder_notify_date_option_one_day_before":"One day before","task_reminder_notify_date_option_one_month_before":"One month before","task_reminder_notify_date_option_one_week_before":"One week before","task_reminder_notify_date_option_six_months_before":"Six months before","task_reminder_notify_date_option_three_month_before":"Three month before","task_reminder_notify_date_option_two_day_before":"Two days before","task_reminder_notify_date_option_two_months_before":"Two months before","task_reminder_notify_date_option_two_weeks_before":"Two weeks before","task_reminder_notify_member":"member ${member}","task_reminder_notify_who_error_not_exist":"The Member field was deleted","task_reminder_tips":"The task reminder time is base on the UTC time zone, and the time display here is base on the account time zone.","team":"Team","team_is_exist_err":"team_is_exist_err","team_length_err":"team_length_err","teamwork":"Start team work","teamwork_click_here":"Want to create a public link? Click here","teamwork_desc":"Invite collaborators","teamwork_number_tip":"${number} collaborator(s)","template":"Template","template_advise_tip":"Don\'t have the template you want? Feel free to send us suggestions !","template_centre_using_template_data":"Use data in the template","template_centre_using_template_tip":"Choose where to put the datasheet(s)","template_created_successfully":"Template created","template_creation_failed":"Failed to create template","template_detail_tip":"Use the template first, then you can modify or write data","template_feedback":"Feedback","template_go_back":"Templates - ${category}","template_has_been_deleted":"Current template does not exist or has been deleted","template_has_been_deleted_title":"Note","template_management":"Templates","template_name":"Template Name","template_name_limit":"Template name cannot exceed 100 characters","template_name_repetition_content":"Replacing it will overwrite the current Space template.","template_name_repetition_title":"\\"${templateName}\\" already exists. Do you want to replace it?","template_no_template":"No templates","template_not_found":"Can\'t find templates you want? Tell us","template_recommend_title":"Hot","template_type":"Template","text":"Text","text_editor_tip_end":"\\"Enter\\" to end editing","text_functions":"String Function","thailand":"Thailand","the_last_7_days":"the past 7 days","the_last_month":"last 30 days","the_last_week":"last 7 days","the_next_month":"next 30 days","the_next_week":"next 7 days","theme_blue":"Blue","theme_brown":"Brown","theme_color":"Select color","theme_color_1":"Theme Color 1","theme_color_2":"Theme Color 2","theme_color_3":"Theme Color 3","theme_color_4":"Theme Color 4","theme_deepPurple":"Dark purple","theme_green":"Green","theme_indigo":"Indigo","theme_orange":"Orange","theme_pink":"Pink","theme_purple":"Purple","theme_red":"Red","theme_setting":"Theme","theme_tangerine":"Orange","theme_teal":"Blue-green","theme_yellow":"Yellow","there_are_attachments_being_uploaded":"Some attachment still under processing","this_feature_is_not_yet_available":"This feature is not available yet","this_field_no_reference_data_yet":"No data","this_month":"this month","this_week":"this week","this_year":"this year","tile":"Card","time":"Date","time_format":"Time format","time_format_month_and_day":"MMM D HH:mm","time_format_today":"[Today] HH:mm","time_format_year_month_and_day":"MMM D, YYYY HH:mm","time_format_year_month_and_day_for_dayjs":"MMM D, YYYY","time_format_yesterday":"[Yesterday] HH:mm","time_zone_inconsistent_tips":"When time zones are inconsistent, the time zone of the start time will be used by default","times_per_month_unit":"call(s)/month","times_unit":" call(s)","timor_leste":"Timor-Leste","tip_del_success":"You can restore your Space within 7 days","tip_primary_field_frozen":"As a unique identifier for each record, ${tag}the primary field can\'t be hidden, moved, or deleted","tip_setting_nickname":"中文表达有点怪，不知道具体想表达什么意思呢？","tip_shift_scroll":"Shift + Mousewheel to scroll horizontally","title_select_sorting_fields":"Select sort field","to_filter_link_data":"Filtered records will not be looked up","to_old_main_admin_tip_after_change":"Remove all admin privileges and downgrade him to a member","to_select_tip":"The value of this field will be converted into the following options.","to_view_dashboard":"Go check it out","toast_cell_fill_success":"Cell(s) filled successfully ","toast_change_option_success":"Option name edited","toast_copy_cell_by_count":"${count} cell(s) copied","toast_copy_record_by_count":"${count} records copied","toast_ctrl_s":"Changes will be saved to the cloud in real time and no need to save manually. ","toast_cut_cell_by_count":"${count} cells cut","toast_cut_record_by_count":"${count} records cut","toast_delete_option_success":"Option deleted","toast_field_configuration_success":"Field configuration edited  ","today":"today","toggle_catalog_panel":"Expand Workbench","toggle_comment_pane":"${status} activity","toggle_widget_dev_mode":"Toggle dev mode","toggle_widget_panel":"Expand widget","togo":"Togo","token_value":"API Token","tomorrow":"tomorrow","tonga":"Tonga","tool_bar_hidden":"Hide","tooltip_edit_form_formula_field":"The field value can\'t be edited because it\'s a formula result","tooltip_edit_form_lookup_field":"The field value can\'t be edited because it\'s a lookup result","tooltip_primary_field_type_select":"The primary field is meant to be unique, so it only supports limited field types","tooltip_workspace_up_to_bound_no_new":"You\'ve created the maximum number of Spaces","total":"Total","total_capacity":"Total capacity","total_error_records_count":"A total of ${errorCount} records","total_import_employee_by_count":"${rowCount} employee information imported this time","total_records":"Total Records","total_storage":"Maximum: ${memory}","trash":"Trash","trash_tip":"You can restore files deleted in the past ${day} days from the Trash. You can only view files with \\"manager\\" permissions","travel_and_outdoors":"Travel and outdoors","tree_level":"Lv ${level}","trinidad_and_tobago":"Trinidad and Tobago","try_my_best_effort_to_reconnect":"Reconnecting...","tunisia":"Tunisia","turkey":"Turkey","turkmenistan":"Turkmenistan","turks_and_caicos_islands":"Turks and Caicos Islands","twelve_hour_clock":"12 hour","twenty_four_hour_clock":"24 hour","type":"Type","uganda":"Uganda","ukraine":"Ukraine","un_bind_email":"Unbind email","un_bind_success":"Unbound","un_lock":"Unlock","un_lock_view":"View locked","unactive_space":"Unactive Space","unavailable_og_title_content":"Temporarily unavailable","unbind":"Unbind","unbound":"Unbound","under_line":"Underline","under_use_restrictions":"Experiencing","understand_and_accept":"I understand and accept","undo":"Undo","unit_ge":" ","unit_piece":" ","united_arab_emirates":"United Arab Emirates","united_kingdom":"United Kingdom","united_states":"United States","unlimited":"Unlimited","unlink":"Unlink","unnamed":"Anonymous","unordered_list":"Bulleted list","unprocessed":"Unread","unresolved_message":"This message is unable to parse","unshow_record_history":"The modification history of the records in this table has been hidden","up":"Move to the cell above","update_description_fail":"Network error, save failed.","update_invitation_link_content":"After the update, the invitation link will be invalid","update_invitation_link_title":"Update the invitation link","update_node_share_link_content":"After the update, the generated share link will be invalid","update_node_share_link_title":"Update share link","update_rate_error_notify":"The value you entered exceeds the maximum value of the rating","update_space_fail":"Failed to edit Space information","update_space_success":"Space information edited","upload_again":"re-upload","upload_avatar":"Upload avatar","upload_canceled":"Upload cancelled","upload_fail":"Upload failed","upload_later":"Upload later","upload_on_your_phone":"Upload from mobile","upload_success":"Uploaded","url_batch_recog_failure_message":"Fail to display titles of some URLs","url_preview_limit_message":"You can display title of no more than 300 URLs at a time.","url_preview_setting":"Auto display title when added URL","url_recog_failure_message":"Fail to display the title of URL","uruguay":"Uruguay","use_the_template":"Use template","used":"used:","used_space_capacity":"Used space capacity","used_storage":"Used: ${memory}","user_avatar":"Avatar","user_center":"My Settings","user_feedback":"Give feedback","user_mentioned_in_record":"{{memberName}}mentioned in ${record}","user_menu_tooltip_member_name":"My nickname in the Space\\"${spaceName}\\"","user_profile":"Profile settings","user_profile_setting":"Profile","user_removed_by_space_toadmin":"<a class=\\"involveMemberArr\\"></a> was removed by <a class=\\"memberName\\"></a> from the \\"<a class=\\"spaceName\\"></a>\\" Space.","user_removed_by_space_touser":"You were removed from the \\"<a class=\\"spaceName\\"></a>\\" Space by <a class=\\"memberName\\"></a>.","user_setting":"My Settings","user_setting_time_zone_title":"Time zone","user_token":"User token","using_btn":"立即使用","using_templates_successful":"Template used","uzbekistan":"Uzbekistan","vanuatu":"Vanuatu","venezuela":"Venezuela","venture_capital":"Venture Capital","video_not_support_play":"The current video format does not support playing online","vietnam":"Vietnam","view":"View","view_by_person":"View all","view_collaborative_members":"View the ${number} collaborating member","view_configuration_tooltips":"View configuration not saved only for yourself","view_count":"${count} view(s)","view_count_over_limit":"This datasheet has the maximum number of views","view_export_to_excel":"Export view","view_find":"Find a view","view_foreign_form":"Form of the current view","view_foreign_form_count":"${count} form(s)","view_foreign_form_empty":"Want to populate data to your datasheet in a uniform way? Form is the best choice","view_form":"Form","view_form_field_changed_tip":"The form has a new field or type change","view_full_catalog":"View the full catalog","view_has_locked_not_deletes":"The view is locked and can\'t be deleted","view_list":"View list","view_lock":"Lock view","view_lock_command_error":"The current view is locked and you can\'t edit it","view_lock_desc_placeholder":"Remind others why you lock the view","view_lock_note":"This view is locked, please unlock it before you edit it and save the view settings","view_mirror_count":"${count} mirror(s)","view_name_length_err":"The name must be between 1 and ${maxCount} characters in length","view_name_repetition":"The view name already exists","view_property_sync_success":"The view has been updated for everyone","view_property_sync_title":"This view has unsaved changes","view_record_comments":"View this record comments","view_record_history":"View the modification history of this record","view_record_history_mobile":"record history","view_sort_and_group_disabled":"This field does not support setting as \\"group\\" or \\"sort item\\".","view_sync_property_close_tip":"View configuration synchronization is turned off, the configuration will not be synchronized to other members, and it will be cleared after refresh","view_sync_property_tip":"Your changes to the settings will impact others\' views","view_sync_property_tip_short":"Your changes to the settings will impact others\' views","view_un_lock_success":"View unlocked","viewers_per_space":"Viewers per Space","virgin_islands_british":"Virgin Islands, British","virgin_islands_us":"Virgin Islands, US","visit":"Visit","vomit_a_slot":"Give feedback","waiting_for_upload":"Waiting for upload","waring_coloring_when_filter_empty":"Please add filters before saving this rule","warning":"Warning","warning_can_not_remove_yourself_or_primary_admin":"You can\'t remove yourself or the admin from the organization","warning_coloring_records_when_no_single_field":"There is no single select field in current view, please create one and try again.","warning_confirm_to_del_option":"Are you sure to delete this option?","warning_exists_sub_team_or_member":"The current team has subordinate teams or members currently. Please delete them first before deleting the team.","warning_filter_limit":"The limit of filter number is 10","warning_rule_limit":"The limit of rule number is 10","watch_out":"Note","watermark_content":"All pages visited by members inside or outside the Space will show watermarks","watermark_title":"Show watermarks","way_to_create_dashboard":"How to create a dashboard","web_publish_refresh":"Please click to refresh","wecom_single_record_comment_mentioned":"Datasheet：{nodeName}\\nRecord：{recordTitle}\\n\\n\\"{commentContent}\\"\\n","wecom_single_record_comment_mentioned_title":" You\'re mentioned in a record comment","WEEKS":"Week","welcome_interface":"Welcome screen","welcome_module4":"Content Calendar","welcome_module6":"Real Estate CRM","welcome_module7":"FAQs","welcome_module8":"Product manual","welcome_module9":"Developer center","welcome_more_help":"More","welcome_sub_title2":"Start building from templates","welcome_sub_title3":"Learn more from Help Center","welcome_use":"Welcome  to use","when_meet_the_following_filters":"When meet the following filters","where":"Where","whether_bind_with_invited_email":"Confirm whether to bind with the invited account ${inviteEmail}","who_shares":"${userName} shared with you","widget":"Widget","widget_center":"Widget Center","widget_center_create_modal_desc":"First give your widget a name, and then choose which component template to start developing < a href = \\"\\" /> learn more","widget_center_create_modal_title":"Create a widget","widget_center_create_modal_widget_name":"Widget name","widget_center_create_modal_widget_name_placeholder":"Enter a widget name","widget_center_create_modal_widget_template":"Start from a widget template","widget_center_create_modal_widget_template_link":"View source","widget_center_help_tooltip":"See documentation","widget_center_menu_transfer":"Transfer widget ownership","widget_center_menu_unpublish":"Unpublish widget","widget_center_official_introduction":"Recommended widgets are published by officially certified developers and can be installed in all Spaces","widget_center_publisher":"Publisher: ","widget_center_tab_official":"Recommended","widget_collapse_tooltip":"Collapse widget","widget_connect_error":"Unable to connect to your local widget. Please make sure the address is correct","widget_continue_develop":"Toggle dev mode","widget_cret_invalid_error_content":"<p>1. Open \\"chrome://flags/#allow-insecure-localhost\\" in your browser </p><p> 2. Change the highlighted option from \\"Disabled\\" to \\"Enabled\\" </p> <p> 3. Restart the browser to make the new configuration take effect</p>","widget_cret_invalid_error_title":"Please disable your browser\'s security restrictions on loading local code","widget_datasheet_has_delete":"The related datasheet was deleted","widget_dev_config_content":"Please go to the project folder of your widget first, then execute the ${startCmd} command, and paste the returned URL below","widget_dev_url":"Development address: ","widget_dev_url_input_placeholder":"Please fill in the URL returned from the terminal","widget_disable_fullscreen":"Exit fullscreen","widget_enable_fullscreen":"Enter fullscreen","widget_env_error":"This applet is not supported in ${errorEnv}, please go to ${expectEnv}","widget_expand_tooltip":"Expand widget","widget_filter_add_filter":"Add filter","widget_filter_condition_numbers":"{FILTER_NUM} filter","widget_filter_tips":"Filtered data is not read by widget","widget_has_be_delete":"The widget has been deleted","widget_hide_settings_tooltip":"Hide settings panel","widget_homepage_tooltip":"Widget homepage","widget_import_from_airtable_done":"${ROW_NUM} records were successfully imported.","widget_import_from_airtable_done_button":"Import again","widget_import_from_airtable_start_import":"configuration & Import","widget_import_from_airtable_step_1_viewid":"View ID（Optional）","widget_import_from_airtable_step_1_warning_content":"Please confirm that the content of the filling is correct","widget_import_from_airtable_step_2_fields":"Fields","widget_import_from_airtable_step_2_fields_type":"Field types","widget_import_from_airtable_step_2_title":"2. Configure field type","widget_import_from_airtable_step_2_waring_file_upload":"The attachment column is detected. The widget currently only supports the import of files that do not exceed 10MB. Do you continue?","widget_import_from_airtable_step_3_button":"Stop","widget_import_from_airtable_step_3_import_num":"Imported ${ROW_NUM} records","widget_import_from_airtable_tutorial":"tutorial","widget_import_from_airtable_wrong_button":"Reconfigure","widget_install_error_env":"This applet does not support the installation and use of ${errorEnv} in the table. Please go to ${expectEnv} for installation and use","widget_install_error_title":"Installation failed","widget_item_developing":"Dev mode","widget_load_error":"Disconnected from the server, please re-execute the \\"widget-cli start\\" command, then refresh the widget to continue development","widget_load_error_ban_content":"The widget violates relevant treaties and has been banned and temporarily unavailable","widget_load_error_ban_title":"The widget is banned","widget_load_error_load_error":"Disconnected from the server, please re-execute the \\"widget-cli start\\" command, then refresh the widget to continue development","widget_load_error_not_match":"The local component package ID is inconsistent with the component package ID of the current component board. Please confirm that you have not modified the parameter value of packageId in the local code","widget_load_error_published":"Please contact the widget publisher @${authorName} for troubleshooting","widget_load_error_title":"Error occurred when running the widget","widget_load_url_error_not_match":"Unable to connect to the local widget, please check if there are any errors in your code, or make sure the packageId in your code is \\"${widgetPackageId}\\"","widget_loader_developing_content":"Click the button below to continue development","widget_loader_developing_title":"This widget is not published","widget_loader_error_cret_invalid":"Please first release the browser\'s security restrictions on loading local code, otherwise the widget cannot be loaded smoothly","widget_loader_error_cret_invalid_action_text":"How to cancel","widget_more_settings":"More settings","widget_more_settings_tooltip":"More settings","widget_name_length_error":"The name must be between 1 and 30 characters in length","widget_num":"${count} widget(s)","widget_operate_delete":"Delete widget","widget_operate_enter_dev":"Toggle dev mode","widget_operate_exit_dev":"Exit dev mode","widget_operate_publish_help":"How to publish widget","widget_operate_refresh":"Refresh widget","widget_operate_rename":"Rename widget","widget_operate_send_dashboard":"Send to dashboard","widget_operate_setting":"Configure widget","widget_panel":"Widget board","widget_panel_count_limit":"This datasheet has the maximum number of widget boards.","widget_panel_title":"Widget board ${count}","widget_publish_help_desc":"After the widget is published, members in your Space can install it in the Widget Center","widget_publish_help_step1":"1. After you\'ve finished development and make sure the preview is correct, tap ${cmd} in the terminal","widget_publish_help_step2":"2. Then execute the following command to publish:","widget_publish_modal_content":"The result after the release command is executed on the terminal + the released widget appears in the component center","widget_publish_modal_title":"How to publish widget","widget_reference":"From \\"${dst_name}\\"","widget_scripting_edit_code":"Edit code","widget_scripting_edit_console":"Console","widget_scripting_edit_examples":"Examples","widget_scripting_edit_finish":"Finish editing","widget_scripting_edit_stop":"Stop","widget_scripting_run":"Run","widget_scripting_start":"Start","widget_show_settings_tooltip":"Show settings panel","widget_something_went_wrong":"Something went wrong","widget_start_dev":"Start preview","widget_step_dev":"Preview","widget_step_dev_content_label":"Enter the widget development address:","widget_step_dev_desc":"With the URL address of the local service, you can preview the widget in real time","widget_step_dev_title":"Preview widget","widget_step_init":"Initialize","widget_step_init_content_desc":"Note: this command will ask you to enter your API token and space station ID < a > how to get it</a>","widget_step_init_content_label":"Then execute the following command: ","widget_step_init_title":"Initialize widget","widget_step_install":"Install","widget_step_install_content_label1":"1. Open the terminal on your computer\\n\\n","widget_step_install_content_label2":"2. Execute the following command in the terminal","widget_step_install_desc":"You can use the widget CLI  tool to initialize, run, publish, and unpublish widgets","widget_step_install_title":"Install widget CLI","widget_step_start":"Start","widget_step_start_content_desc2":"Note: this command will generate a URL that will be used in the next step","widget_step_start_content_label1":"1. Go to the project folder of the new widget and start development:","widget_step_start_content_label2":"2. After development, execute the following command to start the widget","widget_step_start_desc":"Follow the steps below to start the widget\'s local service and enter development mode","widget_step_start_title":"Start widget","widget_tip":"Widget","widget_transfer_modal_content":"<ul><li><p>Current publisher: ${oldOwner}</p><p>The member can no longer publish or unpublish the widget in the Widget Center via the CLI tool.</p></li><li> <p>New publisher: ${newOwner}</p> <p>The member can publish and unpublish the widget in the Widget Center via the CLI tool.</p></li></ul>","widget_transfer_modal_title":"Transfer ownership of \\"${widgetPackageName}\\"","widget_transfer_success":"Transferred","widget_unknow_err":"Unknown error ${info}","widget_unpublish_modal_content":"Are you sure to unpublish the widget?","widget_website":"Widget website","widgets_per_dashboard":"widgets per Dashboard","width_limit_waring":"The maximum column width limit of the first column has been reached so the adjustment will not take effect","without_day":"indefinite","work_data":"Datasheets","workbench_setting":"Workbench Permission","workbench_setting_all":"Global settings","workbench_side_space_template":"Custom templates","workbenck_shortcuts":"Workbench","workspace_data":"Space data","workspace_files":"Workbench data","workspace_list":"Spaces","wrap_text":"Wrap text","wrong_url":"Wrong URL","x_axis_field_date_range":"Set date range","x_axis_field_date_range_by_day":"By day","x_axis_field_date_range_by_quarter":"By quarter","x_axis_field_date_range_by_week":"By week","x_axis_field_date_range_by_year":"By year","y_axis_field_average":"AVERAGE","y_axis_field_max":"MAX","y_axis_field_min":"MIN","y_axis_field_sum":"SUM","year":"Year","year_month_day_hh_mm":"Year/Month/Day Hour:Minute","year_month_day_hyphen":"Year-Month-Day","year_month_day_slash":"Year/Month/Day","year_season_hyphen":"Year-Season","year_week_hyphen":"Year-Week","yemen":"Yemen","yesterday":"yesterday","you":"You","zambia":"Zambia","zimbabwe":"Zimbabwe","zoom_in":"zoom in","zoom_out":"zoom out","og_page_title":" APITable ","dashboard_access_denied_help_link":"https://help.apitable.com/docs/guide/intro-dashboard#access-denied","robot_config_help_url":"https://help.apitable.com/docs/guide/manual-automation-robot/#how-to-config-robot","robot_help_url":"https://help.apitable.com/docs/guide/manual-automation-robot","timemachine_help_url":"https://help.apitable.com/docs/guide/manual-timemachine","help_questions_url":"https://help.apitable.com/docs/guide/questions","help_product_manual_url":"https://help.apitable.com/docs/guide/manual/","space_setting_social_ad_decs":"Click here to learn more","space_setting_social_ad_btn":"Learn mode","help_help_center_url":"https://help.apitable.com/","help_quick_start_url":"https://help.apitable.com/docs/guide/tutorial-1-quick-start/","client_meta_label_desc":"APITable - a data productivity platform that helps you manage your work data more efficiently","client_meta_label_title":"APITable - a data productivity platform","api_panel_md_js_example":"## Initialize SDK [![github]({{ githubIcon }})](https://github.com/apitable/apitable-sdks)\\n\\n```js\\n// If es6 import does not work，use const APITable = require(\'apitable\').default; to replace import { APITable } from \\"apitable\\";\\n\\nconst apitable = new APITable({ token: \\"{{ apiToken }}\\", fieldKey: \\"{{ fieldKey }}\\" });\\nconst datasheet = apitable.datasheet(\\"{{ datasheetId }}\\");\\n```\\n\\n<!--split-->\\n\\n## Get records\\n\\n```js\\n\\n// Get the records from a specific view. Returns the first page of records by default\\ndatasheet.records.query({ viewId: \\"{{ viewId }}\\"}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n});\\n\\n```\\n\\n### Returned data example\\n\\n```json\\n{{ response }}\\n```\\n\\n### Other parameters and tips\\n```js\\n/**\\n * Global parameter configuration\\n */\\nnew APITable({\\n  /**\\n   * (Required) string Your API Token, used for authentication\\n   */\\n  token: \'YOUR_API_TOKEN\',\\n  /**\\n   * (Optional) Globally specify the query of the field and the returned key. By default the column name \'name\' is used. When specified as \'id\', fieldId will be used as the query and return method (using id can avoid the problem of code failure caused by the modification of the column name)\\n   */\\n  fieldKey: \'name\', // Defaults\\n  /**\\n   * (Optional) Request expiration time\\n   */\\n  requestTimeout: 60000, // Default 60000ms (10 seconds)\\n  /**\\n   * (Optional) Target server address\\n   */\\n  host: \'https://api.apitable.com/fusion/v1\', // Defaults\\n});\\n\\n/*******************************/\\n\\n// Get record\\ndatasheet.record.query({\\n  /**\\n   * (Optional) View ID. Defaults to the first view in the APITable. The request will return the filtered/sorted results in the view, and you can use the fields parameter to filter unnecessary field data\\n   */\\n  viewId: \'viewId1\',\\n  /**\\n   * (Optional) Sorts the records of the specified APITable. An array of multiple \\"sort objects\\". Supported order: \'asc\' and reverse order: \'desc\'. Note: The sorting criteria specified by this parameter will override the sorting criteria in the view.\\n   */\\n  sort: [{ field: \'field1\': order: \'asc\' }],\\n  /**\\n   * (Optional) An array of recordIds. If this parameter is attached, returns the records array specified in the parameter. The return values are sorted in the order of the passed array. Filtering and sorting are ignored at this time. No pagination, up to 1000 records can be queried each time\\n   */\\n  recordIds: [\'recordId1\', \'recordId2\'],\\n  /**\\n   * (Optional) Specify the field to be returned (the default is the field name, and it can also be specified as the field Id by fieldKey). If this parameter is attached, the returned record collection will be filtered, and only the specified fields will be returned.\\n   */\\n  fields: [\'title\', \'detail\', \'Number of references\'],\\n  /**\\n   * (Optional) Use formulas as filter conditions to return matching records. Visit https://help.apitable.com/docs/guide/tutorial-getting-started-with-formulas to learn how to use formulas\\n   */\\n  filterByFormula: \'{Number of references} >  0\',\\n  /**\\n   * (Optional) Limit the total number of records returned. If this value is less than the actual total number of records in the table, the total number of records returned will be limited to this value.\\n   */\\n  maxRecords: 5000,\\n  /**\\n   * (Optional) Cell value type, the default is \'json\', when \'string\' is specified, all values will be automatically converted to string format.\\n   */\\n  cellFormat: \'json\',\\n  /**\\n   * (Optional) Specify the query of the field and the returned key. By default the column name \'name\' is used. When specified as \'id\', fieldId will be used as the query and return method (using id can avoid the problem of code failure caused by the modification of the column name)\\n   */\\n  fieldKey: \'name\',\\n});\\n\\n/*******************************/\\n\\n/**\\n * It is the same as query to obtain record parameters, and automatically handles pagination. until all the data is obtained.\\n */\\nconst allRecordsIter = datasheet.records.queryAll()\\nfor await (const eachPageRecords of allRecordsIter) {\\n  console.log(eachPageRecords)\\n}\\n```\\n\\n<!--split-->\\n\\n## Add records\\n```js\\n// The add method receives an array value, and can create multiple records at the same time, and a single request can create up to 10 records\\ndatasheet.records.create({{ records }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n\\n### Returned data example\\n\\n```json\\n{{ response }}\\n```\\n\\n\\n### Other parameters and tips\\n\\nThe add interface receives an array value that can create multiple records simultaneously, up to 10 records per request\\n\\n<!--split-->\\n\\n## Update records\\n```js\\n/**\\n* update receives an array value, multiple records can be updated at the same time, and a single request can update up to 10 records\\n* Special Note: update will only update the data under the fields you passed in, and will not affect the unpassed fields. If you need to clear the value, please pass in null explicitly\\n*/\\ndatasheet.records.update({{ records }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n### Returned data example\\n```json\\n{{ response }}\\n```\\n\\n\\n### Other parameters and tips\\n\\nThe update interface receives an array value, which can update multiple records at the same time, and a single request can update up to 10 records\\nSpecial attention: update will only update the data under the fields you passed in, and will not affect the data that is not passed in. If you need to clear the value, please pass in null explicitly\\n  \\n<!--split-->\\n\\n## Delete records\\n```js\\n// The del method receives an array value and can delete multiple records at the same time. A single request can delete up to 10 records\\ndatasheet.records.delete({{ recordIds }}).then(response => {\\n  if (response.success) {\\n    console.log(response.data);\\n  } else {\\n    console.error(response);\\n  }\\n})\\n```\\n### Returned data example\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"success\\"\\n}\\n```\\n### Other parameters and tips\\nThe delete interface receives an array value, which can delete multiple records at the same time, and a single request can delete up to 10 records\\n\\n<!--split-->\\n\\n## Upload attachments\\n\\n```js\\n/*\\n* Get the file from the file input\\n* <input id=\\"input\\" name=\\"file\\" type=\\"file\\" accept=\\"*\\" >\\n* Or use streams to read files in NodeJs\\n* const file = fs.createReadStream(/your/file/path)\\n*\\n* The browser environment is used as an example below\\n*/\\nconst input = document.getElementById(\'input\');\\n\\ninput.onchange = function () {\\n  const file = this.files[0];\\n  datasheet.upload(file).then(response => {\\n    /**\\n     * response \\n     *   success: boolean\\n     *   code: number\\n     *   message: string\\n     *   data: IAttachment\\n     */\\n    if (response.success) {\\n      console.log(response.data);\\n    } else {\\n      console.error(response);\\n    }\\n  });\\n};\\n\\n```\\n### Returned data example\\n\\n*Tips: After uploading, please write the data in data to the attachment cell as soon as possible, otherwise the attachment link may become invalid*\\n\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"success\\",\\n  \\"data\\": {\\n    \\"id\\": \\"atcPtxnvqti5M\\",\\n    \\"name\\": \\"6.gif\\",\\n    \\"size\\": 33914,\\n    \\"mimeType\\": \\"image/gif\\",\\n    \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n    \\"width\\": 240,\\n    \\"height\\": 240,\\n    \\"url\\": \\"https://s1.apitable.com/space/2023/02/09/ed97d84948c648498f6b36b1b769071f\\"\\n  }\\n}\\n```\\n\\n### Other parameters and tips\\nThe delete interface receives an array value, which can delete multiple records at the same time, and a single request can delete up to 10 records","api_panel_md_python_example":"## Initialize SDK [![github]({{ githubIcon }})](https://github.com/apitable/apitable-sdks)\\n\\n```python\\nfrom apitable import Apitable\\napitable = Apitable(\\"{{ apiToken }}\\")\\ndatasheet = apitable.datasheet(\\"{{ datasheetId }}\\", field_key=\\"{{ fieldKey }}\\")\\n```\\n\\n{{ fieldNameTips }}\\n<!--split-->\\n\\n## Get records\\n\\n```python\\n# Returns all records\\nrecords = datasheet.records.all()\\nfor record in records:\\n  print(record.json())\\n\\n# Returns the records from a specific view\\nrecords_via_view = datasheet.records.all(viewId=\\"{{ viewId }}\\")\\n# Get one record (if there are more than one records in the result, return the first record); It\'s recommended to get one record by its recordId.\\none_record = datasheet.records.get({{ pyGetParams }})\\n# Returns the records that matches the given condition. If you don\'t give any condition, it returns all records.\\nrecords = datasheet.records.filter({{ pyGetParams }})\\n```\\n<!--split-->\\n\\n## Add records\\n```python\\n# Add one record\\nrow = datasheet.records.create({{ addParams }})\\n# Add multiple records\\nrecords = datasheet.records.bulk_create({{  bulkAddParams }})\\n\\n```\\n<!--split-->\\n\\n## Update records\\n```python\\nrow = datasheet.records.get({{ pyGetParams }})\\n\\n# Update one record\\nrow.{{ oneFieldKey }} = {{ oneFieldValue }}\\n## row.save()\\n\\n# Update multiple records\\nrow.update({{ updateParams }})\\n\\n```\\n<!--split-->\\n\\n## Delete records\\n```python\\nrecord = datasheet.records.get({{ pyGetParams }})\\n# Delete one record\\nrecord.delete()\\n# Delete the records that matches a specific condition\\ndatasheet.records.filter({{ pyGetParams }}).delete()\\n# Delete the records by recordIds\\ndatasheet.delete_records({{ recordIds }})\\n```\\n<!--split-->\\n\\n## Upload attachments\\n\\n```python\\n_file = datasheet.upload_file(<local/web_filepath>)\\nrecord.{{ attachFieldName }} = [_file]\\n```","api_panel_md_curl_example":"<!--split-->\\n\\n## Get records\\n\\n```shell\\ncurl \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\"\\n\\n```\\n\\n### Returned data example\\n\\n```json\\n\\n{{ response }}\\n\\n```\\n\\n### Other parameters and tips\\n```js\\n/**\\n* Note: The maximum concurrent access to data for each APITtable is limited to 5 times per second\\n* All configurable parameters can be sent through URL Query Params,\\n*/\\n{\\n  /**\\n   * (Optional) View ID. Defaults to the first view in the APITtable. The request will return the filtered/sorted results in the view, and you can use the fields parameter to filter unnecessary field data\\n   */\\n  viewId: \'viewId1\',\\n  /**\\n   * (Optional) Specifies the page number of the pagination, which is 1 by default and is used in conjunction with the parameter pageSize.\\n   */\\n  pageNum: 1,\\n  /**\\n   * (Optional) Specify the total number of records returned per page, default is 100. This parameter only accepts integers from 1-1000.\\n   */\\n  pageSize: 100,\\n  /**\\n   * (Optional) Sorts the records of the specified dimensional table. An array of \\"sort objects\\". Supported order: \'asc\' and reverse order: \'desc\'. Note: The sorting criteria specified by this parameter will override the sorting criteria in the view.\\n   */\\n  sort: [{ field: \'field1\', order: \'asc\' }],\\n  /**\\n   * (Optional) An array of recordIds. If this parameter is attached, returns the records array specified in the parameter. The return values are sorted in the order of the passed array. Filtering and sorting are ignored at this time. No pagination, up to 1000 records can be queried each time\\n   */\\n  recordIds: [\'recordId1\', \'recordId2\'],\\n  /**\\n   * (Optional) Specify the field to return (the default is the field name, and it can also be specified as the field Id by fieldKey). If this parameter is attached, the returned record collection will be filtered, and only the specified fields will be returned.\\n   */\\n  fields: [\'title\', \'detail\', \'Number of references\'],\\n  /**\\n   * (Optional) Use formulas as filter conditions to return matching records. Visit https://help.apitable.com/docs/guide/tutorial-getting-started-with-formulas to learn how to use formulas\\n   */\\n  filterByFormula: \'{Number of references} >  0\',\\n  /**\\n   * (Optional) Limit the total number of records returned. If this value is less than the actual total number of records in the table, the total number of records returned will be limited to this value.\\n   */\\n  maxRecords: 5000,\\n  /**\\n   * (Optional) Cell value type, the default is \'json\', when \'string\' is specified, all values will be automatically converted to string format.\\n   */\\n  cellFormat: \'json\',\\n  /**\\n   * (Optional) Specifies the query of the field and the returned key. By default the column name \'name\' is used. When specified as \'id\', fieldId will be used as the query and return method (using id can avoid the problem of code failure caused by the modification of the column name)\\n   */\\n  fieldKey: \'name\',\\n}\\n```\\n\\n<!--split-->\\n\\n## Add records\\n```shell\\ncurl -X POST \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\"  \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  --data \'{\\n  \\"records\\": {{ records }},\\n  \\"fieldKey\\": \\"{{ fieldKey }}\\"\\n}\'\\n\\n```\\n\\n### Returned data example\\n\\n```json\\n{{ response }}\\n```\\n\\n### Other parameters and tips\\n\\nThe add interface receives an array value, and can create multiple records at the same time, and a single request can create up to 10 records\\n\\n<!--split-->\\n\\n## Update records\\n```shell\\ncurl -X PATCH \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?viewId={{ viewId }}&fieldKey={{ fieldKey }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: application/json\\" \\\\\\n  --data \'{\\n  \\"records\\": {{ records }},\\n  \\"fieldKey\\": \\"{{ fieldKey }}\\"\\n}\'\\n```\\n### Returned data example\\n\\n```json\\n{{ response }}\\n```\\n\\n\\n### Other parameters and tips\\n\\nThe update interface receives an array value, which can update multiple records at the same time, and a single request can update up to 10 records\\nSpecial attention: update will only update the data under the fields you passed in, and will not affect the data that is not passed in. If you need to clear the value, please pass in null explicitly\\n\\n\\n<!--split-->\\n\\n## Delete records\\n```shell\\ncurl -X DELETE \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/records?{{ deleteParams }}\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\"\\n\\n```\\n\\n### Returned data example\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"success\\"\\n}\\n```\\n\\n### Other parameters and tips\\n\\nThe delete interface receives an array value, which can delete multiple records at the same time, and a single request can delete up to 10 records\\n<!--split-->\\n\\n## Upload attachments\\n\\n```shell\\ncurl -X POST \\"{{ apiBase }}/fusion/v1/datasheets/{{ datasheetId }}/attachments\\" \\\\\\n  -H \\"Authorization: Bearer {{ apiToken }}\\" \\\\\\n  -H \\"Content-Type: multipart/form-data\\" \\\\\\n  -F \\"file=@{your file path};\\"\\n```\\n### Returned data example\\n\\n*Tips: After uploading, please write the data in data to the attachment cell as soon as possible, otherwise the attachment link may become invalid*\\n\\n```json\\n{\\n  \\"code\\": 200,\\n  \\"success\\": true,\\n  \\"message\\": \\"success\\",\\n  \\"data\\": {\\n    \\"id\\": \\"atcPtxnvqti5M\\",\\n    \\"name\\": \\"6.gif\\",\\n    \\"size\\": 33914,\\n    \\"mimeType\\": \\"image/gif\\",\\n    \\"token\\": \\"space/2020/09/22/01ee7202922d48688f61e34f12da5abc\\",\\n    \\"width\\": 240,\\n    \\"height\\": 240,\\n    \\"url\\": \\"https://s1.apitable.com/space/2023/02/09/ed97d84948c648498f6b36b1b769071f\\"\\n  }\\n}\\n```","workbench_share_link_template":"From APITable: ${nickName} has shared the \\"${nodeName}\\" file with you.","contacts_invite_link_template":"From APITable: You were invited to join the \\"${spaceName}\\" space by ${nickName}.","robot_create_name_placeholder":"Robot","welcome_module2":"Quick start in one minute","assistant_beginner_task_2_quick_start":"Quick start in one minute","section6_title":"What is APITable?","assistant_beginner_task_1_what_is_datasheet":"What is APITable?","welcome_module1":"What is APITable?","robot_run_history_old_version_tip":"Sorry, this run history was from an older version of the datasheet, which does not support viewing the details","system_configuration_product_name":"APITable","official_name":"APITable","login_title":"Login APITable","assistant_beginner_task_title2":"Follow the guide and start your journey in APITable~","official_account_qrcode":"APITable","test_function_card_info_robot":"Robots help you automate repetitive actions in the datasheets and free up your team\'s productivity","robot_trigger_record_matches_condition_config_2_desc":"Note: Adding Date/Formula field to trigger at scheduled/due time is not supported [FAQ](https://help.apitable.com/docs/guide/manual-automation-robot#robot-scene-related-faq)","api_panel_type_default_example_email":"support@apitable.com","api_panel_type_default_example_member":"[\\n    {\\n        \\"id\\": \\"1291258301781176321\\",\\n        \\"type\\": 3,\\n        \\"name\\": \\"Jane\\",\\n        \\"avatar\\": \\"https://s1.apitable.com/space/2023/02/09/79e112dd10424ac7842256736e4f5568\\"\\n    }\\n]","api_panel_type_default_example_url":"https://apitable.com","share_modal_desc":"Copy the exclusive link below~ <br/>Invite friends to use APITable<br/>Share with friends","help_user_community":"Join Community","intro_dashboard":"https://help.apitable.com/docs/guide/intro-dashboard","welcome_workspace_tip2":"Welcome to APITable, let\'s start our journey to \\"building blocks-like multimedia database-spreadsheet hybrid\\"!","mirror_help_url":"https://help.apitable.com/docs/guide/manual-mirror","welcome_title":"Welcome to APITable!","social_plat_bind_space_seats_err":"Your Space can have a maximum of ${count} members. Contact us if you want to invite more. <a href=\'https://help.apitable.com/docs/guide/how-contact-service\' target=\\"_blank\\">","how_create_template":"This Space has no custom templates yet. <a href=\'https://help.apitable.com/docs/guide/faq-how-create-template\'>How to create</a>","assistant":"Assistant","view_restrictions":"<a href=\\"https://apitable.com/pricing/\\">View restrictions</a>","assistant_hide":"Hide assistant","system_configuration_company_name_short":"APITable","official_template_centre_description":"Recommended by APITable","marketing_sub_title":"APITable brings your work tools together by integrating third-party applications. Integrations help connect your data and make APITable even more useful.","assistant_beginner_task_title1":"Welcome to APITable","setting_nickname_title":"Congratulations on landing on APITable","gallery_group_hlep_url":"https://help.apitable.com/docs/guide/manual-gallery-view","group_help_url":"https://help.apitable.com/docs/guide/manual-group","sort_help_url":"https://help.apitable.com/docs/guide/manual-sort","filter_help_url":"https://help.apitable.com/docs/guide/manual-filter","kanban_style_setting_url":"https://help.apitable.com/docs/guide/manual-kanban-view","gallery_style_setting_url":"https://help.apitable.com/docs/guide/manual-gallery-view#set-style","how_to_report_issues":"https://help.apitable.com/docs/guide/how-to-report-issues","how_contact_service":"https://help.apitable.com/docs/guide/how-contact-service","record_history_help_url":"https://help.apitable.com/docs/guide/manual-record-history","field_permission_help_url":"https://help.apitable.com/docs/guide/manual-field-permission","gantt_setting_help_url":"https://help.apitable.com/docs/guide/manual-gantt-view","intro_widget":"https://help.apitable.com/docs/guide/intro-widget","summary_widget_setting_help_url":"https://help.apitable.com/docs/guide/intro-widget-summary","chart_widget_setting_help_url":"https://help.apitable.com/docs/guide/intro-widget-chart","form_tour_link":"https://help.apitable.com/docs/guide/magic-form","form_help_link":"https://help.apitable.com/docs/guide/magic-form","set_permission_modal_help":"https://help.apitable.com/docs/guide/faq-permission-settings","view_sort_help":"https://help.apitable.com/docs/guide/manual-sort","lookup_help":"https://help.apitable.com/docs/guide/manual-field-lookup","formula_learn_more_url":"https://help.apitable.com/docs/guide/manual-summary-of-formula-functions-and-operators","function_dateadd_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_datetime_diff_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_datetime_format_url":"https://help.apitable.com/docs/guide/datetime-format-specified-output-format","function_datetime_parse_url":"https://help.apitable.com/docs/guide/set-locale-specified-output-format","function_fromnow_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_is_same_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","function_set_locale_url":"https://help.apitable.com/docs/guide/set-locale-specified-output-format","function_tonow_url":"https://help.apitable.com/docs/guide/manual-supported-unit-specifiers-for-date-function","price_title1":"APITable","new_user_welcom_notify":"Welcome to APITable, we have prepared a free meeting gift for you to learn APITable, click on this message to jump to learn more.","private_product_point":"Own your APITable platform with one click","widget_import_from_airtable_step_2_description":"Please select the field type for the airtable field. When it completed, fields will be created and filled.","security_setting_export_data_title":"Specify members to export datasheet and views","inclusion_plan_title":"APITable Entrepreneurship Support and Education Inclusive Program","subscribed_record_commented":"<a class=\\"memberName\\"></a> made comments from the \\"<a class=\\"recordTitle\\"></a>\\" in \\"<a class=\\"nodeName\\"></a>\\" datasheet：\\"<a class=\\"content\\"></a>\\"","subscribed_record_cell_updated":"<a class=\\"memberName\\"></a> modified the \\"<a class=\\"recordTitle\\"></a>\\" contents from the \\"<a class=\\"nodeName\\"></a>\\" datasheet：\\nReplace \\"<a class=\\"oldDisplayValue\\"></a>\\" with \\"<a class=\\"newDisplayValue\\"></a>\\"","member_type_field":"Columns of member type.","error_move_column_failed_invalid_params":"Failed to move the column: parameter error.","error_set_column_failed_no_support_unknown_column":"Failed to set the properties of the column: modification of unknown column is not recommended.","error_group_failed_the_column_not_exist":"Grouping failed: targeted column does not exist.","message_fields_count_up_to_bound":"The datasheet has reached the upper limit of the field. Unable to create related relations.","view_field_search_not_found_tip":"Column named  \\"${value}\\" unfound","welcome_workspace_tip1":"You can create a datasheet in a blink and start the journey with us!","error_set_column_failed_bad_property":"Failed to set the properties of the column:  invalidate column property","lookup_field":"Select a dimension row from ${datasheetName}","delete_field_tips_title":"Delete field","audit_add_field_role_detail":"<a class=\\"memberName\\"></a>In the \\"<a class=\\"nodeName\\"></a>\\" datasheet <a class=\\"times\\"></a>, add [<a class=\\"unitName\\"></a>] role as [<a class=\\"role\\"></a>] for the field [<a class=\\" fieldName\\"></a>] ","section6_desc":"APITable, not a spreadsheet, is a new generation of data productivity platform. The creator of multi-dimensional tables, achieves the in-depth customization of enterprise/team systems without coding. As the \\"next necessary skill for the workplace\\", it is easier to use than Excel and more practical than Python. APITable can achieve:","bronze_grade_desc":"Suitable for individuals or teams who are new to APITable","function_t_summary":"Returns the argument if it is text and blank otherwise.","function_substitute_summary":"Replaces occurrences of old_text with new_text.\\nYou can optionally specify an index number (starting from 1) to replace just a specific occurrence of old_text. If no index number is specified, then all occurrences of old_text will be replaced.","function_search_summary":"Searches for an occurrence of stringToFind in whereToSearch string starting from an optional startFromPosition. (startFromPosition is 0 by default.) If no occurrence of stringToFind is found, the result will be empty.\\nSimilar to FIND(), though FIND() returns 0 rather than empty if no occurrence of stringToFind is found.","function_replace_summary":"Replaces the number of characters beginning with the start character with the replacement text.\\n(If you\'re looking for a way to find and replace all occurrences of old_text with new_text, see SUBSTITUTE().)","function_mid_summary":"Extract a substring of count characters starting at whereToStart.","function_find_summary":"Finds an occurrence of stringToFind in whereToSearch string starting from an optional startFromPosition.(startFromPosition is 0 by default.) If no occurrence of stringToFind is found, the result will be 0.","empty_datasheet":"New datasheet","datasheet":"Datasheet","current_datasheet":"Current datasheet","views_per_datasheet":"Views per Datasheet","template_center_use_to_create_datasheets":"Use template to create datasheet","node_with_link_share_view_reminder":"Note: The shared datasheet has data linked from another datasheet","folder_with_link_share_view_reminder":"Note: The shared folder has datasheets that link to other datasheets in another folder","function_last_modified_time_summary":"Returns the date and time of the most recent modification made by a user in a non-computed field in the table. If you only care about changes made to specific fields, you can include one or more field names, and the function will just return the date and time of the most recent change made to any of the specified fields.","function_false_summary":"Logical value false.","columns_count_limit_tips":"Hey, your datasheet has exceeded the maximum ${column_limit} columns.","user_space_member_limited_tips":"Hey, your ${space} Space has reached the upper limit of ${spec} datasheets","placeholder_input_datasheet_name":"Name the datasheet","template_centre":"Templates","activity_login_desc":"Your friend \\"${nickname}\\" has invited you to sign up on APITable","unbind_third_party_accounts_desc":"After unbinding, you can still use the application but can\'t use the ${mode} account to log in","error_page_feedback_text":"👉  Report issues","field_title":"Field name","field_type":"Field type","error_set_column_failed_duplicate_column_name":"Failed to edit the field settings due to duplicate field names","kanban_new_member_field":"Name the field","kanban_new_option_field":"Name the field","is_repeat_column_name":"Please enter a unique field name","these_columns_you_chose_would_be_deleted":"Your selected ${count} fields will be deleted","toast_add_field_success":"Field inserted","toast_duplicate_field_success":"Field duplicated","toast_insert_field_success":"Field inserted","err_filter_field":"Can\'t add this field as a filter due to field configuration errors","datasheet_1000_rows_limited_tips":"Your datasheet has the maximum number of records","records_per_datasheet":"The number of records per datasheet","rows_limit_5000_limit_tips":"Your datasheet has the maximum number of records","rows_per_datasheet":"The maximum number of records per datasheet","delete_field_success":"Field deleted","confirm_change_field":"Converting field type","linked_datasheet":"Linked datasheet","choose_datasheet_to_link":"Select a datasheet to link to","check_link_table":"Select a datasheet to link to","search_folder_or_sheet":"Find a folder or datasheet ","del_field_content":"Are you sure you want to delete the \\"${fieldname}\\" field?","lookup_not_found_search_keyword":"No matches that contain \\"${notFoundSearchKeywordSpan}\\"","pick_field_or_function":"Select field or function","field":"Field","uneditable_check_info":"This field can\'t be edited","all_editable_fields":"All editable fields","specified_fields":"Select fields...","delete_field_tips_content":"Are you sure you want to delete the \\"${field_title}\\" field?","view_field":"Field","kanban_setting_create_member":"Create a Member field","form_view_desc":"Use a form to collect data. You can allow others to add new records in your datasheet by sharing forms.","lookup_values_summary":"Returns the original values","lookup_field_err":"Please add a Magic Link field first","table_link_err":"Please add a Magic Link field first","check_table_link_field":"Select a Magic Link field","no_view_create_form":"Can\'t create a form without a Grid view","add_gallery_view_success_guide":"For the datasheet with pictures, the gallery view will display it very intuitively. Many interesting functions are on the way. Stay tuned~","del_field_tip":"Delete field","folder_with_link_share_reminder":"The current folder is associated with external  datasheet. Do you want to continue sharing","follow_up_guidelines":"Get a better experience by using APITable on computer.","guide_2":"It takes only a few minutes to learn the basic functions. Work more productively from this moment on!","guide_flow_of_catalog_step2":"In the working catalog, you can create a datasheet or a folder as needed.","guide_flow_of_click_add_view_step1":"In addition to some basic view, you are highly recommended to create an album view if you have attachments in picture format.","guide_flow_of_datasheet_step2":"Here is the view toolbar where you can perform operations such as filtering or sorting the data in the datasheet.","guide_flow_of_datasheet_step3":"These the content of your datasheet. Your data is all right here.","invitation_validation_title":"Oops, a large batch of users are flooding into the Space right now.","long_time_no_operate":"The datasheet has not been operated for a long time, please refresh the page to keep the data up-to-date~","new_something_tips":"Create Something New","node_with_link_share_reminder":"The current datasheet is associated with the contents of other datasheet. Do you want to continue sharing?","personal_invite_code_tip":"To get a personal invite code: obtain a code from a current user.","rollup_field":"Column referenced in the related datasheet","search_fields":"Search column","swagger_constants_desc":"Combination of grid and datasheet and built-in API, helping you to establish application in a blink based on this powerful database-spreadsheet hybrid","tip_setting_nickname_distribute":"\\"${nickname}\\" is a random nickname~","using_template_title":"Create a datasheet based on this template","err_field_group_tip":"Error found in field settings. Grouping does not work temporarily.","error_field_not_exist":"Field does not exist.","field_had_deleted":"This field was deleted","function_arrayjoin_summary":"Join the array of rollup items into a string with a separator.","function_arrayflatten_summary":"Flattens the array by removing any array nesting. All items become elements of a single array.","function_arraycompact_summary":"Removes empty strings and null values from the array. Keeps \\"false\\" and strings that contain one or more blank characters.","function_and_summary":"Returns true if all the arguments are true, returns false otherwise.","function_arrayunique_summary":"Returns only unique items in the array.","function_err_invalid_field_name":"Invalid column or function name: ${fieldId}","function_example_usage":"Quoting the Column: {Columns name} \\nUsing operator: 2 * 5 \\nUsing function: AVERAGE({Number Columns 1}, {Number Columns 2}) \\nUsing IF statement: IF(logical condition, \\"value 1\\", \\"value 2 \\")","function_left_example":"LEFT({date of birth}, 4)\\n=> 1994","function_is_same_summary":"Compares two dates up to a unit and determines whether they are identical. Returns 1 if yes, 0 if no.","function_is_before_summary":"Determines if [date1] is earlier than [date2]. Returns 1 if yes, 0 if no.","function_is_after_summary":"Determines if [date1] is later than [date2]. Returns 1 if yes, 0 if no.","function_right_example":"RIGHT({date of birth}, 5)\\n=> 07-13","function_or_summary":"Returns true if any one of the arguments is true.","function_t_example":"T({name})\\n=> kelly\\n\\nT(3.2)\\n=> BLANK","function_xor_summary":"Returns true if an odd number of arguments are true.","function_true_summary":"Logical value true.","kanban_setting_create_option":"Create a Select field","kanban_setting_tip":"Only \\"Select\\" or \\"Member\\" fields can be chosen as the grouping field","field_select_modal_title":"Select last edited fields","last_modified_time_select_modal_desc":"If any of the fields you select below are edited, the most recently edited time will show in the last edited time field","last_modified_by_select_modal_desc":"If any of the fields you select below are edited, the member who edited most recently will show in the last edited by field","field_select_modal_desc":"If any of the fields you select below are edited, the member who edited most recently will show in the last edited by field","security_disabled_copy_cell_date_tip":"Prohibit all members from copying the data of the datasheet to other software such as Excel","gird_view_shortcuts":"Grid view","workbench_setting_cannot_export_datasheet_title":"Allow exporting datasheets","new_datasheet":"New datasheet","datasheet_choose_field_type":"Select field type","member_data_desc_of_record_number":"Quantity statistic in all datasheets of working catalog, including the blank record(s)","robot_trigger_record_created_config_1":"Select a datasheet","robot_trigger_record_matches_condition_config_1_desc":"Specify one datasheet: When a record in it matches condition, the robot starts running","robot_trigger_record_created_config_1_desc":"Specify one datasheet: When a record is created in it, the robot starts running","robot_trigger_record_matches_condition_config_1":"Select a datasheet","robot_variables_datasheet_URL":"Datasheet URL","robot_variables_datasheet_ID":"Datasheet ID","robot_variables_datasheet_name":"Datasheet name","security_disabled_export_data":"Prevent members from exporting datasheet or view","security_disabled_export_data_describle":"All members cannot export datasheet or view data locally","select_wdget_Import_widget":"Select a datasheet to import widget","select_widget_Import_widget":"Import widget from the datasheet below","grid_view":"Grid","welcome_module3":"How to use a datasheet","assistant_beginner_task_3_how_to_use_datasheet":"How to use a datasheet","member_data_desc_of_appendix":"All attachments uploaded to the Space are counted in. You can\'t upload any files once the storage reaches its limit.","bind_resource":"Select a datasheet to link to","single_record_member_mention":"<a class=\\"memberName\\"></a> mentioned you at \\"<a class=\\"fieldName\\"></a>\\" of the \\"<a class=\\"recordTitle\\"></a>\\" record in the \\"<a class=\\"nodeName\\"></a>\\" datasheet.","field_set_you_by_user":"<a class=\\"memberName\\"></a> mentioned you in <a class=\\"times\\"></a> of the \\"<a class=\\"nodeName\\"></a>\\" datasheet.","single_record_comment_mentioned":"<a class=\\"memberName\\"></a> mentioned you in the \\"<a class=\\"recordTitle\\"></a>\\" record of the \\"<a class=\\"nodeName\\"></a>\\" datasheet.","comment_mentioned":"<a class=\\"memberName\\"></a> mentioned you in <a class=\\"times\\"></a> comments from the \\"<a class=\\"nodeName\\"></a>\\" datasheet.","default_view":"Grid view","default_create_datasheet":"New datasheet","datasheet_reach_limit":"The number of datasheets in the \\"<a class=\\"spaceName\\"></a>\\" Space has reached the limit.","function_countif_example":"COUNTIF({rating}, \\"A\\") => 2 \\n// where {Ratings} is a \\"magic quote\\" type of dimension column, and the data format is an array. \\n\\nCOUNTIF({Score}, 3, \\">\\") => 2 \\n// where {score} is a \\"magic quote\\" type of dimensional column, and the data format is array. \\n\\nCOUNTIF({smoothie}, \\"grapes\\") => 2\\n// where {jingle} is a dimension column of type \\"text\\", and the data format is text string.","robot_variables_select_columns":"Column","api_panel_type_desc_member":"Returns an array of unit objects. A unit describes the roles in a Space such as a member or a team. \\"type\\" has two values: 1 stands for team; 3 stands for member.","api_panel_type_desc_last_modified_by":"Returns an array that contains one unit object. The unit is the last unit that modifies the record or the specified field(s). (A unit describes the roles in a Space such as a member or a team. \\"unitType\\" has two values: 1 stands for team; 3 stands for member.)","api_panel_type_desc_created_by":"Returns an array that contains one unit object. The unit is the member that creates the record. (A unit describes the roles in a Space such as a member or a team. \\"unitType\\" has two values: 1 stands for team; 3 stands for member.)","subject_datasheet_remind":"{MEMBER_NAME} mentioned you in a datasheet","tooltip_cannot_create_widget_from_dashboard":"You can only create a widget from a datasheet rather than a dashboard","api_datasheet_not_exist":"Can\'t find the specified datasheet","api_datasheet_not_visible":"Datasheet not visible","share_permisson_model_link_datasheet_label_desc":"The current file (folder) is related with an external Datasheet","task_reminder":"[Reminder] Your task \\"<a class=\\"recordTitle\\"></a>\\" in the datasheet \\"<a class=\\"nodeName\\"></a>\\" will be due in <a class=\\"taskExpireAt\\"></a>","app_launch_guide_text_1":"Thousands of members operate one datasheet at the same time, efficient real-time collaboration","edit_field_name":"Edit field name","cascader_no_datasheet_error":"Please select a datasheet","og_site_name_content":"APITable","og_product_description_content":"APITable, building block multimedia datasheet, pioneer of multidimensional tables technology, data sorting artifact, making everyone a data designer","og_keywords_content":"APITable, big data, digitization, digital transformation, data center, business center, data assets, digital smart office, remote office, data workbench, blockchain, artificial intelligence, multidimensional tables, aPaaS, hpaPaaS, RAD, database applications, rapid development tools","auth_server_extensions_login_description_content":"APITable Unified Login Page","initialization_failed_message":"An error occurred while initializing data, please refresh the page","welcome_module5":"Project Management","player_contact_us":"Contact us","verification_code":"Verification code","placeholder_message_code":"Enter verification code","placeholder_enter_your_verification_code":"Enter verification code","get_verification_code":"Send","message_code":"Send","password_not_identical_err":"\'New password\' and \'Confirm new password\' must match","password_length_err":"Password must be between 8 and 24 characters in length","placeholder_set_password":"8-24 digits with letters and numbers","password_rules":"8-24 digits with letters and numbers","login_frequent_operation_reminder_content":"You entered wrong account and password too frequently, please try again in 20 minutes","account_password_incorrect":"Wrong account or password","reset_password":"Reset password","password_pattern_err":"The password must include numbers and letters","password":"Password","confirmation_password_reminder":"Enter the new password again","change_password_fail":"Failed to change the password","set_new_password":"Set a new password","message_set_password_succeed":"Password set successfully","placeholder_input_password_again":"Enter the password again","label_set_password":"Set password","label_password":"Password","placeholder_input_new_password_with_given_rules":"Enter a new password with 8-24 letters and numbers","change_password":"Change password","retrieve_password":"Forgot password","set_password":"Password","change_password_success":"Password reset successfully","input_confirmation_password":"Confirm new password","input_new_password":"New password","placeholder_input_new_password_again":"Enter your new password again","obtain_verification_code":"Verification code not obtained or expired","phone_email_login":"Email login"}}');

/***/ })

};
;